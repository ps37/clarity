{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@vcd/ui-doc-lib/documentation-retriever.service.ts","ng://@vcd/ui-doc-lib/documentation-container/documentation-container.component.ts","ng://@vcd/ui-doc-lib/documentation.ts","ng://@vcd/ui-doc-lib/compodoc/compodoc-retriever.service.ts","ng://@vcd/ui-doc-lib/highlight/highlight.service.ts","ng://@vcd/ui-doc-lib/highlight/prism/prism-highlight.service.ts","ng://@vcd/ui-doc-lib/overview-viewer/overview-viewer.component.ts","ng://@vcd/ui-doc-lib/overview-viewer/overview-viewer.module.ts","ng://@vcd/ui-doc-lib/stack-blitz-writer.service.ts","ng://@vcd/ui-doc-lib/example-viewer/example-viewer.component.ts","ng://@vcd/ui-doc-lib/source-code-viewer/source-code-viewer.component.ts","ng://@vcd/ui-doc-lib/source-code-viewer/source-code-viewer.module.ts","ng://@vcd/ui-doc-lib/example-viewer/example-viewer.module.ts","ng://@vcd/ui-doc-lib/api-viewer/api-viewer.component.ts","ng://@vcd/ui-doc-lib/api-viewer/api-viewer.module.ts","ng://@vcd/ui-doc-lib/documentation-container/documentation-container.module.ts","ng://@vcd/ui-doc-lib/doc-lib.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","DocumentationContainerComponent","route","this","prototype","ngOnInit","_this","data","subscribe","documentationEntry","Component","args","selector","template","ActivatedRoute","documentationEntryMap","Map","Documentation","getAllEntries","from","values","getRoutes","map","path","urlSegment","component","registerDocumentationEntry","documentationParams","Error","find","entry","displayName","validateDocumentationMetadata","set","CompoDocRetrieverService","documentationJson","getOverview","getComponent","description","getTypescriptSourceCode","sourceCode","getHtmlSourceCode","templateData","getCssSourceCode","styleUrlsData","styleUrl","join","_b","tslib_1.__values","_c","compodocComponent","components","c","name","getModule","moduleName","modules","module","getInputParameters","inputsClass","getOutputParameters","outputsClass","HighlightService","Injectable","providedIn","PrismHighlightService","__","constructor","create","tslib_1.__extends","highlightTypescript","code","highlight","Prism","languages","typescript","highlightHtml","html","highlightScss","scss","lang","OverviewViewerComponent","documentationRetriever","isNoOverviewMessageShown","defineProperty","overview","DocumentationRetrieverService","Input","declarations","OverviewViewerModule","NgModule","imports","ClarityModule","CommonModule","exports","StackBlitzWriterService","stackBlitzData","docRetriever","openStackBlitz","exampleComponent","exampleModule","replace","moduleFileName","getFileName","componentTagName","componentFileName","file","form","document","createElement","encodedFile","encodeURIComponent","action","STACKBLITZ_URL","method","target","keys","forEach","key","includes","_appendFormInput","JSON","stringify","templateUrl","fileName","removeLeadingDotSlash","styleData","startsWith","slice","lastIndexOf","body","appendChild","submit","removeChild","input","type","ExampleViewerComponent","resolver","stackblitzWriter","showSourceCode","_exampleEntry","exampleEntry","createExample","exampleContainer","clear","factory","resolveComponentFactory","createComponent","ComponentFactoryResolver","ViewChild","static","read","ViewContainerRef","SourceCodeViewerComponent","highlightService","typescriptSourceCode","htmlSourceCode","cssSourceCode","SourceCodeViewerModule","ExampleViewerModule","ApiViewerComponent","inputParameters","outputParameters","ApiViewerModule","DocumentationContainerModule","entryComponents","DOCUMENTATION_DATA","InjectionToken","STACKBLITZ_DATA","getCompoDocRetrieverService","documentations","getStackBlitzWriter","sbData","docRetrieverService","DocLibModule","forRoot","stackblitzData","ngModule","providers","provide","useValue","useFactory","deps","useClass"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Type } from '@angular/core';\nimport { CompodocComponent, CompodocModule } from './compodoc/compodoc-schema';\n\n/**\n * Represents the inputClass/outputClass properties of a component in compodoc generated documentation\n */\nexport interface ApiParameters {\n    /**\n     * Represents name of input/output property of a component\n     */\n    name: string;\n    /**\n     * Represents Data type of input/output property\n     */\n    type: string;\n    /**\n     * Represents JS doc of input/output property\n     */\n    description: string;\n}\n\n/**\n * Service exposing methods for retrieving the documentation for a given component.\n */\nexport abstract class DocumentationRetrieverService {\n    /**\n     * Returns the overview help documentation for the provided component\n     */\n    public abstract getOverview(component: Type<any>): string;\n\n    /**\n     * Returns the typescript source code for the provided component\n     */\n    public abstract getTypescriptSourceCode(component: Type<any>): string;\n\n    /**\n     * Returns the HTML source code for the provided component\n     */\n    public abstract getHtmlSourceCode(component: Type<any>): string;\n\n    /**\n     * Returns the CSS source code for the provided component\n     */\n    public abstract getCssSourceCode(component: Type<any>): string;\n\n    /**\n     * Returns the inputsClass property value of the provided component from the Compodoc generated JSON\n     */\n    public abstract getInputParameters(component: Type<any>): ApiParameters[];\n\n    /**\n     * Returns the outputsClass property value of the provided component from the Compodoc generated JSON\n     */\n    public abstract getOutputParameters(component: Type<any>): ApiParameters[];\n\n    /** The raw CompoDoc component */\n    public abstract getComponent(component: Type<any>): CompodocComponent;\n\n    /** The raw Compodoc module object */\n    public abstract getModule(moduleName: string): CompodocModule;\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { DocumentationEntry } from '../documentation';\n\n@Component({\n    selector: 'vcd-documentation-container',\n    templateUrl: './documentation-container.component.html',\n    styleUrls: ['./documentation-container.component.scss'],\n})\nexport class DocumentationContainerComponent implements OnInit {\n    /**\n     * The documentation entry registered for a component is obtained here using the route data\n     * {@link Documentation.getRoutes} registered for that component using {@link Documentation.registerDocumentationEntry}\n     */\n    documentationEntry: DocumentationEntry;\n\n    constructor(private route: ActivatedRoute) {}\n\n    ngOnInit(): void {\n        this.route.data.subscribe((data: Data) => {\n            this.documentationEntry = data.documentationEntry;\n        });\n    }\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Type } from '@angular/core';\nimport { DocumentationContainerComponent } from './documentation-container/documentation-container.component';\nimport { Routes } from '@angular/router';\n\n/**\n * Represents each entry in {@link DocumentationEntry.examples}, that is an examples that shows a particular usage of a components\n */\nexport interface ExampleEntry {\n    /**\n     * Example component written to show usage of the component\n     */\n    component: Type<unknown>;\n\n    /**\n     * The component for which this example is written\n     */\n    forComponent: Type<unknown>;\n\n    /**\n     * The title of the section under which this example will be placed\n     */\n    title: string;\n}\n\n/**\n * Represents a component being showcased, along with the examples for it.\n */\nexport interface DocumentationEntry {\n    /**\n     * The display name that is going to be used for the component\n     */\n    displayName: string;\n\n    /**\n     * The segment to be used in routing when displaying the documentation for this component.\n     */\n    urlSegment: string;\n\n    /**\n     * The component for which the documentation is going to be generated\n     */\n    component: Type<unknown>;\n\n    /**\n     * A list of examples that will show how the component may be used\n     */\n    examples?: ExampleEntry[];\n}\n\n/**\n * To register a documentation entry as value for corresponding component\n */\nconst documentationEntryMap = new Map<Type<unknown>, DocumentationEntry>();\n\n/**\n * Used in {@link Documentation.registerDocumentationEntry} method to check if the input is a valid {@link DocumentationEntry}\n */\nfunction validateDocumentationMetadata(documentationParams: DocumentationEntry): void {\n    if (!documentationParams.urlSegment) {\n        throw new Error('urlSegment should be specified and not empty');\n    }\n\n    const documentationEntry = Documentation.getAllEntries().find(\n        entry => entry.urlSegment === documentationParams.urlSegment\n    );\n    if (documentationEntry) {\n        throw new Error(\n            `The specified urlSegment '${documentationParams.urlSegment}' for '${documentationParams.displayName}'` +\n                `was already defined for '${documentationEntry.displayName}'`\n        );\n    }\n\n    if (!documentationParams.displayName) {\n        throw new Error('displayName should be specified and not empty');\n    }\n}\n\nexport const Documentation = {\n    /**\n     * Returns all the documentation entries registered into the framework\n     */\n    getAllEntries(): DocumentationEntry[] {\n        return Array.from(documentationEntryMap.values());\n    },\n\n    /**\n     * Returns angular routes used when displaying the documentation/examples for the components.\n     */\n    getRoutes(): Routes {\n        return Documentation.getAllEntries().map((documentationEntry: DocumentationEntry) => ({\n            path: documentationEntry.urlSegment,\n            component: DocumentationContainerComponent,\n            data: { documentationEntry },\n        }));\n    },\n\n    /**\n     * Used for manual registration of documentation entry with a corresponding component.\n     */\n    registerDocumentationEntry(documentationEntry: DocumentationEntry): void {\n        validateDocumentationMetadata(documentationEntry);\n        documentationEntryMap.set(documentationEntry.component, documentationEntry);\n    },\n};\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Type } from '@angular/core';\nimport { ApiParameters, DocumentationRetrieverService } from '../documentation-retriever.service';\nimport { CompodocComponent, CompodocModule, CompodocSchema } from './compodoc-schema';\n\n/**\n * This service retrieves specific properties from compodoc generated documentation\n */\nexport class CompoDocRetrieverService implements DocumentationRetrieverService {\n    constructor(private documentationJson: CompodocSchema[]) {}\n\n    public getOverview(component: Type<any>): string {\n        return this.getComponent(component).description;\n    }\n\n    public getTypescriptSourceCode(component: Type<any>): string {\n        return this.getComponent(component).sourceCode;\n    }\n\n    public getHtmlSourceCode(component: Type<any>): string {\n        return this.getComponent(component).templateData;\n    }\n\n    public getCssSourceCode(component: Type<any>): string {\n        const styleUrlsData = this.getComponent(component).styleUrlsData;\n        if (!styleUrlsData) {\n            return;\n        }\n        return styleUrlsData.map(styleUrl => styleUrl.data).join('\\n\\n\\n');\n    }\n\n    public getComponent(component: Type<any>): CompodocComponent {\n        for (const documentationJson of this.documentationJson) {\n            const compodocComponent = documentationJson.components.find(c => c.name === component.name);\n            if (compodocComponent) {\n                return compodocComponent;\n            }\n        }\n        return { styleUrlsData: [] } as CompodocComponent;\n    }\n\n    public getModule(moduleName: string): CompodocModule | null {\n        for (const documentationJson of this.documentationJson) {\n            const compodocComponent = documentationJson.modules.find(module => module.name === moduleName);\n            if (compodocComponent) {\n                return compodocComponent;\n            }\n        }\n        return null;\n    }\n\n    public getInputParameters(component: Type<any>): ApiParameters[] {\n        const comp = this.getComponent(component);\n        return comp.inputsClass || [];\n    }\n\n    public getOutputParameters(component: Type<any>): ApiParameters[] {\n        const comp = this.getComponent(component);\n        return comp.outputsClass || [];\n    }\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport abstract class HighlightService {\n    public abstract highlightTypescript(code: string): string;\n    public abstract highlightHtml(code: string): string;\n    public abstract highlightScss(code: string): string;\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Injectable } from '@angular/core';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-typescript';\nimport 'prismjs/components/prism-scss';\nimport { HighlightService } from '../highlight.service';\n\n@Injectable()\nexport class PrismHighlightService extends HighlightService {\n    highlightTypescript(code: string): string {\n        return this.highlight(code, Prism.languages.typescript);\n    }\n    highlightHtml(code: string): string {\n        return this.highlight(code, Prism.languages.html);\n    }\n    highlightScss(code: string): string {\n        return this.highlight(code, Prism.languages.scss);\n    }\n\n    private highlight(code: string, lang): string {\n        return Prism.highlight(code || '', lang);\n    }\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, Input, Type } from '@angular/core';\nimport { DocumentationRetrieverService } from '../documentation-retriever.service';\n\n@Component({\n    selector: 'vcd-overview-viewer',\n    templateUrl: './overview-viewer.component.html',\n    styleUrls: ['./overview-viewer.component.scss'],\n})\nexport class OverviewViewerComponent {\n    /**\n     * The description of the component from Compodoc generated JSON. This is an HTML encoded string.\n     */\n    overview: string;\n    constructor(private documentationRetriever: DocumentationRetrieverService) {}\n\n    @Input() isNoOverviewMessageShown = true;\n\n    @Input()\n    set component(component: Type<any>) {\n        if (!component) {\n            return;\n        }\n        // TODO: externalize string literals\n        this.overview =\n            this.documentationRetriever.getOverview(component) ||\n            (this.isNoOverviewMessageShown ? 'No Documentation found' : '');\n    }\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { CommonModule } from '@angular/common';\nimport { OverviewViewerComponent } from './overview-viewer.component';\n\nconst declarations = [OverviewViewerComponent];\n\n@NgModule({\n    imports: [ClarityModule, CommonModule],\n    declarations: [...declarations],\n    exports: [...declarations],\n})\nexport class OverviewViewerModule {}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { ExampleEntry } from './documentation';\nimport { DocumentationRetrieverService } from './documentation-retriever.service';\n\nexport interface StackBlitzData {\n    [key: string]: string;\n}\n\nconst STACKBLITZ_URL = 'https://stackblitz.com/run';\n\n/**\n * Merges the generated template stackblitz data with information from the given example and submits the form to a new page\n */\nexport class StackBlitzWriterService {\n    constructor(private stackBlitzData: StackBlitzData, private docRetriever: DocumentationRetrieverService) {}\n\n    /**\n     * We should add the ability to specify a form target instead of always doing a new window\n     * @param entry The example to be displayed in StackBlitz\n     */\n    openStackBlitz(entry: ExampleEntry): void {\n        const exampleComponent = this.docRetriever.getComponent(entry.component);\n        const exampleModule = this.docRetriever.getModule(\n            exampleComponent.name.replace('ExampleComponent', 'ExampleModule')\n        );\n\n        const moduleName = exampleModule.name;\n        const moduleFileName = getFileName(exampleModule.path);\n        const componentTagName = exampleComponent.selector;\n        const componentFileName = getFileName(exampleComponent.file);\n\n        const form = document.createElement('form');\n        const encodedFile = encodeURIComponent(`src/app/${componentFileName}`);\n        form.action = `${STACKBLITZ_URL}?file=${encodedFile}`;\n        form.method = 'post';\n        form.target = '_blank';\n\n        // First replace the placeholders and add any other files created by the stackblitz writer\n        Object.keys(this.stackBlitzData).forEach(key => {\n            let data = this.stackBlitzData[key];\n            if (key.includes('app.module.ts')) {\n                data = data\n                    .replace(/__EXAMPLE_MODULE_FILE_IMPORT/g, moduleFileName.replace(/\\.ts$/, ''))\n                    .replace(/__EXAMPLE_MODULE/g, moduleName);\n            }\n\n            if (key.includes('app.component.html')) {\n                data = data.replace(/__EXAMPLE_TAG/g, componentTagName);\n            }\n            if (typeof data === 'object') {\n                this._appendFormInput(form, key, JSON.stringify(data));\n            } else {\n                this._appendFormInput(form, key, data);\n            }\n        });\n\n        // Add the example components\n        this._appendFormInput(form, `project[files][src/app/${componentFileName}]`, exampleComponent.sourceCode);\n\n        if (exampleComponent.templateUrl && exampleComponent.templateUrl.length > 0) {\n            const fileName = removeLeadingDotSlash(exampleComponent.templateUrl[0]);\n            this._appendFormInput(form, `project[files][src/app/${fileName}]`, exampleComponent.templateData);\n        }\n\n        if (exampleComponent.styleUrlsData && exampleComponent.styleUrlsData.length > 0) {\n            const styleData = exampleComponent.styleUrlsData[0];\n            const fileName = removeLeadingDotSlash(styleData.styleUrl);\n            this._appendFormInput(form, `project[files][src/app/${fileName}]`, styleData.data);\n        }\n        this._appendFormInput(form, `project[files][src/app/${moduleFileName}]`, exampleModule.sourceCode);\n\n        document.body.appendChild(form);\n        form.submit();\n        document.body.removeChild(form);\n\n        /**\n         *\n         * @param fileName a fileName path that may start with ./\n         * @return A filename, without a\n         */\n        function removeLeadingDotSlash(fileName: string): string {\n            if (fileName.startsWith('./')) {\n                fileName = fileName.slice(2);\n            }\n            return fileName;\n        }\n\n        /**\n         * Returns everything after the last slash\n         * @param path Path to be shortened to just its filename\n         */\n        function getFileName(path: string): string {\n            return path.slice(path.lastIndexOf('/') + 1);\n        }\n    }\n\n    /** Appends the name and value as an input to the form. */\n    _appendFormInput(form: HTMLFormElement, name: string, value: string): void {\n        const input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = name;\n        input.value = value;\n        form.appendChild(input);\n    }\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, ComponentFactoryResolver, Input, ViewChild, ViewContainerRef } from '@angular/core';\nimport { ExampleEntry } from '../documentation';\nimport { DocumentationRetrieverService } from '../documentation-retriever.service';\nimport { StackBlitzWriterService } from '../stack-blitz-writer.service';\n\n@Component({\n    selector: 'vcd-example-viewer',\n    templateUrl: './example-viewer.component.html',\n    styleUrls: ['./example-viewer.component.scss'],\n})\nexport class ExampleViewerComponent {\n    /**\n     * For showing and hiding of {@link SourceCodeViewerComponent} in the HTML\n     */\n    showSourceCode = false;\n\n    constructor(\n        private resolver: ComponentFactoryResolver,\n        private docRetriever: DocumentationRetrieverService,\n        private stackblitzWriter: StackBlitzWriterService\n    ) {}\n\n    /**\n     * Gets the example entry from documentation entry and renders the example component\n     */\n    private _exampleEntry: ExampleEntry;\n    @Input()\n    set exampleEntry(exampleEntry: ExampleEntry) {\n        this._exampleEntry = exampleEntry;\n        this.createExample();\n    }\n\n    get exampleEntry(): ExampleEntry {\n        return this._exampleEntry;\n    }\n\n    /**\n     * Container for rendering the example component\n     */\n    @ViewChild('exampleContainer', { static: true, read: ViewContainerRef })\n    exampleContainer: ViewContainerRef;\n\n    private createExample(): void {\n        this.exampleContainer.clear();\n        const exampleEntry = this.exampleEntry;\n        if (!exampleEntry || !exampleEntry.component) {\n            return;\n        }\n        const factory = this.resolver.resolveComponentFactory(exampleEntry.component);\n        this.exampleContainer.createComponent(factory);\n    }\n\n    openStackBlitz(): void {\n        this.stackblitzWriter.openStackBlitz(this.exampleEntry);\n    }\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, Input, Type } from '@angular/core';\nimport { DocumentationRetrieverService } from '../documentation-retriever.service';\nimport { HighlightService } from '../highlight/highlight.service';\n\n/**\n * To display the 3 code parts(TypeScript, HTML and CSS) of a component\n */\n@Component({\n    selector: 'vcd-source-code-viewer',\n    templateUrl: './source-code-viewer.component.html',\n    styleUrls: ['./source-code-viewer.component.scss'],\n})\nexport class SourceCodeViewerComponent {\n    /**\n     * Different source codes of the component\n     */\n    typescriptSourceCode: string;\n    htmlSourceCode: string;\n    cssSourceCode: string;\n\n    constructor(\n        private documentationRetriever: DocumentationRetrieverService,\n        private highlightService: HighlightService\n    ) {}\n\n    /**\n     * The component which source (typescript, html, css) will be displayed\n     */\n    @Input()\n    set component(component: Type<any>) {\n        if (!component) {\n            return;\n        }\n        // TODO: externalize string literals\n        this.typescriptSourceCode = this.highlightService.highlightTypescript(\n            this.documentationRetriever.getTypescriptSourceCode(component)\n        );\n        this.htmlSourceCode = this.highlightService.highlightHtml(\n            this.documentationRetriever.getHtmlSourceCode(component) || 'No html found'\n        );\n        this.cssSourceCode = this.highlightService.highlightScss(\n            this.documentationRetriever.getCssSourceCode(component) || 'No CSS found'\n        );\n    }\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { CommonModule } from '@angular/common';\nimport { SourceCodeViewerComponent } from './source-code-viewer.component';\n\nconst declarations = [SourceCodeViewerComponent];\n\n@NgModule({\n    imports: [ClarityModule, CommonModule],\n    declarations: [...declarations],\n    exports: [...declarations],\n})\nexport class SourceCodeViewerModule {}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { CommonModule } from '@angular/common';\nimport { ExampleViewerComponent } from './example-viewer.component';\nimport { SourceCodeViewerModule } from '../source-code-viewer/source-code-viewer.module';\nimport { OverviewViewerModule } from '../overview-viewer/overview-viewer.module';\n\nconst declarations = [ExampleViewerComponent];\n\n@NgModule({\n    imports: [ClarityModule, CommonModule, SourceCodeViewerModule, OverviewViewerModule],\n    declarations: [...declarations],\n    exports: [...declarations],\n})\nexport class ExampleViewerModule {}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, Input, Type } from '@angular/core';\nimport { ApiParameters, DocumentationRetrieverService } from '../documentation-retriever.service';\n\n@Component({\n    selector: ' vcd-api-viewer',\n    templateUrl: './api-viewer.component.html',\n    styleUrls: ['./api-viewer.component.scss'],\n})\nexport class ApiViewerComponent {\n    inputParameters: ApiParameters[];\n    outputParameters: ApiParameters[];\n\n    constructor(private documentationRetriever: DocumentationRetrieverService) {}\n\n    /**\n     * Gets the input and output parameters from the Compodoc generated documentation json\n     */\n    @Input()\n    set component(component: Type<any>) {\n        if (!component) {\n            return;\n        }\n        this.inputParameters = this.documentationRetriever.getInputParameters(component);\n        this.outputParameters = this.documentationRetriever.getOutputParameters(component);\n    }\n}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { CommonModule } from '@angular/common';\nimport { ApiViewerComponent } from './api-viewer.component';\n\nconst declarations = [ApiViewerComponent];\n\n@NgModule({\n    imports: [ClarityModule, CommonModule],\n    declarations: [...declarations],\n    exports: [...declarations],\n})\nexport class ApiViewerModule {}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { CommonModule } from '@angular/common';\nimport { DocumentationContainerComponent } from './documentation-container.component';\nimport { OverviewViewerModule } from '../overview-viewer/overview-viewer.module';\nimport { ExampleViewerModule } from '../example-viewer/example-viewer.module';\nimport { ApiViewerModule } from '../api-viewer/api-viewer.module';\n\nconst declarations = [DocumentationContainerComponent];\n\n@NgModule({\n    imports: [ClarityModule, CommonModule, OverviewViewerModule, ApiViewerModule, ExampleViewerModule],\n    declarations: [...declarations],\n    entryComponents: [DocumentationContainerComponent],\n    exports: [...declarations, OverviewViewerModule, ApiViewerModule, ExampleViewerModule],\n})\nexport class DocumentationContainerModule {}\n","/*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CompodocSchema } from './compodoc/compodoc-schema';\nimport { DocumentationRetrieverService } from './documentation-retriever.service';\nimport { CompoDocRetrieverService } from './compodoc/compodoc-retriever.service';\nimport { PrismHighlightService } from './highlight/prism/prism-highlight.service';\nimport { HighlightService } from './highlight/highlight.service';\nimport { DocumentationContainerModule } from './documentation-container/documentation-container.module';\nimport { StackBlitzData, StackBlitzWriterService } from './stack-blitz-writer.service';\n\nconst declarations = [];\n\n/**\n * NOTE: The following two has to be exported otherwise the AoT compiler won't see it.\n */\n\n/**\n * Token that makes the documentation JSONs available to the following factory function.\n */\nexport const DOCUMENTATION_DATA = new InjectionToken<CompodocSchema[]>(\n    'DocLibModule.forRoot() CompoDocRetrieverService doc jsons.'\n);\n\n/**\n * Token that makes Stqckblitz JSON data available to factory functions\n */\nexport const STACKBLITZ_DATA = new InjectionToken<StackBlitzData>(\n    'DocLibModule.forRoot() StackBlitz template JSON data'\n);\n\nexport function getCompoDocRetrieverService(documentations: CompodocSchema[]): DocumentationRetrieverService {\n    return new CompoDocRetrieverService(documentations);\n}\n\nexport function getStackBlitzWriter(\n    sbData: StackBlitzData,\n    docRetrieverService: DocumentationRetrieverService\n): StackBlitzWriterService {\n    return new StackBlitzWriterService(sbData, docRetrieverService);\n}\n\n@NgModule({\n    imports: [DocumentationContainerModule],\n    declarations: [...declarations],\n    exports: [...declarations, DocumentationContainerModule],\n    providers: [{ provide: HighlightService, useClass: PrismHighlightService }],\n})\nexport class DocLibModule {\n    /**\n     * Called in the host package importing this doc library for providing the documentation JSONs needed for\n     * {@link CompoDocRetrieverService}\n     */\n    public static forRoot(documentations: CompodocSchema[], stackblitzData: StackBlitzData): ModuleWithProviders {\n        return {\n            ngModule: DocLibModule,\n            providers: [\n                // For injecting 'documentations' into factory function, we have to first provide them as injectable.\n                {\n                    provide: DOCUMENTATION_DATA,\n                    useValue: documentations,\n                },\n\n                {\n                    provide: STACKBLITZ_DATA,\n                    useValue: stackblitzData,\n                },\n\n                {\n                    provide: DocumentationRetrieverService,\n                    useFactory: getCompoDocRetrieverService,\n                    deps: [DOCUMENTATION_DATA],\n                },\n                {\n                    provide: StackBlitzWriterService,\n                    deps: [STACKBLITZ_DATA, DocumentationRetrieverService],\n                    useFactory: getStackBlitzWriter,\n                },\n            ],\n        };\n    }\n}\n"]}