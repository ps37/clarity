{
  "pipes": [],
  "interfaces": [
    {
      "name": "FetchResult",
      "id": "interface-FetchResult-83ef4d7dd8e619dc91fb5ef42a73db6e",
      "file": "src/website/src/app/documentation/demos/datagrid/inventory/inventory.ts",
      "type": "interface",
      "sourceCode":
        "import { User } from './user';\nimport { BEGINNING, COLORS, NAMES, NOW, POKEMON } from './values';\n\nexport class Inventory {\n  public size = 100;\n  public latency = 0;\n\n  private _all: User[];\n  private _currentQuery: User[];\n\n  get all(): User[] {\n    return this._all.slice();\n  }\n\n  reset() {\n    this._all = [];\n    for (let i = 0; i < this.size; i++) {\n      this._all.push({\n        id: randomInt(100000),\n        name: NAMES[randomInt(NAMES.length)],\n        creation: new Date(BEGINNING + randomInt(NOW - BEGINNING)),\n        color: COLORS[randomInt(COLORS.length)],\n        pokemon: POKEMON[randomInt(POKEMON.length)],\n        wins: randomInt(100),\n      });\n    }\n  }\n\n  private _checkCurrentQuery() {\n    if (!this._currentQuery) {\n      this._currentQuery = this._all.slice();\n    }\n  }\n\n  filter(filters: { [key: string]: string[] }): Inventory {\n    this._checkCurrentQuery();\n    if (filters) {\n      for (const key in filters) {\n        if (filters[key].length === 0) {\n          continue;\n        }\n\n        let getFilterProperty = (user: User) => '' + user[key];\n        if (key === 'pokemon') {\n          getFilterProperty = (user: User) => user.pokemon.name;\n        }\n\n        const lowerCase = filters[key].map(value => value.toLowerCase());\n        this._currentQuery = this._currentQuery.filter(user => {\n          for (const value of lowerCase) {\n            if (\n              getFilterProperty(user)\n                .toLowerCase()\n                .indexOf(value) >= 0\n            ) {\n              return true;\n            }\n          }\n          return false;\n        });\n      }\n    }\n    return this;\n  }\n\n  sort(sort: { by: string; reverse: boolean }): Inventory {\n    this._checkCurrentQuery();\n    if (sort && sort.by) {\n      let getSortProperty = (user: User) => user[sort.by];\n      if (sort.by === 'pokemon') {\n        getSortProperty = (user: User) => user.pokemon.number;\n      }\n\n      this._currentQuery.sort((a, b) => {\n        let comp = 0;\n        const propA = getSortProperty(a),\n          propB = getSortProperty(b);\n        if (propA < propB) {\n          comp = -1;\n        } else if (propA > propB) {\n          comp = 1;\n        }\n        if (sort.reverse) {\n          comp = -comp;\n        }\n        return comp;\n      });\n    }\n    return this;\n  }\n\n  fetch(skip: number = 0, limit: number = this._currentQuery.length): Promise<FetchResult> {\n    const result: FetchResult = {\n      users: this._currentQuery.slice(skip, skip + limit),\n      length: this._currentQuery.length,\n    };\n    this._currentQuery = null;\n    return this._fakeHttp(result);\n  }\n\n  private _fakeHttp<T>(result: T): Promise<T> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result), this.latency);\n    });\n  }\n}\n\nexport interface FetchResult {\n  users: User[];\n  length: number;\n}\n\nfunction randomInt(max: number): number {\n  return Math.floor(Math.random() * max);\n}\n",
      "properties": [
        {
          "name": "length",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 115
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 114
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "File",
      "id": "interface-File-3d3864388ae12c4a004cfa62e6817653",
      "file":
        "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
      "type": "interface",
      "sourceCode":
        "import { Component, OnInit } from '@angular/core';\nimport { Observable, of, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst EXAMPLE_HTML = `\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *clrRecursiveFor=\"let file of root$ | async; getChildren: getChildren\"\n                   [clrExpandable]=\"file.isFolder\">\n        <clr-icon [attr.shape]=\"file.isFolder ? 'folder' : 'file'\"></clr-icon>\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n`;\n\nconst EXAMPLE_TS = `\n@Component({...})\nexport class FileBrowser implements OnInit {\n    constructor(private folderService: FolderService) {}\n\n    root$: Observable<File[]>;\n\n    getChildren = (folder: File) => {\n        if (folder.isFolder) {\n            return this.folderService.getFiles(folder);\n        } else {\n            return null;\n        }\n    };\n\n    ngOnInit(): void {\n        this.root$ = this.folderService.getFiles('/');\n    }\n}\n`;\n\ninterface File {\n  name: string;\n  isFolder: boolean;\n  files: File[];\n}\n\nconst ROOT = [\n  {\n    name: 'src',\n    isFolder: true,\n    files: [\n      {\n        name: 'app',\n        isFolder: true,\n        files: [\n          {\n            name: 'app.component.html',\n            isFolder: false,\n          },\n          {\n            name: 'app.component.ts',\n            isFolder: false,\n          },\n          {\n            name: 'app.module.ts',\n            isFolder: false,\n          },\n          {\n            name: 'app.routing.ts',\n            isFolder: false,\n          },\n        ],\n      },\n      {\n        name: 'environments',\n        isFolder: true,\n        files: [\n          {\n            name: 'environments.prod.ts',\n            isFolder: false,\n          },\n          {\n            name: 'environment.ts',\n            isFolder: false,\n          },\n        ],\n      },\n      {\n        name: 'index.html',\n        isFolder: false,\n      },\n      {\n        name: 'main.ts',\n        isFolder: false,\n      },\n    ],\n  },\n  {\n    name: 'package.json',\n    isFolder: false,\n  },\n  {\n    name: 'tsconfig.json',\n    isFolder: false,\n  },\n];\n\n@Component({\n  selector: 'clr-lazy-loading-recursive-tree-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: './lazy-loading-recursive-tree.html',\n})\nexport class LazyLoadingRecursiveTreeDemo implements OnInit {\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  root$: Observable<File[]>;\n\n  getChildren = (folder: File) => {\n    if (folder.isFolder) {\n      return this.folderService.getFiles(folder);\n    } else {\n      return null;\n    }\n  };\n\n  ngOnInit(): void {\n    this.root$ = this.folderService.getFiles('/');\n  }\n\n  folderService = {\n    getFiles: folder => {\n      if (folder === '/') {\n        return of(ROOT);\n      } else {\n        return timer(1000).pipe(map(() => folder.files));\n      }\n    },\n  };\n}\n",
      "properties": [
        {
          "name": "files",
          "type": "File[]",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "isFolder",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 42
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "Group",
      "id": "interface-Group-2ab68704035513e7216c472e40100011",
      "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
      "type": "interface",
      "sourceCode":
        "import { ClrSelectedState } from '@clr/angular';\nimport { of, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Group {\n  name: string;\n  selected: ClrSelectedState;\n}\n\nexport interface Item {\n  name: string;\n  selected: ClrSelectedState;\n}\n\nclass GroupImpl {\n  constructor(public name: string, private _selected: ClrSelectedState, public items: Item[]) {}\n\n  get selected() {\n    return this._selected;\n  }\n  set selected(value: ClrSelectedState) {\n    this._selected = value;\n    if (value !== ClrSelectedState.INDETERMINATE) {\n      this.items.forEach(item => (item.selected = value));\n    }\n  }\n}\n\nconst ALL_GROCERIES = [\n  new GroupImpl('Dairy', ClrSelectedState.INDETERMINATE, [\n    {\n      name: 'Milk',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Cheese',\n      selected: ClrSelectedState.SELECTED,\n    },\n  ]),\n  new GroupImpl('Vegetables', ClrSelectedState.UNSELECTED, [\n    {\n      name: 'Carrots',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Potatoes',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Beans',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n  ]),\n];\n\nexport const GROCERY_SERVICE = {\n  getGroups: () => of(ALL_GROCERIES),\n};\n\nexport const ITEMS_SERVICE = {\n  getItems: (group: Group) => timer(1000).pipe(map(() => (<any>group).items)),\n};\n",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "selected",
          "type": "ClrSelectedState",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "Item",
      "id": "interface-Item-2ab68704035513e7216c472e40100011",
      "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
      "type": "interface",
      "sourceCode":
        "import { ClrSelectedState } from '@clr/angular';\nimport { of, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Group {\n  name: string;\n  selected: ClrSelectedState;\n}\n\nexport interface Item {\n  name: string;\n  selected: ClrSelectedState;\n}\n\nclass GroupImpl {\n  constructor(public name: string, private _selected: ClrSelectedState, public items: Item[]) {}\n\n  get selected() {\n    return this._selected;\n  }\n  set selected(value: ClrSelectedState) {\n    this._selected = value;\n    if (value !== ClrSelectedState.INDETERMINATE) {\n      this.items.forEach(item => (item.selected = value));\n    }\n  }\n}\n\nconst ALL_GROCERIES = [\n  new GroupImpl('Dairy', ClrSelectedState.INDETERMINATE, [\n    {\n      name: 'Milk',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Cheese',\n      selected: ClrSelectedState.SELECTED,\n    },\n  ]),\n  new GroupImpl('Vegetables', ClrSelectedState.UNSELECTED, [\n    {\n      name: 'Carrots',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Potatoes',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Beans',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n  ]),\n];\n\nexport const GROCERY_SERVICE = {\n  getGroups: () => of(ALL_GROCERIES),\n};\n\nexport const ITEMS_SERVICE = {\n  getItems: (group: Group) => timer(1000).pipe(map(() => (<any>group).items)),\n};\n",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "selected",
          "type": "ClrSelectedState",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "Pokemon",
      "id": "interface-Pokemon-a431858e3ca29382002ba351f3ca3296",
      "file": "src/website/src/app/documentation/demos/datagrid/inventory/pokemon.ts",
      "type": "interface",
      "sourceCode": "export interface Pokemon {\n  number: number;\n  name: string;\n}\n",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "number",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "User",
      "id": "interface-User-a4e916f130fd13b2797dd80f58bd0f20",
      "file": "src/website/src/app/documentation/demos/datagrid/inventory/user.ts",
      "type": "interface",
      "sourceCode":
        "import { Pokemon } from './pokemon';\n\nexport interface User {\n  id: number;\n  name: string;\n  creation: Date;\n  color: string;\n  pokemon: Pokemon;\n  wins: number;\n\n  // Type for dynamic access to specific properties\n  [key: string]: any;\n}\n",
      "properties": [
        {
          "name": "color",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "creation",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "id",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "pokemon",
          "type": "Pokemon",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "wins",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "indexSignatures": [
        {
          "id": "index-declaration-a4e916f130fd13b2797dd80f58bd0f20",
          "args": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "returnType": "any",
          "line": 14
        }
      ],
      "kind": 159,
      "methods": []
    },
    {
      "name": "Version",
      "id": "interface-Version-0ac4dd3b34ddd1a3479534498f8ffc97",
      "file": "src/website/src/app/documentation/version-switcher/version-switcher.component.ts",
      "type": "interface",
      "sourceCode":
        "import { Component, Inject, PLATFORM_ID } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\ninterface Version {\n  version: string;\n  status: string;\n  url: string;\n}\n\n@Component({\n  selector: 'version-switcher',\n  templateUrl: 'version-switcher.component.html',\n  styleUrls: ['./version-switcher.component.scss'],\n})\nexport class VersionSwitcherComponent {\n  versions: Version[] = [];\n  environment = environment;\n  current: string;\n  child: string;\n  subscription: Subscription;\n\n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.subscription = this.router.events.subscribe(e => {\n      if (e instanceof NavigationEnd) {\n        let first = this.route.firstChild;\n        this.child = first.snapshot.url.length ? first.snapshot.url[0].path : '';\n        while (first.firstChild !== null) {\n          if (first.firstChild.snapshot.url.length) {\n            this.child += '/' + first.firstChild.snapshot.url[0].path;\n          }\n          first = first.firstChild;\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.current = environment.version;\n    if (isPlatformBrowser(this.platformId)) {\n      this.http.get<Version[]>(environment.versions_url).subscribe(\n        versions => {\n          this.versions = versions;\n        },\n        error => {\n          console.log(\"couldn't load\", error);\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n",
      "properties": [
        {
          "name": "status",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "version",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    }
  ],
  "injectables": [
    {
      "name": "ActiveFragmentService",
      "id": "injectable-ActiveFragmentService-6c96e40eef06c1629cfe105e048f70f2",
      "file": "src/website/src/app/icons/utils/active-fragment.service.ts",
      "properties": [
        {
          "name": "activeFragment",
          "defaultValue": "new Subject<string>()",
          "type": "Subject<string>",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "fragmentLinks",
          "defaultValue": "{}",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "methods": [],
      "description": "",
      "sourceCode":
        "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ActiveFragmentService {\n  // fragment anchor link elements\n  fragmentLinks: any = {};\n\n  activeFragment: Subject<string> = new Subject<string>();\n}\n",
      "type": "injectable"
    },
    {
      "name": "ClipboardCopyService",
      "id": "injectable-ClipboardCopyService-1ea2db00677aa0d6d64795598e619fd4",
      "file": "src/website/src/app/documentation/demos/color/clipboard-copy.service.ts",
      "properties": [
        {
          "name": "textareaEl",
          "type": "HTMLTextAreaElement",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [112]
        }
      ],
      "methods": [
        {
          "name": "createTextareaEl",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "modifierKind": [112]
        },
        {
          "name": "executeCopy",
          "args": [
            {
              "name": "copyContent",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "jsdoctags": [
            {
              "name": "copyContent",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setTextareaValue",
          "args": [
            {
              "name": "value",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "value",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode":
        "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// This is an utility service class for copying text to clipboard.\n// Currently, we use this only in color demo components.\n// If we need to use it somewhere else in the future, we should consider moving to utils directory.\n@Injectable()\nexport class ClipboardCopyService {\n  private textareaEl: HTMLTextAreaElement;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  private createTextareaEl() {\n    this.textareaEl = document.createElement('textarea');\n\n    // make it off screen\n    this.textareaEl.setAttribute('readonly', '');\n    this.textareaEl.classList.add('offscreen-clipboard-textarea');\n  }\n\n  private setTextareaValue(value: string) {\n    this.textareaEl.value = value;\n  }\n\n  executeCopy(copyContent: string) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.createTextareaEl();\n      this.setTextareaValue(copyContent);\n      document.body.appendChild(this.textareaEl);\n      this.textareaEl.select();\n      document.execCommand('copy');\n      document.body.removeChild(this.textareaEl);\n      delete this.textareaEl;\n    }\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 15,
        "jsdoctags": [
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "DisableFocusTrap",
      "id": "injectable-DisableFocusTrap-d0283d4321e5f43b01e13b569be220b6",
      "file": "src/website/src/app/documentation/utils/disable-focus-trap.ts",
      "properties": [],
      "methods": [
        {
          "name": "activatePreviousTrapper",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        }
      ],
      "description": "",
      "sourceCode":
        "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DisableFocusTrap {\n  constructor() {\n    try {\n      (<HTMLElement>document.activeElement).blur();\n    } catch (e) {\n      // Ignore because we're on a platform that doesn't have DOM access like a server\n    }\n  }\n  get current() {\n    return;\n  }\n  set current(value: any) {}\n  activatePreviousTrapper() {}\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 9
      },
      "accessors": {
        "current": {
          "name": "current",
          "setSignature": {
            "name": "current",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "any"
              }
            ],
            "returnType": "void",
            "line": 20,
            "jsdoctags": [
              {
                "name": "value",
                "type": "any",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "current",
            "type": "",
            "returnType": "",
            "line": 17
          }
        }
      },
      "type": "injectable"
    },
    {
      "name": "IconsViewService",
      "id": "injectable-IconsViewService-2160528e4f9d645a8fc3cb0df6ecf361",
      "file": "src/website/src/app/icons/icons-view.service.ts",
      "properties": [
        {
          "name": "previewClasses",
          "defaultValue": "new BehaviorSubject<any>(previewClasses)",
          "type": "BehaviorSubject<any>",
          "optional": false,
          "description":
            "<p>This service class is used to transfer values from IconsComponent to IconsSetsComponent.</p>\n",
          "line": 21
        },
        {
          "name": "searchValue",
          "defaultValue": "new Subject<string>()",
          "type": "Subject<string>",
          "optional": false,
          "description": "",
          "line": 23
        }
      ],
      "methods": [],
      "description": "",
      "sourceCode":
        "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nconst previewClasses: any = {\n  'is-solid': false,\n  'has-alert': false,\n  'has-badge': false,\n};\n\n@Injectable()\nexport class IconsViewService {\n  /**\n   * This service class is used to transfer values from IconsComponent to IconsSetsComponent.\n   */\n\n  previewClasses: BehaviorSubject<any> = new BehaviorSubject<any>(previewClasses);\n\n  searchValue: Subject<string> = new Subject<string>();\n}\n",
      "type": "injectable"
    }
  ],
  "classes": [
    {
      "name": "ClarityDocComponent",
      "id": "class-ClarityDocComponent-f92f57900eaf934545c2178b4e964b55",
      "file": "src/website/src/app/documentation/demos/clarity-doc.ts",
      "type": "class",
      "sourceCode":
        "import { COMPONENT_MAP } from '../../utils/component-list';\n\nexport class ClarityDocComponent {\n  ui: number = -1;\n  ng: number = -1;\n  title: string = '';\n  newLayout: boolean = false;\n\n  constructor(componentName: string) {\n    const component = COMPONENT_MAP.get(componentName);\n    this.populateComponentDetails(component.text, component.ui, component.ng, component.newLayout);\n  }\n\n  populateComponentDetails(title: string, ui: number, ng: number, newLayout: boolean) {\n    this.ui = ui;\n    this.ng = ng;\n    this.title = title;\n    this.newLayout = newLayout;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "componentName",
            "type": "string"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "componentName",
            "type": "string",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "DateFilter",
      "id": "class-DateFilter-869491b4107b7be2b09c0fc5d2fc5484",
      "file": "src/website/src/app/documentation/demos/datagrid/expandable-rows/expandable-rows.ts",
      "type": "class",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\nimport { EXAMPLES } from './examples';\n\nimport { ClrDatagridStringFilterInterface } from '@clr/angular';\n\nclass DateFilter implements ClrDatagridStringFilterInterface<User> {\n  accepts(user: User, search: string): boolean {\n    const date = user.creation.toDateString();\n    return date === search || date.toLowerCase().indexOf(search) >= 0;\n  }\n}\n\n@Component({\n  selector: 'clr-datagrid-expandable-rows-demo',\n  providers: [Inventory],\n  templateUrl: 'expandable-rows.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridExpandableRowsDemo {\n  examples = EXAMPLES;\n  users: User[];\n\n  detail = 'default';\n  replace = false;\n  slowLoad = false;\n\n  dateFilter = new DateFilter();\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "properties": [],
      "methods": [
        {
          "name": "accepts",
          "args": [
            {
              "name": "user",
              "type": "User"
            },
            {
              "name": "search",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 15,
          "jsdoctags": [
            {
              "name": "user",
              "type": "User",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "search",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["ClrDatagridStringFilterInterface"]
    },
    {
      "name": "GroupImpl",
      "id": "class-GroupImpl-2ab68704035513e7216c472e40100011",
      "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
      "type": "class",
      "sourceCode":
        "import { ClrSelectedState } from '@clr/angular';\nimport { of, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Group {\n  name: string;\n  selected: ClrSelectedState;\n}\n\nexport interface Item {\n  name: string;\n  selected: ClrSelectedState;\n}\n\nclass GroupImpl {\n  constructor(public name: string, private _selected: ClrSelectedState, public items: Item[]) {}\n\n  get selected() {\n    return this._selected;\n  }\n  set selected(value: ClrSelectedState) {\n    this._selected = value;\n    if (value !== ClrSelectedState.INDETERMINATE) {\n      this.items.forEach(item => (item.selected = value));\n    }\n  }\n}\n\nconst ALL_GROCERIES = [\n  new GroupImpl('Dairy', ClrSelectedState.INDETERMINATE, [\n    {\n      name: 'Milk',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Cheese',\n      selected: ClrSelectedState.SELECTED,\n    },\n  ]),\n  new GroupImpl('Vegetables', ClrSelectedState.UNSELECTED, [\n    {\n      name: 'Carrots',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Potatoes',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Beans',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n  ]),\n];\n\nexport const GROCERY_SERVICE = {\n  getGroups: () => of(ALL_GROCERIES),\n};\n\nexport const ITEMS_SERVICE = {\n  getItems: (group: Group) => timer(1000).pipe(map(() => (<any>group).items)),\n};\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "_selected",
            "type": "ClrSelectedState"
          },
          {
            "name": "items",
            "type": "Item[]"
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "name",
            "type": "string",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_selected",
            "type": "ClrSelectedState",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "items",
            "type": "Item[]",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "items",
          "type": "Item[]",
          "optional": false,
          "description": "",
          "line": 21,
          "modifierKind": [114]
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 21,
          "modifierKind": [114]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "accessors": {
        "selected": {
          "name": "selected",
          "setSignature": {
            "name": "selected",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 26,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "selected",
            "type": "",
            "returnType": "",
            "line": 23
          }
        }
      },
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "Inventory",
      "id": "class-Inventory-83ef4d7dd8e619dc91fb5ef42a73db6e",
      "file": "src/website/src/app/documentation/demos/datagrid/inventory/inventory.ts",
      "type": "class",
      "sourceCode":
        "import { User } from './user';\nimport { BEGINNING, COLORS, NAMES, NOW, POKEMON } from './values';\n\nexport class Inventory {\n  public size = 100;\n  public latency = 0;\n\n  private _all: User[];\n  private _currentQuery: User[];\n\n  get all(): User[] {\n    return this._all.slice();\n  }\n\n  reset() {\n    this._all = [];\n    for (let i = 0; i < this.size; i++) {\n      this._all.push({\n        id: randomInt(100000),\n        name: NAMES[randomInt(NAMES.length)],\n        creation: new Date(BEGINNING + randomInt(NOW - BEGINNING)),\n        color: COLORS[randomInt(COLORS.length)],\n        pokemon: POKEMON[randomInt(POKEMON.length)],\n        wins: randomInt(100),\n      });\n    }\n  }\n\n  private _checkCurrentQuery() {\n    if (!this._currentQuery) {\n      this._currentQuery = this._all.slice();\n    }\n  }\n\n  filter(filters: { [key: string]: string[] }): Inventory {\n    this._checkCurrentQuery();\n    if (filters) {\n      for (const key in filters) {\n        if (filters[key].length === 0) {\n          continue;\n        }\n\n        let getFilterProperty = (user: User) => '' + user[key];\n        if (key === 'pokemon') {\n          getFilterProperty = (user: User) => user.pokemon.name;\n        }\n\n        const lowerCase = filters[key].map(value => value.toLowerCase());\n        this._currentQuery = this._currentQuery.filter(user => {\n          for (const value of lowerCase) {\n            if (\n              getFilterProperty(user)\n                .toLowerCase()\n                .indexOf(value) >= 0\n            ) {\n              return true;\n            }\n          }\n          return false;\n        });\n      }\n    }\n    return this;\n  }\n\n  sort(sort: { by: string; reverse: boolean }): Inventory {\n    this._checkCurrentQuery();\n    if (sort && sort.by) {\n      let getSortProperty = (user: User) => user[sort.by];\n      if (sort.by === 'pokemon') {\n        getSortProperty = (user: User) => user.pokemon.number;\n      }\n\n      this._currentQuery.sort((a, b) => {\n        let comp = 0;\n        const propA = getSortProperty(a),\n          propB = getSortProperty(b);\n        if (propA < propB) {\n          comp = -1;\n        } else if (propA > propB) {\n          comp = 1;\n        }\n        if (sort.reverse) {\n          comp = -comp;\n        }\n        return comp;\n      });\n    }\n    return this;\n  }\n\n  fetch(skip: number = 0, limit: number = this._currentQuery.length): Promise<FetchResult> {\n    const result: FetchResult = {\n      users: this._currentQuery.slice(skip, skip + limit),\n      length: this._currentQuery.length,\n    };\n    this._currentQuery = null;\n    return this._fakeHttp(result);\n  }\n\n  private _fakeHttp<T>(result: T): Promise<T> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result), this.latency);\n    });\n  }\n}\n\nexport interface FetchResult {\n  users: User[];\n  length: number;\n}\n\nfunction randomInt(max: number): number {\n  return Math.floor(Math.random() * max);\n}\n",
      "properties": [
        {
          "name": "_all",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [112]
        },
        {
          "name": "_currentQuery",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [112]
        },
        {
          "name": "latency",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [114]
        },
        {
          "name": "size",
          "defaultValue": "100",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [114]
        }
      ],
      "methods": [
        {
          "name": "_checkCurrentQuery",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "modifierKind": [112]
        },
        {
          "name": "_fakeHttp",
          "args": [
            {
              "name": "result",
              "type": "T"
            }
          ],
          "optional": false,
          "returnType": "Promise<T>",
          "typeParameters": ["T"],
          "line": 106,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "result",
              "type": "T",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "fetch",
          "args": [
            {
              "name": "skip",
              "type": "number",
              "defaultValue": "0"
            },
            {
              "name": "limit",
              "type": "number",
              "defaultValue": "this._currentQuery.length"
            }
          ],
          "optional": false,
          "returnType": "Promise<FetchResult>",
          "typeParameters": [],
          "line": 97,
          "jsdoctags": [
            {
              "name": "skip",
              "type": "number",
              "defaultValue": "0",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "limit",
              "type": "number",
              "defaultValue": "this._currentQuery.length",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "filter",
          "args": [
            {
              "name": "filters",
              "type": "literal type"
            }
          ],
          "optional": false,
          "returnType": "Inventory",
          "typeParameters": [],
          "line": 40,
          "jsdoctags": [
            {
              "name": "filters",
              "type": "literal type",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "reset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        },
        {
          "name": "sort",
          "args": [
            {
              "name": "sort",
              "type": "literal type"
            }
          ],
          "optional": false,
          "returnType": "Inventory",
          "typeParameters": [],
          "line": 71,
          "jsdoctags": [
            {
              "name": "sort",
              "type": "literal type",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "accessors": {
        "all": {
          "name": "all",
          "getSignature": {
            "name": "all",
            "type": "[]",
            "returnType": "User[]",
            "line": 16
          }
        }
      },
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "PokemonComparator",
      "id": "class-PokemonComparator-8218ab8dcc4cb6f06d39f9f1cf0b5e47",
      "file": "src/website/src/app/documentation/demos/datagrid/utils/pokemon-comparator.ts",
      "type": "class",
      "sourceCode":
        "import { ClrDatagridComparatorInterface } from '@clr/angular';\nimport { User } from '../inventory/user';\n\nexport class PokemonComparator implements ClrDatagridComparatorInterface<User> {\n  compare(a: User, b: User) {\n    return a.pokemon.number - b.pokemon.number;\n  }\n}\n",
      "properties": [],
      "methods": [
        {
          "name": "compare",
          "args": [
            {
              "name": "a",
              "type": "User"
            },
            {
              "name": "b",
              "type": "User"
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 10,
          "jsdoctags": [
            {
              "name": "a",
              "type": "User",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "b",
              "type": "User",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["ClrDatagridComparatorInterface"]
    },
    {
      "name": "PokemonFilter",
      "id": "class-PokemonFilter-307ed9c7d3ba122125f9a4155d20fa99",
      "file": "src/website/src/app/documentation/demos/datagrid/utils/pokemon-filter.ts",
      "type": "class",
      "sourceCode":
        "import { ClrDatagridStringFilterInterface } from '@clr/angular';\nimport { User } from '../inventory/user';\n\nexport class PokemonFilter implements ClrDatagridStringFilterInterface<User> {\n  accepts(user: User, search: string): boolean {\n    return '' + user.pokemon.number === search || user.pokemon.name.toLowerCase().indexOf(search) >= 0;\n  }\n}\n",
      "properties": [],
      "methods": [
        {
          "name": "accepts",
          "args": [
            {
              "name": "user",
              "type": "User"
            },
            {
              "name": "search",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 10,
          "jsdoctags": [
            {
              "name": "user",
              "type": "User",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "search",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["ClrDatagridStringFilterInterface"]
    },
    {
      "name": "ProgBarExample",
      "id": "class-ProgBarExample-e352c3ac2cf557e8331f15aa254d28de",
      "file": "src/website/src/app/documentation/demos/progress-bars/progbar-example.ts",
      "type": "class",
      "sourceCode":
        "export class ProgBarExample {\n  intervalId: any;\n  value: number = 0;\n  intervalTimeInMs: number = 450;\n  running = false;\n  complete = false;\n\n  constructor(\n    public label: string = 'demo',\n    public title: string = 'Progress Bar',\n    public isLabeled: boolean = false\n  ) {}\n\n  cssClassnames(): string {\n    return ['progress', this.label].join(' ');\n  }\n\n  stop(): void {\n    this.complete = true;\n    clearInterval(this.intervalId);\n  }\n\n  reset(): void {\n    this.stop();\n    this.value = 0;\n    this.intervalId = -1;\n  }\n\n  start(): void {\n    if (this.intervalId > -1) {\n      this.reset();\n    }\n\n    this.intervalId = setInterval(() => {\n      this.run();\n    }, this.intervalTimeInMs);\n  }\n\n  isRunning(): boolean {\n    return this.running;\n  }\n\n  isFinished(): boolean {\n    return this.complete;\n  }\n\n  run(): void {\n    let myProgress: number = this.value;\n    const maxProgressIncrement: number = 15;\n    const minProgressIncrement: number = 4;\n    this.running = true;\n    this.complete = false;\n\n    myProgress += Math.random() * (maxProgressIncrement - minProgressIncrement) + minProgressIncrement;\n\n    if (myProgress > 99) {\n      this.value = 100;\n      this.stop();\n    } else if (myProgress < 1 || isNaN(myProgress)) {\n      this.value = 1;\n    } else {\n      // typescript decides to be fun and complains if the first parameter here is not a string.\n      // many good things about TS. but this one is pretty lame...\n      this.value = parseInt(myProgress + '', 10);\n    }\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": "'demo'"
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": "'Progress Bar'"
          },
          {
            "name": "isLabeled",
            "type": "boolean",
            "defaultValue": "false"
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "label",
            "type": "string",
            "defaultValue": "'demo'",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "title",
            "type": "string",
            "defaultValue": "'Progress Bar'",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "isLabeled",
            "type": "boolean",
            "defaultValue": "false",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "complete",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "intervalId",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "intervalTimeInMs",
          "defaultValue": "450",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "isLabeled",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [114]
        },
        {
          "name": "label",
          "defaultValue": "'demo'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [114]
        },
        {
          "name": "running",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "title",
          "defaultValue": "'Progress Bar'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [114]
        },
        {
          "name": "value",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "methods": [
        {
          "name": "cssClassnames",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 19
        },
        {
          "name": "isFinished",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 48
        },
        {
          "name": "isRunning",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 44
        },
        {
          "name": "reset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        },
        {
          "name": "run",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52
        },
        {
          "name": "start",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34
        },
        {
          "name": "stop",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "StackViewNgDemo",
      "id": "class-StackViewNgDemo-668c5f5e5194d89ca0b0f8d92f1c174d",
      "file": "src/website/src/app/documentation/demos/stack-view/stack-view-ng-demo.ts",
      "type": "class",
      "sourceCode":
        "export class StackViewNgDemo {\n  /*\n     * Modal edit demo\n     */\n  blocks: any[] = [\n    { title: 'Label 1', content: 'Content 1' },\n    {\n      title: 'Label 2',\n      content: 'Content 2',\n      children: [\n        { title: 'Sub-label 1', content: 'Sub-content 1' },\n        { title: 'Sub-label 2', content: 'Sub-content 2' },\n        { title: 'Sub-label 3', content: 'Sub-content 3' },\n      ],\n    },\n    { title: 'Label 3', content: 'Content 3' },\n  ];\n\n  editModal: boolean = false;\n\n  /*\n     * Lazy loading demo\n     */\n  children: any[] = [];\n\n  fetchChildren(): void {\n    if (this.children.length > 0) {\n      return;\n    }\n    setTimeout(() => {\n      this.children = [\n        { title: 'Sub-label 1', content: 'Sub-content 1' },\n        { title: 'Sub-label 2', content: 'Sub-content 2' },\n        { title: 'Sub-label 3', content: 'Sub-content 3' },\n      ];\n    }, 2000);\n  }\n}\n",
      "properties": [
        {
          "name": "blocks",
          "defaultValue":
            "[\n    { title: 'Label 1', content: 'Content 1' },\n    {\n      title: 'Label 2',\n      content: 'Content 2',\n      children: [\n        { title: 'Sub-label 1', content: 'Sub-content 1' },\n        { title: 'Sub-label 2', content: 'Sub-content 2' },\n        { title: 'Sub-label 3', content: 'Sub-content 3' },\n      ],\n    },\n    { title: 'Label 3', content: 'Content 3' },\n  ]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "children",
          "defaultValue": "[]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "editModal",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methods": [
        {
          "name": "fetchChildren",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "WinsFilter",
      "id": "class-WinsFilter-253926c36552b8563276a83a7bffb6f9",
      "file": "src/website/src/app/documentation/demos/datagrid/utils/wins-filter.ts",
      "type": "class",
      "sourceCode":
        "import { ClrDatagridNumericFilterInterface } from '@clr/angular';\n\nexport class WinsFilter implements ClrDatagridNumericFilterInterface<any> {\n  accepts(row: any, low: number, high: number): boolean {\n    if (low !== null && row.wins < low) {\n      return false;\n    }\n    if (high !== null && row.wins > high) {\n      return false;\n    }\n    return true;\n  }\n}\n",
      "properties": [],
      "methods": [
        {
          "name": "accepts",
          "args": [
            {
              "name": "row",
              "type": "any"
            },
            {
              "name": "low",
              "type": "number"
            },
            {
              "name": "high",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 10,
          "jsdoctags": [
            {
              "name": "row",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "low",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "high",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["ClrDatagridNumericFilterInterface"]
    }
  ],
  "directives": [
    {
      "name": "BreakingChange",
      "id": "directive-BreakingChange-61e1f88ef9a12a962418e21892238fc6",
      "file": "src/website/src/app/news/counters/breaking-change.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[breaking-change]',\n})\nexport class BreakingChange {}\n",
      "selector": "[breaking-change]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "BugFix",
      "id": "directive-BugFix-f3de5dc8ea7089689bcb1e488cbd35dc",
      "file": "src/website/src/app/news/counters/bug-fix.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[bug-fix]',\n})\nexport class BugFix {}\n",
      "selector": "[bug-fix]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "CodeHighlight",
      "id": "directive-CodeHighlight-7cdaae035cffc0b7002e7c545331f646",
      "file": "src/website/src/app/utils/code-highlight.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, Inject, Input, PLATFORM_ID, Renderer2 } from '@angular/core';\n\ndeclare var Prism: any;\n\n@Directive({ selector: 'code[clr-code-highlight]' })\nexport class CodeHighlight {\n  private _highlight: string = '';\n\n  // Had to use renderer because I wanted to add to existing classes on the code block\n  // Didn't want to override them completely\n  constructor(private _el: ElementRef, private renderer: Renderer2, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  ngAfterContentInit(): void {\n    this.redraw();\n  }\n\n  public redraw() {\n    // Only run Prism in browser engines\n    if (this._el && this._el.nativeElement && isPlatformBrowser(this.platformId)) {\n      Prism.highlightElement(this._el.nativeElement);\n    }\n  }\n\n  @Input('clr-code-highlight')\n  set highlight(val: string) {\n    if (val && val.trim() !== '') {\n      this._highlight = val;\n      this.renderer.addClass(this._el.nativeElement, this._highlight);\n    }\n  }\n\n  get highlight(): string {\n    return this._highlight;\n  }\n}\n",
      "selector": "code[clr-code-highlight]",
      "providers": [],
      "inputsClass": [
        {
          "name": "clr-code-highlight",
          "line": 31,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "_highlight",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        },
        {
          "name": "redraw",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23,
          "modifierKind": [114]
        }
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "_el",
            "type": "ElementRef"
          },
          {
            "name": "renderer",
            "type": "Renderer2"
          },
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "_el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "highlight": {
          "name": "highlight",
          "setSignature": {
            "name": "highlight",
            "type": "void",
            "args": [
              {
                "name": "val",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 31,
            "jsdoctags": [
              {
                "name": "val",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "highlight",
            "type": "string",
            "returnType": "string",
            "line": 38
          }
        }
      }
    },
    {
      "name": "FakeLoader",
      "id": "directive-FakeLoader-0aad6fdd538b3e6cedb5c3a676f69689",
      "file": "src/website/src/app/documentation/demos/datagrid/expandable-rows/fake-loader.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive, TemplateRef, ViewContainerRef, Input, OnInit } from '@angular/core';\nimport { ClrLoading } from '@clr/angular';\n\nconst LATENCY = 2000;\n\n@Directive({\n  selector: '[clrFakeLoader]',\n})\nexport class FakeLoader implements OnInit {\n  constructor(private template: TemplateRef<any>, private container: ViewContainerRef, private loading: ClrLoading) {}\n\n  @Input('clrFakeLoader') fake: boolean;\n\n  ngOnInit() {\n    if (this.fake) {\n      this.loading.loadingState = true;\n      setTimeout(() => {\n        this.load();\n        this.loading.loadingState = false;\n      }, LATENCY);\n    } else {\n      this.load();\n    }\n  }\n\n  private load() {\n    this.container.createEmbeddedView(this.template);\n  }\n}\n",
      "selector": "[clrFakeLoader]",
      "providers": [],
      "inputsClass": [
        {
          "name": "clrFakeLoader",
          "line": 17,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "load",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "modifierKind": [112]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        }
      ],
      "implements": ["OnInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "template",
            "type": "TemplateRef<any>"
          },
          {
            "name": "container",
            "type": "ViewContainerRef"
          },
          {
            "name": "loading",
            "type": "ClrLoading"
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "template",
            "type": "TemplateRef<any>",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "container",
            "type": "ViewContainerRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "loading",
            "type": "ClrLoading",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "FragmentLinkDirective",
      "id": "directive-FragmentLinkDirective-502e0d1af1f5c8f7b592ad7bcb43f9d8",
      "file": "src/website/src/app/icons/utils/fragment-link.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive, ElementRef } from '@angular/core';\nimport { ActiveFragmentService } from './active-fragment.service';\n\n@Directive({\n  selector: '[fragment]',\n})\nexport class FragmentLinkDirective {\n  constructor(el: ElementRef, activeFragmentService: ActiveFragmentService) {\n    activeFragmentService.fragmentLinks[el.nativeElement.getAttribute('fragment')] = el;\n  }\n}\n",
      "selector": "[fragment]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef"
          },
          {
            "name": "activeFragmentService",
            "type": "ActiveFragmentService"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "activeFragmentService",
            "type": "ActiveFragmentService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "HashListener",
      "id": "directive-HashListener-df61a2f6b474b8e49a6eba07175d1025",
      "file": "src/website/src/app/utils/hash-listener.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive, OnDestroy, OnInit, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[hash-listener]',\n  host: {\n    // '[style.position]': \"'relative'\",\n  },\n})\nexport class HashListener implements OnDestroy, OnInit {\n  constructor(private route: ActivatedRoute, @Inject(PLATFORM_ID) private platformId: Object) {\n    this.sub = this.route.fragment.subscribe(f => {\n      this.scrollToAnchor(f, false);\n    });\n  }\n\n  sub: Subscription;\n\n  ngOnInit() {\n    this.scrollToAnchor(this.route.snapshot.fragment, false);\n  }\n\n  scrollToAnchor(hash: string, smooth = true) {\n    if (hash && isPlatformBrowser(this.platformId)) {\n      const element = document.querySelector('#' + hash);\n      if (element) {\n        element.scrollIntoView({\n          behavior: smooth ? 'smooth' : 'auto',\n          block: 'start',\n        });\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n",
      "selector": "[hash-listener]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "sub",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30
        },
        {
          "name": "scrollToAnchor",
          "args": [
            {
              "name": "hash",
              "type": "string"
            },
            {
              "name": "smooth",
              "type": "",
              "defaultValue": "true"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "hash",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "smooth",
              "type": "",
              "defaultValue": "true",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "implements": ["OnDestroy", "OnInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 21,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "NewComponent",
      "id": "directive-NewComponent-1b2fec159262ee079cf330e09e03956f",
      "file": "src/website/src/app/news/counters/new-component.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[new-component]',\n})\nexport class NewComponent {}\n",
      "selector": "[new-component]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "Release",
      "id": "directive-Release-5b4abad6e0eefd5e065d6c28906cc20f",
      "file": "src/website/src/app/news/release/release.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[clrRelease]',\n})\nexport class Release {\n  @Input() clrRelease: string = '0.9.2';\n\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n",
      "selector": "[clrRelease]",
      "providers": [],
      "inputsClass": [
        {
          "name": "clrRelease",
          "defaultValue": "'0.9.2'",
          "line": 12,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "templateRef",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "templateRef",
            "type": "TemplateRef<any>"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "templateRef",
            "type": "TemplateRef<any>",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "ScrollSpy",
      "id": "directive-ScrollSpy-42d02f54a6b14a15efbbfc53edc02e80",
      "file": "src/website/src/app/utils/scrollspy.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive, Input, OnDestroy, OnInit, ContentChildren, QueryList, Renderer, ElementRef } from '@angular/core';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[scrollspy]',\n})\nexport class ScrollSpy implements OnDestroy, OnInit {\n  constructor(private renderer: Renderer) {}\n\n  @Input('scrollspy') scrollable: any;\n\n  anchors = [];\n\n  sub: Subscription;\n\n  @ContentChildren(RouterLinkWithHref, { descendants: true })\n  set links(routerLinks: QueryList<RouterLinkWithHref>) {\n    this.anchors = routerLinks.map(routerLink => '#' + routerLink.fragment);\n    this.sub = routerLinks.changes.subscribe(() => {\n      this.anchors = routerLinks.map(routerLink => '#' + routerLink.fragment);\n    });\n  }\n\n  @ContentChildren(RouterLinkWithHref, { descendants: true, read: ElementRef })\n  linkElements: QueryList<ElementRef>;\n\n  throttle = false;\n  scrollPosition: number;\n\n  handleEvent() {\n    this.scrollPosition = this.scrollable.scrollTop;\n    if (!this.throttle) {\n      window.requestAnimationFrame(() => {\n        const currentLinkIndex = this.findCurrentAnchor() || 0;\n        this.linkElements.forEach((link: ElementRef, index: number) => {\n          this.renderer.setElementClass(link.nativeElement, 'active', index === currentLinkIndex);\n        });\n        this.throttle = false;\n      });\n    }\n    this.throttle = true;\n  }\n\n  findCurrentAnchor() {\n    for (let i = this.anchors.length - 1; i >= 0; i--) {\n      const anchor = this.anchors[i];\n      if (\n        this.scrollable.querySelector(anchor) &&\n        this.scrollable.querySelector(anchor).offsetTop <= this.scrollPosition\n      ) {\n        return i;\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.scrollable.addEventListener('scroll', this);\n  }\n\n  ngOnDestroy() {\n    if (this.scrollable) {\n      this.scrollable.removeEventListener('scroll', this);\n    }\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n",
      "selector": "[scrollspy]",
      "providers": [],
      "inputsClass": [
        {
          "name": "scrollspy",
          "line": 20,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "anchors",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "linkElements",
          "type": "QueryList<ElementRef>",
          "optional": false,
          "description": "",
          "line": 35,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "RouterLinkWithHref, {descendants: true, read: ElementRef}"
            }
          ]
        },
        {
          "name": "scrollPosition",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "sub",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "throttle",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [
        {
          "name": "findCurrentAnchor",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 54
        },
        {
          "name": "handleEvent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 66
        }
      ],
      "implements": ["OnDestroy", "OnInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "renderer",
            "type": "Renderer"
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "renderer",
            "type": "Renderer",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "links": {
          "name": "links",
          "setSignature": {
            "name": "links",
            "type": "void",
            "args": [
              {
                "name": "routerLinks",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 27,
            "jsdoctags": [
              {
                "name": "routerLinks",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "SketchTemplateLinkDirective",
      "id": "directive-SketchTemplateLinkDirective-2dc0919756f2619cc019992277ed1eda",
      "file": "src/website/src/app/utils/sketch-template-link.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode":
        "import { Directive, Input, HostBinding } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport * as LATEST from '../../settings/global.json';\n\n@Directive({\n  selector: '[sketchTemplateLink]',\n  host: {\n    '[attr.target]': \"'_blank'\",\n  },\n})\nexport class SketchTemplateLinkDirective {\n  @Input() version = LATEST.latest_sketch_template;\n  @Input() type: 'light' | 'dark' = 'light';\n\n  @HostBinding('attr.href')\n  get href() {\n    return `${environment.sketch_base_url}/${this.type}/clarity-library-${this.type}-${this.version}.sketch`;\n  }\n}\n",
      "selector": "[sketchTemplateLink]",
      "providers": [],
      "inputsClass": [
        {
          "name": "type",
          "defaultValue": "'light'",
          "line": 19,
          "type": "\"light\" | \"dark\""
        },
        {
          "name": "version",
          "defaultValue": "LATEST.latest_sketch_template",
          "line": 18
        }
      ],
      "outputsClass": [],
      "hostBindings": [
        {
          "name": "attr.href",
          "line": 22
        }
      ],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    }
  ],
  "components": [
    {
      "name": "AccordionDemo",
      "id": "component-AccordionDemo-31ad388f698292dc7ccb47c8f0627c1f",
      "file": "src/website/src/app/documentation/demos/accordion/accordion.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-accordion-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./accordion.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-accordion-demo',\n  templateUrl: './accordion.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class AccordionDemo extends ClarityDocComponent {\n  constructor() {\n    super('accordion');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n  <article>\n    <h5 class=\"component-summary\" id=\"stepper-header\">\n      An accordion allows generic content to be collapsed and allows users to expand to show more detail.\n    </h5>\n\n    <div id=\"design-guidelines\">\n      <h3>Design Guidelines</h3>\n\n      <h3>Usage</h3>\n      <p>\n        Accordions are designed for use in the main content area. Use an accordion when you want to progressively\n        disclose data. This is useful when the set of information is large or you want to enable users to reveal more\n        complex or less frequently used data as necessary.\n      </p>\n    </div>\n\n    <div id=\"code-examples\">\n      <h3 id=\"examples\">Code &amp; Examples</h3>\n\n      <p>\n        Accordions by default only allow one panel to be open at a time. To enable multiple panels set\n        <code>clrAccordionMultiPanel=\"true\"</code>\n        on the <code>clr-accordion</code> component.\n      </p>\n\n      <p>\n        Leverage our optional <code>*clrIfExpanded</code> structural directive on the <code>clr-accordion-panel</code> to only\n        instantiate children when they are displayed.\n      </p>\n\n      <br />\n\n      <clr-angular-accordion-demo></clr-angular-accordion-demo>\n      <clr-api-accordion-demo></clr-api-accordion-demo>\n    </div>\n  </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "AlertAngularAppLevelAlertsDemo",
      "id": "component-AlertAngularAppLevelAlertsDemo-846753ea8d3bb9022f32f1c3aeff201c",
      "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-app-level-alerts.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-app-level-alerts-demo-angular",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-angular-app-level-alerts.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-alert-app-level-alerts-demo-angular',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-angular-app-level-alerts.demo.html',\n})\nexport class AlertAngularAppLevelAlertsDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n    ~ Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n    ~ This software is released under MIT license.\n    ~ The full license information can be found in LICENSE in the root directory of this project.\n-->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <clr-alerts>\n            <clr-alert [clrAlertType]=\"'info'\" [clrAlertAppLevel]=\"true\">\n                <clr-alert-item>\n                    <span class=\"alert-text\">\n                        View additional alerts using the pager\n                    </span>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn alert-action\">Fix</button>\n                    </div>\n                </clr-alert-item>\n            </clr-alert>\n            <clr-alert [clrAlertType]=\"'warning'\" [clrAlertAppLevel]=\"true\">\n                <clr-alert-item>\n                    <span class=\"alert-text\">\n                        Application level alerts should only be used for important messages.\n                    </span>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn alert-action\">Fix</button>\n                    </div>\n                </clr-alert-item>\n            </clr-alert>\n            <clr-alert [clrAlertType]=\"'danger'\" [clrAlertAppLevel]=\"true\">\n                <div class=\"alert-item\">\n                    <span class=\"alert-text\">\n                        Don't add too many of these alerts!\n                    </span>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn alert-action\">Fix</button>\n                    </div>\n                </div>\n            </clr-alert>\n        </clr-alerts>\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                    Delectus non beatae omnis esse quibusdam dolorum voluptatem\n                    reiciendis quaerat assumenda optio, porro expedita similique\n                    dolore quidem aliquam. Ullam, eaque enim nobis.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<pre><code clr-code-highlight=\"language-html\">\n    &lt;clr-alerts&gt;\n        &lt;clr-alert [clrAlertType]=&quot;'info'&quot; [clrAlertAppLevel]=&quot;true&quot;&gt;\n            &lt;clr-alert-item&gt;\n            &lt;span class=&quot;alert-text&quot;&gt;\n                This is the first app level alert.\n            &lt;/span&gt;\n            &lt;div class=&quot;alert-actions&quot;&gt;\n                &lt;button class=&quot;btn alert-action&quot;&gt;Fix&lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/clr-alert-item&gt;\n        &lt;/clr-alert&gt;\n        &lt;clr-alert [clrAlertType]=&quot;'danger'&quot; [clrAlertAppLevel]=&quot;true&quot;&gt;\n            &lt;clr-alert-item&gt;\n            &lt;span class=&quot;alert-text&quot;&gt;\n                This is a second app level alert.\n            &lt;/span&gt;\n            &lt;div class=&quot;alert-actions&quot;&gt;\n                &lt;button class=&quot;btn alert-action&quot;&gt;Fix&lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/clr-alert-item&gt;\n    &lt;/clr-alert&gt;\n&lt;/clr-alerts&gt;\n</code></pre>\n\n"
    },
    {
      "name": "AlertAngularAppLevelDemo",
      "id": "component-AlertAngularAppLevelDemo-19c3ec298e2158561ffc559101cea6d2",
      "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-app-level.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-app-level-demo-angular",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-angular-app-level.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-alert [clrAlertType]=\"'danger'\" [clrAlertAppLevel]=\"true\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is an app level alert.\n        </span>\n        <div class=\"alert-actions\">\n            <button class=\"btn alert-action\">Fix</button>\n        </div>\n    </clr-alert-item>\n</clr-alert>\n`;\n\n@Component({\n  selector: 'clr-alert-app-level-demo-angular',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-angular-app-level.demo.html',\n})\nexport class AlertAngularAppLevelDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <clr-alert [clrAlertType]=\"'danger'\" [clrAlertAppLevel]=\"true\">\n            <clr-alert-item>\n                <span class=\"alert-text\">\n                    This is an app level alert.\n                </span>\n                <div class=\"alert-actions\">\n                    <button class=\"btn alert-action\">Fix</button>\n                </div>\n            </clr-alert-item>\n        </clr-alert>\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Delectus non beatae omnis esse quibusdam dolorum voluptatem reiciendis quaerat assumenda optio, porro expedita similique dolore quidem aliquam. Ullam, eaque enim nobis.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertAngularCloseEventDemo",
      "id": "component-AlertAngularCloseEventDemo-c969a38cab38495a69fe74073a136535",
      "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-close-event-demo-angular",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-angular-close-event.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "closeMessage",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "tsExample",
          "defaultValue": "TS_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [
        {
          "name": "onClose",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-alert [clrAlertType]=\"'success'\" (clrAlertClosedChange)=\"onClose()\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert indicates a success!\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<div>{{closeMessage}}</div>\n`;\n\nconst TS_EXAMPLE = `\nexport class AlertAngularDemo  {\n    closeMessage: string = \"\";\n\n    onClose() {\n        this.closeMessage = \"The alert has been closed\";\n    }\n}\n`;\n\n@Component({\n  selector: 'clr-alert-close-event-demo-angular',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-angular-close-event.demo.html',\n})\nexport class AlertAngularCloseEventDemo {\n  closeMessage: string = '';\n  htmlExample = HTML_EXAMPLE;\n  tsExample = TS_EXAMPLE;\n\n  onClose(): void {\n    this.closeMessage = 'The alert has been closed';\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <clr-alert [clrAlertType]=\"'success'\" (clrAlertClosedChange)=\"onClose()\">\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            This alert indicates a success!\n                        </span>\n                    </clr-alert-item>\n                </clr-alert>\n                <div>{{closeMessage}}</div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"tsExample\" [clrLanguage]=\"'typescript'\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertAngularNotClosableDemo",
      "id": "component-AlertAngularNotClosableDemo-fcfcb9a64f96a3bdd186f687268b35ea",
      "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-not-closable.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-not-closable-demo-angular",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-angular-not-closable.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-alert [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert cannot be dismissed.\n        </span>\n        <div class=\"alert-actions\">\n            <clr-dropdown>\n                <button class=\"dropdown-toggle\" clrDropdownTrigger>\n                    Actions\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-right\">\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Shutdown</a>\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Delete</a>\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Reboot</a>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n        </div>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert [clrAlertType]=\"'warning'\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            Try closing this alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`;\n\n@Component({\n  selector: 'clr-alert-not-closable-demo-angular',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-angular-not-closable.demo.html',\n})\nexport class AlertAngularNotClosableDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <clr-alert [clrAlertClosable]=\"false\">\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            This alert cannot be dismissed.\n                        </span>\n                        <div class=\"alert-actions\">\n                            <clr-dropdown>\n                                <button class=\"dropdown-toggle\" clrDropdownTrigger>\n                                    Actions\n                                    <clr-icon shape=\"caret down\"></clr-icon>\n                                </button>\n                                <clr-dropdown-menu clrPosition=\"bottom-right\">\n                                    <a href=\"javascript://\" class=\"dropdown-item\" clrDropdownItem>Shutdown</a>\n                                    <a href=\"javascript://\" class=\"dropdown-item\" clrDropdownItem>Delete</a>\n                                    <a href=\"javascript://\" class=\"dropdown-item\" clrDropdownItem>Reboot</a>\n                                </clr-dropdown-menu>\n                            </clr-dropdown>\n                        </div>\n                    </clr-alert-item>\n                </clr-alert>\n                <clr-alert [clrAlertType]=\"'warning'\">\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            Try closing this alert.\n                        </span>\n                    </clr-alert-item>\n                </clr-alert>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                    in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertAngularSmallDemo",
      "id": "component-AlertAngularSmallDemo-0b8ee5078c09b959f9908a68f2fff00f",
      "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-small.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-small-demo-angular",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-angular-small.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-alert [clrAlertSizeSmall]=\"true\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a small alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert>\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a regular alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`;\n\n@Component({\n  selector: 'clr-alert-small-demo-angular',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-angular-small.demo.html',\n})\nexport class AlertAngularSmallDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <clr-alert [clrAlertSizeSmall]=\"true\">\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            This is a small alert.\n                        </span>\n                    </clr-alert-item>\n                </clr-alert>\n                <clr-alert>\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            This is a regular alert.\n                        </span>\n                    </clr-alert-item>\n                </clr-alert>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                    in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertAngularSuccessDemo",
      "id": "component-AlertAngularSuccessDemo-711609f09bbff3125d47989a834ef47a",
      "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-success.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-success-demo-angular",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-angular-success.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-alert [clrAlertType]=\"'success'\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert indicates success.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert>\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a default info alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`;\n\n@Component({\n  selector: 'clr-alert-success-demo-angular',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-angular-success.demo.html',\n})\nexport class AlertAngularSuccessDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <clr-alert [clrAlertType]=\"'success'\">\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            This alert indicates success.\n                        </span>\n                    </clr-alert-item>\n                </clr-alert>\n                <clr-alert>\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            This is a default info alert.\n                        </span>\n                    </clr-alert-item>\n                </clr-alert>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                    in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertAppLevelDemo",
      "id": "component-AlertAppLevelDemo-4671d8ef532bdbeddb66fab791204613",
      "file": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-demo-app-level",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-app-level.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample1",
          "defaultValue": "HTML_EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 137
        },
        {
          "name": "htmlExample2",
          "defaultValue": "HTML_EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 138
        },
        {
          "name": "htmlExample3",
          "defaultValue": "HTML_EXAMPLE_3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 139
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE_1 = `\n<div class=\"alert alert-app-level alert-danger\" style=\"margin-bottom:24px\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Danger\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-app-level alert-warning\" style=\"margin-bottom:24px\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Warning\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-app-level alert-info\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Info\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n`;\n\nconst HTML_EXAMPLE_2 = `\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level alert-info\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                </div>\n                <div class=\"alert-text\">\n                    A new update is now available. Upgrade to v.1234.\n                </div>\n                <div class=\"alert-actions\">\n                    <button class=\"btn alert-action\">Install Update</button>\n                </div>\n            </div>\n        </div>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\">\n            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n        </button>\n    </div>\n    <header class=\"header header-6\">\n        <div class=\"branding\">\n            <span class=\"title\">Header</span>\n        </div>\n    </header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <p>...</p>\n        </div>\n    </div>\n</div>\n`;\n\nconst HTML_EXAMPLE_3 = `\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level alert-warning\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"download\"></clr-icon>\n                </div>\n                <div class=\"alert-text\">\n                    A new update is now available. Upgrade to v.1234.\n                </div>\n                <div class=\"alert-actions\">\n                    <button class=\"btn alert-action\">Install Update</button>\n                </div>\n            </div>\n        </div>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\">\n            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n        </button>\n    </div>\n    <header class=\"header header-6\">\n        <div class=\"branding\">\n            <span class=\"title\">Header</span>\n        </div>\n    </header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <p>...</p>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-alert-demo-app-level',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-app-level.demo.html',\n})\nexport class AlertAppLevelDemo {\n  htmlExample1 = HTML_EXAMPLE_1;\n  htmlExample2 = HTML_EXAMPLE_2;\n  htmlExample3 = HTML_EXAMPLE_3;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <div class=\"alert alert-app-level alert-danger\" style=\"margin-bottom:24px\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        Alert Type: Danger\n                    </div>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn alert-action\">Action</button>\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n        <div class=\"alert alert-app-level alert-warning\" style=\"margin-bottom:24px\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        Alert Type: Warning\n                    </div>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn alert-action\">Action</button>\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n        <div class=\"alert alert-app-level alert-info\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        Alert Type: Info\n                    </div>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn alert-action\">Action</button>\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample1\"></clr-code-snippet>\n\n<h3>Examples</h3>\n<h6>1. App-Level Alert in the main-container</h6>\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <div class=\"alert alert-app-level alert-info\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        A new update is now available. Upgrade to v.1234.\n                    </div>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn alert-action\">Install Update</button>\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view\n                    of disruptive innovation via workplace diversity and empowerment.</p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample2\"></clr-code-snippet>\n\n<h6>2. Custom Icon in an App-Level Alert</h6>\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <div class=\"alert alert-app-level alert-warning\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"download\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        A new update is now available. Upgrade to v.1234.\n                    </div>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn alert-action\">Install Update</button>\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>Leverage agile frameworks to provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view\n                    of disruptive innovation via workplace diversity and empowerment.</p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample3\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertCardsDemo",
      "id": "component-AlertCardsDemo-f573741dc49d440538e7c0c827934745",
      "file": "src/website/src/app/documentation/demos/alert/static/alert-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-demo-cards",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-cards.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"card\">\n    <div class=\"card-block\">\n        <div class=\"alert alert-warning alert-sm\" role=\"alert\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        Use small alerts in a card.\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n        <div class=\"card-media-block wrap\">\n            <img class=\"card-media-image\" src=\"//placehold.it/60x60\" />\n            <div class=\"card-media-description\">\n                <span class=\"card-media-title\">Project B</span>\n                <span class=\"card-media-text\">Owner: Jane Doe</span>\n            </div>\n        </div>\n        <p class=\"card-text\">...</p>\n    </div>\n    <div class=\"card-footer\">\n        <a class=\"card-link\">Button One</a>\n        <a class=\"card-link\">Button Two</a>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-alert-demo-cards',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-cards.demo.html',\n})\nexport class AlertCardsDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <div class=\"alert alert-warning alert-sm\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                        </div>\n                        <div class=\"alert-text\">\n                            Use small alerts in a card.\n                        </div>\n                    </div>\n                </div>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n            </div>\n            <div class=\"card-media-block wrap\">\n                <img class=\"card-media-image\" src=\"//placehold.it/60x60\" />\n                <div class=\"card-media-description\">\n                    <span class=\"card-media-title\">Project B</span>\n                    <span class=\"card-media-text\">Owner: Jane Doe</span>\n                </div>\n            </div>\n            <p class=\"card-text\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n            </p>\n        </div>\n        <div class=\"card-footer\">\n            <a class=\"card-link\">Button One</a>\n            <a class=\"card-link\">Button Two</a>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertContentAreaDemo",
      "id": "component-AlertContentAreaDemo-ebfa7fe299dde4262bfb37371daaf7d2",
      "file": "src/website/src/app/documentation/demos/alert/static/alert-content-area.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-demo-content-area",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-content-area.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"content-area\">\n    <div class=\"alert alert-danger\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">\n                    This alert is at the top of the page.\n                </span>\n            </div>\n        </div>\n    </div>\n    <p>...</p>\n    <div class=\"alert alert-success\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">\n                    This alert is in the middle of the page.\n                </span>\n            </div>\n        </div>\n    </div>\n    <p>...</p>\n</div>\n`;\n\n@Component({\n  selector: 'clr-alert-demo-content-area',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-content-area.demo.html',\n})\nexport class AlertContentAreaDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <div class=\"alert alert-danger\">\n                    <div class=\"alert-items\">\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                This alert is at the top of the page.\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                    in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </p>\n                <div class=\"alert alert-success\">\n                    <div class=\"alert-items\">\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                This alert is in the middle of the page.\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                    in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertModalsDemo",
      "id": "component-AlertModalsDemo-8b66f4ecb146ebff467e7b751b2ab8a4",
      "file": "src/website/src/app/documentation/demos/alert/static/alert-modals.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-demo-modals",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-modals.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"modal static bump-down\">\n    <div class=\"modal-dialog\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            Alert in a modal.\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-header\">\n                <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n                <h3 class=\"modal-title\">I have a nice title</h3>\n            </div>\n            <div class=\"modal-body\">\n                <p>But not much to say...</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-alert-demo-modals',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-modals.demo.html',\n})\nexport class AlertModalsDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        <div class=\"modal static bump-down\">\n            <div class=\"modal-dialog\" role=\"dialog\" aria-hidden=\"true\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                        </button>\n                        <h3 class=\"modal-title\">I have a nice title</h3>\n                    </div>\n                    <div class=\"modal-body\">\n                        <div class=\"alert alert-danger\">\n                            <div class=\"alert-items\">\n                                <div class=\"alert-item static\">\n                                    <div class=\"alert-icon-wrapper\">\n                                        <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                                    </div>\n                                    <span class=\"alert-text\">\n                                        Alert in a modal.\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                        <p>But not much to say...</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                        <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-backdrop static\" aria-hidden=\"true\"></div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertsDemo",
      "id": "component-AlertsDemo-437f8dd6a2b3b0a42d7aee3bca12cd61",
      "file": "src/website/src/app/documentation/demos/alert/alerts.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{ provide: ÇlrFocusTrapTracker, useClass: DisableFocusTrap }"
        },
        {
          "name": "{ provide: FOCUS_ON_VIEW_INIT, useValue: false }"
        }
      ],
      "selector": "clr-alerts-demo",
      "styleUrls": ["./alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alerts.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "basic",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "expanded",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\nimport { ÇlrFocusTrapTracker, FOCUS_ON_VIEW_INIT } from '@clr/angular';\nimport { DisableFocusTrap } from '../../utils/disable-focus-trap';\n\n@Component({\n  selector: 'clr-alerts-demo',\n  templateUrl: './alerts.demo.html',\n  styleUrls: ['./alerts.demo.scss'],\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n  providers: [\n    { provide: ÇlrFocusTrapTracker, useClass: DisableFocusTrap },\n    { provide: FOCUS_ON_VIEW_INIT, useValue: false },\n  ],\n})\nexport class AlertsDemo extends ClarityDocComponent {\n  expanded: boolean = false;\n  basic: boolean = true;\n\n  constructor() {\n    super('alerts');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "./alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 26
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"true\">\n    <article>\n        <h5 class=\"component-summary\" id=\"alerts_header\">Alerts are banners that communicate a message with a severity attached to it. They grab the user’s attention to provide critical information needed in context.</h5>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"two_types\">Two Main Types</h3>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"wrapper-thing\">\n                                    <clr-alert clrAlertType=\"success\" [clrAlertClosable]=\"false\">\n                                        <clr-alert-item>\n                                            <span class=\"alert-text\">\n                                                Your container has been created.\n                                            </span>\n                                        </clr-alert-item>\n                                    </clr-alert>\n\n                                    <clr-alert clrAlertType=\"info\" [clrAlertClosable]=\"false\">\n                                        <clr-alert-item>\n                                            <span class=\"alert-text\">\n                                                You can customize your VM in the Settings Panel.\n                                            </span>\n                                        </clr-alert-item>\n                                    </clr-alert>\n\n                                    <clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\">\n                                        <clr-alert-item>\n                                            <span class=\"alert-text\">\n                                                This feature is still under development.\n                                            </span>\n                                        </clr-alert-item>\n                                    </clr-alert>\n\n                                    <clr-alert clrAlertType=\"danger\" [clrAlertClosable]=\"false\">\n                                        <clr-alert-item>\n                                            <span class=\"alert-text\">\n                                                Your license is about to expire.\n                                            </span>\n                                        </clr-alert-item>\n                                    </clr-alert>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Standard Alerts</h6>\n                            <p>\n                                Standard alerts are used in the context of an application <b>either in the content area itself or within components</b>.\n                            </p>\n                            <br>\n                            <p>\n                                There are <b>four different sub-types of standard alerts</b> success, info, warning, and error.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img app-alert-box\">\n                                <clr-alert clrAlertType=\"info\" [clrAlertAppLevel]=\"true\"\n                                    [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            You can customize your VM in the Settings Panel.\n                                        </span>\n                                    </clr-alert-item>\n                                </clr-alert>\n\n                                <clr-alert clrAlertType=\"warning\" [clrAlertAppLevel]=\"true\"\n                                    [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            This feature is still under development.\n                                        </span>\n                                    </clr-alert-item>\n                                </clr-alert>\n\n                                <clr-alert clrAlertType=\"danger\" [clrAlertAppLevel]=\"true\"\n                                    [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            Your license is about to expire.\n                                        </span>\n                                    </clr-alert-item>\n                                </clr-alert>\n\n                                <!-- This is a silly hack to keep the height of the boxes nearly equal in most cases but\n                                we don't really support success app level so this must go. -->\n                                <clr-alert clrAlertType=\"success\" [clrAlertAppLevel]=\"true\"\n                                    [clrAlertClosable]=\"false\" style=\"visibility: hidden\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            Your container has been created.\n                                        </span>\n                                    </clr-alert-item>\n                                </clr-alert>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>App-Level Alerts</h6>\n                            <p>\n                                App-level alerts are used in the <b>global context of an application</b>. They are placed at the very top of all content and navigation.\n                            </p>\n                            <p>\n                                There are <b>three different sub-types of app-level alerts</b> info, warning, and error.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"standard-alerts\">Standard Alerts</h3>\n\n            <h5>Four different sub-types</h5>\n\n            <p>There are four different sub-types of standard alerts: error, warning, info, and success.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img type-alert-box\">\n                                <clr-alert clrAlertType=\"danger\" [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            Error\n                                        </span>\n                                        <div class=\"alert-actions\">\n                                            <a class=\"alert-action\" href=\"javascript://\">Acknowledge</a>\n                                        </div>\n                                    </clr-alert-item>\n                                </clr-alert>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Error</h6>\n                            <p>\n                                Reserved for errors, malfunctions, as well as critical issues like license expiration.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img type-alert-box\">\n                                <clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            Warning\n                                        </span>\n                                        <div class=\"alert-actions\">\n                                            <a class=\"alert-action\" href=\"javascript://\">Acknowledge</a>\n                                        </div>\n                                    </clr-alert-item>\n                                </clr-alert>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Warning</h6>\n                            <p>\n                                Reserved for warnings: a message that needs the user attention and acknowledgment but might not cause errors.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img type-alert-box\">\n                                <clr-alert clrAlertType=\"info\" [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            Info\n                                        </span>\n                                        <div class=\"alert-actions\">\n                                            <a class=\"alert-action\" href=\"javascript://\">Acknowledge</a>\n                                        </div>\n                                    </clr-alert-item>\n                                </clr-alert>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Info</h6>\n                            <p>\n                                Provides info to users in context. Shouldn’t be overused to replace regular content.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img type-alert-box\">\n                                <clr-alert clrAlertType=\"success\" [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            Success\n                                        </span>\n                                        <div class=\"alert-actions\">\n                                            <a class=\"alert-action\" href=\"javascript://\">Acknowledge</a>\n                                        </div>\n                                    </clr-alert-item>\n                                </clr-alert>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Success</h6>\n                            <p>\n                                Reserved to provide to a static persistent success message.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h4 id=\"order-in-context\">Order in context</h4>\n\n            <p>\n                Standard alerts convey different levels of severity and urgency. They’re ordered by the urgency in which the user needs to pay attention to: error, warning, info, then success.\n            </p>\n            <p>\n                In the case there are multiple of each sub-type, all of them are shown before another sub-type is reached. For example, multiple errors are shown before the first warning is.\n            </p>\n\n            <h4 id=\"style\">Style</h4>\n\n            <p>The consistency in the style of the standard alerts allows users to quickly identify them, pay attention to them, and acknowledge them.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <h6>Typography</h6>\n                    <p>\n                        Depending on the sub-type of a standard alert, make sure to communicate a clear, concise, and actionable message.\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <h6>Size</h6>\n                    <p>\n                        There are two sizes of standard alerts: default and compact. Use the compact alert only in places where vertical space is scarce and information density is needed. Cards provide a good example here.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <clr-alert clrAlertType=\"info\" [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            Info\n                                        </span>\n                                        <div class=\"alert-actions\">\n                                            <a class=\"alert-action\" href=\"javascript://\">Acknowledge</a>\n                                        </div>\n                                    </clr-alert-item>\n                                </clr-alert>\n                                <clr-alert clrAlertType=\"info\" [clrAlertClosable]=\"false\" [clrAlertSizeSmall]=\"true\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            Compact Info\n                                        </span>\n                                    </clr-alert-item>\n                                </clr-alert>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h4 id=\"placement\">Placement</h4>\n\n            <p>Standard alerts could be placed in multiple different contexts including inside of components.</p>\n\n            <h6>Modals</h6>\n\n            <div class=\"in-place-takeover\">\n                <div class=\"clr-example\">\n                    <div class=\"backdrop-example-container\">\n                        <div *ngIf=\"!basic\" style=\"margin: 0 auto; text-align: center\">\n                            <button class=\"btn btn-outline btn-inverse\" (click)=\"basic = true\">Show modal</button>\n                        </div>\n                        <clr-modal [(clrModalOpen)]=\"basic\" [clrModalStaticBackdrop]=\"true\">\n                            <h3 class=\"modal-title\">Deleting File</h3>\n                            <div class=\"modal-body\">\n                                <clr-alert clrAlertType=\"danger\" [clrAlertClosable]=\"false\">\n                                    <clr-alert-item>\n                                        <span class=\"alert-text\">\n                                            The file “mockups.sketch” is currently open and cannot be deleted.\n                                        </span>\n                                    </clr-alert-item>\n                                </clr-alert>\n                                <p>Are you sure you want to delete the file <b>“mockups.sketch”</b>?</p>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button class=\"btn btn-outline\" type=\"button\" (click)=\"basic = false\">Keep File</button>\n                                <button class=\"btn btn-danger disabled\" type=\"button\">Delete</button>\n                            </div>\n                        </clr-modal>\n                    </div>\n                </div>\n            </div>\n\n            <p>\n                Alerts could appear within modals. It is recommended that no more than one alert appear within a modal. Their function should not be to validate, validation should be done inline and closer to the error itself.\n            </p>\n\n            <p>&nbsp;</p>\n\n            <h6>Cards</h6>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <p>\n                        It is recommended to use concise language as you share an alert within a card. It is also recommended to use a compact-size alert. The focus of the alert should be on its content not on the alert appearing in it.\n                    </p>\n                    <p>\n                        It is also recommended to have an alert at the very top of a card, on top of its title. An alert is meant to attract the attention of the user.\n                    </p>\n                    <p>\n                        Using more than one alert within a card distracts the user and dilutes the importance of the alerts displayed.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n\n                                <div class=\"card\">\n                                    <div class=\"card-block\">\n                                        <clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\"\n                                            [clrAlertSizeSmall]=\"true\">\n                                            <clr-alert-item>\n                                                <span class=\"alert-text\">\n                                                    Data might be outdated. Last update: 16 hours ago.\n                                                </span>\n                                            </clr-alert-item>\n                                        </clr-alert>\n                                        <div class=\"card-title\" style=\"text-align: left;padding-top:4px\">\n                                            Memory\n                                        </div>\n                                        <div style=\"width: 100%; padding-left: 10%; text-align: center\">\n                                            <div style=\"margin-bottom:6px\">\n                                                <span\n                                                    style=\"font-size: 28px;line-height: 28px;padding-right: 5px\">\n                                                    10.05\n                                                </span>\n                                                <span>GB free</span>\n                                            </div>\n                                            <div class=\"progress success\"\n                                                style=\"position: static;margin: 0;text-align: left;left: auto;\">\n                                                <progress max=\"100\" value=\"23\" data-displayval=\"23%\"\n                                                    style=\"position: static;display: block\"></progress>\n                                            </div>\n                                            <div style=\"margin:8px 0 24px\">\n                                                <span>\n                                                    1.94 GB used | 11.99 GB total\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-footer\" style=\"text-align: left\">\n                                        <button class=\"btn btn-sm btn-link\">See All Statistics</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"app-level-alerts\">App-Level Alerts</h3>\n\n            <h4>Three different subtypes</h4>\n\n            <p>There are three sub-types of app-level alerts: error, warning, and info.</p>\n\n            <div class=\"clrweb-DoxVersusBox\">\n                <div class=\"clrweb-DoxVersusBox-pin\">\n                    <clr-icon shape=\"pin\"></clr-icon>\n                </div>\n                <div class=\"clrweb-DoxVersusBox-items\">\n                    <div class=\"clrweb-DoxVersusBox-itemWrapper\">\n                        <div class=\"clrweb-DoxVersusBox-item\">\n                            <p><b>Why no success app-level alert?</b></p>\n                            <p>App-level alerts are global in nature. Reporting a success of an operation should either be communicated within context or as a notification message.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h4 id=\"order-in-context\">Order in context</h4>\n\n            <p>App-level alerts follow the <b>same urgency order</b> as standard alerts: error, warning, and info.</p>\n\n            <h4 id=\"app-level-placement\">Placement</h4>\n\n            <p>App-level alerts are placed at the very top of the global context. They should not be placed in any other configuration. Their purpose is to provide global alerts available and relating to the full context of the overall application.</p>\n\n            <div class=\"clr-row\" style=\"margin-top: 24px\">\n                <div class=\"clr-col-12\">\n                    <img alt=\"App-level alerts appear at the very top of your application\" class=\"clrweb-Img\" src=\"assets/images/documentation/alerts/app_level_placement.png\">\n                </div>\n            </div>\n        </div>\n\n        <div id=\"accessibility\">\n            <h2>Accessibility</h2>\n            <clr-alert [clrAlertType]=\"'warning'\" [clrAlertClosable]=\"false\">\n                <clr-alert-item>\n                    <span class=\"alert-text\">\n                        Actionable controls inside dynamically genrated alerts are not accessible to screen reader users!\n                        For this reason Clarity does not recommend using dropdowns, buttons, links inside alerts that appear as dynamic notifications.\n                    </span>\n                </clr-alert-item>\n            </clr-alert>\n            <p>Accessibility problems related to using actionable controls inside dynamically generated alerts:</p>\n            <ul class=\"list\">\n                <li>\n                    They are announced as part of the alert message, which is out of context and may be confusing. For example, the following alert will be announced as \"success acknowledge\":\n                    <div class=\"clr-row\">\n                        <div class=\"clr-col-12 clr-col-md-6\">\n                            <clr-alert clrAlertType=\"success\" [clrAlertClosable]=\"false\">\n                                <clr-alert-item>\n                                    <span class=\"alert-text\">\n                                        Success\n                                    </span>\n                                    <div class=\"alert-actions\">\n                                        <a class=\"alert-action\" href=\"javascript://\">Acknowledge</a>\n                                    </div>\n                                </clr-alert-item>\n                            </clr-alert>\n                        </div>\n                    </div>\n                </li>\n                <li>There is no way for the user to directly interact with the announced action controls.</li>\n            </ul>\n\n            <p>It is acceptable to use actions in static alerts. The following guidlines are recommended:</p>\n            <ul class=\"list\">\n                <li>Controls can be <code class=\"clr-code\">dropdown</code>, <code class=\"clr-code\">button</code> or <code class=\"clr-code\">link</code> elements.</li>\n                <li>Buttons should be used for actions, links for navigation.</li>\n                <li>The text for these controls should be as descriptive as possible.</li>\n            </ul>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <p id=\"alert-classes\">Several classes and elements are required to implement the Clarity alert layout. A table of these classes and elements with a brief description of each follows:</p>\n\n            <table class=\"table table-vertical\">\n                <tbody>\n                    <tr>\n                        <th style=\"width: 100px\">.alert</th>\n                        <td>This class is a wrapper around <code class=\"clr-code\">.alert-items</code> and the\n                <code class=\"clr-code\">.close</code> button. Place the <code class=\"clr-code\">.close</code> button before the alert items.</td>\n                    </tr>\n                    <tr>\n                        <th>.alert-items</th>\n                        <td>This class is a wrapper around one or more <code class=\"clr-code\">.alert-item</code> elements.</td>\n                    </tr>\n                    <tr>\n                        <th>.alert-item</th>\n                        <td>This class is a wrapper around <code class=\"clr-code\">.alert-text</code>, <code class=\"clr-code\">.alert-icon-wrapper</code>, and <code class=\"clr-code\">.alert-actions</code>.</td>\n                    </tr>\n                    <tr>\n                        <th>.alert-icon-wrapper</th>\n                        <td><code class=\"clr-code\">.alert-icon-wrapper</code> contains a <code class=\"clr-code\">clr-icon</code> with the classname <code class=\"clr-code\">.alert-icon</code> applied to it. The icons used for the different alert types of success, danger, warning, and info are, respectively: <code class=\"clr-code\">check-circle</code>, <code class=\"clr-code\">exclamation-circle</code>, <code class=\"clr-code\">exclamation-triangle</code>, and  <code class=\"clr-code\">info-circle</code>.</td>\n                    </tr>\n                    <tr>\n                        <th>.alert-actions</th>\n                        <td><code class=\"clr-code\">.alert-actions</code> can consist of dropdowns or links. Each action should extend the <code class=\"clr-code\">.alert-action</code> class.</td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <h3 id=\"types\">Types</h3>\n\n            <p>Clarity has error, warning, information, and success alerts denoted by the following classes:</p>\n\n            <ul class=\"list\">\n                <li>.alert-danger</li>\n                <li>.alert-warning</li>\n                <li>.alert-info</li>\n                <li>.alert-success</li>\n            </ul>\n\n            <clr-alert-demo-styles></clr-alert-demo-styles>\n\n            <h3 id=\"placement\">Placement</h3>\n\n            <h5 id=\"alerts-in-the-content-area\">Alerts in the Content Area</h5>\n            <clr-alert-demo-content-area></clr-alert-demo-content-area>\n\n            <h5 id=\"alerts-in-cards\">Alerts in Cards</h5>\n            <clr-alert-demo-cards></clr-alert-demo-cards>\n\n            <h5 id=\"alerts-in-modals\">Alerts in Modals</h5>\n            <clr-alert-demo-modals></clr-alert-demo-modals>\n\n            <h3 id=\"size\">Size</h3>\n\n            <p>Use the <code class=\"clr-code\">.alert-sm</code> class with <code class=\"clr-code\">.alert</code> for an alert 24 pixels in height. The default is 36 pixels.</p>\n\n            <clr-alert-demo-sizes></clr-alert-demo-sizes>\n\n            <h3 id=\"app-level-alerts\">App-Level Alerts</h3>\n\n            <h6 id=\"alert-app-level\">.alert-app-level</h6>\n\n            <p>This class must be applied with <code class=\"clr-code\">.alert</code> to render an app-level alert.</p>\n\n            <clr-alert-demo-app-level></clr-alert-demo-app-level>\n\n            <h2 id=\"angular-component\">Angular Component</h2>\n\n            <h3 id=\"summary-of-options\">Summary of Options</h3>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input</th>\n                    <th class=\"left hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrAlertClosable]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: true</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">true, false</td>\n                    <td class=\"hidden-xs-down\">true</td>\n                    <td class=\"left\">If false, the alert will not be closable by clicking on the top-right \"x\".</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[(clrAlertClosed)]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">true, false</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Two-way binding on the state of the alert: opened or closed.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrAlertType]</b>\n                        <div class=\"hidden-sm-up\">Type: String</div>\n                        <div class=\"hidden-sm-up\">Default:<br />\"info\"</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\"info\", \"warning\", \"success\" and \"danger\"</td>\n                    <td class=\"hidden-xs-down\">\"info\"</td>\n                    <td class=\"left\">Sets the type of the alert.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrAlertSizeSmall]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">true, false</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">If true, renders a small alert.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrAlertIcon]</b>\n                        <div class=\"hidden-sm-up\">Type: String</div>\n                        <div class=\"hidden-sm-up\">Default: varies</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">icon name as string</td>\n                    <td class=\"hidden-xs-down\">varies</td>\n                    <td class=\"left\">View <a routerLink=\"/icons\">supported icons</a>.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrAlertAppLevel]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">true, false</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">If true, renders an app-level alert.</td>\n                </tr>\n\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrPolite]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: true</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">true, false</td>\n                    <td class=\"hidden-xs-down\">true</td>\n                    <td class=\"left\">aria-live will be set to \"polite\"</td>\n                </tr>\n\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrAssertive]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">true, false</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">aria-live will be set to \"assertive\"</td>\n                </tr>\n\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrOff]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">true, false</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">aria-live will be set to \"off\"</td>\n                </tr>\n\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrCloseButtonAriaLabel]</b>\n                        <div class=\"hidden-sm-up\">Type: String</div>\n                        <div class=\"hidden-sm-up\">Default: Close alert</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">Close alert</td>\n                    <td class=\"hidden-xs-down\">Close alert</td>\n                    <td class=\"left\">Overwrite default aria-label for close alert button</td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h5 id=\"examples\">Examples</h5>\n\n            <h6 id=\"clralertclosable-set-to-false-default-value-is-true\">1. clrAlertClosable set to false. Default value is true.</h6>\n\n            <clr-alert-not-closable-demo-angular></clr-alert-not-closable-demo-angular>\n\n            <h6 id=\"clralerttype-set-to-alert-success\">2. clrAlertType set to alert-success. Default value is alert-info. Accepts values same as the static alert type classes.</h6>\n\n            <clr-alert-success-demo-angular></clr-alert-success-demo-angular>\n\n            <h6 id=\"clralertsizesmall-set-to-true\">3. clrAlertSizeSmall set to true. Default value is false.</h6>\n\n            <clr-alert-small-demo-angular></clr-alert-small-demo-angular>\n\n            <h6 id=\"binding-to-closedchange-event\">4. Binding to the clrAlertClosedChange event.</h6>\n\n            <clr-alert-close-event-demo-angular></clr-alert-close-event-demo-angular>\n\n            <h6 id=\"applevelalert-set-to-true\">5. clrAlertAppLevel set to true. Default is false.</h6>\n\n            <clr-alert-app-level-demo-angular></clr-alert-app-level-demo-angular>\n\n            <h6 id=\"applevelalert-pager\">6. Multiple app level alerts can be displayed with previous and next buttons.</h6>\n\n            <clr-alert-app-level-alerts-demo-angular></clr-alert-app-level-alerts-demo-angular>\n\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "AlertSizesDemo",
      "id": "component-AlertSizesDemo-a09f9d20f3a3fbbca203d44b9e4ccc6e",
      "file": "src/website/src/app/documentation/demos/alert/static/alert-sizes.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-demo-sizes",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-sizes.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"alert alert-danger\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\" role=\"alert\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                This is an alert with 36px height.\n            </span>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-success alert-sm\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                This is an alert with 24px height.\n            </span>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n`;\n\n@Component({\n  selector: 'clr-alert-demo-sizes',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-sizes.demo.html',\n})\nexport class AlertSizesDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <div class=\"alert alert-danger\">\n                    <div class=\"alert-items\">\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                This is an alert with 36px height.\n                            </span>\n                        </div>\n                    </div>\n                    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                    </button>\n                </div>\n                <div class=\"alert alert-success alert-sm\">\n                    <div class=\"alert-items\">\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                This is an alert with 24px height.\n                            </span>\n                        </div>\n                    </div>\n                    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AlertStylesDemo",
      "id": "component-AlertStylesDemo-fa78a1d7aae792fd2eb3de1755dad359",
      "file": "src/website/src/app/documentation/demos/alert/static/alert-styles.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-alert-demo-styles",
      "styleUrls": ["../alerts.demo.scss"],
      "styles": [],
      "templateUrl": ["./alert-styles.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 112
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"alert alert-danger\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"alert alert-warning\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right open\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-info\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <a href=\"...\" class=\"alert-action\">Acknowledge</a>\n                <a href=\"...\" class=\"alert-action\">Reset to green</a>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-success\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-alert-demo-styles',\n  styleUrls: ['../alerts.demo.scss'],\n  templateUrl: './alert-styles.demo.html',\n})\nexport class AlertStylesDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .card {\n    max-width: $clr_baselineRem_600px;\n  }\n}\n\n.app-alert-box {\n  clr-alert {\n    display: block;\n    padding-top: $clr_baselineRem_6px;\n  }\n}\n\n.type-alert-box > * {\n  display: block;\n  margin-top: -1 * $clr_baselineRem_6px;\n}\n",
          "styleUrl": "../alerts.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div ngNonBindable class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <div class=\"alert alert-danger\">\n                    <div class=\"alert-items\">\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                            </span>\n                            <div class=\"alert-actions\">\n                                <div class=\"alert-action dropdown bottom-right\">\n                                    <button class=\"dropdown-toggle\">\n                                        Actions\n                                        <clr-icon shape=\"caret down\"></clr-icon>\n                                    </button>\n                                    <div class=\"dropdown-menu\">\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Shutdown</a>\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Suspend</a>\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Reboot</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                            </span>\n                            <div class=\"alert-actions\">\n                                <div class=\"alert-action dropdown bottom-right\">\n                                    <button class=\"dropdown-toggle\">\n                                        Actions\n                                        <clr-icon shape=\"caret down\"></clr-icon>\n                                    </button>\n                                    <div class=\"dropdown-menu\">\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Shutdown</a>\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Suspend</a>\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Reboot</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"alert alert-warning\">\n                    <div class=\"alert-items\">\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                            </span>\n                            <div class=\"alert-actions\">\n                                <div class=\"alert-action dropdown bottom-right open\">\n                                    <button class=\"dropdown-toggle\">\n                                        Actions\n                                        <clr-icon shape=\"caret down\"></clr-icon>\n                                    </button>\n                                    <div class=\"dropdown-menu\">\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Shutdown</a>\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Suspend</a>\n                                        <a class=\"dropdown-item\" href=\"javascript://\">Reboot</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                    </button>\n                </div>\n                <div class=\"alert alert-info\">\n                    <div class=\"alert-items\">\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                            </span>\n                            <div class=\"alert-actions\">\n                                <a href=\"javascript://\" class=\"alert-action\">Acknowledge</a>\n                                <a href=\"javascript://\" class=\"alert-action\">Reset to green</a>\n                            </div>\n                        </div>\n                    </div>\n                    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                    </button>\n                </div>\n                <div class=\"alert alert-success\">\n                    <div class=\"alert-items\">\n                        <div class=\"alert-item static\">\n                            <div class=\"alert-icon-wrapper\">\n                                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n                            </div>\n                            <span class=\"alert-text\">\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "AngularAccordionDemo",
      "id": "component-AngularAccordionDemo-45538e4627c24500e6b7d5909a36f574",
      "file": "src/website/src/app/documentation/demos/accordion/angular-accordion.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-angular-accordion-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./angular-accordion.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "example",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst example = `\n<clr-accordion>\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 1</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 1</clr-accordion-content>\n  </clr-accordion-panel>\n\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 2</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 2</clr-accordion-content>\n  </clr-accordion-panel>\n\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 3</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 3</clr-accordion-content>\n  </clr-accordion-panel>\n</clr-accordion>\n`;\n\n@Component({\n  selector: 'clr-angular-accordion-demo',\n  templateUrl: './angular-accordion.demo.html',\n})\nexport class AngularAccordionDemo {\n  example = example;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<clr-accordion>\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 1</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 1</clr-accordion-content>\n  </clr-accordion-panel>\n\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 2</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 2</clr-accordion-content>\n  </clr-accordion-panel>\n\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 3</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 3</clr-accordion-content>\n  </clr-accordion-panel>\n</clr-accordion>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "AngularStepperApiDemo",
      "id": "component-AngularStepperApiDemo-c555e32b11adb8547704e464890b3ee8",
      "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-api.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-angular-stepper-api-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./angular-stepper-api.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-angular-stepper-api-demo',\n  templateUrl: './angular-stepper-api.demo.html',\n})\nexport class AngularStepperApiDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<h3 id=\"summary-of-options\">Summary of Options</h3>\n\n<h4><code class=\"clr-code\">[clrStepper]</code> directive</h4>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th class=\"left\">Input / Output</th>\n      <th class=\"left clr-hidden-xs-down\">Values</th>\n      <th class=\"left clr-hidden-xs-down\">Default</th>\n      <th class=\"left\">Effect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"left\">\n        <b>[clrInitialStep]</b>\n        <div class=\"clr-hidden-sm-up\">Type: String</div>\n        <div class=\"clr-hidden-sm-up\">Default: ''</div>\n      </td>\n      <td class=\"left clr-hidden-xs-down\">String</td>\n      <td class=\"left clr-hidden-xs-down\">''</td>\n      <td class=\"left\">\n        Expects the name of the starting <code>formGroupName</code> or <code>ngModelGroup</code> to initialize stepper.\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<h4><code class=\"clr-code\">&lt;clr-stepper-panel&gt;</code> component</h4>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th class=\"left\">Directive</th>\n      <th class=\"left clr-hidden-xs-down\">Values</th>\n      <th class=\"left clr-hidden-xs-down\">Default</th>\n      <th class=\"left\">Effect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"left\">\n        <b>[formGroupName | ngModelGroup]</b>\n        <div class=\"clr-hidden-sm-up\">Type: FormGroupName | NgModelGroup</div>\n        <div class=\"clr-hidden-sm-up\">Default: ''</div>\n      </td>\n      <td class=\"left clr-hidden-xs-down\">FormGroupName | NgModelGroup</td>\n      <td class=\"left clr-hidden-xs-down\">''</td>\n      <td class=\"left\">\n        Expects a <code>formGroupName</code> or <code>ngModelGroup</code> directive to initialize the stepper panel.\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<h4><code class=\"clr-code\">[clrStepButton]</code> directive</h4>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th class=\"left\">Input / Output</th>\n      <th class=\"left clr-hidden-xs-down\">Values</th>\n      <th class=\"left clr-hidden-xs-down\">Default</th>\n      <th class=\"left\">Effect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"left\">\n        <b>[clrStepButton]</b>\n        <div class=\"clr-hidden-sm-up\">Type: ClrStepButtonType | string</div>\n        <div class=\"clr-hidden-sm-up\">Default: ClrStepButtonType.Next | 'next'</div>\n      </td>\n      <td class=\"left clr-hidden-xs-down\">ClrStepButtonType | string</td>\n      <td class=\"left clr-hidden-xs-down\">ClrStepButtonType.Next | 'next'</td>\n      <td class=\"left\">\n        Expects a string value of 'next' or 'submit' to determine if button should navigate to next step or submit form.\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<h4><code class=\"clr-code\">*clrIfExpanded</code> directive</h4>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th class=\"left\">Input/Output</th>\n      <th class=\"clr-hidden-xs-down\">Values</th>\n      <th class=\"clr-hidden-xs-down\">Default</th>\n      <th class=\"left\">Effect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"left\">\n        <b>[(clrIfExpanded)]</b>\n        <div class=\"clr-hidden-sm-up\">Type: boolean</div>\n        <div class=\"clr-hidden-sm-up\">Default: false</div>\n      </td>\n      <td class=\"clr-hidden-xs-down\">Boolean</td>\n      <td class=\"clr-hidden-xs-down\">false</td>\n      <td class=\"left\">\n        Two-way binding on the expanded/collapsed state of the node.\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
    },
    {
      "name": "AngularStepperReactiveDemo",
      "id": "component-AngularStepperReactiveDemo-ee7ed114329f4ea55fcb2a190454b62b",
      "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-angular-stepper-reactive-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./angular-stepper-reactive.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "componentExample",
          "defaultValue": "componentExample",
          "type": "",
          "optional": false,
          "description": "",
          "line": 91
        },
        {
          "name": "form",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 92
        },
        {
          "name": "templateExample",
          "defaultValue": "templateExample",
          "type": "",
          "optional": false,
          "description": "",
          "line": 90
        }
      ],
      "methodsClass": [
        {
          "name": "submit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 111
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nconst templateExample = `\n<form clrStepper [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <clr-stepper-panel formGroupName=\"name\">\n    <clr-step-title>Legal Name</clr-step-title>\n    <clr-step-description>Description goes here.</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      <clr-input-container>\n        <label>First Name</label>\n        <input clrInput formControlName=\"first\" />\n        <clr-control-error *clrIfError=\"'required'\">First Name Required</clr-control-error>\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Last Name</label>\n        <input clrInput formControlName=\"last\" />\n        <clr-control-error *clrIfError=\"'required'\">Last Name Required</clr-control-error>\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel formGroupName=\"contact\">\n    <clr-step-title>Contact Information</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      ...\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel formGroupName=\"password\">\n    <clr-step-title>Password</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      ...\n      <button clrStepButton=\"submit\">submit</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n</form>\n`;\n\nconst componentExample = `\nimport { Component } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'clr-angular-stepper-reactive-demo',\n  templateUrl: './angular-stepper-reactive.demo.html',\n})\nexport class AngularStepperReactiveDemo {\n  form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      name: this.formBuilder.group({\n        first: ['Luke', Validators.required],\n        last: ['Skywalker', Validators.required],\n      }),\n      contact: this.formBuilder.group({\n        email: [],\n        phone: [],\n      }),\n      password: this.formBuilder.group({\n        password: [],\n        confirm: [],\n      }),\n    });\n  }\n\n  submit() {\n    console.log('reactive form submit', this.form.value);\n  }\n}`;\n\n@Component({\n  selector: 'clr-angular-stepper-reactive-demo',\n  templateUrl: './angular-stepper-reactive.demo.html',\n})\nexport class AngularStepperReactiveDemo {\n  templateExample = templateExample;\n  componentExample = componentExample;\n  form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      name: this.formBuilder.group({\n        first: ['', Validators.required],\n        last: ['', Validators.required],\n      }),\n      contact: this.formBuilder.group({\n        email: [],\n        phone: [],\n      }),\n      password: this.formBuilder.group({\n        password: [],\n        confirm: [],\n      }),\n    });\n  }\n\n  submit() {\n    console.log('reactive form submit', this.form.value);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "formBuilder",
            "type": "FormBuilder"
          }
        ],
        "line": 92,
        "jsdoctags": [
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<h4>Angular - Reactive Forms</h4>\n\n<button (click)=\"form.reset()\" class=\"btn\">Reset Stepper</button>\n\n<form clrStepper [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <clr-stepper-panel formGroupName=\"name\">\n    <clr-step-title>Legal Name</clr-step-title>\n    <clr-step-description\n      >Description goes here.</clr-step-description\n    >\n    <clr-step-content *clrIfExpanded>\n      <clr-input-container>\n        <label>First Name</label>\n        <input clrInput formControlName=\"first\" />\n        <clr-control-error *clrIfError=\"'required'\">First Name Required</clr-control-error>\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Last Name</label>\n        <input clrInput formControlName=\"last\" />\n        <clr-control-error *clrIfError=\"'required'\">Last Name Required</clr-control-error>\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel formGroupName=\"contact\">\n    <clr-step-title>Contact Information</clr-step-title>\n    <clr-step-description\n      >Description goes here.</clr-step-description\n    >\n    <clr-step-content *clrIfExpanded>\n      <clr-input-container>\n        <label>Email</label>\n        <input clrInput formControlName=\"email\" />\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Phone</label>\n        <input clrInput formControlName=\"phone\" />\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel formGroupName=\"password\">\n    <clr-step-title>Password</clr-step-title>\n    <clr-step-description\n      >Description goes here.</clr-step-description\n    >\n    <clr-step-content *clrIfExpanded>\n      <clr-password-container>\n        <label>Password</label>\n        <input clrPassword formControlName=\"password\" />\n      </clr-password-container>\n\n      <clr-password-container>\n        <label>Confirm Password</label>\n        <input clrPassword formControlName=\"confirm\" />\n      </clr-password-container>\n\n      <button clrStepButton=\"submit\">submit</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n</form>\n\n<clr-code-snippet [clrCode]=\"templateExample\"></clr-code-snippet>\n\n<clr-code-snippet [clrCode]=\"componentExample\"></clr-code-snippet>"
    },
    {
      "name": "AngularStepperTemplateDemo",
      "id": "component-AngularStepperTemplateDemo-091077259195501dc3f6afc904233b5e",
      "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-angular-stepper-template-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./angular-stepper-template.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "componentExample",
          "defaultValue": "componentExample",
          "type": "",
          "optional": false,
          "description": "",
          "line": 84
        },
        {
          "name": "templateExample",
          "defaultValue": "templateExample",
          "type": "",
          "optional": false,
          "description": "",
          "line": 83
        },
        {
          "name": "templateForm",
          "defaultValue":
            "{\n    name: {\n      firstName: '',\n      lastName: '',\n    },\n    contact: {\n      email: '',\n      phone: '',\n    },\n    password: {\n      password: '',\n      confirm: '',\n    },\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 86
        }
      ],
      "methodsClass": [
        {
          "name": "templateFormSubmit",
          "args": [
            {
              "name": "templateFormValues",
              "type": "literal type"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 101,
          "jsdoctags": [
            {
              "name": "templateFormValues",
              "type": "literal type",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst templateExample = `\n<form clrStepper #contactForm=\"ngForm\" (ngSubmit)=\"templateFormSubmit(contactForm.value)\">\n  <clr-stepper-panel ngModelGroup=\"name\">\n    <clr-step-title>Legal Name</clr-step-title>\n    <clr-step-description>Description goes here.</clr-step-description>\n    <clr-step-content>\n      <clr-input-container>\n        <label>First Name</label>\n        <input clrInput [ngModel]=\"templateForm.name.firstName\" name=\"firstName\" required />\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Last Name</label>\n        <input clrInput [ngModel]=\"templateForm.name.lastName\" name=\"lastName\" required />\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel ngModelGroup=\"contact\">\n    <clr-step-title>Contact Information</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content>\n      ...\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel ngModelGroup=\"password\">\n    <clr-step-title>Password</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content>\n      ...\n      <button clrStepButton=\"submit\">submit</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n</form>\n`;\n\nconst componentExample = `\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-angular-stepper-template-demo',\n  templateUrl: './angular-stepper-template.demo.html',\n})\nexport class AngularStepperTemplateDemo {\n  templateForm = {\n    name: {\n      firstName: '',\n      lastName: '',\n    },\n    contact: {\n      email: '',\n      phone: '',\n    },\n    password: {\n      password: '',\n      confirm: '',\n    },\n  };\n\n  templateFormSubmit(templateFormValues: {}) {\n    console.log('template form submit', templateFormValues);\n  }\n}\n`;\n\n@Component({\n  selector: 'clr-angular-stepper-template-demo',\n  templateUrl: './angular-stepper-template.demo.html',\n})\nexport class AngularStepperTemplateDemo {\n  templateExample = templateExample;\n  componentExample = componentExample;\n\n  templateForm = {\n    name: {\n      firstName: '',\n      lastName: '',\n    },\n    contact: {\n      email: '',\n      phone: '',\n    },\n    password: {\n      password: '',\n      confirm: '',\n    },\n  };\n\n  templateFormSubmit(templateFormValues: {}) {\n    console.log('template form submit', templateFormValues);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<h4>Angular - Template Forms</h4>\n\n<form clrStepper #contactForm=\"ngForm\" (ngSubmit)=\"templateFormSubmit(contactForm.value)\">\n  <clr-stepper-panel ngModelGroup=\"name\">\n    <clr-step-title>Legal Name</clr-step-title>\n    <clr-step-description\n      >Description goes here.</clr-step-description\n    >\n    <clr-step-content>\n      <clr-input-container>\n        <label>First Name</label>\n        <input clrInput [ngModel]=\"templateForm.name.firstName\" name=\"firstName\" required />\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Last Name</label>\n        <input clrInput [ngModel]=\"templateForm.name.lastName\" name=\"lastName\" required />\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel ngModelGroup=\"contact\">\n    <clr-step-title>Contact Information</clr-step-title>\n    <clr-step-description\n      >Description goes here.</clr-step-description\n    >\n    <clr-step-content>\n      <clr-input-container>\n        <label>Email</label>\n        <input clrInput [ngModel]=\"templateForm.contact.email\" name=\"email\" />\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Phone</label>\n        <input clrInput [ngModel]=\"templateForm.contact.phone\" name=\"phone\" />\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel ngModelGroup=\"password\">\n    <clr-step-title>Password</clr-step-title>\n    <clr-step-description\n      >Description goes here.</clr-step-description\n    >\n    <clr-step-content>\n      <clr-password-container>\n        <label>Password</label>\n        <input clrPassword [ngModel]=\"templateForm.password.password\" name=\"password\" />\n      </clr-password-container>\n\n      <clr-password-container>\n        <label>Confirm Password</label>\n        <input clrPassword [ngModel]=\"templateForm.password.confirm\" name=\"confirm\" />\n      </clr-password-container>\n\n      <button clrStepButton=\"submit\">submit</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n</form>\n\n<clr-code-snippet [clrCode]=\"templateExample\"></clr-code-snippet>\n\n<clr-code-snippet [clrCode]=\"componentExample\"></clr-code-snippet>"
    },
    {
      "name": "ApiAccordionDemo",
      "id": "component-ApiAccordionDemo-e4cf372941f24ac1a002e122f4e9d6c5",
      "file": "src/website/src/app/documentation/demos/accordion/api-accordion.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-api-accordion-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./api-accordion.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-api-accordion-demo',\n  templateUrl: './api-accordion.demo.html',\n})\nexport class ApiAccordionDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<h3 id=\"summary-of-options\">Summary of Options</h3>\n\n<h4><code class=\"clr-code\">&lt;clr-accordion&gt;</code> component</h4>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th class=\"left\">Input / Output</th>\n      <th class=\"left clr-hidden-xs-down\">Values</th>\n      <th class=\"left clr-hidden-xs-down\">Default</th>\n      <th class=\"left\">Effect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"left\">\n        <b>[clrAccordionMultiPanel]</b>\n        <div class=\"clr-hidden-sm-up\">Type: Boolean</div>\n        <div class=\"clr-hidden-sm-up\">Default: false</div>\n      </td>\n      <td class=\"left clr-hidden-xs-down\">Boolean</td>\n      <td class=\"left clr-hidden-xs-down\">false</td>\n      <td class=\"left\">\n        Override default behavior to allow multiple panels open at one time.\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<h4><code class=\"clr-code\">&lt;clr-accordion-panel&gt;</code> component</h4>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th class=\"left\">Input / Output</th>\n      <th class=\"left clr-hidden-xs-down\">Values</th>\n      <th class=\"left clr-hidden-xs-down\">Default</th>\n      <th class=\"left\">Effect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"left\">\n        <b>[(clrAccordionPanelOpen)]</b>\n        <div class=\"clr-hidden-sm-up\">Type: Boolean</div>\n        <div class=\"clr-hidden-sm-up\">Default: false</div>\n      </td>\n      <td class=\"left clr-hidden-xs-down\">Boolean</td>\n      <td class=\"left clr-hidden-xs-down\">false</td>\n      <td class=\"left\">\n        Set and listen for open changes to a given panel.\n      </td>\n    </tr>\n    <tr>\n      <td class=\"left\">\n        <b>[clrAccordionPanelDisabled]</b>\n        <div class=\"clr-hidden-sm-up\">Type: Boolean</div>\n        <div class=\"clr-hidden-sm-up\">Default: false</div>\n      </td>\n      <td class=\"left clr-hidden-xs-down\">Boolean</td>\n      <td class=\"left clr-hidden-xs-down\">false</td>\n      <td class=\"left\">\n        Disable a given panel from being opened or closed.\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<h4><code class=\"clr-code\">*clrIfExpanded</code> directive</h4>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th class=\"left\">Input/Output</th>\n      <th class=\"clr-hidden-xs-down\">Values</th>\n      <th class=\"clr-hidden-xs-down\">Default</th>\n      <th class=\"left\">Effect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"left\">\n        <b>[(clrIfExpanded)]</b>\n        <div class=\"clr-hidden-sm-up\">Type: boolean</div>\n        <div class=\"clr-hidden-sm-up\">Default: false</div>\n      </td>\n      <td class=\"clr-hidden-xs-down\">Boolean</td>\n      <td class=\"clr-hidden-xs-down\">false</td>\n      <td class=\"left\">\n        Two-way binding on the expanded/collapsed state of the node.\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
    },
    {
      "name": "AppComponent",
      "id": "component-AppComponent-2f8c85f48551e344967de2861243e005",
      "file": "src/website/src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./app.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "bodyClasses",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 45
        },
        {
          "name": "browserTitleSeparator",
          "defaultValue": "' - '",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 92,
          "modifierKind": [112]
        },
        {
          "name": "contentRef",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 23,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'content', {static: true}"
            }
          ]
        },
        {
          "name": "defaultBrowserTitle",
          "defaultValue": "'Clarity Design System'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 91,
          "modifierKind": [112]
        },
        {
          "name": "environment",
          "defaultValue": "environment",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "productTitle",
          "defaultValue": "GLOBAL.alt_title",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58,
          "modifierKind": [114]
        },
        {
          "name": "router",
          "type": "Router",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "collectRouteData",
          "args": [
            {
              "name": "key",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 94,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "key",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getDocumentationUrl",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 83
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        },
        {
          "name": "setTitle",
          "args": [
            {
              "name": "newTitle",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "newTitle",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "trackBannerAction",
          "args": [
            {
              "name": "eventLabel",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52,
          "jsdoctags": [
            {
              "name": "eventLabel",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateBodyClasses",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47
        },
        {
          "name": "updateBrowserTitle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "modifierKind": [114]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ElementRef, OnInit, Renderer, InjectionToken, ViewChild } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { environment } from '../environments/environment';\n\nexport const PLATFORM_TOKEN = new InjectionToken<string>('clarity');\n\ndeclare let ga: Function;\n\nimport * as GLOBAL from '../settings/global.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('content', { static: true })\n  contentRef: ElementRef;\n  environment = environment;\n\n  constructor(private renderer: Renderer, private el: ElementRef, public router: Router, private titleService: Title) {}\n\n  ngOnInit() {\n    this.router.events.subscribe((change: any) => {\n      if (change instanceof NavigationEnd) {\n        this.bodyClasses.forEach(className => this.renderer.setElementClass(this.el.nativeElement, className, false));\n        this.updateBodyClasses();\n        this.bodyClasses.forEach(className => this.renderer.setElementClass(this.el.nativeElement, className, true));\n\n        this.updateBrowserTitle();\n\n        // ga may not exist if we aren't on the actual site\n        if (typeof ga !== 'undefined') {\n          ga('send', 'pageview', change.urlAfterRedirects);\n        }\n      }\n    });\n  }\n\n  bodyClasses = [];\n\n  updateBodyClasses() {\n    this.bodyClasses.length = 0;\n    this.bodyClasses = this.collectRouteData('bodyClass');\n  }\n\n  trackBannerAction(eventLabel: string) {\n    if (window.trackHiringAlert) {\n      window.trackHiringAlert(eventLabel);\n    }\n  }\n\n  public productTitle = GLOBAL.alt_title;\n\n  public setTitle(newTitle: string) {\n    this.titleService.setTitle(newTitle);\n  }\n\n  public updateBrowserTitle() {\n    const browserTitles = this.collectRouteData('browserTitle');\n\n    browserTitles.unshift(this.defaultBrowserTitle);\n\n    // some weirdness with routing was giving us duplicate titles\n    // like \"Clarity Design System - Releases - Releases\"\n    const dupes = new Set();\n\n    const filteredTitles = browserTitles.filter(function(ttl) {\n      if (!dupes.has(ttl)) {\n        dupes.add(ttl);\n        return true;\n      }\n    });\n\n    this.setTitle(filteredTitles.join(this.browserTitleSeparator));\n  }\n\n  getDocumentationUrl() {\n    if (window.location.hostname === 'clarity.design' && environment.latest !== environment.version) {\n      return `https://${environment.latest}.clarity.design`;\n    } else {\n      return `/documentation`;\n    }\n  }\n\n  private defaultBrowserTitle = 'Clarity Design System';\n  private browserTitleSeparator = ' - ';\n\n  private collectRouteData(key: string) {\n    let route = this.router.routerState.snapshot.root;\n    const returnArray = [];\n\n    while (route) {\n      if (route.data && route.data[key]) {\n        returnArray.push(route.data[key]);\n      }\n      route = route.firstChild;\n    }\n\n    return returnArray;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "renderer",
            "type": "Renderer"
          },
          {
            "name": "el",
            "type": "ElementRef"
          },
          {
            "name": "router",
            "type": "Router"
          },
          {
            "name": "titleService",
            "type": "Title"
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "renderer",
            "type": "Renderer",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "titleService",
            "type": "Title",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData":
        "<clr-main-container>\n    <app-skip-link [focusElement]=\"contentRef.nativeElement\"></app-skip-link>\n    <clr-header class=\"header-6\">\n        <div class=\"branding\">\n            <a routerLink=\"/\" class=\"logo-and-title\">\n                <span class=\"clr-icon clarity-logo\"></span>\n                <span class=\"title\">{{ productTitle }}</span>\n            </a>\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"header-nav\" [clr-nav-level]=\"1\">\n            <a id=\"home-link\" class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\"><span class=\"nav-text\">Home</span></a>\n            <a class=\"nav-link\" routerLink=\"/documentation\" *ngIf=\"environment.latest == environment.version\" routerLinkActive=\"active\"><span class=\"nav-text\">Documentation</span></a>\n            <a class=\"nav-link\" [href]=\"getDocumentationUrl()\" *ngIf=\"environment.latest !==\n            environment.version\"><span class=\"nav-text\">Documentation</span></a>\n            <a class=\"nav-link\" routerLink=\"/icons\" routerLinkActive=\"active\"><span class=\"nav-text\">Icons</span></a>\n            <a class=\"nav-link\" routerLink=\"/community\" routerLinkActive=\"active\"><span class=\"nav-text\">Community</span></a>\n            <a class=\"nav-link\" routerLink=\"/news\" routerLinkActive=\"active\"><span class=\"nav-text\">What's New</span></a>\n        </div>\n        <div class=\"settings\">\n            <!-- watch/star widget from https://ghbtns.com/#original-watch-aka-star... apache 2 license. thanks, mdo! -->\n            <iframe class=\"github-btn\" src=\"https://ghbtns.com/github-btn.html?user=vmware&repo=clarity&type=star&count=true\" frameborder=\"0\" scrolling=\"0\" width=\"170px\" height=\"20px\"></iframe>\n        </div>\n    </clr-header>\n\n    <router-outlet #content tabindex=\"-1\"></router-outlet>\n\n</clr-main-container>\n"
    },
    {
      "name": "AppLayoutDemo",
      "id": "component-AppLayoutDemo-96ea153dbdbbdb0397db643b4443c02e",
      "file": "src/website/src/app/documentation/demos/app-layout/app-layout.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-app-layout-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./app-layout.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nconst HTML_EXAMPLE = `\nhtml {\n    /* the following line of CSS would change Clarity to a 20px vertical rhythm with a 5px grid */\n    font-size: 20px;\n}\n`;\n\n@Component({\n  selector: 'clr-app-layout-demo',\n  templateUrl: './app-layout.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class AppLayoutDemo extends ClarityDocComponent {\n  constructor() {\n    super('app-layout');\n  }\n\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 24
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"a-properly-structured-layout-enforces-an-optimal-consistent-experience-across-applications\">A properly structured layout enforces an optimal, consistent experience across applications.</h5>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"layout\">Layout</h3>\n\n            <p><strong>.main-container:</strong></p>\n            <div>\n                The <code class=\"clr-code\">.main-container</code> is a vertical flexbox which wraps the following components:\n                <ul class=\"list\">\n                    <li><a routerLink=\"../../alerts\">App-Level Alert</a></li>\n                    <li><a routerLink=\"../../header\">Header</a></li>\n                    <li><a routerLink=\"../../header\">Subnav</a></li>\n                    <li>Content Container</li>\n                </ul>\n            </div>\n\n            <p><strong>Note:</strong> Although Clarity does not have a footer component, a custom footer can be added in the main-container.</p>\n\n            <p><strong>.content-container:</strong></p>\n            <div>\n                The <code class=\"clr-code\">.content-container</code> is a horizontal flexbox which wraps the following components:\n                <ul class=\"list\">\n                    <li>Content Area</li>\n                    <li><a routerLink=\"../../sidenav\">Sidenav</a></li>\n                </ul>\n            </div>\n\n            <clr-layout-all-demo></clr-layout-all-demo>\n\n            <h3 id=\"guidelines\">Basic Structure</h3>\n\n            <p>Two constants of an app built in Clarity are the header and content area. These are the blocks upon which you build your app model.</p>\n\n            <div class=\"clr-row cozy-sm\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <img src=\"assets/images/documentation/app-layout/header_contentarea.png?1481674789140619000\" alt=\"Header and Content Area\" />\n                </div>\n                <div class=\"clr-col-12 clr-col-md-7\">\n                    <h5 style=\"margin-top:0\">Header</h5>\n                    The <a routerLink=\"../../header\">header</a> is for branding and app-level elements such as navigation, search, and account settings.\n\n                    <h5>Content Area</h5>\n                    The content area is where users focus their attention most of the time, gathering information and performing tasks–it is the canvas for your application. As the largest portion of your app, the content area is always visible.\n                </div>\n            </div>\n\n            <h3 id=\"layout-1\">Layout</h3>\n            <p>Your layout should reflect the information or workflow of the selected <a routerLink=\"../../navigation\">navigation</a>. When laying out the content, keep the following in mind:</p>\n\n            <ul class=\"list\">\n                <li>The flow of content–how to create a hierarchy and layout that draws attention to the areas of importance</li>\n                <li>The importance of designing to the <a routerLink=\"../../grid\">grid</a></li>\n                <li>How to aid users in completing their tasks</li>\n                <li>How to handle large amounts of data</li>\n                <li>Responsive design (if that is part of your product’s goals)</li>\n            </ul>\n\n            <h5 id=\"common-layout-patterns\">Common Layout Patterns</h5>\n\n            <p>Content can consist of any of the <a routerLink=\"../../\">Clarity components</a>, or no components and just information. Following are common layout patterns and recommended usage. For information on navigation components, header, subnav,\n                and sidenav, see <a routerLink=\"../../navigation\">Navigation</a>.</p>\n\n            <h6 id=\"cards\">Cards</h6>\n\n            <div class=\"clr-row cozy-sm\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <img src=\"assets/images/documentation/app-layout/cards.png?1481674789140619000\" alt=\"Cards\" />\n                </div>\n                <div class=\"clr-col-12 clr-col-md-7\">\n                    <div>\n                        <a routerLink=\"../../cards\">Cards</a> are for presenting high-level information and guiding users to related actions and details. Cards might include a combination of text, images, and data visualizations.\n                    </div>\n                    <p>\n                        Benefits of using cards include:\n                    </p>\n                    <ul class=\"list\">\n                        <li>Ability to see data in a collection</li>\n                        <li>Facilitates scanning of information</li>\n                        <li>Works well across platforms</li>\n                    </ul>\n                </div>\n            </div>\n\n            <h6 id=\"tables-and-datagrids\">Tables and Datagrids</h6>\n\n            <div class=\"clr-row cozy-sm\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <img src=\"assets/images/documentation/app-layout/tables.png?1481674789140619000\" alt=\"Tables and Datagrids\" />\n                </div>\n                <div class=\"clr-col-12 clr-col-md-7\">\n                    <div>\n                        <a routerLink=\"../../tables\">Tables</a> and datagrids are for good for managing large amounts of data. These layouts work well when users need to compare data and perform batch operations.\n                    </div>\n                    <p>\n                        A table is a static view. A datagrid provides users flexibility in viewing the data, including filtering and sorting.\n                    </p>\n                    <p>\n                        Complex tables and datagrids work best on larger screens.\n                    </p>\n                </div>\n            </div>\n\n            <h6 id=\"forms\">Forms</h6>\n\n            <div class=\"clr-row cozy-sm\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <img src=\"assets/images/documentation/app-layout/forms.png?1481674789140619000\" alt=\"Forms\" />\n                </div>\n                <div class=\"clr-col-12 clr-col-md-7\">\n                    <div>\n                        <a routerLink=\"../../forms\">Forms</a> are for collecting data from users. Forms are comprised of other components, including labels, input fields, labels, checkboxes, radio buttons, and text.\n                    </div>\n                    <p>\n                        A benefit of a form is that users can see what information they must provide. Conversely, too many fields can discourage the user.\n                    </p>\n                    <p>Inline forms are better than modals in cases where you don't want to block users from performing other actions.</p>\n                </div>\n            </div>\n\n            <h6 id=\"tabs\">Tabs</h6>\n\n            <div class=\"clr-row cozy-sm\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <img src=\"assets/images/documentation/app-layout/tabs.png?1481674789140619000\" alt=\"Tabs\" />\n                </div>\n                <div class=\"clr-col-12 clr-col-md-7\">\n                    <div>\n                        <a routerLink=\"../../tabs\">Tabs</a> appear in a single, non-scrollable row, at the top of the content area. They are good for breaking content into separate, related views.\n                    </div>\n                    <p>\n                        Tabs are not appropriate if users need to compare data across views.\n                    </p>\n                </div>\n            </div>\n\n            <h6 id=\"white-space-and-typography\">White Space and Typography</h6>\n\n            <div class=\"clr-row cozy-sm\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <img src=\"assets/images/documentation/app-layout/typography.png?1481674789140619000\" alt=\"White Space and Typography\" />\n                </div>\n                <div class=\"clr-col-12 clr-col-md-7\">\n                    <div>\n                        White space and <a routerLink=\"../../typography\">typography</a> are important elements in conveying hierarchy. These elements direct users to what they should view next and make the content and data easier to parse. They also\n                        helps bring consistency to an app.\n                    </div>\n                </div>\n            </div>\n\n            <h6 id=\"button-placement\">Button Placement</h6>\n\n            <p>In the content area, buttons are left-aligned, with the primary button in the leftmost position. This placement supports the F-pattern layout.</p>\n\n            <div class=\"clr-row cozy-sm\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <img src=\"assets/images/documentation/app-layout/do_button_alignment.png?1481674789140619000\" alt=\"Buttons align left in content area\" />\n                    <p><b><font color=\"#318700\">Do.</font> </b> Left-alignment puts buttons closest to the content.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-7\">\n                    <div>\n                        <img src=\"assets/images/documentation/app-layout/dont_button_alignment.png?1481674789140619000\" alt=\"Buttons do not align right in content area\" />\n                        <p><b><font color=\"#e12200\">Don't.</font> </b>On the right, buttons might appear separate from content.</p>\n                    </div>\n                </div>\n            </div>\n\n            <h4 id=\"using-vertical-rhythm-for-layout\">Using Vertical Rhythm for Layout</h4>\n\n            <p>Vertical rhythm is the repetition of spatial relationships in a design. A consistent rhythm gives elements a uniform and balanced placement in a design. The more consistent the design, the easier it is for users to read and understand.</p>\n\n            <h6 id=\"the-clarity-baseline-is-24px\">The Clarity Baseline is 24px</h6>\n\n            <p>All elements in Clarity are built in terms of 24px:</p>\n\n            <ul class=\"list\">\n                <li>The height of all components and text elements is in multiples of 24px.</li>\n                <li>The vertical white space between elements is also in multiples of 24px.</li>\n            </ul>\n\n            <p><img src=\"assets/images/documentation/app-layout/24_baseline.png?1481674789140619000\" alt=\"24px Baseline\" /></p>\n\n            <h6 id=\"repeat-24px-in-your-layout\">Repeat 24px in Your Layout</h6>\n            <p>\n                Calculate the vertical margins and padding between elements using the Clarity baseline.\n                A multiple of 24px can be a whole or half-ratio. Common numbers include: 6px, 12px, 18px,\n                24px, 30px, 36px, 42px, 48px, 54px, 60px, 66px, 72px.\n            </p>\n\n\n            <h6 id=\"rem-units\">Changing vertical rhythm with rem</h6>\n            <p>\n                Clarity uses <a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Values_and_units\" target=\"_blank\">rem units</a> for its whitespace and sizing. If the 24px vertical baseline\n                is too large or too small for your needs, you can edit this globally across a Clarity application\n                by changing the <code class=\"clr-code\">font-size</code> style of the <code class=\"clr-code\">html</code>\n                element, as in the example below.\n            </p>\n\n            <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n\n            <p>\n                Note that the declaration on the <code class=\"clr-code\">html</code> selector needs to happen\n                <em>after</em> the Clarity CSS has been loaded. Also note that the \"grid\" for Clarity layouts and\n                components is equal to one-fourth of the baseline. So instead of a 6px grid, the example above will\n                put your application on a 5px grid.\n            </p>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "BadgeColorsDemo",
      "id": "component-BadgeColorsDemo-127b78215a0ab849464b0396e72c804e",
      "file": "src/website/src/app/documentation/demos/badges/badge-colors.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-badge-colors-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./badge-colors.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<span class=\"badge\">1</span>\n<span class=\"badge badge-purple\">15</span>\n<span class=\"badge badge-blue\">2</span>\n<span class=\"badge badge-orange\">3</span>\n<span class=\"badge badge-light-blue\">12</span>\n<span class=\"badge badge-1\">90</span>\n<span class=\"badge badge-2\">51</span>\n<span class=\"badge badge-3\">25</span>\n<span class=\"badge badge-4\">32</span>\n<span class=\"badge badge-5\">57</span>\n`;\n\n@Component({\n  selector: 'clr-badge-colors-demo',\n  templateUrl: './badge-colors.demo.html',\n})\nexport class BadgeColorsDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div>\n        <span class=\"badge\">1</span>\n        <span class=\"badge badge-purple\">15</span>\n        <span class=\"badge badge-blue\">2</span>\n        <span class=\"badge badge-orange\">3</span>\n        <span class=\"badge badge-light-blue\">12</span>\n        <span class=\"badge badge-1\">90</span>\n        <span class=\"badge badge-2\">51</span>\n        <span class=\"badge badge-3\">25</span>\n        <span class=\"badge badge-4\">32</span>\n        <span class=\"badge badge-5\">57</span>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "BadgesDemo",
      "id": "component-BadgesDemo-17b7809bd91e3c5d43729a225548308f",
      "file": "src/website/src/app/documentation/demos/badges/badges.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-badges-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./badges.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "expanded",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-badges-demo',\n  templateUrl: './badges.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class BadgesDemo extends ClarityDocComponent {\n  expanded: boolean = true;\n\n  constructor() {\n    super('badges');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n\n        <h5 class=\"component-summary\" id=\"badges-header\">Badges provide a method to highlight a count of an element\n            either next to it or inside the element itself.</h5>\n\n        <div id=\"design-guidelines\">\n            <h3>Style</h3>\n            <p>Badges have a colorful, bold, and filled style that makes them stand out when appearing within or next to\n                another\n                component.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Overall Style</h4>\n                    <p>\n                        Badges have a more rounded border radius, similar to labels, to distinguish them from primary\n                        buttons.\n                    </p>\n                    <p>\n                        Badges are also small enough to fit next to or within another element.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-tree>\n                                    <clr-tree-node>\n                                        <div class=\"margin-right-0_25\">Inbox</div> <span class=\"badge badge-info\">1\n                                    </span>\n                                        <ng-template [(clrIfExpanded)]=\"expanded\">\n                                            <clr-tree-node>\n                                                New Email 1\n                                            </clr-tree-node>\n                                        </ng-template>\n                                    </clr-tree-node>\n                                    <clr-tree-node>\n                                        Folders\n                                        <ng-template clrIfExpanded>\n                                            <clr-tree-node>Sent Items</clr-tree-node>\n                                            <clr-tree-node>Junk Mail</clr-tree-node>\n                                            <clr-tree-node>To Me Directly</clr-tree-node>\n                                        </ng-template>\n                                    </clr-tree-node>\n                                </clr-tree>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Color</h4>\n                    <p>\n                        You can use different colors in badges.\n                    </p>\n                    <p>\n                        Stoplight colors are reserved to display a sense of urgency or indicate state.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clr-demo-container\">\n                            <div class=\"clr-row\">\n                                <div class=\"clr-col-12\">\n                                    <b>Notifications</b> <span class=\"badge badge-info\">12</span>\n                                </div>\n                            </div>\n                            <div class=\"clr-row\">\n                                <div class=\"clr-col-12\">\n                                    <b>Alerts</b> <span class=\"badge badge-danger\">12</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12\">\n                    <h4>Typography</h4>\n                    <p>\n                        Use integers within badges. If you’re attempting to use text, consider using a label instead.\n                    </p>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Over 99</h4>\n                    <p>\n                        If a badge needs to display a number above 99, use “99+” instead of the number unless the number is\n                        important to the user’s objectives and you are certain there is room in the design to accommodate\n                        it.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                            <span class=\"label label-orange\">\n                                London (Location)\n                                <span class=\"badge badge-orange\">14</span>\n                            </span>\n                                <span class=\"label label-orange\">\n                                Austin (Location)\n                                <span class=\"badge badge-orange\">99+</span>\n                            </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n            <p>\n                A badge overlays a count of items on another component, such as a menu or label.\n            </p>\n\n            <h6 id=\"badges-color-options\">1. Badges (Color Options)</h6>\n\n            <clr-badge-colors-demo></clr-badge-colors-demo>\n\n            <h6 id=\"status-badges\">2. Status Badges</h6>\n\n            <clr-badge-statuses-demo></clr-badge-statuses-demo>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "BadgeStatusesDemo",
      "id": "component-BadgeStatusesDemo-a23dd16d3540563b2dce91333d1b0c54",
      "file": "src/website/src/app/documentation/demos/badges/badge-statuses.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-badge-statuses-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./badge-statuses.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<span class=\"badge badge-info\">2</span>\n<span class=\"badge badge-success\">3</span>\n<span class=\"badge badge-warning\">12</span>\n<span class=\"badge badge-danger\">15</span>\n`;\n\n@Component({\n  selector: 'clr-badge-statuses-demo',\n  templateUrl: './badge-statuses.demo.html',\n})\nexport class BadgeStatusesDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <span class=\"badge badge-info\">2</span>\n    <span class=\"badge badge-success\">3</span>\n    <span class=\"badge badge-warning\">12</span>\n    <span class=\"badge badge-danger\">15</span>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "BasicNavDemo",
      "id": "component-BasicNavDemo-7d838bdcdb5e69e6c5aacd674766b90d",
      "file": "src/website/src/app/documentation/demos/vertical-nav/basic-nav/basic-nav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-basic-vertical-nav-demo",
      "styleUrls": ["../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./basic-nav.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-basic-vertical-nav-demo',\n  templateUrl: './basic-nav.html',\n  styleUrls: ['../vertical-nav.demo.scss'],\n})\nexport class BasicNavDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav>\n                <a clrVerticalNavLink href=\"javascript://\">Snorlax</a>\n                <a clrVerticalNavLink href=\"javascript://\" class=\"active\">Jigglypuff</a>\n                <a clrVerticalNavLink href=\"javascript://\">Ditto</a>\n                <a clrVerticalNavLink href=\"javascript://\">Charizard</a>\n                <a clrVerticalNavLink href=\"javascript://\">Arcanine</a>\n                <a clrVerticalNavLink href=\"javascript://\">Blastoise</a>\n                <a clrVerticalNavLink href=\"javascript://\">Gyrados</a>\n                <a clrVerticalNavLink href=\"javascript://\">Jolteon</a>\n                <a clrVerticalNavLink href=\"javascript://\">Raichu</a>\n            </clr-vertical-nav>\n            <div class=\"content-area\">\n                <h2>Jiggypuff</h2>\n                <p>\n                    Jigglypuff is a round, pink ball with pointed ears and large, blue eyes. It has rubbery,\n                    balloon-like skin and small, stubby arms and somewhat long feet. On top of its head is a curled tuft\n                    of fur. As seen in Pokémon Stadium, it is filled with air, as a defeated Jigglypuff, deflates until\n                    it is flat. By drawing extra air into its body, it is able to float as demonstrated in Super Smash\n                    Bros.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n"
    },
    {
      "name": "BasicNavStructureDemo",
      "id": "component-BasicNavStructureDemo-ba48ad6da7f29501a5b1944176fbc695",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/basic-structure/basic-structure.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-basic-structure-vertical-nav-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./basic-structure.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"main-container\">\n    <header class=\"header\">\n        ...\n    </header>\n    <div class=\"content-container\">\n        <clr-vertical-nav>\n            <a clrVerticalNavLink routerLink=\"./charmander\" routerLinkActive=\"active\">Charmander</a>\n            <a clrVerticalNavLink routerLink=\"./jigglypuff\" routerLinkActive=\"active\">Jigglypuff</a>\n            <a clrVerticalNavLink routerLink=\"./pikachu\" routerLinkActive=\"active\">Pikachu</a>\n            <a clrVerticalNavLink routerLink=\"./raichu\" routerLinkActive=\"active\">Raichu</a>\n            <a clrVerticalNavLink routerLink=\"./snorlax\" routerLinkActive=\"active\">Snorlax</a>\n            <div class=\"nav-divider\"></div>\n            <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">Credit</a>\n        </clr-vertical-nav>\n        <div class=\"content-area\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-basic-structure-vertical-nav-demo',\n  templateUrl: './basic-structure.html',\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class BasicNavStructureDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Basic Structure</h4>\n\n<p>\n    Use the <code class=\"clr-code\">clr-vertical-nav</code> component to create the Vertical Nav.\n    Add the <code class=\"clr-code\">clrVerticalNavLink</code> directive on each Nav Link in the Vertical Nav.  Use <code class=\"clr-code\">&lt;div class=\"nav-divider\"&gt;&lt;/div&gt;</code> to add a horizonal divider to separate logical groups.\n</p>\n\n<div class=\"clr-example\">\n    <div class=\"main-container\" style=\"height: 400px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a routerLink=\"./project-pokemon\" routerLinkActive=\"active\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav>\n                <a clrVerticalNavLink routerLink=\"./charmander\" routerLinkActive=\"active\">Charmander</a>\n                <a clrVerticalNavLink routerLink=\"./jigglypuff\" routerLinkActive=\"active\">Jigglypuff</a>\n                <a clrVerticalNavLink routerLink=\"./pikachu\" routerLinkActive=\"active\">Pikachu</a>\n                <a clrVerticalNavLink routerLink=\"./raichu\" routerLinkActive=\"active\">Raichu</a>\n                <a clrVerticalNavLink routerLink=\"./snorlax\" routerLinkActive=\"active\">Snorlax</a>\n                <div class=\"nav-divider\"></div>\n                <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">Credit</a>\n            </clr-vertical-nav>\n            <div class=\"content-area demo-allow-scroll\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "BasicNavUsage",
      "id": "component-BasicNavUsage-9355c0f48cc535a0fa6c7f1e4e28e087",
      "file": "src/website/src/app/documentation/demos/vertical-nav/basic-nav-usage/basic-nav-usage.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-basic-vertical-nav-usage-demo",
      "styleUrls": ["../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./basic-nav-usage.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "demoToggleDont",
          "defaultValue": "false",
          "line": 14
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'clr-basic-vertical-nav-usage-demo',\n  templateUrl: './basic-nav-usage.html',\n  styleUrls: ['../vertical-nav.demo.scss'],\n})\nexport class BasicNavUsage {\n  @Input() demoToggleDont = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\" style=\"margin-top: 0\">\n    <div class=\"main-container\" style=\"height: 468px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <nav class=\"subnav\" *ngIf=\"demoToggleDont\">\n            <ul class=\"nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"javascript://\">Pokédex</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Movies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Games</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Events</a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"content-container\">\n            <clr-vertical-nav>\n                <a clrVerticalNavLink href=\"javascript://\">Snorlax</a>\n                <a clrVerticalNavLink href=\"javascript://\" class=\"active\">Jigglypuff</a>\n                <a clrVerticalNavLink href=\"javascript://\">Ditto</a>\n                <a clrVerticalNavLink href=\"javascript://\">Charizard</a>\n                <a clrVerticalNavLink href=\"javascript://\">Arcanine</a>\n                <a clrVerticalNavLink href=\"javascript://\">Blastoise</a>\n                <a clrVerticalNavLink href=\"javascript://\">Gyrados</a>\n                <a clrVerticalNavLink href=\"javascript://\">Jolteon</a>\n                <a clrVerticalNavLink href=\"javascript://\">Raichu</a>\n            </clr-vertical-nav>\n            <div class=\"content-area\">\n            </div>\n        </div>\n    </div>\n</div>\n"
    },
    {
      "name": "BooleanSelectionTreeDemo",
      "id": "component-BooleanSelectionTreeDemo-9851496138e1bace4b85bf5da2913f10",
      "file": "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-boolean-selection-tree-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./boolean-selection-tree.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 83
        },
        {
          "name": "exampleTs",
          "defaultValue": "EXAMPLE_TS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 84
        },
        {
          "name": "permissions",
          "defaultValue":
            "[\n    {\n      type: 'Authenticated Users',\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: true,\n        },\n        {\n          name: 'Create',\n          enable: false,\n        },\n        {\n          name: 'Delete',\n          enable: false,\n        },\n      ],\n    },\n    {\n      type: 'Owners',\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: true,\n        },\n        {\n          name: 'Create',\n          enable: true,\n        },\n        {\n          name: 'Delete',\n          enable: true,\n        },\n      ],\n    },\n    {\n      type: 'Public',\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: false,\n        },\n        {\n          name: 'Create',\n          enable: false,\n        },\n        {\n          name: 'Delete',\n          enable: false,\n        },\n      ],\n    },\n  ]",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 86
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE_HTML = `\n<clr-tree>\n  <clr-tree-node [clrExpanded]=\"true\">\n      Permissions\n      <clr-tree-node *ngFor=\"let permission of permissions\" [clrExpanded]=\"true\">\n          {{permission.type}}\n          <clr-tree-node *ngFor=\"let right of permission.rights\" \n                        [clrSelected]=\"right.enable\" (clrSelectedChange)=\"right.enable = !!$event\">\n              {{right.name}}\n          </clr-tree-node>\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`;\n\nconst EXAMPLE_TS = `\n@Component({\n    selector: \"...\",\n    templateUrl: \"...\"\n})\nexport class Permissions {\n    permissions: any = [\n        {\n            type: \"Authenticated Users\",\n            rights: [\n                {\n                    name: \"Read\",\n                    enable: true\n                },\n                {\n                    name: \"Modify\",\n                    enable: true\n                },\n                {\n                    name: \"Create\",\n                    enable: false\n                },\n                {\n                    name: \"Delete\",\n                    enable: false\n                }\n            ]\n        },\n        {\n            type: \"Owners\",\n            rights: [\n                {\n                    name: \"Read\",\n                    enable: true\n                },\n                {\n                    name: \"Modify\",\n                    enable: true\n                },\n                {\n                    name: \"Create\",\n                    enable: true\n                },\n                {\n                    name: \"Delete\",\n                    enable: true\n                }\n            ]\n        }\n    ];\n}\n`;\n\n@Component({\n  selector: 'clr-boolean-selection-tree-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: './boolean-selection-tree.html',\n})\nexport class BooleanSelectionTreeDemo {\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  permissions: any = [\n    {\n      type: 'Authenticated Users',\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: true,\n        },\n        {\n          name: 'Create',\n          enable: false,\n        },\n        {\n          name: 'Delete',\n          enable: false,\n        },\n      ],\n    },\n    {\n      type: 'Owners',\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: true,\n        },\n        {\n          name: 'Create',\n          enable: true,\n        },\n        {\n          name: 'Delete',\n          enable: true,\n        },\n      ],\n    },\n    {\n      type: 'Public',\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: false,\n        },\n        {\n          name: 'Create',\n          enable: false,\n        },\n        {\n          name: 'Delete',\n          enable: false,\n        },\n      ],\n    },\n  ];\n\n  get displayPermissions(): string {\n    return JSON.stringify(this.permissions, null, '  ');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "accessors": {
        "displayPermissions": {
          "name": "displayPermissions",
          "getSignature": {
            "name": "displayPermissions",
            "type": "string",
            "returnType": "string",
            "line": 152
          }
        }
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-md-4\">\n       <clr-tree>\n            <clr-tree-node [clrExpanded]=\"true\">\n                Permissions\n                <clr-tree-node *ngFor=\"let permission of permissions\" [clrExpanded]=\"true\">\n                    {{permission.type}}\n                    <clr-tree-node *ngFor=\"let right of permission.rights\"\n                                [clrSelected]=\"right.enable\" (clrSelectedChange)=\"right.enable = !!$event\">\n                        {{right.name}}\n                    </clr-tree-node>\n                </clr-tree-node>\n            </clr-tree-node>\n       </clr-tree>\n    </div>\n    <div class=\"clr-col-12 clr-col-md-8\">\n        <pre class=\"example-display-json\">{{displayPermissions}}</pre>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"exampleTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n"
    },
    {
      "name": "ButtonGroupAngularBasicStructureDemo",
      "id": "component-ButtonGroupAngularBasicStructureDemo-80645fc0be50e3701ca4831db8065eb8",
      "file": "src/website/src/app/documentation/demos/button-group/angular-basic-structure.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-angular-basic-structure-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./angular-basic-structure.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-button-group class=\"btn-primary\">\n    <clr-button>Create</clr-button>\n    <clr-button>Favorite</clr-button>\n    <clr-button [clrInMenu]=\"true\">Assign</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`;\n\n@Component({\n  selector: 'clr-button-group-angular-basic-structure-demo',\n  templateUrl: './angular-basic-structure.html',\n})\nexport class ButtonGroupAngularBasicStructureDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <clr-button-group class=\"btn-primary\">\n        <clr-button>Create</clr-button>\n        <clr-button>Favorite</clr-button>\n        <clr-button [clrInMenu]=\"true\">Assign</clr-button>\n        <clr-button [clrInMenu]=\"true\">Download</clr-button>\n        <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n    </clr-button-group>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n\n\n\n"
    },
    {
      "name": "ButtonGroupAngularDirectionsDemo",
      "id": "component-ButtonGroupAngularDirectionsDemo-a2365690ad67bc2e9de6652a918ae608",
      "file": "src/website/src/app/documentation/demos/button-group/angular-directions.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-angular-directions-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./angular-directions.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-button-group [clrMenuPosition]=\"'bottom-right'\">\n    <clr-button class=\"btn\">Add</clr-button>\n    <clr-button class=\"btn\">Edit</clr-button>\n    <clr-button class=\"btn\">Download</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Assign</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`;\n\n@Component({\n  selector: 'clr-button-group-angular-directions-demo',\n  templateUrl: './angular-directions.html',\n})\nexport class ButtonGroupAngularDirectionsDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example space-below\">\n    <clr-button-group [clrMenuPosition]=\"'bottom-right'\">\n        <clr-button class=\"btn\">Add</clr-button>\n        <clr-button class=\"btn\">Edit</clr-button>\n        <clr-button class=\"btn\">Download</clr-button>\n        <clr-button class=\"btn\" [clrInMenu]=\"true\">Assign</clr-button>\n        <clr-button class=\"btn\" [clrInMenu]=\"true\">Move</clr-button>\n        <clr-button class=\"btn\" [clrInMenu]=\"true\">Delete</clr-button>\n    </clr-button-group>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n\n\n\n"
    },
    {
      "name": "ButtonGroupAngularTypes",
      "id": "component-ButtonGroupAngularTypes-dbde59ee710ca60c664978fa4c1e447c",
      "file": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-angular-types-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./angular-types.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample1",
          "defaultValue": "HTML_EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "htmlExample2",
          "defaultValue": "HTML_EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "htmlExample3",
          "defaultValue": "HTML_EXAMPLE_3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE_1 = `\n<clr-button-group class=\"btn-primary\">\n    <clr-button>Add</clr-button>\n    <clr-button>Edit</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`;\n\nconst HTML_EXAMPLE_2 = `\n<clr-button-group>\n    <clr-button>Add</clr-button>\n    <clr-button>Edit</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`;\n\nconst HTML_EXAMPLE_3 = `\n&lt;clr-button-group class=&quot;btn-link&quot;&gt;\n    &lt;clr-button&gt;Add&lt;/clr-button&gt;\n    &lt;clr-button&gt;Edit&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Download&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Move&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Delete&lt;/clr-button&gt;\n&lt;/clr-button-group&gt;\n`;\n\n@Component({\n  selector: 'clr-button-group-angular-types-demo',\n  templateUrl: './angular-types.html',\n})\nexport class ButtonGroupAngularTypes {\n  htmlExample1 = HTML_EXAMPLE_1;\n  htmlExample2 = HTML_EXAMPLE_2;\n  htmlExample3 = HTML_EXAMPLE_3;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h5>Primary</h5>\n<div class=\"clr-example\">\n    <clr-button-group class=\"btn-primary\">\n        <clr-button>Add</clr-button>\n        <clr-button>Edit</clr-button>\n        <clr-button [clrInMenu]=\"true\">Download</clr-button>\n        <clr-button [clrInMenu]=\"true\">Move</clr-button>\n        <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n    </clr-button-group>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample1\"></clr-code-snippet>\n\n<h5>Outline</h5>\n<div class=\"clr-example\">\n    <clr-button-group>\n        <clr-button>Add</clr-button>\n        <clr-button>Edit</clr-button>\n        <clr-button [clrInMenu]=\"true\">Download</clr-button>\n        <clr-button [clrInMenu]=\"true\">Move</clr-button>\n        <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n    </clr-button-group>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample2\"></clr-code-snippet>\n\n<h5>Flat</h5>\n<div class=\"clr-example\">\n    <clr-button-group class=\"btn-link\">\n        <clr-button>Add</clr-button>\n        <clr-button>Edit</clr-button>\n        <clr-button [clrInMenu]=\"true\">Download</clr-button>\n        <clr-button [clrInMenu]=\"true\">Move</clr-button>\n        <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n    </clr-button-group>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample3\"></clr-code-snippet>\n"
    },
    {
      "name": "ButtonGroupBasicStructureDemo",
      "id": "component-ButtonGroupBasicStructureDemo-fa6a203903532bb78663043075dbc4a7",
      "file": "src/website/src/app/documentation/demos/button-group/basic-structure.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-basic-structure-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./basic-structure.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample1",
          "defaultValue": "HTML_EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "htmlExample2",
          "defaultValue": "HTML_EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE_1 = `\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`;\n\nconst HTML_EXAMPLE_2 = `\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">Download</button>\n            <button class=\"btn\">Delete</button>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-button-group-basic-structure-demo',\n  templateUrl: './basic-structure.html',\n})\nexport class ButtonGroupBasicStructureDemo {\n  htmlExample1 = HTML_EXAMPLE_1;\n  htmlExample2 = HTML_EXAMPLE_2;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"btn-group btn-primary\">\n        <button class=\"btn\">Add</button>\n        <button class=\"btn\">Edit</button>\n        <button class=\"btn\">Download</button>\n        <button class=\"btn\">Delete</button>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample1\"></clr-code-snippet>\n\n<h5>Overflow</h5>\n\n<div class=\"clr-example\" style=\"min-height:144px\">\n    <div class=\"btn-group btn-primary\">\n        <button class=\"btn\">Add</button>\n        <button class=\"btn\">Edit</button>\n        <div class=\"btn-group-overflow open\">\n            <button class=\"btn dropdown-toggle\">\n                <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n            </button>\n            <div class=\"dropdown-menu\">\n                <button class=\"btn\">Download</button>\n                <button class=\"btn\">Delete</button>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample2\"></clr-code-snippet>\n\n\n\n"
    },
    {
      "name": "ButtonGroupCheckboxDemo",
      "id": "component-ButtonGroupCheckboxDemo-e36ce37ffc6c884a3cbf08772335f668",
      "file": "src/website/src/app/documentation/demos/button-group/checkbox.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-checkbox-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./checkbox.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample1",
          "defaultValue": "HTML_EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE_1 = `\n<div class=\"btn-group\">\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-1\">\n        <label for=\"btn-demo-check-1\">Apples</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-2\" checked>\n        <label for=\"btn-demo-check-2\">Oranges</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-3\">\n        <label for=\"btn-demo-check-3\">Kiwis</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-4 checked\">\n        <label for=\"btn-demo-check-4\">Pears</label>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-button-group-checkbox-demo',\n  templateUrl: './checkbox.html',\n})\nexport class ButtonGroupCheckboxDemo {\n  htmlExample1 = HTML_EXAMPLE_1;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"btn-group\">\n        <div class=\"checkbox btn\">\n            <input type=\"checkbox\" id=\"btn-demo-check-1\">\n            <label for=\"btn-demo-check-1\">Apples</label>\n        </div>\n        <div class=\"checkbox btn\">\n            <input type=\"checkbox\" id=\"btn-demo-check-2\" checked>\n            <label for=\"btn-demo-check-2\">Oranges</label>\n        </div>\n        <div class=\"checkbox btn\">\n            <input type=\"checkbox\" id=\"btn-demo-check-3\">\n            <label for=\"btn-demo-check-3\">Kiwis</label>\n        </div>\n        <div class=\"checkbox btn\">\n            <input type=\"checkbox\" id=\"btn-demo-check-4\" checked>\n            <label for=\"btn-demo-check-4\">Pears</label>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample1\"></clr-code-snippet>\n"
    },
    {
      "name": "ButtonGroupDemo",
      "id": "component-ButtonGroupDemo-7d713298420f3d6858029e3d6f52aab8",
      "file": "src/website/src/app/documentation/demos/button-group/button-group.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./button-group.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "accessibilityExample",
          "defaultValue": "ACCESSIBILITY_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nconst ACCESSIBILITY_EXAMPLE = `\n<div class=\"btn-group btn-primary btn-icon\">\n    <button class=\"btn\">\n        <clr-icon shape=\"check\" title=\"Check\"></clr-icon>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"home\" title=\"home\"></clr-icon>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"user\" title=\"user\"></clr-icon>\n    </button>\n</div>\n`;\n\n@Component({\n  selector: 'clr-button-group-demo',\n  templateUrl: './button-group.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class ButtonGroupDemo extends ClarityDocComponent {\n  accessibilityExample = ACCESSIBILITY_EXAMPLE;\n  constructor() {\n    super('button-group');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 32
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n\n        <h5 class=\"component-summary\" id=\"buttons-header\">\n            Button groups are for creating collections of similar type action buttons.\n        </h5>\n\n        <div id=\"design-guidelines\">\n            <h3>Design Guidelines</h3>\n            <p>\n                Button groups follow normal <a routerLink=\"../../buttons\">Button</a>\n                design guidelines. All Button options regarding classes and sizes apply to\n                Button Groups. All features below are available with Solid, Outline and Flat in\n                normal and small sizes.\n            </p>\n\n            <h3>Three different types</h3>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">Solid</button>\n                                    <button class=\"btn\">Group</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                Solid button groups direct the user's attention to the\n                                <b>primary actions</b> the application is suggesting the\n                                user take.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-lg-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group\">\n                                    <button class=\"btn\">Outline</button>\n                                    <button class=\"btn\">Group</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                Outline groups are used to indicate a set of\n                                <b>secondary actions</b> or to reduce the visual\n                                noise on a page.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-lg-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-link\">\n                                    <button class=\"btn\">Flat</button>\n                                    <button class=\"btn\">Group</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                Flat button groups are used as a set of\n                                <b>tertiary actions</b>. They are also typically\n                                used in Cards and above Datagrids.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Mixed Classes</h3>\n\n            <h5>Button Arrangement</h5>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">Favorite</button>\n                                    <button class=\"btn btn-success\">Add</button>\n                                    <button class=\"btn btn-danger\">Delete</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Arrange <b>primary</b> actions on the left,\n                                followed by <b>secondary</b> actions, and\n                                <b>warning</b> actions as the last button in\n                                a group.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn btn-danger\">Delete</button>\n                                    <button class=\"btn btn-success\">Add</button>\n                                    <button class=\"btn\">Favorite</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Arrange <b>warning</b> actions as the first button in a group\n                                or have <b>secondary</b> actions before <b>primary</b> actions.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <h5>Group Style</h5>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">Create</button>\n                                    <button class=\"btn\">Favorite</button>\n                                    <button class=\"btn\" disabled>Download</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Mix similar styled classes together to suit the\n                                solution's needs.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">Create</button>\n                                    <button class=\"btn\">Favorite</button>\n                                    <button class=\"btn btn-outline-success\" disabled>Download</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Mix differently styled classes together,\n                                like solid and outlined.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Icons</h3>\n\n            <h5>Width & Spacing</h5>\n\n            <div class=\"clr-row\">\n\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary btn-icon\">\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"check\" title=\"check\"></clr-icon>\n                                    </button>\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"home\" title=\"home\"></clr-icon>\n                                    </button>\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"user\" title=\"user\"></clr-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Types & Sizes</h6>\n                            <p>\n                                Icon button groups are available in the solid, outline, and flat types. It’s also best to\n                                use the normal (36px) sized ones. This makes them easier to recognize and to click.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary btn-sm btn-icon\">\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"check\" title=\"check\"></clr-icon>\n                                    </button>\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"home\" title=\"home\"></clr-icon>\n                                    </button>\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"user\" title=\"user\"></clr-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Use small icon buttons in most cases. They are difficult to see and distinguish what\n                                the icon is or represents. They also create smaller click targets, making them harder to\n                                click.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"check\"></clr-icon>\n                                        Check\n                                    </button>\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"home\"></clr-icon>\n                                        Home\n                                    </button>\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"user\"></clr-icon>\n                                        User Profile\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>With Text</h6>\n                            <p>\n                                If you have the space, adding text helps users understand the action. Start icon buttons\n                                with icons and follow with text.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">\n                                        Check\n                                        <clr-icon shape=\"check\"></clr-icon>\n                                    </button>\n                                    <button class=\"btn\">\n                                        Home\n                                        <clr-icon shape=\"home\"></clr-icon>\n                                    </button>\n                                    <button class=\"btn\">\n                                        User Profile\n                                        <clr-icon shape=\"user\"></clr-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Start icon buttons with text and follow with icon. This makes them more difficult to scan\n                                quickly.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Accessibility</h3>\n            <p>\n                If your icon button has no text, we recommend adding the <code class=\"clr-code\">title=\"\"</code> attribute to\n                your icon buttons. This adds some additional context for users unfamiliar with what action your icon button\n                might produce. The text should reflect the action being completed.\n            </p>\n\n            <clr-code-snippet [clrCode]=\"accessibilityExample\"></clr-code-snippet>\n\n            <h3>Overflow</h3>\n\n            <p>\n                Overflow is used when the button group is larger than its containing space, or used\n                to preserve space. The overflow is configurable so you can assign button actions to the\n                dropdown menu.\n            </p>\n\n            <h5>Interaction</h5>\n\n            <ul class=\"list\">\n                <li>\n                    Overflow button is shown below as an ellipsis button in the button\n                    group and is the last position to the right\n                </li>\n                <li>Clicking on the ellipsis will show the overflow dropdown menu</li>\n            </ul>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block not-centered\" style=\"min-height:172px\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">\n                                        Create\n                                    </button>\n                                    <button class=\"btn\">\n                                        Favorite\n                                    </button>\n                                    <div class=\"btn-group-overflow open\">\n                                        <button class=\"btn dropdown-toggle\">\n                                            <clr-icon shape=\"ellipsis-horizontal\" title=\"Expand dropdown\"></clr-icon>\n                                        </button>\n                                        <div class=\"dropdown-menu\">\n                                            <button class=\"btn\">Download</button>\n                                            <button class=\"btn\">Delete</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h5>Icons</h5>\n\n            <ul class=\"list\">\n                <li>\n                    Button groups with text and icons, or just icons, will have text show in\n                    the dropdown menu\n                </li>\n                <li>Text for each action icon is needed for overflow to work properly</li>\n            </ul>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block not-centered\" style=\"min-height:172px\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"check\" title=\"Add\"></clr-icon>\n                                        Add\n                                    </button>\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"folder\" title=\"Folder\"></clr-icon>\n                                        Folder\n                                    </button>\n                                    <div class=\"btn-group-overflow open\">\n                                        <button class=\"btn dropdown-toggle\">\n                                            <clr-icon shape=\"ellipsis-horizontal\" title=\"Expand dropdown\"></clr-icon>\n                                        </button>\n                                        <div class=\"dropdown-menu\">\n                                            <button class=\"btn\">\n                                                <clr-icon shape=\"download\" title=\"Download\"></clr-icon>\n                                                Download\n                                            </button>\n                                            <button class=\"btn\">\n                                                <clr-icon shape=\"refresh\" title=\"Refresh\"></clr-icon>\n                                                Refresh\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block not-centered\" style=\"min-height:172px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary btn-icon\">\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"check\" title=\"Add\"></clr-icon>\n                                    </button>\n                                    <button class=\"btn\">\n                                        <clr-icon shape=\"folder\" title=\"Folder\"></clr-icon>\n                                    </button>\n                                    <div class=\"btn-group-overflow open\">\n                                        <button class=\"btn dropdown-toggle\">\n                                            <clr-icon shape=\"ellipsis-horizontal\" title=\"Expand dropdown\"></clr-icon>\n                                        </button>\n                                        <div class=\"dropdown-menu\">\n                                            <button class=\"btn\">\n                                                <clr-icon shape=\"download\"></clr-icon>\n                                                <span class=\"clr-icon-title\">Download</span>\n                                            </button>\n                                            <button class=\"btn\">\n                                                <clr-icon shape=\"refresh\"></clr-icon>\n                                                <span class=\"clr-icon-title\">Refresh</span>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Multiple Groups</h3>\n\n            <p>Use when you want similar actions to be grouped together and separated from others.</p>\n\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-primary\" style=\"margin-right: 12px\">\n                                    <button class=\"btn\">Create</button>\n                                    <button class=\"btn\">Edit</button>\n                                </div>\n                                <div class=\"btn-group btn-danger\">\n                                    <button class=\"btn\">Delete</button>\n                                    <button class=\"btn\">Stop</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Lead with <b>primary</b> actions followed by\n                                <b>secondary</b> actions.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group btn-danger\" style=\"margin-right: 12px\">\n                                    <button class=\"btn\">Delete</button>\n                                    <button class=\"btn\">Stop</button>\n                                </div>\n                                <div class=\"btn-group btn-primary\">\n                                    <button class=\"btn\">Create</button>\n                                    <button class=\"btn\">Edit</button>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Lead with <b>secondary</b> actions followed by\n                                <b>primary</b> actions.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Checkbox</h3>\n\n            <p>\n                Use when a small list of options can be selected from, similar to the\n                <a routerLink=\"../../checkboxes\">Checkbox</a> component\n            </p>\n            <ul class=\"list\">\n                <li>blue indicates an option is selected, white (outline) indicates an unselected option</li>\n                <li>user can click the button to select, and click again to deselect</li>\n                <li>can be configured with preselected options</li>\n            </ul>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group\">\n                                    <div class=\"checkbox btn\">\n                                        <input type=\"checkbox\" id=\"cb-1\" checked class=\"btn\" />\n                                        <label for=\"cb-1\">Apples</label>\n                                    </div>\n                                    <div class=\"checkbox btn\">\n                                        <input type=\"checkbox\" id=\"cb-2\" checked class=\"btn\" />\n                                        <label for=\"cb-2\">Oranges</label>\n                                    </div>\n                                    <div class=\"checkbox btn\">\n                                        <input type=\"checkbox\" id=\"cb-3\" class=\"btn\" />\n                                        <label for=\"cb-3\">Kiwis</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Use option labels that are 1-3 short words.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group\">\n                                    <div class=\"checkbox btn\">\n                                        <input type=\"checkbox\" id=\"cb-4\" checked class=\"btn\" />\n                                        <label for=\"cb-4\">Apples</label>\n                                    </div>\n                                    <div class=\"checkbox btn\">\n                                        <input type=\"checkbox\" id=\"cb-5\" class=\"btn\" />\n                                        <label for=\"cb-5\">Fresh Local Gold Kiwis</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Use option labels that are long or more than 3 words.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Radio</h3>\n\n            <p>\n                Use when selecting one option from a small list of options, similar to the\n                <a routerLink=\"../../radios\">Radio</a> component\n            </p>\n            <ul class=\"list\">\n                <li>blue indicates an option is selected, white (outline) indicates an unselected option</li>\n                <li>user can click the button to select, and click again to deselect</li>\n                <li>can be configured with preselected options</li>\n            </ul>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group\">\n                                    <div class=\"radio btn\">\n                                        <input type=\"radio\" name=\"btn-group-radios\" id=\"btn-radio-1\" checked>\n                                        <label for=\"btn-radio-1\">Pears</label>\n                                    </div>\n                                    <div class=\"radio btn\">\n                                        <input type=\"radio\" name=\"btn-group-radios\" id=\"btn-radio-2\">\n                                        <label for=\"btn-radio-2\">Kiwis</label>\n                                    </div>\n                                    <div class=\"radio btn\">\n                                        <input type=\"radio\" name=\"btn-group-radios\" id=\"btn-radio-3\">\n                                        <label for=\"btn-radio-3\">Oranges</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Use option labels that are 1-3 short words.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-lg-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <div class=\"btn-group\">\n                                    <div class=\"radio btn\">\n                                        <input type=\"radio\" name=\"btn-group-radios-1\" id=\"btn-radio-4\" checked>\n                                        <label for=\"btn-radio-4\">Pears</label>\n                                    </div>\n                                    <div class=\"radio btn\">\n                                        <input type=\"radio\" name=\"btn-group-radios-1\" id=\"btn-radio-5\">\n                                        <label for=\"btn-radio-5\">Fresh Local Gold Kiwis</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Use option labels that are long or more than 3 words.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <p>Clarity defines three button group types:</p>\n            <ul class=\"list\">\n                <li><b>Solid</b>. A solid background with light text. These buttons are prominent on the page.</li>\n                <li><b>Outline.</b> A transparent background with colored border and text. On hover, the button fills with\n                    color.\n                </li>\n                <li><b>Flat.</b> Text in Action Blue, used to indicate an action.</li>\n            </ul>\n\n            <h4>Basic Structure</h4>\n\n            <clr-button-group-basic-structure-demo></clr-button-group-basic-structure-demo>\n\n            <h4>Types</h4>\n\n            <p>\n                Clarity <a routerLink=\"../../buttons\">Buttons</a> primary, outline and flat\n                classes can be used along with the <code class=\"clr-code\">.btn-group</code> class to style the\n                buttons in a Button Group.\n            </p>\n\n            <clr-button-group-types-demo></clr-button-group-types-demo>\n\n            <h4>Mixed</h4>\n\n            <p>\n                Override a Button type in a Button Group by extending the Button type class\n                directly on the corresponding Button.\n            </p>\n\n            <clr-button-group-mixed-demo></clr-button-group-mixed-demo>\n\n            <h4>Icons</h4>\n\n            <p>\n                Text wrapped in <code class=\"clr-code\">.clr-icon-title</code> is only displayed\n                in the Overflow Menu.\n            </p>\n\n            <clr-button-group-icons-demo></clr-button-group-icons-demo>\n\n            <h4>Checkbox</h4>\n\n            <clr-button-group-checkbox-demo></clr-button-group-checkbox-demo>\n\n            <h4>Radio</h4>\n\n            <clr-button-group-radio-demo></clr-button-group-radio-demo>\n\n            <h2 id=\"angular-component\">Angular Component</h2>\n\n            <h3 id=\"summary-of-options\">Summary of Options</h3>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"left hidden-xs-down\">Values</th>\n                    <th class=\"left hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrInMenu]</b>\n                        <div class=\"left hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"left hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">true, false</td>\n                    <td class=\"left hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Input which determines if the button is in the menu or inline.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrMenuPosition]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>Direction classnames</div>\n                        <div class=\"hidden-sm-up\">Default: \"bottom-left\"</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        CSS dropdown menu direction classnames.\n                    </td>\n                    <td class=\"left hidden-xs-down\">Bottom-left</td>\n                    <td class=\"left\">Sets the direction in which the menu will open.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[name]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>String</div>\n                        <div class=\"hidden-sm-up\">N/A</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        String\n                    </td>\n                    <td class=\"left hidden-xs-down\">N/A</td>\n                    <td class=\"left\">adds a name attribute with the value specified in the input</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[type]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>String</div>\n                        <div class=\"hidden-sm-up\">submit</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        String\n                    </td>\n                    <td class=\"left hidden-xs-down\">submit</td>\n                    <td class=\"left\">adds a type attribute with the value specified in the input</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[disabled]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>boolean</div>\n                        <div class=\"hidden-sm-up\">false</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        boolean\n                    </td>\n                    <td class=\"left hidden-xs-down\">false</td>\n                    <td class=\"left\">adds a disabled attribute if the input is set to true</td>\n                </tr>\n                </tbody>\n            </table>\n\n            <p>\n                Use the <code class=\"clr-code\">clrInMenu</code> input to determine if a Button\n                belongs in the Overflow Menu or not.\n            </p>\n\n            <clr-button-group-angular-basic-structure-demo></clr-button-group-angular-basic-structure-demo>\n\n            <h4>Directions</h4>\n\n            <clr-button-group-angular-directions-demo></clr-button-group-angular-directions-demo>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "ButtonGroupIconsDemo",
      "id": "component-ButtonGroupIconsDemo-f8f166e0c766869af07e29ea2287dee6",
      "file": "src/website/src/app/documentation/demos/button-group/icons.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-icons-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./icons.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "htmlExample2",
          "defaultValue": "HTML_EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 70
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"btn-group btn-primary btn-icon\">\n    <button class=\"btn\">\n        <clr-icon shape=\"home\"></clr-icon>\n        <span class=\"clr-icon-title\">Home</span>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"cog\"></clr-icon>\n        <span class=\"clr-icon-title\">Settings</span>\n    </button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">\n                <clr-icon shape=\"user\"></clr-icon>\n                <span class=\"clr-icon-title\">User</span>\n            </button>\n            <button class=\"btn\">\n                <clr-icon shape=\"cloud\"></clr-icon>\n                <span class=\"clr-icon-title\">Cloud</span>\n            </button>\n        </div>\n    </div>\n</div>\n`;\n\nconst HTML_EXAMPLE_2 = `\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">\n        <clr-icon shape=\"home\"></clr-icon>\n        Home\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"cog\"></clr-icon>\n        Settings\n    </button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">\n                <clr-icon shape=\"user\"></clr-icon>\n                User\n            </button>\n            <button class=\"btn\">\n                <clr-icon shape=\"cloud\"></clr-icon>\n                Cloud\n            </button>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-button-group-icons-demo',\n  templateUrl: './icons.html',\n})\nexport class ButtonGroupIconsDemo {\n  htmlExample = HTML_EXAMPLE;\n  htmlExample2 = HTML_EXAMPLE_2;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\" style=\"min-height:144px\">\n    <div class=\"btn-group btn-primary btn-icon\">\n        <button class=\"btn\">\n            <clr-icon shape=\"home\"></clr-icon>\n            <span class=\"clr-icon-title\">Home</span>\n        </button>\n        <button class=\"btn\">\n            <clr-icon shape=\"cog\"></clr-icon>\n            <span class=\"clr-icon-title\">Settings</span>\n        </button>\n        <div class=\"btn-group-overflow open\">\n            <button class=\"btn dropdown-toggle\">\n                <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n            </button>\n            <div class=\"dropdown-menu\">\n                <button class=\"btn\">\n                    <clr-icon shape=\"user\"></clr-icon>\n                    <span class=\"clr-icon-title\">User</span>\n                </button>\n                <button class=\"btn\">\n                    <clr-icon shape=\"cloud\"></clr-icon>\n                    <span class=\"clr-icon-title\">Cloud</span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n\n<h5>With Text</h5>\n<div class=\"clr-example\" style=\"min-height:144px\">\n    <div class=\"btn-group btn-primary\">\n        <button class=\"btn\">\n            <clr-icon shape=\"home\"></clr-icon>\n            Home\n        </button>\n        <button class=\"btn\">\n            <clr-icon shape=\"cog\"></clr-icon>\n            Settings\n        </button>\n        <div class=\"btn-group-overflow open\">\n            <button class=\"btn dropdown-toggle\">\n                <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n            </button>\n            <div class=\"dropdown-menu\">\n                <button class=\"btn\">\n                    <clr-icon shape=\"user\"></clr-icon>\n                    User\n                </button>\n                <button class=\"btn\">\n                    <clr-icon shape=\"cloud\"></clr-icon>\n                    Cloud\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample2\"></clr-code-snippet>"
    },
    {
      "name": "ButtonGroupRadioDemo",
      "id": "component-ButtonGroupRadioDemo-036e263964fdc636b6715561929e149d",
      "file": "src/website/src/app/documentation/demos/button-group/radio.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-radio-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./radio.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"btn-group\">\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-1\">\n        <label for=\"btn-demo-radio-1\">Apples</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-2\">\n        <label for=\"btn-demo-radio-2\">Oranges</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\">\n        <label for=\"btn-demo-radio-3\">Kiwis</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-4\" checked>\n        <label for=\"btn-demo-radio-4\">Pears</label>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-button-group-radio-demo',\n  templateUrl: './radio.html',\n})\nexport class ButtonGroupRadioDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"btn-group\">\n        <div class=\"radio btn\">\n            <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-1\">\n            <label for=\"btn-demo-radio-1\">Apples</label>\n        </div>\n        <div class=\"radio btn\">\n            <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-2\">\n            <label for=\"btn-demo-radio-2\">Oranges</label>\n        </div>\n        <div class=\"radio btn\">\n            <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\">\n            <label for=\"btn-demo-radio-3\">Kiwis</label>\n        </div>\n        <div class=\"radio btn\">\n            <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-4\" checked>\n            <label for=\"btn-demo-radio-4\">Pears</label>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>"
    },
    {
      "name": "ButtonGroupTypes",
      "id": "component-ButtonGroupTypes-ed21f74141907c39db79a0757474c683",
      "file": "src/website/src/app/documentation/demos/button-group/types.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-types-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./types.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample1",
          "defaultValue": "HTML_EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "htmlExample2",
          "defaultValue": "HTML_EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "htmlExample3",
          "defaultValue": "HTML_EXAMPLE_3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "htmlExample4",
          "defaultValue": "HTML_EXAMPLE_4",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE_1 = `\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`;\n\nconst HTML_EXAMPLE_2 = `\n<div class=\"btn-group\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`;\n\nconst HTML_EXAMPLE_3 = `\n<div class=\"btn-group btn-link\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`;\n\nconst HTML_EXAMPLE_4 = `\n<div class=\"btn-group btn-outline-primary btn-sm\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`;\n\n@Component({\n  selector: 'clr-button-group-types-demo',\n  templateUrl: './types.html',\n})\nexport class ButtonGroupTypes {\n  htmlExample1 = HTML_EXAMPLE_1;\n  htmlExample2 = HTML_EXAMPLE_2;\n  htmlExample3 = HTML_EXAMPLE_3;\n  htmlExample4 = HTML_EXAMPLE_4;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h5>Primary</h5>\n<div class=\"clr-example\">\n    <div class=\"btn-group btn-primary\">\n        <button class=\"btn\">Add</button>\n        <button class=\"btn\">Edit</button>\n        <button class=\"btn\">Download</button>\n        <button class=\"btn\">Delete</button>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample1\"></clr-code-snippet>\n\n<h5>Outline</h5>\n<div class=\"clr-example\">\n    <div class=\"btn-group\">\n        <button class=\"btn\">Add</button>\n        <button class=\"btn\">Edit</button>\n        <button class=\"btn\">Download</button>\n        <button class=\"btn\">Delete</button>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample2\"></clr-code-snippet>\n\n<h5>Flat</h5>\n<div class=\"clr-example\">\n    <div class=\"btn-group btn-link\">\n        <button class=\"btn\">Add</button>\n        <button class=\"btn\">Edit</button>\n        <button class=\"btn\">Download</button>\n        <button class=\"btn\">Delete</button>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample3\"></clr-code-snippet>\n\n<h5>Small</h5>\n<div class=\"clr-example\">\n    <div class=\"btn-group btn-outline-primary btn-sm\">\n        <button class=\"btn\">Add</button>\n        <button class=\"btn\">Edit</button>\n        <button class=\"btn\">Download</button>\n        <button class=\"btn\">Delete</button>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample4\"></clr-code-snippet>\n"
    },
    {
      "name": "ButtonLoadingDemo",
      "id": "component-ButtonLoadingDemo-0bd38d63f72ed90c38edfb09abc8b4a4",
      "file": "src/website/src/app/documentation/demos/buttons/button-loading.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-button-loading",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./button-loading.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "mainHTMLExample",
          "defaultValue": "MAIN_HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "mainTSExample",
          "defaultValue": "MAIN_TS_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "submitBtnState",
          "defaultValue": "ClrLoadingState.DEFAULT",
          "type": "ClrLoadingState",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "validateBtnState",
          "defaultValue": "ClrLoadingState.DEFAULT",
          "type": "ClrLoadingState",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [
        {
          "name": "submitDemo",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53
        },
        {
          "name": "validateDemo",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 48
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClrLoadingState } from '@clr/angular';\n\nconst MAIN_TS_EXAMPLE = `\nimport { ClrLoadingState } from '@clr/angular';\n\nexport class ButtonLoadingDemo {\n  validateBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n  submitBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  validateDemo() {\n    this.validateBtnState = ClrLoadingState.LOADING;\n    //Validating Logic\n    this.validateBtnState = ClrLoadingState.SUCCESS;\n  }\n\n  submitDemo() {\n    this.submitBtnState = ClrLoadingState.LOADING;\n    //Submit Logic\n    this.submitBtnState = ClrLoadingState.DEFAULT;\n  }\n}\n    \n`;\n\nconst MAIN_HTML_EXAMPLE = `\n<button [clrLoading]=\"validateBtnState\" class=\"btn btn-info-outline\" (click)=\"validateDemo()\">Validate</button>\n<button [clrLoading]=\"submitBtnState\" type=\"submit\" class=\"btn btn-success-outline\" (click)=\"submitDemo()\">Submit</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-button-loading',\n  templateUrl: './button-loading.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class ButtonLoadingDemo {\n  mainTSExample = MAIN_TS_EXAMPLE;\n  mainHTMLExample = MAIN_HTML_EXAMPLE;\n\n  validateBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n  submitBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  validateDemo() {\n    this.validateBtnState = ClrLoadingState.LOADING;\n    setTimeout(() => (this.validateBtnState = ClrLoadingState.SUCCESS), 1500);\n  }\n\n  submitDemo() {\n    this.submitBtnState = ClrLoadingState.LOADING;\n    setTimeout(() => (this.submitBtnState = ClrLoadingState.DEFAULT), 1500);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "\n<!--\n  ~ Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <p>Use the <code class=\"clr-code\">clrLoading</code> directive to change the state of the spinner button. The directive can be set to one of the following values:</p>\n    <br>\n    <ul>\n        <li><code class=\"clr-code\">ClrLoadingState.DEFAULT</code>: the default state of the button.</li>\n        <li><code class=\"clr-code\">ClrLoadingState.LOADING</code>: replaces the button text with a spinner.</li>\n        <li><code class=\"clr-code\">ClrLoadingState.SUCCESS</code>: briefly shows a check mark, and automatically transition back to the <code class=\"clr-code\">ClrLoadingState.DEFAULT</code> state.</li>\n    </ul>\n    <br>\n    <button [clrLoading]=\"validateBtnState\" class=\"btn btn-info-outline\" (click)=\"validateDemo()\">Validate</button>\n    <button [clrLoading]=\"submitBtnState\" type=\"submit\" class=\"btn btn-success-outline\" (click)=\"submitDemo()\">Submit</button>\n\n    <clr-code-snippet [clrCode]=\"mainHTMLExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n    <clr-code-snippet [clrCode]=\"mainTSExample\" clrLanguage=\"typescript\"></clr-code-snippet>\n</div>\n"
    },
    {
      "name": "ButtonsDemo",
      "id": "component-ButtonsDemo-55c18dc3e26033620d3c18d77304c09a",
      "file": "src/website/src/app/documentation/demos/buttons/buttons.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./buttons.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-buttons-demo',\n  templateUrl: './buttons.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class ButtonsDemo extends ClarityDocComponent {\n  constructor() {\n    super('buttons');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n\n        <h5 class=\"component-summary\" id=\"buttons-header\">Buttons allow an application to communicate action and direct\n            user intent.</h5>\n\n        <div id=\"design-guidelines\">\n            <h3>Three different types</h3>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <button class=\"btn btn-primary\">Solid Button</button>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                Solid buttons look heavy on purpose. They direct the user’s attention to the <b>primary\n                                action</b> the application is suggesting that the user take.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <button class=\"btn\">Outline Button</button>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                Outline buttons provide a lighter weight button style. They are used to indicate a <b>secondary\n                                action</b> that compliments a primary action or to reduce visual noise when there are many\n                                action of <b>equal</b> importance on the\n                                page.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <button class=\"btn btn-link\">Flat Button</button>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                Flat buttons are used in multiple scenarios. They are used as <b>tertiary buttons</b>. They\n                                can also be used inline because they are different from content in style and recognizable as\n                                buttons alongside content.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clrweb-DoxVersusBox\">\n                <div class=\"clrweb-DoxVersusBox-pin\">\n                    <clr-icon shape=\"pin\"></clr-icon>\n                </div>\n                <div class=\"clrweb-DoxVersusBox-items\">\n                    <div class=\"clrweb-DoxVersusBox-itemWrapper\">\n                        <div class=\"clrweb-DoxVersusBox-item\">\n                            <p>\n                                <button class=\"btn btn-link btn-sm\" style=\"padding-left: 0; margin: 0;\">FLAT BUTTON</button>\n                            </p>\n                            <p>Use flat buttons when a user is expected to <b>take an action</b>.</p>\n                        </div>\n                    </div>\n                    <div class=\"clrweb-DoxVersusBox-vsWrapper\">\n                        <div class=\"clrweb-DoxVersusBox-vs\">vs</div>\n                    </div>\n                    <div class=\"clrweb-DoxVersusBox-itemWrapper\">\n                        <div class=\"clrweb-DoxVersusBox-item\">\n                            <p><a href=\"javascript://\">Link</a></p>\n                            <p>Use a link when a user is expected to be <b>taken to a different page</b>.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"placement\">Placement</h3>\n            <p>There are two distinct patterns when it comes to the placement of a button.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 297px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img src=\"assets/images/documentation/buttons/z_pattern.svg\" alt=\"\"/>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Z Pattern</h6>\n                            <p>\n                                The Z-pattern is a natural way for the user to go through content within a <b>constrained\n                                container</b> and when tasks are oriented from the top-left and ending with a <b>primary\n                                call to action on the right bottom side</b> of the\n                                container. This pattern is reversed for right to left languages.\n                            </p>\n                            <div class=\"clrweb-DoxBookmark hidden-md-up\">\n                                <div class=\"clrweb-DoxBookmark-bookmark\">\n                                    <clr-icon shape=\"bookmark\"></clr-icon>\n                                </div>\n                                <p>\n                                    Modals and Wizards follow the Z Pattern\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 297px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img src=\"assets/images/documentation/buttons/f_pattern.svg\" alt=\"\"/>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>F Pattern</h6>\n                            <p>\n                                The F-pattern is a natural way to go through content in an <b>unconstrained container</b>,\n                                such as a form on the page itself. The user will go through the content line-by-line,\n                                arriving at a call to action at the end.\n                            </p>\n                            <div class=\"clrweb-DoxBookmark hidden-md-up\">\n                                <div class=\"clrweb-DoxBookmark-bookmark\">\n                                    <clr-icon shape=\"bookmark\"></clr-icon>\n                                </div>\n                                <p>Forms and Cards follow the F Pattern</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-md-6 hidden-sm-down\">\n                    <div class=\"clrweb-DoxBookmark hidden-sm-down\">\n                        <div class=\"clrweb-DoxBookmark-bookmark\">\n                            <clr-icon shape=\"bookmark\"></clr-icon>\n                        </div>\n                        <p>Modals and Wizards follow the Z Pattern</p>\n                    </div>\n                </div>\n                <div class=\"clr-col-md-6 hidden-sm-down\">\n                    <div class=\"clrweb-DoxBookmark\">\n                        <div class=\"clrweb-DoxBookmark-bookmark\">\n                            <clr-icon shape=\"bookmark\"></clr-icon>\n                        </div>\n                        <p>Forms and Cards follow the F Pattern</p>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"style\">Style</h3>\n\n            <p>Consistent button styles make it easier for a user to recognize areas to take action across an\n                application.</p>\n\n            <h5 id=\"typography\">Typography</h5>\n\n            <p>The text inside of buttons is always <b>uppercase</b>. This indicates action by differentiating button text\n                from links and other content on the page. Use descriptive language on buttons relating to the user’s intent.\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 276px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img src=\"assets/images/documentation/buttons/typography_dont.svg\" alt=\"\"/>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Use generic language not related to the action and not relating to the intent of the user.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 276px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img src=\"assets/images/documentation/buttons/typography_do.svg\" alt=\"\"/>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Use a call to action on buttons.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h5 id=\"visual-style\">Visual Style</h5>\n\n            <h6 id=\"border-radius\">Border Radius</h6>\n\n            <p>Clarity buttons have a border radius of 3px.</p>\n\n            <h6 id=\"size\">Size</h6>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <p>Clarity offers two button sizes:</p>\n                    <ul class=\"list\">\n                        <li>Default height of 36px</li>\n                        <li>Compact height of 24px</li>\n                    </ul>\n\n                    <p>Compact is used in content areas where smaller buttons are needed to de-emphasize calls to action.\n                        This is especially true when multiple actions of equal importance are available.</p>\n                </div>\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <img class=\"clrweb-Img clrweb-Img--popout\" src=\"assets/images/documentation/buttons/button_sizes.png\" alt=\"\"/>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <h6 id=\"primary-color\">Primary Color</h6>\n                    <p>A primary color provides consistency across an application. It trains the user to look for that color\n                        when trying to find an action. Clarity defaults to blue. This “action blue” can be found across all\n                        types of buttons, tabs, and other action-related\n                        components.\n                    </p>\n                </div>\n                <div class=\"clr-col-md-6 hidden-sm-down\">&nbsp;</div>\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <h6 class=\"action-based-color\">Action-based Color</h6>\n                    <p>Different colors may be used based on the severity of an action’s result. For example, using a red\n                        button when “deleting” files indicates high severity.</p>\n                </div>\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <img class=\"clrweb-Img\" src=\"assets/images/documentation/buttons/action_colors.png\" alt=\"\"/>\n                </div>\n            </div>\n\n            <h5>Icons</h5>\n\n            <p>\n                Icon buttons are useful where interface space may be limited. If an icon represents the action well, users\n                can sometimes recognize them quicker than reading text. Lastly, using icon buttons can help in the situation\n                where the use of long labels may be challenging.\n            </p>\n            <p>\n                We recommend you <b>choose an icon that best describes the action</b> that the user will be doing. Users may\n                avoid unknown or abstract icon buttons.\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <button class=\"btn btn-primary btn-icon\" aria-label=\"add\" style=\"margin-right: 12px\">\n                                    <clr-icon shape=\"check\"></clr-icon>\n                                </button>\n                                <button class=\"btn btn-icon\" aria-label=\"favorite\" style=\"margin-right: 12px\">\n                                    <clr-icon shape=\"folder\"></clr-icon>\n                                </button>\n                                <button class=\"btn btn-link btn-icon\" aria-label=\"download\">\n                                    <clr-icon shape=\"cog\"></clr-icon>\n                                </button>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">\n                                Types & Sizes\n                            </h6>\n                            <p>\n                                Icon buttons are available in the solid, outline, and flat types. It’s also best to use the\n                                normal (36px) sized ones. This makes them easier to recognize and to click.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <button class=\"btn btn-primary btn-sm btn-icon\" aria-label=\"add\" style=\"margin-right: 12px\">\n                                    <clr-icon shape=\"check\"></clr-icon>\n                                </button>\n                                <button class=\"btn btn-sm btn-icon\" aria-label=\"favorite\" style=\"margin-right: 12px\">\n                                    <clr-icon shape=\"folder\"></clr-icon>\n                                </button>\n                                <button class=\"btn btn-sm btn-link btn-icon\" aria-label=\"download\">\n                                    <clr-icon shape=\"cog\"></clr-icon>\n                                </button>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Use small icon buttons in most cases. They are difficult to see and distinguish what the\n                                icon is or represents. They also create smaller click targets, making them harder to click.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <button class=\"btn btn-primary btn-icon\" style=\"margin-right: 12px\">\n                                    <clr-icon shape=\"check\"></clr-icon>\n                                    Create\n                                </button>\n                                <button class=\"btn btn-danger btn-icon\">\n                                    <clr-icon shape=\"times\"></clr-icon>\n                                    Delete\n                                </button>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">\n                                With Text\n                            </h6>\n                            <p>\n                                If you have the space, adding text helps users understand the action. Start icon buttons\n                                with icons and follow with text.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <button class=\"btn btn-primary btn-icon\" style=\"margin-right: 12px\">\n                                    Create\n                                    <clr-icon shape=\"check\"></clr-icon>\n                                </button>\n                                <button class=\"btn btn-danger btn-icon\">\n                                    Delete\n                                    <clr-icon shape=\"times\"></clr-icon>\n                                </button>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Start icon buttons with text and follow with icon. This makes them more difficult to scan\n                                quickly.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <h6>Title Attribute</h6>\n                    <p>\n                        If your icon button is has no text, we recommend adding the <code class=\"clr-code\">title=“”</code>\n                        attribute to your icon buttons. This adds some additional context for users unfamiliar with what\n                        action your icon button might produce. Hovering over the icon button for a moment will show a\n                        tooltip that has the <code class=\"clr-code\">title</code> text. The text should reflect the action\n                        being completed.\n                    </p>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img class=\"clrweb-Img\" src=\"assets/images/documentation/buttons/icon-button-title-attribute.png\" alt=\"\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <!--See [Letter Case and Text Legibility in Normal and Low Vision](http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2016-2018788/).-->\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <p>Clarity defines three button styles:</p>\n\n            <ul class=\"list\">\n                <li><strong>Solid.</strong> A solid background with light text. These buttons are prominent on the page.\n                </li>\n                <li><strong>Outline.</strong> A transparent background with colored border and text. On hover, the button\n                    fills with color.\n                </li>\n                <li><strong>Flat.</strong> Text in Action Blue, used to indicate an action.</li>\n            </ul>\n\n            <clr-buttons-demo-real-button class=\"clrweb-button-demo\"></clr-buttons-demo-real-button>\n\n            <h3 id=\"types\">Types</h3>\n\n            <clr-buttons-demo-primary-button class=\"clrweb-button-demo\"></clr-buttons-demo-primary-button>\n\n            <clr-buttons-demo-secondary-button class=\"clrweb-button-demo indent\"></clr-buttons-demo-secondary-button>\n\n            <clr-buttons-demo-tertiary-button class=\"clrweb-button-demo indent\"></clr-buttons-demo-tertiary-button>\n\n            <h3 id=\"states\">States</h3>\n\n            <clr-buttons-demo-button-states class=\"clrweb-button-demo\"></clr-buttons-demo-button-states>\n\n            <h3 id=\"sizes\">Sizes</h3>\n\n            <clr-buttons-demo-button-sizes class=\"clrweb-button-demo\"></clr-buttons-demo-button-sizes>\n\n            <h3 id=\"inverse\">Inverse</h3>\n\n            <clr-buttons-demo-inverse-button class=\"clrweb-button-demo\"></clr-buttons-demo-inverse-button>\n\n            <h3>Icon Buttons</h3>\n\n            <p>\n                Use the <code class=\"clr-code\">.btn-icon</code> class to create Icon Buttons.\n                Make sure to set an appropriate aria-label that describes the action for screen readers.\n            </p>\n\n            <clr-icon-buttons-demo class=\"clrweb-button-demo\"></clr-icon-buttons-demo>\n\n            <h3>Loading Buttons</h3>\n\n            <clr-buttons-demo-button-loading></clr-buttons-demo-button-loading>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "ButtonsIconsDemo",
      "id": "component-ButtonsIconsDemo-f1c2022e34d1f96fb0a3f1feaf8a9b91",
      "file": "src/website/src/app/documentation/demos/buttons/buttons-icons.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-button-icons",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./buttons-icons.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"home\"></clr-icon>\n    Home\n</button>\n\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"directory\"></clr-icon>\n    Directory\n</button>\n\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"cog\"></clr-icon>\n    Settings\n</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-button-icons',\n  templateUrl: './buttons-icons.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class ButtonsIconsDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<button class=\"btn btn-primary\">\n    <clr-icon shape=\"home\"></clr-icon>\n    Home\n</button>\n\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"directory\"></clr-icon>\n    Directory\n</button>\n\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"cog\"></clr-icon>\n    Settings\n</button>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>"
    },
    {
      "name": "ButtonsIconsSmallDemo",
      "id": "component-ButtonsIconsSmallDemo-5b50e249b07481b5429436d67a502ec6",
      "file": "src/website/src/app/documentation/demos/buttons/buttons-icons-sm.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-button-icons-sm",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./buttons-icons-sm.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"home\"></clr-icon>\n    Home\n</button>\n\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"directory\"></clr-icon>\n    Directory\n</button>\n\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"cog\"></clr-icon>\n    Settings\n</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-button-icons-sm',\n  templateUrl: './buttons-icons-sm.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class ButtonsIconsSmallDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"home\"></clr-icon>\n    Home\n</button>\n\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"directory\"></clr-icon>\n    Directory\n</button>\n\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"cog\"></clr-icon>\n    Settings\n</button>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>"
    },
    {
      "name": "ButtonSizesDemo",
      "id": "component-ButtonSizesDemo-15fac1931ef748c9b2ec86481ded7936",
      "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-button-sizes",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./button-sizes.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample1",
          "defaultValue": "HTML_EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "htmlExample2",
          "defaultValue": "HTML_EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "htmlExample3",
          "defaultValue": "HTML_EXAMPLE_3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "htmlExample4",
          "defaultValue": "HTML_EXAMPLE_4",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "htmlExample5",
          "defaultValue": "HTML_EXAMPLE_5",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE_1 = `\n<button class=\"btn\">Regular</button>\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-info\">Info</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn\" disabled>Disabled</button>\n`;\n\nconst HTML_EXAMPLE_2 = `\n<button class=\"btn btn-sm\">Regular</button>\n<button class=\"btn btn-primary btn-sm\">Primary</button>\n<button class=\"btn btn-success btn-sm\">Success</button>\n<button class=\"btn btn-info btn-sm\">Info</button>\n<button class=\"btn btn-warning btn-sm\">Warning</button>\n<button class=\"btn btn-danger btn-sm\">Danger</button>\n<button class=\"btn btn-sm\" disabled>Disabled</button>\n`;\n\nconst HTML_EXAMPLE_3 = `\n<button class=\"btn btn-primary btn-block\">Primary</button>\n<button class=\"btn btn-success btn-block\">Success</button>\n`;\n\nconst HTML_EXAMPLE_4 = `\n<button class=\"btn btn-link\">Flat Regular</button>\n<button class=\"btn btn-link\" disabled>Flat Disabled</button>\n`;\n\nconst HTML_EXAMPLE_5 = `\n<button class=\"btn btn-link btn-sm\">Flat Regular</button>\n<button class=\"btn btn-link btn-sm\" disabled>Flat Disabled</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-button-sizes',\n  templateUrl: './button-sizes.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class ButtonSizesDemo {\n  htmlExample1 = HTML_EXAMPLE_1;\n  htmlExample2 = HTML_EXAMPLE_2;\n  htmlExample3 = HTML_EXAMPLE_3;\n  htmlExample4 = HTML_EXAMPLE_4;\n  htmlExample5 = HTML_EXAMPLE_5;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Normal</h4>\n<button class=\"btn\">Regular</button>\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-info\">Info</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn\" disabled>Disabled</button>\n<clr-code-snippet [clrCode]=\"htmlExample1\"></clr-code-snippet>\n\n<h4>Small</h4>\n<button class=\"btn btn-sm\">Regular</button>\n<button class=\"btn btn-primary btn-sm\">Primary</button>\n<button class=\"btn btn-success btn-sm\">Success</button>\n<button class=\"btn btn-info btn-sm\">Info</button>\n<button class=\"btn btn-warning btn-sm\">Warning</button>\n<button class=\"btn btn-danger btn-sm\">Danger</button>\n<button class=\"btn btn-sm\" disabled>Disabled</button>\n<button class=\"btn btn-sm btn-link\">Regular</button>\n<button class=\"btn btn-sm btn-link\" disabled>Disabled</button>\n<clr-code-snippet [clrCode]=\"htmlExample2\"></clr-code-snippet>\n\n<h4>Normal Flat Buttons</h4>\n<button class=\"btn btn-link\">Flat Regular</button>\n<button class=\"btn btn-link\" disabled>Flat Disabled</button>\n<clr-code-snippet [clrCode]=\"htmlExample4\"></clr-code-snippet>\n\n<h4>Small Flat Buttons</h4>\n<button class=\"btn btn-link btn-sm\">Flat Regular</button>\n<button class=\"btn btn-link btn-sm\" disabled>Flat Disabled</button>\n<clr-code-snippet [clrCode]=\"htmlExample5\"></clr-code-snippet>\n\n<h4>Block</h4>\n<button class=\"btn btn-primary btn-block\">Primary</button>\n<button class=\"btn btn-success btn-block\">Success</button>\n<clr-code-snippet [clrCode]=\"htmlExample3\"></clr-code-snippet>\n\n"
    },
    {
      "name": "ButtonStatesDemo",
      "id": "component-ButtonStatesDemo-1e3708e6a4b236e39b2a73684e361603",
      "file": "src/website/src/app/documentation/demos/buttons/button-states.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-button-states",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./button-states.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<button class=\"btn btn-info-outline\">Info</button>\n<button class=\"btn btn-success-outline\">Success</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-danger\">Danger</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-button-states',\n  templateUrl: './button-states.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class ButtonStatesDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Info, Success and Danger Outline Buttons</h4>\n<button class=\"btn btn-info-outline\">Info</button>\n<button class=\"btn btn-success-outline\">Success</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n\n<h4>Success and Danger Solid Buttons</h4>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-danger\">Danger</button>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "ButtonsTestDemo",
      "id": "component-ButtonsTestDemo-310704a153b2866b6b2ab54607a64794",
      "file": "src/website/src/app/documentation/demos/buttons/buttons-test.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-buttons-test",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./buttons-test.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-buttons-demo-buttons-test',\n  templateUrl: './buttons-test.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class ButtonsTestDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"alert alert-warning\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                This page is for testing all button styles and anchor links styled as buttons.\n                This page should not be published on the website.\n            </div>\n        </div>\n    </div>\n</div>\n\n<h6>Default Button</h6>\n<button class=\"btn\">Default</button>\n\n<h6>Primary Buttons</h6>\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-secondary\">Secondary</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn btn-success\">Success</button>\n\n<h6>Old Outline Buttons</h6>\n<button class=\"btn btn-primary-outline\">Primary</button>\n<button class=\"btn btn-secondary-outline\">Secondary</button>\n<button class=\"btn btn-warning-outline\">Warning</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n<button class=\"btn btn-success-outline\">Success</button>\n\n<h6>New Outline Buttons</h6>\n<button class=\"btn btn-outline-primary\">Primary</button>\n<button class=\"btn btn-outline-secondary\">Secondary</button>\n<button class=\"btn btn-outline-warning\">Warning</button>\n<button class=\"btn btn-outline-danger\">Danger</button>\n<button class=\"btn btn-outline-success\">Success</button>\n\n<h6>Link Buttons</h6>\n<button class=\"btn btn-link\">Link Button</button>\n\n<h6>Inverse Buttons</h6>\n<div style=\"background:#313131;padding:24px\">\n    <button class=\"btn btn-inverse\">Inverse</button>\n</div>\n\n<h6>Block Buttons</h6>\n<button href=\"javascript://\" class=\"btn btn-block\">Block Button</button>\n\n<h6>Small Primary Buttons</h6>\n<button class=\"btn btn-sm btn-primary\">Primary</button>\n<button class=\"btn btn-sm btn-secondary\">Secondary</button>\n<button class=\"btn btn-sm btn-warning\">Warning</button>\n<button class=\"btn btn-sm btn-danger\">Danger</button>\n<button class=\"btn btn-sm btn-success\">Success</button>\n\n<h6>Small Outline Buttons</h6>\n<button class=\"btn btn-sm btn-primary-outline\">Primary</button>\n<button class=\"btn btn-sm btn-secondary-outline\">Secondary</button>\n<button class=\"btn btn-sm btn-warning-outline\">Warning</button>\n<button class=\"btn btn-sm btn-danger-outline\">Danger</button>\n<button class=\"btn btn-sm btn-success-outline\">Success</button>\n\n<!--Links-->\n\n<h6>Default Link</h6>\n<a href=\"javascript://\" class=\"btn\">Default</a>\n\n<h6>Primary Links</h6>\n<a href=\"javascript://\" class=\"btn btn-primary\">Primary</a>\n<a href=\"javascript://\" class=\"btn btn-secondary\">Secondary</a>\n<a href=\"javascript://\" class=\"btn btn-warning\">Warning</a>\n<a href=\"javascript://\" class=\"btn btn-danger\">Danger</a>\n<a href=\"javascript://\" class=\"btn btn-success\">Success</a>\n\n<h6>Old Outline Links</h6>\n<a href=\"javascript://\" class=\"btn btn-primary-outline\">Primary</a>\n<a href=\"javascript://\" class=\"btn btn-secondary-outline\">Secondary</a>\n<a href=\"javascript://\" class=\"btn btn-warning-outline\">Warning</a>\n<a href=\"javascript://\" class=\"btn btn-danger-outline\">Danger</a>\n<a href=\"javascript://\" class=\"btn btn-success-outline\">Success</a>\n\n<h6>New Outline Links</h6>\n<a href=\"javascript://\" class=\"btn btn-outline-primary\">Primary</a>\n<a href=\"javascript://\" class=\"btn btn-outline-secondary\">Secondary</a>\n<a href=\"javascript://\" class=\"btn btn-outline-warning\">Warning</a>\n<a href=\"javascript://\" class=\"btn btn-outline-danger\">Danger</a>\n<a href=\"javascript://\" class=\"btn btn-outline-success\">Success</a>\n\n<h6>Link Links</h6>\n<a href=\"javascript://\" class=\"btn btn-link\">Link</a>\n\n<h6>Inverse Links</h6>\n<div style=\"background:#313131;padding:24px\">\n    <a href=\"javascript://\" class=\"btn btn-inverse\">Inverse</a>\n</div>\n\n<h6>Block Links</h6>\n<a href=\"javascript://\" class=\"btn btn-block\">Block</a>\n\n<h6>Navigate to other websites</h6>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-primary\">Google</a>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-secondary\">Google</a>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-warning\">Google</a>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-danger\">Google</a>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-success\">Google</a>\n\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-outline-primary\">Google</a>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-outline-secondary\">Google</a>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-outline-warning\">Google</a>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-outline-danger\">Google</a>\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-outline-success\">Google</a>\n\n<a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-link\">Google</a>\n\n<div style=\"background:#313131;padding:24px\">\n    <a href=\"https://www.google.com/\" target=\"_block\" class=\"btn btn-inverse\">Google</a>\n</div>\n"
    },
    {
      "name": "CardAlertDemo",
      "id": "component-CardAlertDemo-4087aa3dce5cfa2e37eee21d09f8ede4",
      "file": "src/website/src/app/documentation/demos/card/card-alert.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-card-alert-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-alert.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"card\">\n    <div class=\"card-block\">\n        <div class=\"alert alert-warning alert-sm\">\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n            <div class=\"alert-item static\">\n                <span class=\"alert-text\">\n                    Use small alerts in a card.\n                </span>\n            </div>\n        </div>\n        <div class=\"card-media-block wrap\">\n            <img class=\"card-media-image\" src=\"//placehold.it/60x60\" />\n            <div class=\"card-media-description\">\n                <span class=\"card-media-title\">Project B</span>\n                <span class=\"card-media-text\">Owner: Jane Doe</span>\n            </div>\n        </div>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card-footer\">\n        <a class=\"card-link\">Button One</a>\n        <a class=\"card-link\">Button Two</a>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-card-alert-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-alert.demo.html',\n})\nexport class CardAlertDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <div class=\"alert alert-warning alert-sm\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            Use small alerts in a card.\n                        </span>\n                    </div>\n                </div>\n                <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n            </div>\n            <div class=\"card-media-block wrap\">\n                <img class=\"card-media-image\" src=\"//placehold.it/60x60\" />\n                <div class=\"card-media-description\">\n                    <span class=\"card-media-title\">Project B</span>\n                    <span class=\"card-media-text\">Owner: Jane Doe</span>\n                </div>\n            </div>\n            <p class=\"card-text\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit,\n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi\n                ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                in reprehenderit in voluptate velit esse cillum dolore\n                eu fugiat nulla pariatur.\n            </p>\n        </div>\n        <div class=\"card-footer\">\n            <a class=\"card-link\">Button One</a>\n            <a class=\"card-link\">Button Two</a>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardClickableDemo",
      "id": "component-CardClickableDemo-e407cc22d77ee3d094ceb47948d81d2e",
      "file": "src/website/src/app/documentation/demos/card/card-clickable.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-card-clickable-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-clickable.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\">\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-card-clickable-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-clickable.html',\n})\nexport class CardClickableDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-6 clr-col-12\">\n            <a href=\"javascript://\" class=\"card clickable\">\n                <div class=\"card-img\">\n                    <img src=\"assets/images/documentation/cards/placeholder_350x150.png\">\n                </div>\n                <div class=\"card-block\">\n                    <p class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci consectetur magnam eos amet sit rem. Ipsam maiores incidunt eum quasi enim! Corporis sunt nisi totam molestias quam commodi maxime mollitia.\n                    </p>\n                </div>\n            </a>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardDropdownDemo",
      "id": "component-CardDropdownDemo-51af1c04b38c96f5966581db295f36e7",
      "file": "src/website/src/app/documentation/demos/card/card-dropdown.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-card-dropdown-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-dropdown.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 54
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-title\">\n                    Block\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">\n                    Action 1\n                </button>\n                <button class=\"btn btn-sm btn-link\">\n                    Action 2\n                </button>\n                <div class=\"dropdown top-left open\">\n                    <button class=\"dropdown-toggle btn btn-sm btn-link\">\n                        Dropdown 1\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a href=\"...\" class=\"dropdown-item\">Item 1</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 2</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 3</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 4</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-card-dropdown-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-dropdown.html',\n})\nexport class CardDropdownDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\" ngNonBindable>\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Header\n                </div>\n                <div class=\"card-block\">\n                    <div class=\"card-title\">\n                        Block\n                    </div>\n                    <div class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestias officiis temporibus quod inventore, minus commodi similique corrupti repellat saepe facere aliquam minima deserunt esse nemo, vel illum optio necessitatibus deleniti.\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <button class=\"btn btn-sm btn-link\">\n                        Action 1\n                    </button>\n                    <button class=\"btn btn-sm btn-link\">\n                        Action 2\n                    </button>\n                    <div class=\"dropdown top-left open\">\n                        <button class=\"dropdown-toggle btn btn-sm btn-link\">\n                            Dropdown 1\n                            <clr-icon shape=\"caret down\"></clr-icon>\n                        </button>\n                        <div class=\"dropdown-menu\">\n                            <a href=\"javascript://\" class=\"dropdown-item\">Item 1</a>\n                            <a href=\"javascript://\" class=\"dropdown-item\">Item 2</a>\n                            <a href=\"javascript://\" class=\"dropdown-item\">Item 3</a>\n                            <a href=\"javascript://\" class=\"dropdown-item\">Item 4</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardGridDemo",
      "id": "component-CardGridDemo-a136d3e7337bb2de7c63fd3bbb525500",
      "file": "src/website/src/app/documentation/demos/card/card-grid.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-card-grid-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-grid.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 1</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 1</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 2</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 2</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 3</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 3</a>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-card-grid-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-grid.html',\n})\nexport class CardGridDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-4 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h3 class=\"card-title\">Card 1</h3>\n                    <p class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    </p>\n                </div>\n                <div class=\"card-footer\">\n                    <a href=\"javascript://\" class=\"btn btn-sm btn-link\">Action 1</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h3 class=\"card-title\">Card 2</h3>\n                    <p class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    </p>\n                </div>\n                <div class=\"card-footer\">\n                    <a href=\"javascript://\" class=\"btn btn-sm btn-link\">Action 2</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h3 class=\"card-title\">Card 3</h3>\n                    <p class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    </p>\n                </div>\n                <div class=\"card-footer\">\n                    <a href=\"javascript://\" class=\"btn btn-sm btn-link\">Action 3</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardImagesDemo",
      "id": "component-CardImagesDemo-3fdece87dec8818425fde36c84ea7cac",
      "file": "src/website/src/app/documentation/demos/card/card-images.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-card-images-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-images.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 74
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n        </a>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable card-img\">\n            <img src=\"...\" alt=\"...\" />\n        </a>\n    </div>\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n        </a>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-card-images-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-images.html',\n})\nexport class CardImagesDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-4 clr-col-12\">\n            <a href=\"javascript://\" class=\"card clickable\">\n                <div class=\"card-img\">\n                    <img src=\"assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of Image in a Card\">\n                </div>\n                <div class=\"card-block\">\n                    <p class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci consectetur magnam eos amet sit rem. Ipsam maiores incidunt eum quasi enim! Corporis sunt nisi totam molestias quam commodi maxime mollitia.\n                    </p>\n                </div>\n            </a>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-12\">\n            <a href=\"javascript://\" class=\"card clickable\">\n                <div class=\"card-block\">\n                    <p class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci consectetur magnam eos amet sit rem. Ipsam maiores incidunt eum quasi enim! Corporis sunt nisi totam molestias quam commodi maxime mollitia.\n                    </p>\n                </div>\n                <div class=\"card-img\">\n                    <img src=\"assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of Image in a Card\">\n                </div>\n            </a>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-12\">\n            <a href=\"javascript://\" class=\"card clickable\">\n                <div class=\"card-block\">\n                    <p class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                    </p>\n                </div>\n                <div class=\"card-img\">\n                    <img src=\"assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of Image in a Card\">\n                </div>\n                <div class=\"card-block\">\n                    <p class=\"card-text\">\n                        Ipsam maiores incidunt eum quasi enim!\n                    </p>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-6 clr-col-12\">\n            <a href=\"javascript://\" class=\"card clickable card-img\">\n                <img src=\"assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of Image in a Card\">\n            </a>\n        </div>\n        <div class=\"clr-col-lg-6 clr-col-12\">\n            <a href=\"javascript://\" class=\"card clickable\">\n                <div class=\"card-img\">\n                    <img src=\"assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of Image in a Card\">\n                </div>\n            </a>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardLayoutDemo",
      "id": "component-CardLayoutDemo-5a00714bbebc1ef58aa02398075fce06",
      "file": "src/website/src/app/documentation/demos/card/card-layout.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-card-layout-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-layout.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-5 clr-col-md-8 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-title\">\n                    Block\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Footer Action 1</button>\n                <button class=\"btn btn-sm btn-link\">Footer Action 2</button>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-card-layout-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-layout.html',\n})\nexport class CardLayoutDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-5 clr-col-md-8 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Header\n                </div>\n                <div class=\"card-block\">\n                    <div class=\"card-title\">\n                        Block\n                    </div>\n                    <div class=\"card-text\">\n                        Card content can contain text, links, images, data visualizations, lists and more.\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <button class=\"btn btn-sm btn-link\">Footer Action 1</button>\n                    <button class=\"btn btn-sm btn-link\">Footer Action 2</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardListGroupDemo",
      "id": "component-CardListGroupDemo-33fb10fdb40577d9c04f13378ed57544",
      "file": "src/website/src/app/documentation/demos/card/card-list-group.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-list-group-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-list-group.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"card\">\n    <div class=\"card-img\">\n        <img src=\"...\">\n    </div>\n    <div class=\"card-block\">\n        <h4 class=\"card-title\">Title</h4>\n        <p class=\"card-text\">\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea, aut.\n        Nihil nemo, necessitatibus earum.\n        </p>\n    </div>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Lorem ipsum dolor.</li>\n        <li class=\"list-group-item\">Lorem ipsum dolor sit.</li>\n        <li class=\"list-group-item\">Lorem ipsum.</li>\n    </ul>\n    <div class=\"card-footer\">\n        <a href=\"...\" class=\"btn btn-sm btn-link\">Action 1</a>\n        <a href=\"...\" class=\"btn btn-sm btn-link\">Action 2</a>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-list-group-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-list-group.html',\n})\nexport class CardListGroupDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"card\">\n        <div class=\"card-img\">\n            <img src=\"assets/images/documentation/cards/placeholder_350x150.png\">\n        </div>\n        <div class=\"card-block\">\n            <h4 class=\"card-title\">Title</h4>\n            <p class=\"card-text\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea, aut. Nihil nemo, necessitatibus earum.\n            </p>\n        </div>\n        <ul class=\"list-group\">\n            <li class=\"list-group-item\">Lorem ipsum dolor.</li>\n            <li class=\"list-group-item\">Lorem ipsum dolor sit.</li>\n            <li class=\"list-group-item\">Lorem ipsum.</li>\n        </ul>\n        <div class=\"card-footer\">\n            <a href=\"javascript://\" class=\"btn btn-sm btn-link\">Action 1</a>\n            <a href=\"javascript://\" class=\"btn btn-sm btn-link\">Action 2</a>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardMasonryDemo",
      "id": "component-CardMasonryDemo-e6bdec5ace938bd35878c24073216cd3",
      "file": "src/website/src/app/documentation/demos/card/card-masonry.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-card-masonry-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-masonry.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 93
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"card-columns\">\n    <div class=\"card\">\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div href=\"...\" class=\"card\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <h3 class=\"card-title\">Title</h3>\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-footer\">\n            <a href=\"...\" class=\"btn btn-primary\">Action</a>\n        </div>\n    </div>\n    <a href=\"...\" class=\"card clickable\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n    </a>\n</div>\n`;\n\n@Component({\n  selector: 'clr-card-masonry-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-masonry.html',\n})\nexport class CardMasonryDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"card-columns\">\n        <div class=\"card\">\n            <div class=\"card-img\">\n                <img src=\"assets/images/documentation/cards/placeholder_350x150.png\">\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Ipsam maiores incidunt eum quasi enim!\n                </p>\n            </div>\n        </div>\n        <div class=\"card card-block\">\n            <h3 class=\"card-title\">Title</h3>\n            <p class=\"card-text\">\n                laboris nisi ut aliquip ex ea commodo consequat.\n            </p>\n        </div>\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"assets/images/documentation/cards/placeholder_350x150.png\">\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Ipsam maiores incidunt eum quasi enim!\n                </p>\n            </div>\n        </div>\n        <div class=\"card card-block\">\n            <h3 class=\"card-title\">Title</h3>\n            <p class=\"card-text\">\n                laboris nisi ut aliquip ex ea commodo consequat.\n            </p>\n        </div>\n        <div href=\"javascript://\" class=\"card\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci consectetur magnam eos amet sit rem. Ipsam maiores incidunt eum quasi enim! Corporis sunt nisi totam molestias quam commodi maxime mollitia.\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"assets/images/documentation/cards/placeholder_350x150.png\">\n            </div>\n        </div>\n        <div class=\"card card-block\">\n            <h3 class=\"card-title\">Title</h3>\n            <p class=\"card-text\">\n                laboris nisi ut aliquip ex ea commodo consequat.\n            </p>\n        </div>\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Title</h3>\n                <p class=\"card-text\">\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"javascript://\" class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n        <a href=\"javascript://\" class=\"card clickable\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci consectetur magnam eos amet sit rem. Ipsam maiores incidunt eum quasi enim! Corporis sunt nisi totam molestias quam commodi maxime mollitia.\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"assets/images/documentation/cards/placeholder_350x150.png\">\n            </div>\n        </a>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardMediaBlockDemo",
      "id": "component-CardMediaBlockDemo-946e8d1cccecc88b50e0e9ad2308d689",
      "file": "src/website/src/app/documentation/demos/card/card-media-block.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-card-media-block-demo",
      "styleUrls": ["./card.demo.scss"],
      "styles": [],
      "templateUrl": ["./card-media-block.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 71
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-media-block\">\n                    <img src=\"...\" class=\"card-media-image\">\n                    <div class=\"card-media-description\">\n                        <span class=\"card-media-title\">\n                            Project A\n                        </span>\n                        <span class=\"card-media-text\">\n                            Owner: John Doe\n                        </span>\n                    </div>\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Action</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-media-block wrap\">\n                    <img src=\"...\" class=\"card-media-image\">\n                    <div class=\"card-media-description\">\n                        <span class=\"card-media-title\">\n                            Project B\n                        </span>\n                        <span class=\"card-media-text\">\n                            Owner: Jane Doe\n                        </span>\n                    </div>\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Action</button>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-card-media-block-demo',\n  styleUrls: ['./card.demo.scss'],\n  templateUrl: './card-media-block.html',\n})\nexport class CardMediaBlockDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  & > .card {\n    max-width: $clr_baselineRem_20;\n  }\n\n  &.nomargin {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./card.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Header\n                </div>\n                <div class=\"card-block\">\n                    <div class=\"card-media-block\">\n                        <img src=\"assets/images/documentation/cards/placeholder_60x60.png\" class=\"card-media-image\">\n                        <div class=\"card-media-description\">\n                            <span class=\"card-media-title\">\n                                Project A\n                            </span>\n                            <span class=\"card-media-text\">\n                                Owner: John Doe\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sunt excepturi labore explicabo temporibus, enim voluptate saepe corrupti illum earum eveniet ab veniam vel nisi fugit accusantium perferendis quas facilis quod.\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <button class=\"btn btn-sm btn-link\">Action</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Header\n                </div>\n                <div class=\"card-block\">\n                    <div class=\"card-media-block wrap\">\n                        <img src=\"assets/images/documentation/cards/placeholder_60x60.png\" class=\"card-media-image\">\n                        <div class=\"card-media-description\">\n                            <span class=\"card-media-title\">\n                                Project B\n                            </span>\n                            <span class=\"card-media-text\">\n                                Owner: Jane Doe\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"card-text\">\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum, ipsum?\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <button class=\"btn btn-sm btn-link\">Action</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "CardsDemo",
      "id": "component-CardsDemo-677ff88f53ec868c8eceb9632683fd3d",
      "file": "src/website/src/app/documentation/demos/card/cards.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-cards-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./cards.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-cards-demo',\n  templateUrl: './cards.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class CardsDemo extends ClarityDocComponent {\n  constructor() {\n    super('cards');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"a-card-presents-high-level-information-and-can-guide-the-user-toward-related-actions-and-details\">A card\n            presents high-level information and can guide the user toward related actions and details.</h5>\n\n        <div id=\"code-examples\">\n            <h4 id=\"basic-card\">Basic Card</h4>\n\n            <p>A <code class=\"clr-code\">.card</code> can contain a <code class=\"clr-code\">.card-header</code>,\n                <code class=\"clr-code\">.card-footer</code>, and one or more <code\n                class=\"clr-code\">.card-block</code>s.</p>\n\n            <clr-card-layout-demo></clr-card-layout-demo>\n\n            <h4 id=\"clickable-cards\">Clickable Cards</h4>\n\n            <p>Adding the <code class=\"clr-code\">.clickable</code> class makes the entire card clickable, initiating a\n                single action.</p>\n\n            <clr-card-clickable-demo></clr-card-clickable-demo>\n\n            <h4 id=\"images-in-cards\">Images in Cards</h4>\n\n            <p>A <code class=\"clr-code\">.card-img</code> can be placed anywhere in the card, or it can occupy the entire\n                card.</p>\n\n            <clr-card-images-demo></clr-card-images-demo>\n\n            <h4 id=\"dropdowns-in-cards\">Dropdowns in Cards</h4>\n\n            <p>The footer can contain two actions. For more actions, use a\n                <a routerLink=\"../../dropdowns\">dropdown</a>.</p>\n\n            <clr-card-dropdown-demo></clr-card-dropdown-demo>\n\n            <h4 id=\"card-media-block\">Card Media Block</h4>\n\n            <p>A <code class=\"clr-code\">.card-media-block</code> combines a <code class=\"clr-code\">.card-media-image</code>\n                and <code class=\"clr-code\">.card-media-description</code>. The description can contain a <code\n                class=\"clr-code\">.card-media-title</code> and a <code class=\"clr-code\">.card-media-text</code>.</p>\n\n            <clr-card-media-block-demo></clr-card-media-block-demo>\n\n            <h4 id=\"alerts-in-cards\">Alerts in Cards</h4>\n\n            <p>Cards can contain <a routerLink=\"../../alerts\">alerts</a>.</p>\n\n            <clr-card-alert-demo></clr-card-alert-demo>\n\n            <h4 id=\"lists-in-cards\">Lists in Cards</h4>\n\n            <p>Cards can contain <a routerLink=\"../../lists\">lists</a>.</p>\n\n            <clr-lists-in-cards-demo></clr-lists-in-cards-demo>\n\n            <h4 id=\"list-groups-in-cards\">List Groups in Cards</h4>\n\n            <p>Cards can contain list groups.</p>\n\n            <clr-list-group-demo></clr-list-group-demo>\n\n            <h4 id=\"progress-bars-in-cards\">Progress Bars in Cards</h4>\n\n            <p>Cards can contain <a routerLink=\"../../progress\">progress bars</a>.</p>\n\n            <clr-progress-bar-cards-demo></clr-progress-bar-cards-demo>\n\n            <clr-progress-bar-inline-cards-demo></clr-progress-bar-inline-cards-demo>\n\n            <h4 id=\"card-layout\">Card Layout</h4>\n\n            <p>Clarity recommends using cards in a <a routerLink=\"../../grid\">grid</a> or a CSS column\n                layout.</p>\n\n            <h5 id=\"cards-in-a-grid\">Cards in a Grid</h5>\n\n            <clr-card-grid-demo></clr-card-grid-demo>\n\n            <h5 id=\"cards-in-css-columns\">Cards in CSS Columns</h5>\n\n            <p>Cards can be placed in <code class=\"clr-code\">.card-columns</code>. The default number of columns is\n                three, but can be changed to two or four by adding <code class=\"clr-code\">.card-columns-2</code> or\n                <code class=\"clr-code\">.card-columns-4</code>.</p>\n\n            <clr-card-masonry-demo></clr-card-masonry-demo>\n        </div>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>Example use cases for cards include:</p>\n\n            <ul class=\"list\">\n                <li>Presenting objects, services, or content summaries while providing entry points to more detail</li>\n                <li>Representing applications and initiating actions, such as download</li>\n                <li>Displaying metrics</li>\n            </ul>\n\n            <h3 id=\"content----keep-it-simple\">Content – keep it simple</h3>\n\n            <p>Cards can contain text, images, data visualizations, or multimedia. Ensure that the content serves your\n                use case. Keep it simple and legible. Avoid using too much content, overloading the card with too many\n                actions, and placing links within the content.</p>\n\n            <h3 id=\"calls-to-action\">Calls to action</h3>\n\n            <p>Place the primary action and a single additional action, if required, in the card footer, left-aligned.\n                This placement supports the F-pattern layout.</p>\n\n            <p>For more than two actions, use a <a routerLink=\"../../dropdowns\">dropdown</a>. Do not place more\n                than eight items in the dropdown menu.</p>\n\n            <div class=\"clr-row buttons-modal-gfx\">\n                <div class=\"clr-col-12 clr-col-sm-6\">\n                    <span>\n                        <img src=\"assets/images/documentation/buttons/buttons_in_cards_2.png?1481751307980894000\"\n                            alt=\"Buttons align left in cards\"/>\n                        <p><b><font color=\"#318700\">Do.</font> </b>This card correctly aligns actions on the left.</p>\n                    </span>\n                </div>\n                <div class=\"clr-col-12 clr-col-sm-6\">\n                    <span>\n                        <img src=\"assets/images/documentation/buttons/buttons_in_cards_1.png?1481751307980894000\"\n                            alt=\"Buttons do not align right in cards\"/>\n                        <p><b><font color=\"#e12200\">Don't.</font> </b> Users might not scan to the bottom right of wide\n                            cards.</p>\n                    </span>\n                </div>\n            </div>\n\n            <h3 id=\"clickable-cards----be-predictable\">Clickable cards – be predictable</h3>\n\n            <p>When the entire card is clickable, the resulting action must be an expected outcome. A common action is\n                to navigate to more details. Not every card need be clickable.\n                <!-- A common action is to navigate to more details. -->\n            </p>\n\n            <h3 id=\"progress-bars----be-consistent\">Progress bars – be consistent</h3>\n\n            <div class=\"clr-row buttons-modal-gfx\">\n                <div class=\"clr-col-12 clr-col-sm\">\n                    <span>\n                        Progress bars belong at the card top or above the footer,   closest to the triggering action.\n                        Be consistent with progress bar placement within a card group.\n                    </span>\n                </div>\n                <div class=\"hidden-xs-down clr-col-sm\">\n                    <span>\n                        <img src=\"assets/images/documentation/cards/card_progress.png?1481751307980894000\"/>\n                    </span>\n                </div>\n            </div>\n\n            <h3 id=\"group-cards-by-theme-or-element\">Group cards by theme or element</h3>\n\n            <!-- When grouping cards, consider the mental model you want to convey: -->\n\n            <ul class=\"list\">\n                <li>Homogeneous content facilitates scanning – users quickly find and compare information of interest.\n                    <!-- Objects, applications, and services are typically collected in individual, homogeneous groups.-->\n                </li>\n                <li>Content of varying type often shows “the bigger picture.”\n                    <!-- such a collection might show the number of users logged in, recent tasks, alerts, and\n                        infrastructure to build.  Cards in heterogeneous groups often don't have associated actions. -->\n                </li>\n            </ul>\n\n            <h3 id=\"use-a-grid-for-card-layout\">Use a grid for card layout</h3>\n\n            <p>A grid places cards in fixed rows and columns: more content in less vertical space means less scrolling.\n                It’s easy for users to scan content in this layout. If in doubt, use the grid.</p>\n\n            <h3 id=\"switching-views-cards-and-datagrids\">Switching views: cards and datagrids</h3>\n\n            <p>In homogeneous card groups, consider enabling users to switch between card view and datagrid view. While\n                cards show richer content than a datagrid, a datagrid lists more items at once.</p>\n\n            <p>Toggles for switching between views go in the upper right of the card group. The card group should be the\n                default view.</p>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "CharizardDemo",
      "id": "component-CharizardDemo-f51dd8f7a700f8ec8d4aacf9cfbc8fc7",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charizard.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-charizard-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Charizard</h4>\n<p>\n    Charizard flies around the sky in search of powerful opponents.\n    It breathes fire of such great heat that it melts anything.\n    However, it never turns its fiery breath on any opponent weaker than itself.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Charizard</h4>\n<p>\n  Charizard flies around the sky in search of powerful opponents. \n  It breathes fire of such great heat that it melts anything. \n  However, it never turns its fiery breath on any opponent weaker than itself.\n</p>`;\n\n@Component({\n  selector: 'clr-charizard-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Charizard</h4>\n        <p>\n            Charizard flies around the sky in search of powerful opponents. \n            It breathes fire of such great heat that it melts anything. \n            However, it never turns its fiery breath on any opponent weaker than itself.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n    `,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class CharizardDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "CharmanderDemo",
      "id": "component-CharmanderDemo-87d90566624ba478cc4c208028bead02",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charmander.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-charmander-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Charmander</h4>\n<p>\n    The flame that burns at the tip of its tail is an indication of its emotions.\n    The flame wavers when Charmander is enjoying itself.\n    If the Pokémon becomes enraged, the flame burns fiercely.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Charmander</h4>\n<p>\n  The flame that burns at the tip of its tail is an indication of its emotions.\n  The flame wavers when Charmander is enjoying itself.\n  If the Pokémon becomes enraged, the flame burns fiercely.\n</p>`;\n\n@Component({\n  selector: 'clr-charmander-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Charmander</h4>\n        <p>\n            The flame that burns at the tip of its tail is an indication of its emotions.\n            The flame wavers when Charmander is enjoying itself.\n            If the Pokémon becomes enraged, the flame burns fiercely.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        \n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n    `,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class CharmanderDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "CheckboxesDemo",
      "id": "component-CheckboxesDemo-5416f438aacb6b705c6ba620e49a3f0d",
      "file": "src/website/src/app/documentation/demos/checkboxes/checkboxes.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./checkboxes.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleFour",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "exampleOne",
          "defaultValue": "{\n    one: false,\n    two: false,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "exampleThree",
          "defaultValue": "{\n    one: false,\n    two: false,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "exampleTwo",
          "defaultValue": "{\n    one: false,\n    two: false,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "indeterminateState",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 61
        },
        {
          "name": "ngBasic",
          "defaultValue": "NgBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "ngDisabled",
          "defaultValue": "NgDisabled",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "ngHelpers",
          "defaultValue": "NgHelpers",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "ngIndeterminate",
          "defaultValue": "NgIndeterminate",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "ngInline",
          "defaultValue": "NgInline",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "ngLabel",
          "defaultValue": "NgLabel",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "uiBasic",
          "defaultValue": "UiBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "uiDisabled",
          "defaultValue": "UiDisabled",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "uiError",
          "defaultValue": "UiError",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "uiFull",
          "defaultValue": "UiFull",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "uiInline",
          "defaultValue": "UiInline",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nimport * as UiBasic from 'raw-loader!./ui/basic.html';\nimport * as UiFull from 'raw-loader!./ui/full.html';\nimport * as UiError from 'raw-loader!./ui/error.html';\nimport * as UiInline from 'raw-loader!./ui/inline.html';\nimport * as UiDisabled from 'raw-loader!./ui/disabled.html';\n\nimport * as NgBasic from 'raw-loader!./ng/basic.html';\nimport * as NgLabel from 'raw-loader!./ng/label.html';\nimport * as NgHelpers from 'raw-loader!./ng/helpers.html';\nimport * as NgInline from 'raw-loader!./ng/inline.html';\nimport * as NgDisabled from 'raw-loader!./ng/disabled.html';\nimport * as NgIndeterminate from 'raw-loader!./ng/indeterminate.html';\n\n@Component({\n  templateUrl: './checkboxes.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class CheckboxesDemo extends ClarityDocComponent {\n  constructor() {\n    super('checkboxes');\n  }\n\n  exampleOne = {\n    one: false,\n    two: false,\n  };\n  exampleTwo = {\n    one: false,\n    two: false,\n  };\n  exampleThree = {\n    one: false,\n    two: false,\n  };\n  exampleFour = '';\n\n  uiBasic: any = UiBasic;\n  uiFull: any = UiFull;\n  uiError: any = UiError;\n  uiInline: any = UiInline;\n  uiDisabled: any = UiDisabled;\n\n  ngBasic: any = NgBasic;\n  ngLabel: any = NgLabel;\n  ngHelpers: any = NgHelpers;\n  ngInline: any = NgInline;\n  ngDisabled: any = NgDisabled;\n  ngIndeterminate: any = NgIndeterminate;\n\n  indeterminateState = true;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 29
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"summary\">\n            With checkboxes, users can select multiple options in a list of options.\n        </h5>\n\n        <h2 id=\"forms-code-samples\">Angular Checkbox Component</h2>\n\n        <p>If you are using Angular, the recommended approach is to always use the <code class=\"clr-code\">ClrCheckbox</code>\n            directive on your checkbox buttons to help manage the form control. By using <code class=\"clr-code\">ClrCheckbox</code>,\n            you'll automatically be able to leverage built in validation, helper text, and layout features in forms.</p>\n\n        <h3>Basic checkbox button</h3>\n\n        <p>\n            It is possible to create a checkbox button without a label. However the checkbox will not take advantage of\n            the accessability built into Clarity Forms. An example of the basic checkbox adds\n            <code class=\"clr-code\">clrCheckbox</code> to an input with the <code class=\"clr-code\">type=\"checkbox\"</code>.\n            This will wire up the checkbox directive for use with the form.\n        </p>\n\n        <p></p>\n\n        <input type=\"checkbox\" clrCheckbox />\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngBasic\"></clr-code-snippet>\n\n        <h3>Labels</h3>\n        <p>\n            <strong>Labels are required to make Clarity form controls accessible.</strong>\n        </p>\n\n        <p>To enable the accessabiltiy behaviors, you'll need to wrap your checkboxes with the\n            <code class=\"clr-code\">ClrCheckboxWrapper</code> component when you include a label. This manages the label\n            and display of the checkbox button for you.\n        </p>\n\n        <p>\n            Checkboxes without a label will not be accessible. So, while it it is possible to create a checkbox\n            by just adding <code class=\"clr-code\">clrCheckbox</code> it is not recommended. Notice, it is necessary to\n            add <code class=\"clr-code\">type=\"checkbox\"</code>. The basic checkbox control needs to be nested inside\n            both the <code class=\"clr-code\">clr-checkbox-container</code> and the\n            <code class=\"clr-code\">clr-checkbox-wrapper</code> to enable all of the styles and accessabiltiy behaviors.\n        </p>\n\n        <p></p>\n\n        <clr-checkbox-container>\n            <clr-checkbox-wrapper>\n                <input type=\"checkbox\" clrCheckbox name=\"test2\" value=\"option1\" />\n                <label>Option 1</label>\n            </clr-checkbox-wrapper>\n            <clr-checkbox-wrapper>\n                <input type=\"checkbox\" clrCheckbox name=\"test2\" value=\"option2\" />\n                <label>Option 2</label>\n            </clr-checkbox-wrapper>\n        </clr-checkbox-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngLabel\"></clr-code-snippet>\n\n        <h3>Helper and error messages</h3>\n\n        <p>To leverage helper and validation messages, you'll need to wrap all of the checkboxes inside of a <code class=\"clr-code\">ClrCheckboxContainer</code>\n            component. The checkbox button container tracks the the validations placed on a checkbox button, such as <code\n                class=\"clr-code\">required</code>\n            or even custom built validators in Angular. Under the hood, it looks at the <code class=\"clr-code\">NgControl</code>\n            values to determine the control validity, and display the helper text or error message accordingly.</p>\n\n        <p>Note: the validation in this example only displays an error after you focus and leave focus without\n            selecting a value. The easiest way to do this is to highlight the text in this paragraph, and hit tab a few\n            times to change the focus.</p>\n\n        <p></p>\n\n        <clr-checkbox-container>\n            <label>Full checkbox example</label>\n            <clr-checkbox-wrapper>\n                <input type=\"checkbox\" clrCheckbox name=\"test3\" required value=\"option1\" [(ngModel)]=\"exampleOne.one\" />\n                <label>Option 1</label>\n            </clr-checkbox-wrapper>\n            <clr-checkbox-wrapper>\n                <input type=\"checkbox\" clrCheckbox name=\"test3\" required value=\"option2\" [(ngModel)]=\"exampleOne.two\" />\n                <label>Option 2</label>\n            </clr-checkbox-wrapper>\n            <clr-control-helper>Helper text</clr-control-helper>\n            <clr-control-error>This field is required!</clr-control-error>\n        </clr-checkbox-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngHelpers\"></clr-code-snippet>\n\n        <h3>Inline checkboxes</h3>\n\n        <p>Checkbox buttons can be placed inline by default by adding the <code class=\"clr-code\">clrInline</code> directive\n            to your checkbox container elements. The checkbox buttons will wrap if there is not enough space.</p>\n\n        <p></p>\n\n        <clr-checkbox-container clrInline>\n            <label>Inline checkbox example</label>\n            <clr-checkbox-wrapper>\n                <input type=\"checkbox\" clrCheckbox name=\"test4\" required value=\"option1\" [(ngModel)]=\"exampleTwo.one\" />\n                <label>Option 1</label>\n            </clr-checkbox-wrapper>\n            <clr-checkbox-wrapper>\n                <input type=\"checkbox\" clrCheckbox name=\"test4\" required value=\"option2\" [(ngModel)]=\"exampleTwo.two\" />\n                <label>Option 2</label>\n            </clr-checkbox-wrapper>\n            <clr-control-helper>Helper text</clr-control-helper>\n            <clr-control-error>This field is required!</clr-control-error>\n        </clr-checkbox-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngInline\"></clr-code-snippet>\n\n        <h4>Disabled checkboxes</h4>\n\n        <p>A checkbox can be disabled by simply putting the <code class=\"clr-code\">disabled</code> attribute on the\n            checkbox input. This does require the checkbox to be inside of a checkbox container. Also, for groups of\n            checkboxes you have to put the disabled attribute on the last checkbox and cannot disable individual ones,\n            as Angular doesn't have support to disable individual checkboxes in a group.</p>\n\n        <p></p>\n\n        <clr-checkbox-container>\n          <label>Disabled checkbox example</label>\n          <clr-checkbox-wrapper>\n            <input type=\"checkbox\" clrCheckbox name=\"test5\" value=\"option1\" [(ngModel)]=\"exampleThree.one\" disabled />\n            <label>Option 1</label>\n          </clr-checkbox-wrapper>\n          <clr-checkbox-wrapper>\n            <input type=\"checkbox\" clrCheckbox name=\"test5\" value=\"option2\" [(ngModel)]=\"exampleThree.two\" disabled />\n            <label>Option 2</label>\n          </clr-checkbox-wrapper>\n          <clr-control-helper>Helper text</clr-control-helper>\n        </clr-checkbox-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngDisabled\"></clr-code-snippet>\n\n        <h4>Indeterminate checkboxes</h4>\n\n        <p>In cases where you want to display a checkbox as indeterminate, meaning it is neither selected or unselected.\n            This can happen in cases where your checkboxes have a hierarchy (such as we have in our Tree View), and a\n            child is selected but not the parent. You can control the indeterminate state by binding a boolean value like\n            <code class=\"clr-code\">[indeterminate]=\"true\"</code>. </p>\n\n        <p></p>\n\n        <clr-checkbox-container>\n          <label>Indeterminate checkbox example</label>\n          <clr-checkbox-wrapper>\n            <input type=\"checkbox\" clrCheckbox name=\"test6\" value=\"option1\" (change)=\"indeterminateState = false\" [(ngModel)]=\"exampleFour\" [indeterminate]=\"indeterminateState\" />\n            <label>Option 1</label>\n          </clr-checkbox-wrapper>\n          <clr-control-helper>Helper text</clr-control-helper>\n        </clr-checkbox-container>\n\n        <p><button class=\"btn btn-sm\" (click)=\"indeterminateState = true\">Reset indeterminate state</button></p>\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngIndeterminate\"></clr-code-snippet>\n\n\n\n\n        <h2 id=\"css-component\">CSS Checkbox Component</h2>\n\n        <p>Checkbox buttons can be used without Angular, but without some of the automatic interactivity. If you intend\n            to create your own components, here are the basic features you'll need to build out.</p>\n\n        <h3>Basic checkbox button</h3>\n\n        <p>This is the minimal markup needed to style the checkbox button control by wrapping it with the an element\n            with the <code class=\"clr-code\">clr-checkbox-wrapper</code> class. You must then put the input first, then\n            the label like you see below (the CSS selectors are specific about this ordering). You'll want to tie the\n            input and label together by providing an id for the label to connect. Ensure you add the\n            <code class=\"clr-code\">clr-checkbox</code> class to the checkbox button as well.</p>\n\n        <p></p>\n        <div class=\"clr-form-control\">\n            <div class=\"clr-control-container \">\n                <div class=\"clr-checkbox-wrapper\">\n                    <input clrcheckbox=\"\" name=\"test2\" type=\"checkbox\" value=\"option1\" id=\"clr-form-control-1\">\n                    <label class=\"clr-control-label\" for=\"clr-form-control-1\">My Choice</label>\n                </div>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiBasic\"></clr-code-snippet>\n\n        <h3>Full input display</h3>\n\n        <p>Each form control has a <code class=\"clr-code\">.clr-form-control</code> wrapper, as well as a specific DOM\n            structure necessary to layout the form control as desired. This works with all layout options as well\n            without needing to change the DOM structure in any way.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control\">\n            <label class=\"clr-control-label\">Full checkbox example</label>\n            <div class=\"clr-control-container\">\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox1\" name=\"checkbox-full\" value=\"option1\" class=\"clr-checkbox\">\n                    <label for=\"checkbox1\" class=\"clr-control-label\">option 1</label>\n                </div>\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox2\" name=\"checkbox-full\" value=\"option2\" class=\"clr-checkbox\">\n                    <label for=\"checkbox2\" class=\"clr-control-label\">option 2</label>\n                </div>\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox3\" name=\"checkbox-full\" value=\"option3\" class=\"clr-checkbox\">\n                    <label for=\"checkbox3\" class=\"clr-control-label\">option 3</label>\n                </div>\n                <div class=\"clr-subtext-wrapper\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    <span class=\"clr-subtext\">Helper Text</span>\n                </div>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiFull\"></clr-code-snippet>\n\n        <h4>Error state</h4>\n\n        <p>To signify an error state, you need to add the <code class=\"clr-code\">.clr-error</code> class to the <code\n                class=\"clr-code\">.clr-control-container</code> element. This will show the <code class=\"clr-code\">.clr-validate-icon</code>\n            and turn the <code class=\"clr-code\">.clr-subtext</code> message to red. If you have helper text that needs\n            to change to error content, you'll have to handle the hiding and showing of that content inside of the\n            <code class=\"clr-code\">.clr-subtext</code> element.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control\">\n            <label class=\"clr-control-label\">Error checkbox</label>\n            <div class=\"clr-control-container clr-error\">\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox4\" name=\"checkbox-error\" value=\"option1\" class=\"clr-checkbox\">\n                    <label for=\"checkbox4\" class=\"clr-control-label\">option 1</label>\n                </div>\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox5\" name=\"checkbox-error\" value=\"option2\" class=\"clr-checkbox\">\n                    <label for=\"checkbox5\" class=\"clr-control-label\">option 2</label>\n                </div>\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox6\" name=\"checkbox-error\" value=\"option3\" class=\"clr-checkbox\">\n                    <label for=\"checkbox6\" class=\"clr-control-label\">option 3</label>\n                </div>\n                <div class=\"clr-subtext-wrapper\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    <span class=\"clr-subtext\">Error message</span>\n                </div>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiError\"></clr-code-snippet>\n\n        <h3>Inline checkbox</h3>\n\n        <p>Checkbox buttons can be placed inline by default by adding the <code class=\"clr-code\">clr-control-inline</code> directive\n            to your checkbox container. The checkbox buttons will wrap if there is not enough space.</p>\n\n        <p>The subtext content, the icon and subtext messages, also must be wrapped in a <code class=\"clr-code\">clr-subtext-wrapper</code>\n        element so it can properly layout in all layout variations. If you omit this, the validation icon and text may appear in the wrong place.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control\">\n            <label class=\"clr-control-label\">Inline checkbox example</label>\n            <div class=\"clr-control-container clr-control-inline\">\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox7\" name=\"checkbox-error\" value=\"option1\" class=\"clr-checkbox\">\n                    <label for=\"checkbox7\" class=\"clr-control-label\">option 1</label>\n                </div>\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox8\" name=\"checkbox-error\" value=\"option2\" class=\"clr-checkbox\">\n                    <label for=\"checkbox8\" class=\"clr-control-label\">option 2</label>\n                </div>\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox9\" name=\"checkbox-error\" value=\"option3\" class=\"clr-checkbox\">\n                    <label for=\"checkbox9\" class=\"clr-control-label\">option 3</label>\n                </div>\n                <div class=\"clr-subtext-wrapper\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    <span class=\"clr-subtext\">Helper text</span>\n                </div>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiInline\"></clr-code-snippet>\n\n        <h3>Disabled checkbox</h3>\n\n        <p>In order to disable buttons, you'll add the <code class=\"clr-code\">disabled</code> attribute on the checkbox and\n            putting the <code class=\"clr-code\">clr-form-control-disabled</code> class onto the form control wrapper. This\n            helps setup the correct styling for the labels and other aspects of the form control when it is disabled.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control clr-form-control-disabled\">\n            <label class=\"clr-control-label\">Disabled checkbox example</label>\n            <div class=\"clr-control-container\">\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox10\" name=\"checkbox-disabled\" value=\"option1\" class=\"clr-checkbox\" disabled>\n                    <label for=\"checkbox10\" class=\"clr-control-label\">option 1</label>\n                </div>\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox11\" name=\"checkbox-disabled\" value=\"option2\" class=\"clr-checkbox\" disabled>\n                    <label for=\"checkbox11\" class=\"clr-control-label\">option 2</label>\n                </div>\n                <div class=\"clr-checkbox-wrapper\">\n                    <input type=\"checkbox\" id=\"checkbox12\" name=\"checkbox-disabled\" value=\"option3\" class=\"clr-checkbox\" disabled>\n                    <label for=\"checkbox12\" class=\"clr-control-label\">option 3</label>\n                </div>\n                <div class=\"clr-subtext-wrapper\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    <span class=\"clr-subtext\">Helper text</span>\n                </div>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiDisabled\"></clr-code-snippet>\n\n\n        <div id=\"design-guidelines\">\n            <h2 id=\"guidelines\">Usage</h2>\n\n            <p>\n                Use a checkbox for yes or no choices, for example \"Remember me\" on the <a\n                routerLink=\"../../login\">login page</a>. For on and off options, use a <a\n                routerLink=\"../../toggle-switches\">toggle switch</a>.\n            </p>\n\n            <ul class=\"list\">\n                <li>Checkboxes are best for seven or fewer options.</li>\n                <li>For readability, keep the checkbox label to a single line.</li>\n            </ul>\n        </div>\n\n        <div id=\"accessibility-guidelines\">\n            <h2 id=\"accessability\">Accessibility</h2>\n\n            <p>\n                For applications that use the <code class=\"clr-code\">ClrCheckbox</code> directive and the associated\n                <code class=\"clr-code\">ClrCheckboxContainer</code> and <code class=\"clr-code\">ClrCheckboxWrapper</code>\n                components there is built in support that adds accessible behavior to the control and its form.\n                This behavior includes:\n            </p>\n            <p></p>\n            <ol>\n                <li>\n                    Programmatically associating the correct label <code class=\"clr-code\">for</code>\n                    attribute with the <code class=\"clr-code\">id</code> of the input</li>\n                <li>\n                    Automatic wiring up of the <code class=\"clr-code\">aria-describedby</code> behavior with associated\n                     <code class=\"clr-code\">clr-control-error</code> elements\n                </li>\n                <li>\n                    An <code class=\"clr-code\">aria-live</code> region that can notify screen readers about changes in\n                    the control error state\n                </li>\n                <li>\n                    Adds the label to a general form summary for screen readers when the control is in an error state\n                    after a form submit\n                </li>\n            </ol>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "CodeSnippet",
      "id": "component-CodeSnippet-5d158be0289d76a49e9e7d588b3cd9b1",
      "file": "src/website/src/app/utils/code-snippet.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-code-snippet",
      "styleUrls": [],
      "styles": ["\n        pre {\n            background: transparent;\n            padding: 12px;\n        }\n    "],
      "template":
        "<ng-container *ngIf=\"!disablePrism\">\n    <pre><code [clr-code-highlight]=\"'language-'+language\">{{code.trim()}}</code></pre>\n</ng-container>\n<ng-container *ngIf=\"disablePrism\">\n    <pre><code class=\"clr-code\">{{code.trim()}}</code></pre>\n</ng-container>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "clrCode",
          "line": 32,
          "type": "string"
        },
        {
          "name": "clrDisablePrism",
          "defaultValue": "false",
          "line": 34,
          "type": "boolean"
        },
        {
          "name": "clrLanguage",
          "defaultValue": "'html'",
          "line": 33,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "codeHighlight",
          "type": "CodeHighlight",
          "optional": false,
          "description": "",
          "line": 30,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "CodeHighlight, {static: false}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { CodeHighlight } from './code-highlight';\n\n@Component({\n  selector: 'clr-code-snippet',\n  template: `\n        <ng-container *ngIf=\"!disablePrism\">\n            <pre><code [clr-code-highlight]=\"'language-'+language\">{{code.trim()}}</code></pre>\n        </ng-container>\n        <ng-container *ngIf=\"disablePrism\">\n            <pre><code class=\"clr-code\">{{code.trim()}}</code></pre>\n        </ng-container>\n    `,\n  styles: [\n    `\n        pre {\n            background: transparent;\n            padding: 12px;\n        }\n    `,\n  ],\n})\nexport class CodeSnippet implements AfterViewInit {\n  @ViewChild(CodeHighlight, { static: false })\n  codeHighlight: CodeHighlight;\n\n  @Input('clrCode') public code: string;\n  @Input('clrLanguage') public language: string = 'html';\n  @Input('clrDisablePrism') public disablePrism: boolean = false;\n\n  ngAfterViewInit(): void {\n    if (this.codeHighlight) {\n      this.codeHighlight.redraw();\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData":
        "\n        pre {\n            background: transparent;\n            padding: 12px;\n        }\n    \n",
      "implements": ["AfterViewInit"]
    },
    {
      "name": "CollapsibleNavDemo",
      "id": "component-CollapsibleNavDemo-9d708f1bbcede6e1d1fa29b5d94d28e9",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-vertical-nav-collapsible-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./collapsible-nav.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "collapsed",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 60
        },
        {
          "name": "collapsible",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "htmlExample1",
          "defaultValue": "HTML_EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" [(clrVerticalNavCollapsed)]=\"collapsed\">\n    <a clrVerticalNavLink routerLink=\"./normal\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"./electric\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n    <a clrVerticalNavLink routerLink=\"./poison\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"sad-face\"></clr-icon>\n        Poison\n    </a>\n    <a clrVerticalNavLink routerLink=\"./grass\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bug\"></clr-icon>\n        Grass\n    </a>\n    <a clrVerticalNavLink routerLink=\"./fighting\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"shield\"></clr-icon>\n        Fighting\n    </a>\n    <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"certificate\"></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`;\n\nconst HTML_EXAMPLE_1 = `\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" class=\"nav-trigger--bottom\">\n    <a clrVerticalNavLink routerLink=\"...\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"...\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n</clr-vertical-nav>\n`;\n\n@Component({\n  selector: 'clr-vertical-nav-collapsible-demo',\n  templateUrl: './collapsible-nav.html',\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class CollapsibleNavDemo {\n  htmlExample = HTML_EXAMPLE;\n  htmlExample1 = HTML_EXAMPLE_1;\n\n  collapsible: boolean = true;\n  collapsed: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Collapsible Vertical Nav</h4>\n\n<p>\n    <code class=\"clr-code\">[clrVerticalNavCollapsible]</code> input can be used to toggle the collapsible behavior\n    of the Vertical Nav. The state of the nav can be controlled by the\n    <code class=\"clr-code\">[(clrVerticalNavCollapsed)]</code> input.\n</p>\n\n<div class=\"clr-example\">\n    <div class=\"main-container\" style=\"height: 400px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav [clrVerticalNavCollapsible]=\"collapsible\" [(clrVerticalNavCollapsed)]=\"collapsed\">\n                <a clrVerticalNavLink routerLink=\"./normal\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n                    Normal\n                </a>\n                <a clrVerticalNavLink routerLink=\"./electric\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n                    Electric\n                </a>\n                <a clrVerticalNavLink routerLink=\"./poison\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"sad-face\"></clr-icon>\n                    Poison\n                </a>\n                <a clrVerticalNavLink routerLink=\"./grass\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"bug\"></clr-icon>\n                    Grass\n                </a>\n                <a clrVerticalNavLink routerLink=\"./fighting\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"shield\"></clr-icon>\n                    Fighting\n                </a>\n                <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"certificate\"></clr-icon>\n                    Credit\n                </a>\n            </clr-vertical-nav>\n            <div class=\"content-area\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n\n<p>\n    To place the collapse/expand trigger after the links, use the <code class=\"clr-code\">.nav-trigger--bottom</code>\n    class along with <code class=\"clr-code\">clr-vertical-nav</code>.\n</p>\n\n<div class=\"clr-example\">\n    <div class=\"main-container\" style=\"height: 400px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" class=\"nav-trigger--bottom\">\n                <a clrVerticalNavLink href=\"javascript://\" class=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n                    Normal\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n                    Electric\n                </a>\n            </clr-vertical-nav>\n            <div class=\"content-area demo-allow-scroll\">\n                Normal\n                The Normal type is the most basic type of Pokémon.\n                They are very common and appear from the very first route you visit.\n                Most Normal Pokémon are single type, but there is a large\n                contingent having a second type of Flying.\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample1\"></clr-code-snippet>\n"
    },
    {
      "name": "CollapsibleVerticalNavDemo",
      "id": "component-CollapsibleVerticalNavDemo-6d2bd6a9f42d28ef09dee52bc4669d1a",
      "file": "src/website/src/app/documentation/demos/vertical-nav/collapsible-nav/collapsible-nav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-collapsible-vertical-nav-demo",
      "styleUrls": ["../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./collapsible-nav.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "demoCollapsed",
          "defaultValue": "false",
          "line": 15,
          "type": "boolean"
        },
        {
          "name": "demoHideIcons",
          "defaultValue": "false",
          "line": 14,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'clr-collapsible-vertical-nav-demo',\n  templateUrl: './collapsible-nav.html',\n  styleUrls: ['../vertical-nav.demo.scss'],\n})\nexport class CollapsibleVerticalNavDemo {\n  @Input() demoHideIcons: boolean = false;\n  @Input() demoCollapsed: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\" style=\"margin-top: 0\">\n    <div class=\"main-container\" style=\"width: 240px; margin: 12px auto; height: 408px\">\n        <div class=\"content-container\">\n            <clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" [clrVerticalNavCollapsed]=\"demoCollapsed\">\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"user\" clrVerticalNavIcon></clr-icon>\n                    Normal\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\" class=\"active\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"flame\" clrVerticalNavIcon></clr-icon>\n                    Fire\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"download-cloud\" clrVerticalNavIcon></clr-icon>\n                    Water\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n                    Electric\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"bug\" clrVerticalNavIcon></clr-icon>\n                    Grass\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"block\" clrVerticalNavIcon></clr-icon>\n                    Ice\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"shield\" clrVerticalNavIcon></clr-icon>\n                    Fighting\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"sad-face\" clrVerticalNavIcon></clr-icon>\n                    Poison\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"image\" clrVerticalNavIcon></clr-icon>\n                    Ground\n                </a>\n            </clr-vertical-nav>\n        </div>\n    </div>\n</div>"
    },
    {
      "name": "ColorDemo",
      "id": "component-ColorDemo-ac7af4cb8ea09d7bdbd00982c14e0f35",
      "file": "src/website/src/app/documentation/demos/color/color.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-color-demo",
      "styleUrls": ["./color.demo.scss"],
      "styles": [],
      "templateUrl": ["./color.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-color-demo',\n  templateUrl: './color.demo.html',\n  styleUrls: ['./color.demo.scss'],\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class ColorDemo extends ClarityDocComponent {\n  constructor() {\n    super('color');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\nimg {\n  width: 100%;\n  margin: $clr_baselineRem_0_75 0 0;\n}\n\n.svg-color-scheme-container {\n  width: 100%;\n  padding: $clr_baselineRem_0_75;\n}\n\n.no-margin {\n  margin: 0;\n}\n\n.top-margin-12 {\n  margin: $clr_baselineRem_0_5 0 0 0;\n}\n\n.top-margin-18 {\n  margin: $clr_baselineRem_0_75 0 0 0;\n}\n\n.top-margin-24 {\n  margin: $clr_baselineRem_1 0 0 0;\n}\n\n.top-margin-36 {\n  margin: $clr_baselineRem_1_5 0 0 0;\n}\n\n.vertical-padding-12 {\n  padding: $clr_baselineRem_0_5 0;\n}\n\n.vertical-padding-18 {\n  padding: $clr_baselineRem_0_75 0;\n}\n\nfigure {\n  margin: 0;\n  figcaption {\n    border-top: $clr_baselineRem_0_25 solid currentColor;\n    padding: $clr_baselineRem_0_125 0;\n    &.do {\n      color: hsl(98, 100%, 26%);\n    }\n    &.dont {\n      color: hsl(9, 100%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./color.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article><h5 class=\"component-summary\"\n                 id=\"the-clarity-color-palette-is-primarily-based-on-alignment-with-color-use-in-web-applications-and-support-for-accessibility\">\n        <ul>\n            <li><a routerLink=\".\" fragment=\"color-palette\">Clarity Color Palette</a></li>\n            <li><a routerLink=\".\" fragment=\"functional-colors\">Functional Colors</a></li>\n            <li><a routerLink=\".\" fragment=\"chart\">Chart Color Schemes</a></li>\n        </ul>\n\n        <p>The Clarity color palette is a full spectrum of bold hues and neutrals to meet all your design needs.</p>\n    </h5>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"color-palette\">The Clarity Color Palette</h3>\n\n            <p>The Clarity color palette is aligned with color use in web applications and support for accessibility.\n                The colors below constitute the expanded color palette for Clarity. Text colors displayed in light or\n                dark tints represent Clarity's recommended accessible pairing with the color.</p>\n\n            <h4 class=\"top-margin-36\">Base, Primary and Secondary Colors</h4>\n\n            <p>The bulleted color swatches indicate colors that are part of the Clarity base color palette. You will\n                find these colors in use throughout Clarity's components and design recommendations.</p>\n\n            <p>The large color swatches represent Clarity primary colors, recommended for use as the main color for your\n                design. The remaining colors are considered secondary. They may be used for charts, graphs,\n                illustrations and other areas that call for color accent.</p>\n\n            <clr-color-palette></clr-color-palette>\n\n            <h3 id=\"functional-colors\">Functional Colors</h3>\n\n            <p>Clarity components use a set of colors to convey certain functions and meanings. These colors have been vetted\n            and tested to meet the accessibility standard for low vision.</p>\n\n            <section class=\"top-margin-24\">\n                <clr-color-palette-functional></clr-color-palette-functional>\n            </section>\n\n            <h3 id=\"guidelines\">Color Usage</h3>\n\n            <h4 class=\"top-margin-36\">Base Colors</h4>\n\n            <p>Colors used in Clarity's components and design recommendations.</p>\n\n            <ul class=\"list\">\n                <li>Neutral colors are for text and backgrounds.</li>\n                <li>Action colors are for clickable items, such as buttons and links. Action Blue is reserved for\n                    buttons and links.\n                </li>\n                <li>Stoplight colors are for indicating error conditions, warnings, and successes. Significant colors\n                    include: Stoplight Green for positive actions; Stoplight Red for warnings and errors.\n                </li>\n            </ul>\n\n            <h3>Choosing Colors</h3>\n\n            <h4 class=\"top-margin-36\">Text Contrast</h4>\n\n            <p class=\"top-margin-18\">Each color swatch in the palette is labeled with a black or white letter A to\n                indicate its accessibility on the background color. Other text colors should be tested for contrast\n                using an online contrast checker to make sure it passes the WCAG AA requirement for accessibility.</p>\n\n            <h4 class=\"top-margin-36\">Charting Colors</h4>\n\n            <p class=\"top-margin-18\">The large secondary palette allows for distinguishable markers in charts and\n                graphs. With charts, it’s important to choose colors that have clear contrast for easy readability. The\n                more colors that are used, the harder it is to distinguish each marker. For this reason, we recommend a\n                maximum of six colors per chart.</p>\n\n            <h4 class=\"top-margin-36\">Colorblind Accessibility</h4>\n\n            <p class=\"top-margin-18\">It’s a good idea to test the color scheme you plan to use with a colorblind\n                simulation app, such as Color Oracle. Alternatively, Adobe Photoshop and Illustrator come with a\n                colorblind proofing view. You can use the simulation to adjust your color combinations to be\n                accessible. In the example below, the image on right simulates how a person with colorblindness\n                (Deuteranopia) would see the image on the left.</p>\n\n            <section class=\"vertical-padding-12\">\n                <div class=\"clr-row\">\n                    <div class=\"clr-col-6\">\n                        <img src=\"assets/images/documentation/color/normal_vision_donut.png\" alt=\"Normal vision\"/>\n                    </div>\n                    <div class=\"clr-col-6\">\n                        <img src=\"assets/images/documentation/color/colorblind_simulation_donut.png\"\n                            alt=\"Colorblind simulation\"/>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"vertical-padding-12\">\n                <div class=\"clr-row\">\n                    <div class=\"clr-col-12 clr-col-md-6\">\n                        <p class=\"p1\">\n                            Some examples of color pairs that are difficult to distinguish for those with\n                            colorblindness:\n                        </p>\n                    </div>\n                    <div class=\"clr-col-12 clr-col-md-6\">\n                        <img src=\"assets/images/documentation/color/difficult_color_pairs_for_colorblindness.png\"\n                            alt=\"difficult color pairs for colorblindness\"/>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"vertical-padding-18\">\n                <p class=\"top-margin-12\">If these combinations can’t be avoided, leverage use of light and dark values.\n                    For instance, Red and green both appear as brown to someone with red-green colorblindness. But a\n                    light green paired with a dark red would be distinguishable in value.</p>\n\n                <div class=\"clr-row\">\n                    <div class=\"clr-col-6\">\n                        <figure>\n                            <img src=\"assets/images/documentation/color/red_green_do.png\" alt=\"Do\"/>\n                            <figcaption class=\"do\">Do</figcaption>\n                        </figure>\n                    </div>\n                    <div class=\"clr-col-6\">\n                        <figure>\n                            <img src=\"assets/images/documentation/color/red_green_dont.png\" alt=\"Don't\"/>\n                            <figcaption class=\"dont\">Don't</figcaption>\n                        </figure>\n                    </div>\n                </div>\n            </section>\n\n\n            <section class=\"vertical-padding-18\">\n\n                <p class=\"top-margin-12\">Using light and dark values also helps in showing a clear division between\n                    fields. Follow a pattern of alternating placement of light and dark colors. A simple way to ensure\n                    sufficient contrast is to use a palette that is monochromatic.</p>\n\n                <div class=\"clr-row\">\n                    <div class=\"clr-col-6\">\n                        <figure>\n                            <img src=\"assets/images/documentation/color/light_dark_do.png\" alt=\"Do\"/>\n                            <figcaption class=\"do\">Do</figcaption>\n                        </figure>\n                    </div>\n                    <div class=\"clr-col-6\">\n                        <figure>\n                            <img src=\"assets/images/documentation/color/light_light_dont.png\" alt=\"Don't\"/>\n                            <figcaption class=\"dont\">Don't</figcaption>\n                        </figure>\n                    </div>\n                </div>\n\n                <div class=\"clr-row\">\n                    <div class=\"clr-col-12 clr-col-md-6\">\n                        <p class=\"p1 no-margin\">Create contrast by using a range of light and dark values.</p>\n                    </div>\n                    <div class=\"clr-col-12 clr-col-md-6\">\n                        <p class=\"p1 no-margin\">Use a palette with colors of similar values and saturation levels.</p>\n                    </div>\n                </div>\n            </section>\n\n            <h4 class=\"top-margin-36\">Basic Tips</h4>\n\n            <p class=\"vertical-padding-12 no-margin\">Avoid the temptation to use color as decoration. Colors should be\n                used meaningfully to support the purpose of the chart.</p>\n\n            <ul class=\"list\">\n                <li>A monochromatic palette is a great place to start. It ensures contrast in values and doesn’t\n                    distract the user with a clashing color combination. If more colors are needed add a neutral or\n                    almost neutral scale.\n                </li>\n                <li>When using multiple colors, select one as a main color, then choose some supporting\n                    colors-complementaries, analogous or neutrals.\n                </li>\n                <li>Complementary combinations such as blue and orange or yellow and purple work well together\n                    aesthetically. Analogous colors - colors next to each other on the color wheel - such as blue and\n                    green also look nice.\n                </li>\n                <li>Test your colors for accessibility with a colorblind simulator.</li>\n                <li>Test your text and background color for accessibility with an online contrast checker.</li>\n                <li>Avoid using your project’s primary color or Clarity base colors in charts or graphics, e.g., the\n                    blue bars in your bar chart should not be the same blue as the primary buttons.\n                </li>\n                <li>Optional: Choose a palette from the color scheme examples.</li>\n            </ul>\n\n\n            <h3 id=\"chart\">Color Scheme Examples for Charts</h3>\n\n            <p class=\"top-margin-18\">These color schemes are designed to address contrast and colorblind accessibility.\n                Feel free to use them just as they are or as a starting point for a customized palette.</p>\n\n            <h4 class=\"top-margin-12 vertical-padding-18\">Click color to display hex number</h4>\n\n            <clr-color-scheme></clr-color-scheme>\n\n            <h3>Charting Example</h3>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12\">\n                    <img src=\"assets/images/documentation/color/charting_example.png\" alt=\"Charting Example\"/>\n                </div>\n            </div>\n\n        </div>\n    </article>\n\n</clr-doc-wrapper>\n"
    },
    {
      "name": "ColorFilter",
      "id": "component-ColorFilter-6d5f85b9531dc91b2440fdd0a5ebd520",
      "file": "src/website/src/app/documentation/demos/datagrid/utils/color-filter.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datagrid-color-filter-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "template":
        "<span *ngFor=\"let color of allColors\" class=\"color-square color-selectable\"\n    (click)=\"toggleColor(color)\"\n    [style.backgroundColor]=\"color\"\n    [class.color-selected]=\"selectedColors[color]\"></span>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_changes",
          "defaultValue": "new Subject<any>()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [112]
        },
        {
          "name": "allColors",
          "defaultValue": "COLORS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "nbColors",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "selectedColors",
          "defaultValue": "{}",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 22
        }
      ],
      "methodsClass": [
        {
          "name": "accepts",
          "args": [
            {
              "name": "user",
              "type": "User"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 47,
          "jsdoctags": [
            {
              "name": "user",
              "type": "User",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isActive",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 51
        },
        {
          "name": "listSelected",
          "args": [],
          "optional": false,
          "returnType": "string[]",
          "typeParameters": [],
          "line": 31
        },
        {
          "name": "toggleColor",
          "args": [
            {
              "name": "color",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41,
          "jsdoctags": [
            {
              "name": "color",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { User } from '../inventory/user';\nimport { COLORS } from '../inventory/values';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'clr-datagrid-color-filter-demo',\n  template: `\n        <span *ngFor=\"let color of allColors\" class=\"color-square color-selectable\"\n            (click)=\"toggleColor(color)\" \n            [style.backgroundColor]=\"color\"\n            [class.color-selected]=\"selectedColors[color]\"></span>`,\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class ColorFilter {\n  allColors = COLORS;\n  selectedColors: { [color: string]: boolean } = {};\n  nbColors = 0;\n\n  private _changes = new Subject<any>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<any> {\n    return this._changes.asObservable();\n  }\n\n  listSelected(): string[] {\n    const list: string[] = [];\n    for (const color in this.selectedColors) {\n      if (this.selectedColors[color]) {\n        list.push(color);\n      }\n    }\n    return list;\n  }\n\n  toggleColor(color: string) {\n    this.selectedColors[color] = !this.selectedColors[color];\n    this.selectedColors[color] ? this.nbColors++ : this.nbColors--;\n    this._changes.next(true);\n  }\n\n  accepts(user: User) {\n    return this.nbColors === 0 || this.selectedColors[user.color];\n  }\n\n  isActive(): boolean {\n    return this.nbColors > 0;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "accessors": {
        "changes": {
          "name": "changes",
          "getSignature": {
            "name": "changes",
            "type": "",
            "returnType": "Observable<any>",
            "line": 27
          }
        }
      }
    },
    {
      "name": "ColorFunctionalDemo",
      "id": "component-ColorFunctionalDemo-1b229d855c77275151d12039e2afd429",
      "file": "src/website/src/app/documentation/demos/color/color-palette-functional/color-palette-functional.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-color-palette-functional",
      "styleUrls": ["./color-palette-functional.demo.scss"],
      "styles": [],
      "templateUrl": ["./color-palette-functional.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "darkThemeContext",
          "defaultValue": "{\n    themeColorPalettes: this.darkThemePalettes,\n    darkTheme: true,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "darkThemePalettes",
          "defaultValue": "DARK_THEME_COLOR_PALETTES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [112]
        },
        {
          "name": "lightThemeContext",
          "defaultValue": "{\n    themeColorPalettes: this.lightThemePalettes,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "lightThemePalettes",
          "defaultValue": "LIGHT_THEME_COLOR_PALETTES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [
        {
          "name": "copyToClipboard",
          "args": [
            {
              "name": "color",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "color",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { DARK_THEME_COLOR_PALETTES, LIGHT_THEME_COLOR_PALETTES } from './functional-color-palettes';\nimport { ClipboardCopyService } from '../clipboard-copy.service';\n\n@Component({\n  selector: 'clr-color-palette-functional',\n  styleUrls: ['./color-palette-functional.demo.scss'],\n  templateUrl: './color-palette-functional.demo.html',\n})\nexport class ColorFunctionalDemo {\n  private lightThemePalettes = LIGHT_THEME_COLOR_PALETTES;\n  private darkThemePalettes = DARK_THEME_COLOR_PALETTES;\n\n  constructor(private clipboardCopy: ClipboardCopyService) {}\n\n  lightThemeContext = {\n    themeColorPalettes: this.lightThemePalettes,\n  };\n\n  darkThemeContext = {\n    themeColorPalettes: this.darkThemePalettes,\n    darkTheme: true,\n  };\n\n  copyToClipboard(color: string) {\n    this.clipboardCopy.executeCopy(color);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../../styles/clarity-imports';\n\n.card-block {\n  padding-bottom: 0;\n  overflow: hidden;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.legend {\n  &:not(.dark-text) {\n    color: $clr-color-neutral-0;\n  }\n}\n\nli.card-swatch {\n  background: $clr-color-neutral-400;\n  color: $clr-color-neutral-1000;\n  margin: 0;\n  padding: $clr_baselineRem_0_25 $clr_baselineRem_0_5;\n  font-size: $clr_baselineRem_0_667;\n  list-style: none;\n  &.upsize {\n    padding-bottom: $clr_baselineRem_2;\n  }\n  &.primary {\n    padding-bottom: $clr_baselineRem_2;\n    margin-bottom: $clr_baselineRem_0_125;\n  }\n  .card-swatch-content {\n    display: flex;\n    flex-grow: 1;\n    justify-content: flex-start;\n    align-items: center;\n\n    cursor: pointer;\n    &:hover {\n      .rgb-value clr-icon {\n        opacity: 1;\n      }\n    }\n\n    .bullet {\n      color: currentColor;\n      padding: 0;\n      font-size: 1.2em;\n    }\n    .hex-contrast {\n      color: black;\n    }\n    .rgb-value {\n      margin-left: auto;\n      font-size: 0.9em;\n      clr-icon {\n        margin: 0 $clr_baselineRem_0_125;\n        opacity: 0;\n        transition: all 0.2s ease-in-out;\n      }\n      .copied-indication {\n        display: inline-block;\n        transform: translateX(-1 * $clr_baselineRem_1);\n        opacity: 0;\n        transition: all 0.2s ease-in-out;\n        font-size: 0.5em;\n      }\n    }\n  }\n  &:not(.dark-text) {\n    color: $clr-color-neutral-0;\n  }\n  &.copied {\n    .card-swatch-content .rgb-value .copied-indication {\n      transform: translateX(0);\n      opacity: 1;\n    }\n  }\n}\n\n.card-swatch-block {\n  padding: 0;\n  box-shadow: none;\n  border: none;\n}\n\n.card-swatch-divider {\n  height: $clr_baselineRem_0_5;\n}\n\n.clr-row {\n  margin-top: $clr_baselineRem_0_5;\n  &.dark {\n    background: hsl(201, 30%, 15%);\n    padding-bottom: $clr_baselineRem_1;\n  }\n}\n",
          "styleUrl": "./color-palette-functional.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "clipboardCopy",
            "type": "ClipboardCopyService"
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "clipboardCopy",
            "type": "ClipboardCopyService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>Light Theme Colors</button>\n        <clr-tab-content *clrIfActive>\n            <ng-container *ngTemplateOutlet=\"functionalColorsTabContent; context: lightThemeContext\"></ng-container>\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>Dark Theme Colors</button>\n        <clr-tab-content *clrIfActive>\n          <ng-container *ngTemplateOutlet=\"functionalColorsTabContent; context: darkThemeContext\"></ng-container>\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n\n<ng-template #functionalColorsTabContent let-colorPalettes=\"themeColorPalettes\" let-isDark=\"darkTheme\">\n  <div class=\"clr-row\" [class.dark]=\"isDark\">\n    <div class=\"clr-col-sm-6 clr-col-md-4 clr-col-12\" *ngFor=\"let palette of colorPalettes\">\n      <h6 class=\"legend\" [class.dark-text]=\"!isDark\">{{palette.legend}}</h6>\n      <ul class=\"card card-block card-swatch-block\">\n        <li class=\"card-swatch\" *ngFor=\"let color of palette.colors\"\n            [style.background-color]=\"color.value\"\n            [class.dark-text]=\"color.text === 'dark'\"\n            [class.primary]=\"color.primary\"\n            [class.copied]=\"color.copied\"\n            (click)=\"copyToClipboard(color.value); color.copied = true\"\n            (mouseleave)=\"color.copied = false\">\n          <div class=\"card-swatch-content\">\n            <div *ngIf=\"color.primary\">\n              {{palette.type}}\n            </div>\n            <div *ngIf=\"!color.primary\">\n              <span *ngIf=\"color.bulleted\" class=\"bullet\">&#8226;</span>\n              <span>{{color.weight}}</span>\n            </div>\n            <div class=\"rgb-value\">\n              <span aria-hidden=\"true\" class=\"copied-indication\">Copied!</span>\n              <clr-icon shape=\"copy\"></clr-icon>\n              {{color.value}}</div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</ng-template>\n"
    },
    {
      "name": "ColorPaletteDemo",
      "id": "component-ColorPaletteDemo-5e292a5e8a943a0b23d5d6d2f7d978bb",
      "file": "src/website/src/app/documentation/demos/color/color-palette/color-palette.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-color-palette",
      "styleUrls": ["./color-palette.demo.scss"],
      "styles": [],
      "templateUrl": ["./color-palette.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "clarityPalettes",
          "defaultValue": "CLARITY_PALETTES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "deprecatedPalettes",
          "defaultValue": "DEPRECATED_COLOR_PALETTES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "copyToClipboard",
          "args": [
            {
              "name": "color",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "color",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { CLARITY_PALETTES, DEPRECATED_COLOR_PALETTES } from './color-palettes';\nimport { ClipboardCopyService } from '../clipboard-copy.service';\n\n@Component({\n  selector: 'clr-color-palette',\n  styleUrls: ['./color-palette.demo.scss'],\n  templateUrl: './color-palette.demo.html',\n})\nexport class ColorPaletteDemo {\n  deprecatedPalettes = DEPRECATED_COLOR_PALETTES;\n  clarityPalettes = CLARITY_PALETTES;\n\n  constructor(private clipboardCopy: ClipboardCopyService) {}\n\n  copyToClipboard(color: string) {\n    console.log('copied');\n    this.clipboardCopy.executeCopy(color);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../../styles/clarity-imports';\n\n.card-block {\n  padding-bottom: 0;\n  overflow: hidden;\n  padding-left: 0;\n  padding-right: 0;\n}\n\nli.card-swatch {\n  background: $clr-color-neutral-400;\n  color: $clr-color-neutral-1000;\n  margin: 0;\n  padding: $clr_baselineRem_0_25 $clr_baselineRem_0_5;\n  font-size: $clr_baselineRem_0_667;\n  list-style: none;\n  &.upsize {\n    padding-bottom: $clr_baselineRem_2;\n  }\n  &.primary {\n    padding-bottom: $clr_baselineRem_2;\n    margin-bottom: $clr_baselineRem_0_125;\n  }\n  .card-swatch-content {\n    display: flex;\n    flex-grow: 1;\n    justify-content: space-between;\n    align-items: center;\n    .bullet {\n      color: currentColor;\n      padding: 0;\n      font-size: 1.2em;\n    }\n    .hex-contrast {\n      color: black;\n    }\n    .weight {\n      display: flex;\n      align-items: center;\n    }\n    .copied {\n      display: flex;\n      align-items: center;\n      font-size: 0.5rem;\n      clr-icon {\n        margin: 0;\n        opacity: 0;\n        transition: all 0.2s ease-in-out;\n      }\n      .copied-indication {\n        display: inline-block;\n        transform: translateX(-1 * $clr_baselineRem_1);\n        opacity: 0;\n        transition: all 0.2s ease-in-out;\n      }\n    }\n    .rgb-value {\n      display: flex;\n      //font-size: 0.9em;\n      align-items: center;\n    }\n  }\n  &:not(.dark-text) {\n    color: $clr-color-neutral-0;\n  }\n  &:not(:first-child) {\n    cursor: pointer;\n    &:hover {\n      .card-swatch-content .copied clr-icon {\n        opacity: 1;\n      }\n    }\n  }\n\n  &.copied {\n    .card-swatch-content .copied .copied-indication {\n      transform: translateX(0);\n      opacity: 1;\n    }\n  }\n}\n\n.card-swatch-block {\n  padding: 0;\n  box-shadow: none;\n  border: none;\n}\n\n.card-swatch-divider {\n  height: $clr_baselineRem_0_5;\n}\n",
          "styleUrl": "./color-palette.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "clipboardCopy",
            "type": "ClipboardCopyService"
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "clipboardCopy",
            "type": "ClipboardCopyService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-sm-6 clr-col-md-4 clr-col-12\" *ngFor=\"let palette of clarityPalettes\">\n        <h4>{{palette.name}} </h4>\n        <ul class=\"card card-block card-swatch-block\">\n            <li class=\"card-swatch\" *ngFor=\"let color of palette.weights\"\n                [style.background-color]=\"color.hsl\"\n                [class.copied]=\"color.copied\"\n                (click)=\"copyToClipboard(color.hsl); color.copied = true\"\n                (mouseleave)=\"color.copied = false\"\n                [style.color]=\"color.on\">\n                <div class=\"card-swatch-content\">\n                    <div class=\"weight\">\n                        <div *ngIf=\"color.baseColor\" class=\"bullet\">&#8226;</div>\n                        <span>{{color.weight == null ? 'n/a' : color.weight}}</span>\n                    </div>\n                    <div class=\"copied\">\n                        <span aria-hidden=\"true\" class=\"copied-indication\">Copied!</span>\n                        <clr-icon shape=\"copy\"></clr-icon>\n                    </div>\n                    <div class=\"rgb-value\">\n                        {{color.weight == null ? '' : color.hsl}}\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n</div>\n"
    },
    {
      "name": "ColorSchemeDemo",
      "id": "component-ColorSchemeDemo-b7b85b6081322c8018a8cdc1f492b8cb",
      "file": "src/website/src/app/documentation/demos/color/color-scheme/color-scheme.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-color-scheme",
      "styleUrls": ["./color-scheme.demo.scss"],
      "styles": [],
      "templateUrl": ["./color-scheme.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "monochromeNeutralSchemes",
          "defaultValue": "MONOCHROME_NEUTRAL_SCHEMES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "multicolorSchemes",
          "defaultValue": "MULTI_COLOR_SCHEMES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { MONOCHROME_NEUTRAL_SCHEMES, MULTI_COLOR_SCHEMES } from './color-schemes';\n\n@Component({\n  selector: 'clr-color-scheme',\n  templateUrl: './color-scheme.demo.html',\n  styleUrls: ['./color-scheme.demo.scss'],\n})\nexport class ColorSchemeDemo {\n  monochromeNeutralSchemes = MONOCHROME_NEUTRAL_SCHEMES;\n  multicolorSchemes = MULTI_COLOR_SCHEMES;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n",
          "styleUrl": "./color-scheme.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h5 class=\"no-margin vertical-padding-12\">Monochrome + neutral</h5>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col-12 clr-col-sm-6 clr-col-md-4\" *ngFor=\"let scheme of monochromeNeutralSchemes\">\n    <div class=\"svg-color-scheme-container\">\n      <clr-color-scheme-donut [clrColorScheme]=\"scheme\"></clr-color-scheme-donut>\n    </div>\n  </div>\n</div>\n\n<h5 class=\"no-margin vertical-padding-12\">Multicolor</h5>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col-12 clr-col-sm-6 clr-col-md-4\" *ngFor=\"let scheme of multicolorSchemes\">\n    <div class=\"svg-color-scheme-container\">\n      <clr-color-scheme-donut [clrColorScheme]=\"scheme\"></clr-color-scheme-donut>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "ColorSchemeDonut",
      "id": "component-ColorSchemeDonut-decbd3c471f61eaf78e4895d7a32829a",
      "file": "src/website/src/app/documentation/demos/color/color-scheme/color-scheme-donut.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-color-scheme-donut",
      "styleUrls": ["./color-scheme-donut.demo.scss"],
      "styles": [],
      "templateUrl": ["./color-scheme-donut.demo.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "clrColorScheme",
          "line": 35,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_activeIndex",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [112]
        },
        {
          "name": "_scheme",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [112]
        },
        {
          "name": "activeColor",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "copiedColor",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 95
        },
        {
          "name": "copyContent",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "cx",
          "defaultValue": "24",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [132]
        },
        {
          "name": "cy",
          "defaultValue": "24",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [132]
        },
        {
          "name": "donutHoleRadius",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "radius",
          "defaultValue": "20",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [132]
        },
        {
          "name": "viewBox",
          "defaultValue": "`0 0 ${2 * this.cx} ${2 * this.cy}`",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [132]
        }
      ],
      "methodsClass": [
        {
          "name": "copyToClipboard",
          "args": [
            {
              "name": "color",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 97,
          "jsdoctags": [
            {
              "name": "color",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPath",
          "args": [
            {
              "name": "segmentAngle",
              "type": "number"
            },
            {
              "name": "radius",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 57,
          "jsdoctags": [
            {
              "name": "segmentAngle",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "radius",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "multiRotate",
          "args": [
            {
              "name": "index",
              "type": "number"
            },
            {
              "name": "segmentAngle",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 91,
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "segmentAngle",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\nimport { ClipboardCopyService } from '../clipboard-copy.service';\n\n@Component({\n  selector: 'clr-color-scheme-donut',\n  templateUrl: './color-scheme-donut.demo.html',\n  styleUrls: ['./color-scheme-donut.demo.scss'],\n})\nexport class ColorSchemeDonut {\n  readonly cx = 24;\n  readonly cy = 24;\n  readonly radius = 20;\n  readonly viewBox = `0 0 ${2 * this.cx} ${2 * this.cy}`;\n\n  constructor(private clipboardCopy: ClipboardCopyService) {}\n\n  copyContent: string = '';\n\n  donutHoleRadius: number;\n\n  activeColor: string = '';\n\n  private _scheme: any;\n\n  get scheme(): any {\n    return this._scheme;\n  }\n\n  @Input('clrColorScheme')\n  set scheme(scheme: any) {\n    this._scheme = scheme;\n\n    this.donutHoleRadius = this.radius - 8;\n  }\n\n  private _activeIndex: number = -1;\n\n  get activeIndex(): number {\n    return this._activeIndex;\n  }\n\n  set activeIndex(value: number) {\n    if (this._scheme.schemeColors[value]) {\n      this.activeColor = this._scheme.schemeColors[value].hex;\n    } else {\n      this.activeColor = '';\n    }\n\n    this._activeIndex = value;\n  }\n\n  getPath(segmentAngle: number, radius: number) {\n    const startAngle = -90;\n    let endAngle: number;\n    let x1: number;\n    let y1: number;\n    let x2: number;\n    let y2: number;\n\n    endAngle = startAngle + segmentAngle;\n    x1 = this.cx + radius * Math.cos(Math.PI * startAngle / 180);\n    y1 = this.cy + radius * Math.sin(Math.PI * startAngle / 180);\n    x2 = this.cx + radius * Math.cos(Math.PI * endAngle / 180);\n    y2 = this.cy + radius * Math.sin(Math.PI * endAngle / 180);\n    return (\n      'M' +\n      this.cx +\n      ',' +\n      this.cy +\n      ' L' +\n      x1 +\n      ',' +\n      y1 +\n      ' A' +\n      radius +\n      ',' +\n      radius +\n      ' 0 0,1 ' +\n      x2 +\n      ',' +\n      y2 +\n      ' z'\n    );\n  }\n\n  multiRotate(index: number, segmentAngle: number): string {\n    return `rotate(${index * segmentAngle} ${this.cx} ${this.cy})`;\n  }\n\n  copiedColor = false;\n\n  copyToClipboard(color: string) {\n    this.clipboardCopy.executeCopy(color);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../../styles/clarity-imports';\n\n:host {\n  display: block;\n  position: relative;\n  width: 100%;\n  &:before {\n    content: '';\n    display: block;\n    padding-top: 100%; /* initial ratio of 1:1*/\n  }\n}\n\nsvg {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  path.clickable-segment {\n    cursor: pointer;\n  }\n  path.bg-segment {\n    opacity: 0;\n    transition: all 0.2s ease-in-out;\n    &.active {\n      opacity: 1;\n    }\n  }\n  text.hex-color {\n    font-weight: 500;\n  }\n  text.copy-text {\n    opacity: 0;\n    fill: $clr-color-neutral-700;\n    transition: all 0.2s ease-in-out;\n    &.notify {\n      opacity: 1;\n    }\n  }\n}\n",
          "styleUrl": "./color-scheme-donut.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "clipboardCopy",
            "type": "ClipboardCopyService"
          }
        ],
        "line": 18,
        "jsdoctags": [
          {
            "name": "clipboardCopy",
            "type": "ClipboardCopyService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "scheme": {
          "name": "scheme",
          "setSignature": {
            "name": "scheme",
            "type": "void",
            "args": [
              {
                "name": "scheme",
                "type": "any"
              }
            ],
            "returnType": "void",
            "line": 35,
            "jsdoctags": [
              {
                "name": "scheme",
                "type": "any",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "scheme",
            "type": "any",
            "returnType": "any",
            "line": 30
          }
        },
        "activeIndex": {
          "name": "activeIndex",
          "setSignature": {
            "name": "activeIndex",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "number"
              }
            ],
            "returnType": "void",
            "line": 47,
            "jsdoctags": [
              {
                "name": "value",
                "type": "number",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "activeIndex",
            "type": "number",
            "returnType": "number",
            "line": 43
          }
        }
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<svg width=\"100%\" height=\"100%\" [attr.viewBox]=\"viewBox\" class=\"donut\">\n    <path *ngFor=\"let bgColor of scheme.schemeColors; let bgColorIndex = index;\" class=\"bg-segment\"\n          [attr.d]=\"getPath(360/scheme.schemeColors.length, 21)\"\n          [attr.cx]=\"cx\"\n          [attr.cy]=\"cy\"\n          [attr.fill]=\"bgColor.hex\"\n          [class.active]=\"bgColorIndex===activeIndex\"\n          [attr.transform]=\"multiRotate(bgColorIndex, 360/scheme.schemeColors.length)\"></path>\n\n    <g (mouseleave)=\"activeIndex=-1;\">\n        <path *ngFor=\"let color of scheme.schemeColors; let colorIndex = index;\" class=\"clickable-segment\"\n              [attr.d]=\"getPath(360/scheme.schemeColors.length, 20)\"\n              [attr.cx]=\"cx\"\n              [attr.cy]=\"cy\"\n              [attr.fill]=\"color.hex\"\n              [attr.transform]=\"multiRotate(colorIndex, 360/scheme.schemeColors.length)\"\n              (mouseover)=\"activeIndex=colorIndex\"\n              (mouseleave)=\"copiedColor = false\"\n              (click)=\"activeIndex=colorIndex; copyToClipboard(color.hex); copiedColor=true;\"></path>\n\n        <circle fill=\"white\"\n                [attr.cx]=\"cx\"\n                [attr.cy]=\"cy\"\n                [attr.r]=\"donutHoleRadius\"></circle>\n\n        <text [attr.x]=\"cx\"\n              [attr.y]=\"cy\" font-size=\"2.25\" text-anchor=\"middle\" dy=\"0.75\" *ngIf=\"activeIndex>-1\" class=\"hex-color\">\n            {{activeColor}}\n        </text>\n\n        <text class=\"copy-text\"\n              [attr.x]=\"cx\"\n              [attr.y]=\"cy\"\n              [class.notify]=\"copiedColor\"\n              font-size=\"2.8\" text-anchor=\"middle\" dy=\"5.5\">\n            Copied!\n        </text>\n    </g>\n</svg>\n"
    },
    {
      "name": "CommunityComponent",
      "id": "component-CommunityComponent-4780c6ecdec4324ece36570641e24225",
      "file": "src/website/src/app/community/community.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "community",
      "styleUrls": ["./community.component.scss"],
      "styles": [],
      "templateUrl": ["community.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "contributors",
          "defaultValue": "CONTRIBUTORS.contributors",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "team",
          "defaultValue": "CLARITYTEAM.members",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "teamImgUrl",
          "defaultValue": "'assets/images/team/'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport * as CLARITYTEAM from '../../community/team.json';\nimport * as CONTRIBUTORS from '../../community/contributors.json';\n\n@Component({\n  selector: 'community',\n  templateUrl: 'community.component.html',\n  styleUrls: ['./community.component.scss'],\n  host: {\n    '[class.content-container]': 'true',\n  },\n})\nexport class CommunityComponent {\n  team: any[] = CLARITYTEAM.members;\n  contributors: string[] = CONTRIBUTORS.contributors;\n  teamImgUrl: string = 'assets/images/team/';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import './../../styles/clarity-imports';\n@import './../../styles/variables';\n@import './../../styles/mixins';\n\n:host {\n  overflow-y: hidden;\n}\n\n.main-container {\n  overflow-y: hidden;\n}\n\nsection {\n  width: 100%;\n  padding-left: $clr_baselineRem_1;\n  padding-right: $clr_baselineRem_1;\n  max-width: $clr_baselineRem_44;\n  margin: 0 auto;\n  padding-top: $clr_baselineRem_1;\n\n  h3 {\n    margin-bottom: $clr_baselineRem_1;\n  }\n}\n\nsection.community-top-section {\n  padding-top: 0;\n}\n\n.social-card {\n  color: $clr-color-neutral-700;\n  text-align: center;\n\n  &:hover,\n  &:focus,\n  &:active {\n    text-decoration: none;\n  }\n\n  & > .card {\n    width: $clr_baselineRem_10;\n    margin: $clr_baselineRem_0_5 auto;\n    padding: 0 $clr_baselineRem_1;\n  }\n}\n\n.community-social-icon {\n  margin-bottom: $clr_baselineRem_1_375;\n  margin-top: $clr_baselineRem_8px;\n\n  & > img {\n    height: $clr_baselineRem_2_66;\n  }\n}\n\n.social-card-socialcast .community-social-icon {\n  // TODO: Images from design are not properly sized. Tweaks needed to happen.\n  padding-top: $clr_baselineRem_0_054167;\n}\n\n.community-team-cards {\n  .row {\n    margin-left: -1 * $clr_baselineRem_1;\n    margin-right: -1 * $clr_baselineRem_1;\n  }\n\n  .card {\n    margin: 0;\n    background: none;\n    border: 0 none;\n    box-shadow: none;\n    text-align: center;\n    padding: 0 $clr_baselineRem_1;\n\n    .card-text {\n      margin: 0 0 $clr_baselineRem_0_5;\n    }\n  }\n\n  img {\n    width: $clr_baselineRem_5_167;\n  }\n}\n\n.community-team-name {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.community-team-role {\n  margin-top: 0;\n  font-size: $clr_baselineRem_0_583;\n}\n\n.community-team-blurb {\n  margin-top: $clr_baselineRem_0_5;\n  text-align: left;\n}\n\n.contributor-list {\n  column-count: 3;\n}\n",
          "styleUrl": "./community.component.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<main class=\"content-area\">\n    <section class=\"community-top-section\">\n        <h1 id=\"community\">Community</h1>\n\n        <p>We’re passionate about making Clarity the best it can be.&nbsp;Although each team member has a specific role and area of responsibility, we’re all actively engaged in every aspect of the framework.</p>\n\n    </section>\n\n    <section class=\"community-social-cards\">\n        <h3>Engaging with the Clarity Team</h3>\n\n        <div class=\"hidden-sm-up\">\n            <ul class=\"list-unstyled indent bump-down\">\n\n                <li><a rel=\"noopener\" target=\"_blank\" href=\"https://twitter.com/VMwareClarity\">Talk with us on Twitter</a></li>\n\n                <li><a rel=\"noopener\" target=\"_blank\" href=\"https://github.com/vmware/clarity/issues\">Report an issue</a></li>\n\n                <li><a rel=\"noopener\" target=\"_blank\" href=\"https://medium.com/claritydesignsystem\">Read our blog</a></li>\n\n            </ul>\n        </div>\n        <div class=\"hidden-xs-down clr-row\">\n\n            <div class=\"clr-col-lg-3 clr-col-md-6 clr-col-6\">\n                <a rel=\"noopener\" target=\"_blank\" href=\"https://github.com/vmware/clarity/issues\" class=\"social-card social-card-github\">\n                    <div class=\"card clickable\">\n                        <div class=\"card-block\">\n                            <div class=\"community-social-icon\">\n                                <img src=\"assets/images/team/social/github.png\" alt=\"github\">\n                            </div>\n                            <p class=\"card-text\">File a request/bug</p>\n                        </div>\n                    </div>\n                </a>\n\n            </div>\n\n            <div class=\"clr-col-lg-3 clr-col-md-6 clr-col-6\">\n                <a target=\"_blank\" href=\"https://stackoverflow.com/tags/vmware-clarity\" class=\"social-card social-card-stackoverflow\">\n                    <div class=\"card clickable\">\n                        <div class=\"card-block\">\n                            <div class=\"community-social-icon\">\n                                <img src=\"assets/images/team/social/stackoverflow.png\" alt=\"twitter\">\n                            </div>\n                            <p class=\"card-text\">Ask a question</p>\n                        </div>\n                    </div>\n                </a>\n\n            </div>\n\n            <div class=\"clr-col-lg-3 clr-col-md-6 clr-col-6\">\n                <a target=\"_blank\" href=\"https://twitter.com/VMwareClarity\" class=\"social-card social-card-twitter\">\n                    <div class=\"card clickable\">\n                        <div class=\"card-block\">\n                            <div class=\"community-social-icon\">\n                                <img src=\"assets/images/team/social/twitter.png\" alt=\"twitter\">\n                            </div>\n                            <p class=\"card-text\">Chat with us</p>\n                        </div>\n                    </div>\n                </a>\n\n            </div>\n\n            <div class=\"clr-col-lg-3 clr-col-md-6 clr-col-6\">\n                <a target=\"_blank\" href=\"https://medium.com/claritydesignsystem\" class=\"social-card social-card-medium\">\n                    <div class=\"card clickable\">\n                        <div class=\"card-block\">\n                            <div class=\"community-social-icon\">\n                                <img src=\"assets/images/team/social/medium.png\" alt=\"medium\">\n                            </div>\n                            <p class=\"card-text\">Read our blog</p>\n                        </div>\n                    </div>\n                </a>\n\n            </div>\n\n        </div>\n    </section>\n\n\n    <section class=\"community-team-cards\">\n        <h3>Clarity Team</h3>\n\n        <div class=\"clr-row\">\n            <div *ngFor=\"let member of team\" class=\"card clr-col-12 clr-col-md-4\">\n                <div class=\"card-block\">\n\n                    <img src=\"{{teamImgUrl}}{{member.img}}\" alt=\"Picture of {{member.name}}\">\n\n                    <div class=\"card-text\">\n                        <p class=\"community-team-name\" [ngSwitch]=\"member.twitter\">\n                            <span *ngSwitchCase=\"undefined\">{{member.name}}</span>\n                            <a href=\"https://twitter.com/{{member.twitter}}\" target=\"_blank\" *ngSwitchDefault>{{member.name}}</a>\n                        </p>\n                        <p class=\"community-team-role\">{{member.role}}</p>\n                        <p class=\"community-team-blurb\">{{member.blurb}}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"community-contributors\">\n        <h3>Contributors</h3>\n        <ul class=\"list-unstyled contributor-list\">\n            <li *ngFor=\"let name of contributors\">{{name}}</li>\n        </ul>\n    </section>\n\n</main>\n"
    },
    {
      "name": "ComponentStatusComponent",
      "id": "component-ComponentStatusComponent-62572dd86843cf06b15924b8c39994d1",
      "file": "src/website/src/app/documentation/component-status/component-status.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "component-status",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["component-status.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "components",
          "defaultValue": "COMPONENTS.list",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methodsClass": [
        {
          "name": "getFragment",
          "args": [
            {
              "name": "item",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 24,
          "jsdoctags": [
            {
              "name": "item",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getUrl",
          "args": [
            {
              "name": "item",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 20,
          "jsdoctags": [
            {
              "name": "item",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport * as COMPONENTS from '../../../settings/componentlist.json';\n\n@Component({\n  selector: 'component-status',\n  templateUrl: 'component-status.component.html',\n  host: {\n    '[class.content-area]': 'true',\n  },\n})\nexport class ComponentStatusComponent {\n  components = COMPONENTS.list;\n\n  getUrl(item) {\n    return item.url.split('#')[0];\n  }\n\n  getFragment(item) {\n    return item.url.split('#')[1];\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<section class=\"dox-content\">\n  <h1 clrFocusOnViewInit>Component Status</h1>\n\n  <p>\n      The Clarity team is building a robust library of components as quickly as possible. Check back often for updates.\n      If a component you need is not listed here, <a href=\"https://github.com/vmware/clarity/issues\" rel=\"noopener\" target=\"_blank\">file a GitHub issue</a>.\n  </p>\n\n  <p class=\"component-legend\">\n      <span class=\"component-legend-item\">\n        <span class=\"symbol\"><status-dot [status]=\"20\"></status-dot></span>\n          <span class=\"terminology\">Done</span>\n      </span>\n      <span class=\"component-legend-item\">\n          <span class=\"symbol\"><status-dot [status]=\"10\"></status-dot></span>\n          <span class=\"terminology\">In progress</span>\n      </span>\n      <span class=\"component-legend-item\">\n          <span class=\"symbol\"><status-dot [status]=\"5\"></status-dot></span>\n          <span class=\"terminology\">In queue</span>\n      </span>\n      <span class=\"component-legend-item\">\n          <span class=\"symbol\"><status-dot [status]=\"-1\"></status-dot></span>\n          <span class=\"terminology\">n/a</span>\n      </span>\n  </p>\n\n  <table class=\"table table-condensed table-component-list bump-down\" style=\"max-width: 580px\">\n      <thead>\n        <th>Item</th>\n        <th>UX</th>\n        <th>UI</th>\n        <th class=\"hidden-xs-down\">Core</th>\n        <th>NG</th>\n        <th class=\"hidden-xs-down\">Docs</th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of components\">\n          <td>\n            <a *ngIf=\"item.url\" [routerLink]=\"getUrl(item)\" [fragment]=\"getFragment(item)\">{{item.text}}</a>\n            <span *ngIf=\"!item.url\">{{item.text}}</span>\n          </td>\n          <td>\n            <status-dot [status]=\"item.ux\"></status-dot>\n          </td>\n          <td>\n            <status-dot [status]=\"item.ui\"></status-dot>\n          </td>\n          <td class=\"hidden-xs-down\">\n            <status-dot [status]=\"item.core\"></status-dot>\n          </td>\n          <td>\n            <status-dot [status]=\"item.ng\"></status-dot>\n          </td>\n          <td class=\"hidden-xs-down\">\n            <status-dot [status]=\"item.dox\"></status-dot>\n          </td>\n        </tr>\n      </tbody>\n  </table>\n</section>\n"
    },
    {
      "name": "DatagridBasicStructureDemo",
      "id": "component-DatagridBasicStructureDemo-57cc7067ba1d9cbc8fb579b2cff64142",
      "file": "src/website/src/app/documentation/demos/datagrid/basic-structure/basic-structure.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-basic-structure-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./basic-structure.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst EXAMPLE = `\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.color}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`;\n\n@Component({\n  selector: 'clr-datagrid-basic-structure-demo',\n  providers: [Inventory],\n  templateUrl: './basic-structure.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridBasicStructureDemo {\n  example = EXAMPLE;\n  users: User[];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 37,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Basic structure</h2>\n\n<p>\n    To use our Datagrid, you do not need to pass an array of data or a JSON configuration to a\n    single element. Instead, we leverage a pure declarative API, just like any other Angular\n    component. You write your HTML just as you would for a basic table, with a\n    <code class=\"clr-code\">*ngFor</code> (or <code class=\"clr-code\">*clrDgItems</code>, see\n    Smart iterator) on the rows to iterate over your\n    data.\n</p>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.color}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"example\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridBatchActionDemo",
      "id": "component-DatagridBatchActionDemo-509634bfcbc94d745e2398a890dfbec9",
      "file": "src/website/src/app/documentation/demos/datagrid/batch-action/batch-action.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-batch-action-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["batch-action.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "mainExample",
          "defaultValue": "MAIN_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "selected",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "toAdd",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "toDelete",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "toEdit",
          "type": "User",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "toExport",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 51
        }
      ],
      "methodsClass": [
        {
          "name": "cleanUp",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64
        },
        {
          "name": "onAdd",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 71
        },
        {
          "name": "onDelete",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 81
        },
        {
          "name": "onEdit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 76
        },
        {
          "name": "onExportAll",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86
        },
        {
          "name": "onExportSelected",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 91
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst MAIN_EXAMPLE = `\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onAdd()\"><clr-icon shape=\"plus\"></clr-icon> Add\n                to group</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" ><clr-icon shape=\"close\"></clr-icon> Delete</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onEdit()\" *ngIf=\"selected.length == 1\"><clr-icon shape=\"pencil\"></clr-icon> Edit</button>\n        </div>\n        <div class=\"btn-group\">\n            <clr-dropdown>\n                <button type=\"button\" class=\"btn btn-sm btn-secondary\" clrDropdownTrigger>\n                    Export\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\n                    <button type=\"button\" (click)=\"onExportAll()\" clrDropdownItem>Export All</button>\n                    <button type=\"button\" (click)=\"onExportSelected()\" [disabled]=\"selected.length === 0\" clrDropdownItem>Export Selected Items</button>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n        </div>\n    </clr-dg-action-bar>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`;\n\n@Component({\n  selector: 'clr-datagrid-batch-action-demo',\n  providers: [Inventory],\n  templateUrl: 'batch-action.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridBatchActionDemo {\n  mainExample = MAIN_EXAMPLE;\n  users: User[];\n  selected: User[] = [];\n  toAdd: User[] = [];\n  toDelete: User[] = [];\n  toEdit: User;\n  toExport: User[] = [];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n\n  cleanUp(): void {\n    this.toAdd = [];\n    this.toDelete = [];\n    this.toEdit = null;\n    this.toExport = [];\n  }\n\n  onAdd() {\n    this.cleanUp();\n    this.toAdd = this.selected.slice();\n  }\n\n  onEdit() {\n    this.cleanUp();\n    this.toEdit = this.selected[0];\n  }\n\n  onDelete() {\n    this.cleanUp();\n    this.toDelete = this.selected.slice();\n  }\n\n  onExportAll() {\n    this.cleanUp();\n    this.toExport = this.users.slice();\n  }\n\n  onExportSelected() {\n    this.cleanUp();\n    this.toExport = this.selected.slice();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 56,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<h2>Selection batch action</h2>\n\n<p>\n    You can allow batch actions to be performed on selected rows in selectable datagrids. You can make the action\n    choices contextual to the selection by showing certain actions only if the selection meets the criteria.\n    Add a <code class=\"clr-code\">clr-dg-action-bar</code> inside a <code class=\"clr-code\">clr-datagrid</code>.\n    The content inside of it will be projected when one or more items is selected. We recommend that that you use\n    a button bar with small buttons as in the example.\n</p>\n\n<p>\n    In the following example, we simply display the names of the selected users, but since we\n    have access to the full objects, we could perform any operation we want on them.\n</p>\n\n<p>\n    Depending on the role of certain batch actions, you can choose to break button bars up into separate button groups.\n    To increase the visibility of the most important batch actions within each button group, we recommend organizing\n    batch actions in priority order from left to right.\n</p>\n\n<div class=\"card card-block\">\n    <p class=\"card-text username-list\">\n        Users to be added to group:\n        <em *ngIf=\"toAdd.length == 0\">No user selected.</em>\n        <span class=\"username\" *ngFor=\"let user of toAdd\">{{user.name}}</span>\n    </p>\n\n    <p class=\"card-text username-list\">\n        User to be edited:\n        <em *ngIf=\"!toEdit\">No user selected.</em>\n        <span class=\"username\" *ngIf=\"toEdit\">{{toEdit.name}}</span>\n    </p>\n\n    <p class=\"card-text username-list\">\n        Users to be deleted:\n        <em *ngIf=\"toDelete.length == 0\">No user selected.</em>\n        <span class=\"username\" *ngFor=\"let user of toDelete\">{{user.name}}</span>\n    </p>\n\n    <p class=\"card-text username-list\">\n        Users to be exported:\n        <em *ngIf=\"toExport.length == 0\">No user selected.</em>\n        <span class=\"username\" *ngFor=\"let user of toExport\">{{user.name}}</span>\n    </p>\n</div>\n\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onAdd()\">Add to group</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\">Delete</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onEdit()\" *ngIf=\"selected.length == 1\">Edit</button>\n        </div>\n        <div class=\"btn-group\">\n            <clr-dropdown>\n                <button type=\"button\" class=\"btn btn-sm btn-secondary\" clrDropdownTrigger>\n                    Export\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\n                    <button type=\"button\" (click)=\"onExportAll()\" clrDropdownItem>Export All</button>\n                    <button type=\"button\" (click)=\"onExportSelected()\" [disabled]=\"selected.length === 0\" clrDropdownItem>Export Selected Items</button>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n        </div>\n    </clr-dg-action-bar>\n\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"mainExample\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridBindingPropertiesDemo",
      "id": "component-DatagridBindingPropertiesDemo-6c01107c034f3eb86643ce6d84818ad5",
      "file": "src/website/src/app/documentation/demos/datagrid/binding-properties/binding-properties.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-binding-properties-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./binding-properties.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 43
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst EXAMPLE = `\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon.name'\">Pokemon</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'color'\">Favorite color</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'wins'\" [clrDgColType]=\"'number'\">Wins</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n        <clr-dg-cell>{{user.wins}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`;\n\n@Component({\n  selector: 'clr-datagrid-binding-properties-demo',\n  providers: [Inventory],\n  templateUrl: './binding-properties.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridBindingPropertiesDemo {\n  example = EXAMPLE;\n  users: User[];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 43,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Binding model properties to columns</h2>\n\n<p>\n    For an easy setup of datagrid column features, you can simply specify the property to bind it to\n    in your model. When you do, the column will benefit from all built-in features for this case:\n    sorting based on the natural comparison, filtering using either of the built-in filters, and\n    anything else we might add in the future. You can bind to as deep a property as you want in\n    your model, using a standard dot-separated syntax:\n    <code class=\"clr-code\">[clrDgField]=&quot;'my.deep.property'&quot;</code>\n</p>\n<p>\n    You can also see in the following example how every feature we offer is always opt-in:\n    we did not declare any binding on the \"User ID\" column, which means it is not sortable or\n    filterable.\n</p>\n<p>\n    By default, bound columns are assumed to contain string-like contents and the user is presented\n    with the normal string filter. If you know that the contents of the column will be numeric, you\n    can instead use the built-in numeric range filter by adding\n    <code class=\"clr-code\">[clrDgColType]=&quot;'number'&quot;</code>.\n    You can see an example of this in the \"Wins\" column.\n</p>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon.name'\">Pokemon</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'color'\">Favorite color</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'wins'\" [clrDgColType]=\"'number'\">Wins</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n        <clr-dg-cell>{{user.wins}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"example\" clrLanguage=\"html\"></clr-code-snippet>\n\n<div class=\"alert alert-warning\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                In this example, the <code class=\"clr-code\">[clrDgField]</code> input is a hard-coded\n                string, so it needs to be quoted twice:\n                <code class=\"clr-code\">[clrDgField]=&quot;'name'&quot;</code>.\n            </span>\n            <br>\n            <span>\n                Another way to write this would be\n                <code class=\"clr-code\">clrDgField=&quot;name&quot;</code>, without\n                having the extra quotes, but we do not recommend this. In particular, this leaves a\n                potentially unwanted attribute on the element, whereas the previous syntax only adds\n                a property to the corresponding Javascript object.\n            </span>\n        </div>\n    </div>\n</div>\n"
    },
    {
      "name": "DatagridBuiltInFiltersDemo",
      "id": "component-DatagridBuiltInFiltersDemo-762fac626e1b60cd9e85d436760253bb",
      "file": "src/website/src/app/documentation/demos/datagrid/built-in-filters/built-in-filters.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-built-in-filters-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["built-in-filters.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "examples",
          "defaultValue": "EXAMPLES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "myFilterValue",
          "defaultValue": "'A'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "pokemonFilter",
          "defaultValue": "new PokemonFilter()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "winsFilter",
          "defaultValue": "new WinsFilter()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\nimport { PokemonFilter } from '../utils/pokemon-filter';\nimport { WinsFilter } from '../utils/wins-filter';\nimport { EXAMPLES } from './examples';\n\n@Component({\n  selector: 'clr-datagrid-built-in-filters-demo',\n  providers: [Inventory],\n  templateUrl: 'built-in-filters.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridBuiltInFiltersDemo {\n  examples = EXAMPLES;\n  users: User[];\n\n  pokemonFilter = new PokemonFilter();\n  winsFilter = new WinsFilter();\n  myFilterValue = 'A';\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Built-in filters</h2>\n\n<p>\n    Before reading this, you should make sure you read the previous section on custom filters.\n    Done? Then you might be a bit overwhelmed by the complexity of custom filters,\n    understandably.  What if you want <em>just a bit more</em> than default string value filters,\n    but phenomenal cosmic filter power turns out to be slightly overkill? This is where our\n    built-in custom filters come handy. They let you customize specific parts of the filter like the\n    filter matching function, without having to rewrite the whole thing yourself from two-way\n    binding inputs to integration in the datagrid.\n</p>\n\n<h4>String filter</h4>\n\n<p>\n    The first and default filter is the \"string\" filter one, meaning the user is offered a text\n    input, and the rows will be filtered based on a string-matching function you provide. You\n    should now be familiar with our use of interfaces for this, so here is the interface your\n    string matcher should implement:\n</p>\n<clr-code-snippet [clrCode]=\"examples.stringFilterInterface\" clrLanguage=\"typescript\"></clr-code-snippet>\n<p>\n    Once you have it, you simply need to pass it to a\n    <code class=\"clr-code\">&lt;clr-dg-string-filter&gt;</code> component:\n</p>\n<clr-code-snippet [clrCode]=\"examples.stringFilterInput\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    In our example, we can allow the user to filter not only by pokemon name, but also by\n    entering the exact number of the pokemon they are interested in.\n</p>\n\n<h4>Numeric filter</h4>\n\n<p>\n    Another built-in filter is the numeric filter, which allows you to filter a column by a minimum\n    and/or maximum numeric value. The \"Wins\" column demonstrates the numeric filter. You provide the\n    function logic and the user can optionally enter high and low limits for elements in the column.\n    In this case, use a <code class=\"clr-code\">&lt;clr-dg-numeric-filter&gt;</code> component and\n    pass the filter to the <code class=\"clr-code\">[clrDgNumericFilter]</code> property.\n</p>\n<clr-code-snippet [clrCode]=\"examples.numericFilterInterface\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n<clr-code-snippet [clrCode]=\"examples.numericFilterInput\" clrLanguage=\"html\"></clr-code-snippet>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>\n        Pokemon\n        <clr-dg-string-filter [clrDgStringFilter]=\"pokemonFilter\"></clr-dg-string-filter>\n    </clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n    <clr-dg-column>\n        Wins\n        <clr-dg-numeric-filter [clrDgNumericFilter]=\"winsFilter\"></clr-dg-numeric-filter>\n    </clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            {{user.pokemon.name}} <span class=\"badge badge-5\">#{{user.pokemon.number}}</span>\n        </clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n        <clr-dg-cell>{{user.wins}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"examples.stringFilterTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"examples.stringFilterHTML\" clrLanguage=\"html\"></clr-code-snippet>\n\n<h4>Filters with preset values</h4>\n\n<p>\n    You can use a preset filter with either of the built-in filters to initialize the data grid to a\n    specific state. <code class=\"clr-code\">[(clrFilterValue)]</code> can be pre-set to a string for\n    a string filter or a range of numbers for a numeric filter.  With numeric filters you can pass\n    <code class=\"clr-code\">null</code> for either of the limits to not set it.  The example below\n    sets a lower limit of 10 and no upper limit.\n</p>\n\n<clr-code-snippet [clrCode]=\"examples.filterPresetHTML\" clrLanguage=\"html\"></clr-code-snippet>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>\n        Pokemon\n        <clr-dg-string-filter [clrDgStringFilter]=\"pokemonFilter\" [(clrFilterValue)]=\"myFilterValue\"></clr-dg-string-filter>\n    </clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n    <clr-dg-column>\n        Wins\n        <clr-dg-numeric-filter [clrDgNumericFilter]=\"winsFilter\" [clrFilterValue]=\"[10, null]\"></clr-dg-numeric-filter>\n    </clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            {{user.pokemon.name}} <span class=\"badge badge-5\">#{{user.pokemon.number}}</span>\n        </clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n        <clr-dg-cell>{{user.wins}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-alert clrAlertType=\"info\" [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <div class=\"alert-text\">\n            We are planning on writing more of these semi-customisable filters in future releases,\n            including a filter where the user selects values among the ones that are actually\n            present in the data.\n            <br>\n            If the one you are looking for isn't implemented yet, you can absolutely write it\n            yourself using the fully customisable filters. And if you think it's good, feel free\n            to contribute back to Clarity and add it for everyone!\n        </div>\n    </clr-alert-item>\n</clr-alert>\n"
    },
    {
      "name": "DatagridCompactDemo",
      "id": "component-DatagridCompactDemo-792e99c3c420114618c4054f3749e399",
      "file": "src/website/src/app/documentation/demos/datagrid/compact/compact.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-compact-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./compact.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "compactExample",
          "defaultValue": "COMPACT_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { User } from '../inventory/user';\nimport { Inventory } from '../inventory/inventory';\n\nconst COMPACT_EXAMPLE = `\n<clr-datagrid class=\"datagrid-compact\">\n    <-- ... -->\n</clr-datagrid>\n`;\n\n@Component({\n  selector: 'clr-datagrid-compact-demo',\n  templateUrl: './compact.html',\n  providers: [Inventory],\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridCompactDemo {\n  compactExample = COMPACT_EXAMPLE;\n  users: User[];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Compact Datagrid</h2>\n\n<p>\n    To increase the information density of your Datagrid or to decrease the amount of space it takes up, add the <code class=\"clr-code\">datagrid-compact</code> class to it. This class decreases the amount of whitespace paddings in the default Datagrid style.\n</p>\n\n<clr-datagrid class=\"datagrid-compact\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Pokemon</clr-dg-column>\n    <clr-dg-row *ngFor=\"let user of users; let i = index;\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>\n            <clr-icon shape=\"user\"></clr-icon>\n            {{user.name}}\n        </clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"compactExample\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridCustomRenderingDemo",
      "id": "component-DatagridCustomRenderingDemo-8deb5271bc8167f25f74ec0beb847e3e",
      "file": "src/website/src/app/documentation/demos/datagrid/custom-rendering/custom-rendering.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-custom-rendering-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./custom-rendering.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst EXAMPLE = `\n<-- Inside the full datagrid declaration -->\n<clr-dg-row *ngFor=\"let user of users\">\n    <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <clr-dg-cell>{{user.name}}</clr-dg-cell>\n    <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n    <clr-dg-cell>\n        <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n    </clr-dg-cell>\n</clr-dg-row>\n`;\n\n@Component({\n  selector: 'clr-datagrid-custom-rendering-demo',\n  providers: [Inventory],\n  templateUrl: './custom-rendering.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridCustomRenderingDemo {\n  example = EXAMPLE;\n  users: User[];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 31,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Custom cell rendering</h2>\n\n<p>\n    Because we use a declarative API, simply projecting your HTML inside our components' templates,\n    you have complete control over what we display. The contents of datagrid cells or column headers\n    can be as complex as you need them to be, with nested components and interpolation.\n</p>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"example\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridDemo",
      "id": "component-DatagridDemo-6720b76a079a34559d1c1c41ed7c7879",
      "file": "src/website/src/app/documentation/demos/datagrid/datagrid.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datagrid-demo",
      "styleUrls": ["./datagrid.demo.main.scss"],
      "styles": [],
      "templateUrl": ["./datagrid.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_subscriptions",
          "defaultValue": "[]",
          "type": "Subscription[]",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [112]
        },
        {
          "name": "childRoutes",
          "type": "Route[]",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "demoView",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'demoView', {static: true}"
            }
          ]
        },
        {
          "name": "next",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "nextRoute",
          "type": "Route",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "parentRoute",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "previous",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "previousRoute",
          "type": "Route",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "initializePagination",
          "args": [
            {
              "name": "url",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "jsdoctags": [
            {
              "name": "url",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "moveNext",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 94
        },
        {
          "name": "movePrevious",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 102
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 110
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40
        },
        {
          "name": "scrollToDemoView",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 88
        },
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\nimport { ActivatedRoute, NavigationEnd, Route, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-datagrid-demo',\n  templateUrl: './datagrid.demo.html',\n  styleUrls: ['./datagrid.demo.main.scss'],\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class DatagridDemo extends ClarityDocComponent implements OnInit, OnDestroy {\n  @ViewChild('demoView', { static: true })\n  demoView;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super('datagrid');\n  }\n\n  private _subscriptions: Subscription[] = [];\n\n  childRoutes: Route[];\n\n  previous: boolean = false;\n  next: boolean = false;\n\n  previousRoute: Route;\n  nextRoute: Route;\n\n  parentRoute: string = '';\n\n  ngOnInit() {\n    const tempArr: any[] = this.route.routeConfig.children;\n    if (tempArr.length > 1) {\n      this.childRoutes = tempArr.slice(1);\n    }\n    this._subscriptions.push(\n      this.router.events.subscribe((change: any) => {\n        if (change instanceof NavigationEnd) {\n          if (change.url.includes('datagrid')) {\n            this.initializePagination(change.url);\n          }\n        }\n      })\n    );\n    this.initializePagination('/documentation/datagrid/' + this.route.children[0].routeConfig.path);\n  }\n\n  initializePagination(url: string): void {\n    const tempArr: string[] = url.split('/');\n    this.parentRoute = url.substr(0, url.indexOf('datagrid')) + 'datagrid/';\n    if (tempArr.length > 1) {\n      const subRoute: string = tempArr[tempArr.length - 1];\n      if (subRoute === 'datagrid') {\n        this.nextRoute = this.childRoutes[1];\n        this.next = true;\n      } else {\n        for (let i = 0; i < this.childRoutes.length; i++) {\n          if (this.childRoutes[i].path === subRoute) {\n            if (i === 0) {\n              this.previous = false;\n            } else {\n              this.previousRoute = this.childRoutes[i - 1];\n              this.previous = true;\n            }\n\n            if (i < this.childRoutes.length - 1) {\n              this.nextRoute = this.childRoutes[i + 1];\n              this.next = true;\n            } else {\n              this.next = false;\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  scrollToDemoView() {\n    if (this.demoView) {\n      this.demoView.nativeElement.scrollIntoView();\n    }\n  }\n\n  moveNext() {\n    if (this.nextRoute) {\n      const tempPath = this.parentRoute + this.nextRoute.path;\n      this.router.navigate(['./' + tempPath]);\n      this.scrollToDemoView();\n    }\n  }\n\n  movePrevious() {\n    if (this.previousRoute) {\n      const tempPath = this.parentRoute + this.previousRoute.path;\n      this.router.navigate([tempPath]);\n      this.scrollToDemoView();\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            ".datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.demo-list {\n  column-count: 3;\n  list-style-position: inside;\n}\n",
          "styleUrl": "./datagrid.demo.main.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "router",
            "type": "Router"
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "ClarityDocComponent",
      "implements": ["OnInit", "OnDestroy"],
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"datagrids-are-for-organizing-large-volumes-of-data-that-users-can-scan-compare-and-perform-actions-on\">\n            Datagrids are for organizing large volumes of data that users can scan, compare, and perform actions\n            on.</h5>\n\n        <div id=\"code-examples\">\n\n            <p>\n                We have {{childRoutes.length}} datagrid demos. Starting with the basics, each demo shows\n                you one or more of the advanced Datagrid features.\n            </p>\n\n            <div class=\"clr-row\" style=\"margin-top: 24px\">\n                <div class=\"clr-col-12\">\n                    <ul class=\"list demo-list\">\n                        <li *ngFor=\"let route of childRoutes\"><a [routerLink]=\"[route?.path]\">{{route?.data?.demoName}}</a></li>\n                    </ul>\n                </div>\n            </div>\n\n            <div #demoView></div>\n\n            <router-outlet></router-outlet>\n\n            <div class=\"datagrid-demo-pagination\">\n                <button class=\"btn btn-primary demo-pagination-prev\" *ngIf=\"previous\" (click)=\"movePrevious()\">\n                    <clr-icon shape=\"angle left\"></clr-icon>\n                    {{previousRoute.data.demoName}}\n                </button>\n                <button class=\"btn btn-primary demo-pagination-next\" *ngIf=\"next\" (click)=\"moveNext()\">\n                    {{nextRoute.data.demoName}}\n                    <clr-icon shape=\"angle right\"></clr-icon>\n                </button>\n            </div>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "DatagridDetailPaneDemo",
      "id": "component-DatagridDetailPaneDemo-2f00146c7c7963870913cb3f59c39285",
      "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["detail.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "changeEventExample",
          "defaultValue": "CHANGE_EVENT_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "detailPaneExample",
          "defaultValue": "DETAIL_PANE_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "mainExample",
          "defaultValue": "MAIN_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "selected",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "state",
          "type": "User",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "twoWayBindingExample",
          "defaultValue": "TWO_WAY_BINDING_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 67
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 69
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst MAIN_EXAMPLE = `\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n\n    <clr-dg-detail *clrIfDetail=\"let detail\">\n        <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    </clr-dg-detail>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`;\n\nconst DETAIL_PANE_EXAMPLE = `\n<clr-dg-detail *clrIfDetail=\"let detail\">\n  <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n  <clr-dg-detail-body>\n    <-- ... -->\n  </clr-dg-detail-body>\n</clr-dg-detail>\n`;\n\nconst CHANGE_EVENT_EXAMPLE = `\n<ng-template clrIfDetail let-detail (clrIfDetailChange)=\"onDetailOpen($event)\">\n  <clr-dg-detail>\n    <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    <clr-dg-detail-body>\n      <-- ... -->\n    </clr-dg-detail-body>\n  </clr-dg-detail>\n</ng-template>\n`;\n\nconst TWO_WAY_BINDING_EXAMPLE = `\n<ng-template [(clrIfDetail)]=\"detailState\" let-detail>\n  <clr-dg-detail>\n    <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    <clr-dg-detail-body>\n      <!-- ... -->\n    </clr-dg-detail-body>\n  </clr-dg-detail>\n</ng-template>\n`;\n\n@Component({\n  providers: [Inventory],\n  templateUrl: 'detail.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridDetailPaneDemo {\n  mainExample = MAIN_EXAMPLE;\n  detailPaneExample = DETAIL_PANE_EXAMPLE;\n  changeEventExample = CHANGE_EVENT_EXAMPLE;\n  twoWayBindingExample = TWO_WAY_BINDING_EXAMPLE;\n\n  users: User[];\n  selected: User[] = [];\n  state: User;\n\n  constructor(inventory: Inventory) {\n    inventory.size = 103;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 71,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Detail Pane</h2>\n\n<p>\n    The Detail Pane is a pattern to show additional details for a record. The Detail Pane condenses the datagrid to show a primary column and a panel to the right to display more details about your record. The Detail Paine allows you to show the full content of the record in a larger scrollable space. The Detail Pane is also fully accessible for keyboard and screen reader users.\n</p>\n<p>\n    The Detail Pane adds a new toggle icon on the left-hand side of the Datagrid. When the pane is open, it takes 2/3 of the width of the Datagrid and hides all columns, except for the first column and any built-in columns that facilitate features like selection and row actions. The pagination also updates to a condensed format that scales well to small sizes. Only one row can be open at a time; selecting another row changes the content to the newly selected row.\n</p>\n<p>\n    The Detail Pane is not compatible with Expandable Rows; when both are enabled, the Detail Pane takes precedence. Hide and show columns are disabled while the Detail Pane is open, but still works properly when closed. The rest of the Datagrid behaviors work as expected, even while the Detail Pane is open.\n</p>\n\n<h3>Basic use of Detail Pane</h3>\n\n<p>To use the Detail Pane, add a new element with the following syntax inside of the Datagrid</p>\n\n<clr-code-snippet [clrCode]=\"detailPaneExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    This is a full example with Selection and the Detail Pane both working together.\n</p>\n\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-detail *clrIfDetail=\"let detail\">\n        <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    </clr-dg-detail>\n\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n            <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Users per page</clr-dg-page-size>\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}} of {{pagination.totalItems}} users\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"mainExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<h3>Reacting to changes in Detail Pane state</h3>\n\n<p>\n    It is possible to listen for changes to the Detail Pane state, by desugaring the <code class=\"clr-code\">*clrIfDetail</code> directive and listening for the <code class=\"clr-code\">(clrIfDetailChange)</code> event. It is important to use a local template variable like <code class=\"clr-code\">let-detail</code> to reference the row object.\n</p>\n\n<clr-code-snippet [clrCode]=\"changeEventExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<h3>Controlling the Detail Pane programatically</h3>\n\n<p>\n    In some cases, you might want to programatically control the toggling of the Detail Pane, which you can do by desugaring <code class=\"clr-code\">*clrIfDetail</code> directive and using the two way binding syntax. Be sure to include the local template variable like <code class=\"clr-code\">let-detail</code> to get access to the row object.\n</p>\n\n<div class=\"card card-block\">\n    <p class=\"card-text username-list\">\n        Opened Pane:\n        <em *ngIf=\"!state\">No user selected.</em>\n        <span class=\"username\" *ngIf=\"state\">{{state?.id}}</span>\n    </p>\n</div>\n\n<button class=\"btn btn-primary\" (click)=\"state = users[4]\">Open Row 5 Pane</button>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <ng-template [(clrIfDetail)]=\"state\" let-detail>\n        <clr-dg-detail>\n            <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n            <clr-dg-detail-body>\n                <pre>{{detail | json}}</pre>\n                <pre>{{detail | json}}</pre>\n                <pre>{{detail | json}}</pre>\n                <pre>{{detail | json}}</pre>\n            </clr-dg-detail-body>\n        </clr-dg-detail>\n    </ng-template>\n\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n            <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Users per page</clr-dg-page-size>\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}} of {{pagination.totalItems}} users\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"twoWayBindingExample\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridExpandableRowsDemo",
      "id": "component-DatagridExpandableRowsDemo-869491b4107b7be2b09c0fc5d2fc5484",
      "file": "src/website/src/app/documentation/demos/datagrid/expandable-rows/expandable-rows.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-expandable-rows-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["expandable-rows.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dateFilter",
          "defaultValue": "new DateFilter()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "detail",
          "defaultValue": "'default'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "examples",
          "defaultValue": "EXAMPLES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "replace",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "slowLoad",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\nimport { EXAMPLES } from './examples';\n\nimport { ClrDatagridStringFilterInterface } from '@clr/angular';\n\nclass DateFilter implements ClrDatagridStringFilterInterface<User> {\n  accepts(user: User, search: string): boolean {\n    const date = user.creation.toDateString();\n    return date === search || date.toLowerCase().indexOf(search) >= 0;\n  }\n}\n\n@Component({\n  selector: 'clr-datagrid-expandable-rows-demo',\n  providers: [Inventory],\n  templateUrl: 'expandable-rows.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridExpandableRowsDemo {\n  examples = EXAMPLES;\n  users: User[];\n\n  detail = 'default';\n  replace = false;\n  slowLoad = false;\n\n  dateFilter = new DateFilter();\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 35,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Expandable rows</h2>\n\n<p>\n    Use expandable rows when you have additional information for a row, or row cells that do not need to be shown at all\n    times. This helps minimize visual clutter. It also frees up the need of a second datagrid that gets updated with\n    details. This is sometimes called a master-detail or master-child pattern. Another use is replacing original row\n    data with a custom view or layout which includes most or all of the original row data. The expanded area can be\n    loaded with other components as well to fit your needs.\n</p>\n<p>\n    To make a row expandable, you need to put a <code class=\"clr-code\">&lt;clr-dg-row-detail&gt;</code>\n    component inside your row, and add a <code class=\"clr-code\">*clrIfExpanded</code> structural directive on it.\n    This directive doesn't take any input, it is here for 2 reasons: make sure the details are only instantiated once\n    they are needed, and make it very clear in <em>your</em> application templates that this part\n    of the DOM is not present at all times, but only when the row is expanded.\n    This component can contain anything: text, images, graphs, ... It can ignore the overall table layout.\n    If you wish to display details for each cell of the row individually and respect the table layout,\n    all you need to do is use our usual <code class=\"clr-code\">&lt;clr-dg-cell&gt;</code> component in the detail.\n    Make sure you have exactly as many cells in the detail as you have in the row, or they will not align properly.\n</p>\n\n<clr-code-snippet [clrCode]=\"examples.basic\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    If you want the details to replace the original row rather than expand under it, we offer a\n    <code class=\"clr-code\">[clrDgReplace]</code> input that receives a boolean on the\n    <code class=\"clr-code\">&lt;clr-dg-row-detail&gt;</code> component. In other words, to make details replace the row\n    they're in, just write:\n</p>\n\n<clr-code-snippet [clrCode]=\"examples.replace\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    Sometimes you want to conditionally display the expandable row, depending on if the given row has any\n    content to expand. In order to handle this, you'll need to wrap your expandable row in a conditional \n    <code class=\"clr-code\">*ngIf</code> directive to handle this, but since you can't put two structural directives\n    on the same element you'll need to use <code class=\"clr-code\">NgContainer</code> and <code class=\"clr-code\">ngProjectAs</code>\n    like you see here in the following snippet.\n</p>\n\n<clr-code-snippet [clrCode]=\"examples.conditional\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    Finally, you might need to make a server call to get the details for a row before you can display them.\n    This is a very common lazy loading pattern. In this case, you need to add a\n    <code class=\"clr-code\">[clrLoading]</code> directive receiving a boolean <em>anywhere in the row</em>.\n    Yes, it can be absolutely anywhere, as long as it's in or on the row itself.\n    The easiest way to make the server call lazily is simply to create a component that will make the call on\n    initialization (typically in the <code class=\"clr-code\">ngOnInit()</code> method), and to use that component\n    inside the <code class=\"clr-code\">*clrIfExpanded</code> structural directive. Here is an example of what this\n    solution typically looks like.\n</p>\n\n<clr-code-snippet [clrCode]=\"examples.lazyLoadingRow\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"examples.lazyLoadingDetail\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n<div class=\"alert alert-info\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                Note the <code class=\"clr-code\">ngProjectAs</code> attribute on our custom detail component.\n                This is needed to make sure it is projected in the same place an actual\n                <code class=\"clr-code\">&lt;clr-dg-row-detail&gt;</code> would be.\n            </span>\n        </div>\n    </div>\n</div>\n\n<p>\n    Here is an example showcasing all these different combinations in action:\n</p>\n\n<form clrForm>\n  <clr-radio-container>\n    <label>Type of detail</label>\n    <clr-radio-wrapper>\n      <input type=\"radio\" clrRadio name=\"detail\" required value=\"default\" [(ngModel)]=\"detail\" />\n      <label>Overall</label>\n    </clr-radio-wrapper>\n    <clr-radio-wrapper>\n      <input type=\"radio\" clrRadio name=\"detail\" required value=\"columns\" [(ngModel)]=\"detail\" />\n      <label>Per Column</label>\n    </clr-radio-wrapper>\n  </clr-radio-container>\n\n  <clr-checkbox-wrapper>\n    <input type=\"checkbox\" clrCheckbox name=\"replace\" [(ngModel)]=\"replace\" />\n    <label>Replace row</label>\n  </clr-checkbox-wrapper>\n  <clr-checkbox-wrapper>\n    <input type=\"checkbox\" clrCheckbox name=\"slow-load\" [(ngModel)]=\"slowLoad\" />\n    <label>Lazy loading</label>\n  </clr-checkbox-wrapper>\n</form>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'creation'\" >\n        Creation date\n        <clr-dg-string-filter [clrDgStringFilter]=\"dateFilter\"></clr-dg-string-filter>\n    </clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon.name'\">Pokemon</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'color'\">Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n\n        <clr-dg-row-detail *clrIfExpanded [clrDgReplace]=\"replace\">\n            <ng-template [clrFakeLoader]=\"slowLoad\" clrLoading>\n                <ng-container *ngIf=\"detail === 'default'\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin in neque in ante placerat mattis id sed\n                    quam. Proin rhoncus lacus et tempor dignissim. Vivamus sem quam, pellentesque aliquet suscipit eget,\n                    pellentesque sed arcu. Vivamus in dui lectus. Suspendisse cursus est ac nisl imperdiet viverra. Aenean\n                    sagittis nibh lacus, in eleifend urna ultrices et. Mauris porttitor nisi nec velit pharetra porttitor.\n                    Vestibulum vulputate sollicitudin dolor ut tincidunt. Phasellus vitae blandit felis. Nullam posuere\n                    ipsum tincidunt velit pellentesque rhoncus. Morbi faucibus ut ipsum at malesuada. Nam vestibulum felis\n                    sit amet metus finibus hendrerit. Fusce faucibus odio eget ex vulputate rhoncus. Fusce nec aliquam leo,\n                    at suscipit diam.\n                </ng-container>\n\n                <ng-container *ngIf=\"detail === 'columns'\">\n                    <clr-dg-cell>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</clr-dg-cell>\n                    <clr-dg-cell>Proin in neque in ante placerat mattis id sed quam.</clr-dg-cell>\n                    <clr-dg-cell>Proin rhoncus lacus et tempor dignissim.</clr-dg-cell>\n                    <clr-dg-cell>Vivamus sem quam, pellentesque aliquet suscipit eget, pellentesque sed arcu.</clr-dg-cell>\n                    <clr-dg-cell>Vivamus in dui lectus. Suspendisse cursus est ac nisl imperdiet viverra.</clr-dg-cell>\n                </ng-container>\n            </ng-template>\n        </clr-dg-row-detail>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n"
    },
    {
      "name": "DatagridFilteringDemo",
      "id": "component-DatagridFilteringDemo-9c78ea27a84a341471e6c734c6637a8c",
      "file": "src/website/src/app/documentation/demos/datagrid/filtering/filtering.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-filtering-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./filtering.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "examples",
          "defaultValue": "EXAMPLES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "myFilterValue",
          "defaultValue": "'A'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "pokemonFilter",
          "defaultValue": "new PokemonFilter()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\nimport { EXAMPLES } from './examples';\nimport { PokemonFilter } from '../utils/pokemon-filter';\n\n@Component({\n  selector: 'clr-datagrid-filtering-demo',\n  providers: [Inventory],\n  templateUrl: './filtering.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridFilteringDemo {\n  examples = EXAMPLES;\n  users: User[];\n  myFilterValue = 'A';\n  pokemonFilter = new PokemonFilter();\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 23,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Custom filters</h2>\n\n<p>\n    Similarly to the advanced sorting features, sometimes the default filter on a string property\n    is not what you need. When this is the case you can write your own filter, with fully\n    custom template and controller, and both wrap it in and pass it to a\n    <code class=\"clr-code\">&lt;clr-dg-filter&gt;</code> component in your column declaration.\n    This can be done whether or not your column is declared as a\n    <code class=\"clr-code\">clrDgField</code>, and will always take precedence over it if it is.\n</p>\n<p>\n    The filter you provide to the <code class=\"clr-code\">&lt;clr-dg-filter&gt;</code> component\n    needs to implement the <code class=\"clr-code\">ClrDatagridFilterInterface</code> interface provided by Clarity:\n</p>\n<clr-code-snippet [clrCode]=\"examples.filterInterface\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n<p>\n    There are several ways to pass your filter to the\n    <code class=\"clr-code\">&lt;clr-dg-filter&gt;</code> component:\n</p>\n<ul>\n    <li>\n        The simplest, but less reusable way, is to simply inline your filter's template in the\n        column and use the <code class=\"clr-code\">[clrDgFilter]</code> input to pass your filter\n        instance:\n        <clr-code-snippet [clrCode]=\"examples.inlineFilterTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n        <clr-code-snippet [clrCode]=\"examples.inlineFilterHTML\" clrLanguage=\"html\"></clr-code-snippet>\n    </li>\n    <li>\n        A more reusable way is to write an actual component for your custom filter,\n        and inject its <code class=\"clr-code\">DatagridFilter</code> parent in its constructor so\n        that it can register itself:\n        <clr-code-snippet [clrCode]=\"examples.customFilterComponentTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n        <clr-code-snippet [clrCode]=\"examples.customFilterComponentHTML\" clrLanguage=\"html\"></clr-code-snippet>\n    </li>\n    <li>\n        Finally, if you want to have a completely reusable filter independently of our Datagrid,\n        you can write a component for it and use a template reference variable to declare the\n        filter to its container:\n        <clr-code-snippet [clrCode]=\"examples.templateVariableTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n        <clr-code-snippet [clrCode]=\"examples.templateVariableHTML\" clrLanguage=\"html\"></clr-code-snippet>\n    </li>\n</ul>\n\n<p>\n    In our example, we can create \"color picker\" filter, rather than have to search by color name.\n</p>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Pokemon</clr-dg-column>\n    <clr-dg-column>\n        Favorite color\n        <clr-dg-filter [clrDgFilter]=\"colorFilter\">\n            <clr-datagrid-color-filter-demo #colorFilter class=\"color-filter\">\n            </clr-datagrid-color-filter-demo>\n        </clr-dg-filter>\n    </clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"examples.colorFilterTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"examples.colorFilterHTML\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    By default, filtering searches the original model value for matches. In cases where you format the text\n    for display (such as using a pipe), you may want to create a custom filter to handle searching the\n    formatted text. Otherwise, the results you see may not be filtered in the way you expect.\n</p>\n\n<clr-code-snippet [clrCode]=\"examples.filterSearchResults\" clrLanguage=\"html\"></clr-code-snippet>\n<p>\n    In the example above you will need to go with custom filters that will take into account\n    the data that the user sees is the same that he is searching into.\n</p>\n\n<h4>Preset Column Filters</h4>\n\n<p>\n    You can use a preset filter on columns to initialize the data grid to a specific filtered state.\n    <code class=\"clr-code\">[(clrFilterValue)]</code> can be pre-set.\n</p>\n\n<clr-code-snippet [clrCode]=\"examples.stringFilterColumnPresetHTML\" clrLanguage=\"html\"></clr-code-snippet>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\" [(clrFilterValue)]=\"myFilterValue\">Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>\n        Pokemon\n        <clr-dg-string-filter [clrDgStringFilter]=\"pokemonFilter\"></clr-dg-string-filter>\n    </clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            {{user.pokemon.name}} <span class=\"badge badge-5\">#{{user.pokemon.number}}</span>\n        </clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n"
    },
    {
      "name": "DatagridFixedHeightDemo",
      "id": "component-DatagridFixedHeightDemo-c34fb94d97f9f84949b3707f2ad10f25",
      "file": "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-hide-show-columns-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./fixed-height.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "currentPageSize",
          "defaultValue": "10",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "style",
          "defaultValue": "STYLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "usersLimited",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 57
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst EXAMPLE = `\n<div class=\"limit-height\">\n    <clr-datagrid>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                User ID\n            </ng-container>\n        </clr-dg-column>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Name\n            </ng-container>\n        </clr-dg-column>\n        ...\n\n        <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n            <clr-dg-cell>{{user.id}}</clr-dg-cell>\n            <clr-dg-cell>{{user.name}}</clr-dg-cell>\n            ...\n        </clr-dg-row>\n\n        <clr-dg-footer>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            of {{pagination.totalItems}} users\n            <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n        </clr-dg-footer>\n    </clr-datagrid>\n</div>\n`;\n\nconst STYLE = `\n.limit-height clr-datagrid {\n    height: 286px;\n}\n`;\n\n@Component({\n  selector: 'clr-datagrid-hide-show-columns-demo',\n  providers: [Inventory],\n  templateUrl: './fixed-height.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridFixedHeightDemo {\n  example = EXAMPLE;\n  style = STYLE;\n  users: User[];\n  usersLimited: User[];\n  currentPageSize: number = 10;\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n    this.usersLimited = inventory.all.slice(0, 2);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 58,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Fixed Height</h2>\n\n<p>\n    From version 0.8.10 datagrids can now scroll easily if you set their height. The header and footer stay fixed, only the\n    body containing the rows scrolls. It's as simple as setting the height of the <code class=\"clr-code\">clr-datagrid</code> element\n    to a specific value, or making it 100% to fill its container:\n</p>\n\n<div class=\"limit-height\">\n    <clr-datagrid>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                User ID\n            </ng-container>\n        </clr-dg-column>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Name\n            </ng-container>\n        </clr-dg-column>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Creation date\n            </ng-container>\n        </clr-dg-column>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n                Pokemon\n            </ng-container>\n        </clr-dg-column>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn>\n                Favorite color\n            </ng-container>\n        </clr-dg-column>\n\n        <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n            <clr-dg-cell>{{user.id}}</clr-dg-cell>\n            <clr-dg-cell>{{user.name}}</clr-dg-cell>\n            <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n            <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n            <clr-dg-cell>\n                <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n            </clr-dg-cell>\n        </clr-dg-row>\n\n        <clr-dg-footer>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            of {{pagination.totalItems}} users\n            <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n        </clr-dg-footer>\n    </clr-datagrid>\n\n</div>\n\n<clr-code-snippet [clrCode]=\"example\"  clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"style\"  clrLanguage=\"css\"></clr-code-snippet>\n\n<p>\n    Specifying a header's width in any way, including through CSS with a simple class, locks\n    the corresponding column size and makes it non-flexible. No need to duplicate that information\n    on the cells, just the header is enough.\n</p>\n\n<p>\n    In cases where there is not enough data to display the datagrid will fill the container until it\n    reach 100% of the height\n</p>\n\n<div class=\"limit-height\">\n        <clr-datagrid>\n            <clr-dg-column>\n                <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                    User ID\n                </ng-container>\n            </clr-dg-column>\n            <clr-dg-column>\n                <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                    Name\n                </ng-container>\n            </clr-dg-column>\n            <clr-dg-column>\n                <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                    Creation date\n                </ng-container>\n            </clr-dg-column>\n            <clr-dg-column>\n                <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n                    Pokemon\n                </ng-container>\n            </clr-dg-column>\n            <clr-dg-column>\n                <ng-container *clrDgHideableColumn>\n                    Favorite color\n                </ng-container>\n            </clr-dg-column>\n\n            <clr-dg-row *clrDgItems=\"let user of usersLimited\" [clrDgItem]=\"user\">\n                <clr-dg-cell>{{user.id}}</clr-dg-cell>\n                <clr-dg-cell>{{user.name}}</clr-dg-cell>\n                <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n                <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n                <clr-dg-cell>\n                    <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n                </clr-dg-cell>\n            </clr-dg-row>\n\n            <clr-dg-footer>\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n                of {{pagination.totalItems}} users\n                <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n            </clr-dg-footer>\n        </clr-datagrid>\n\n    </div>\n"
    },
    {
      "name": "DatagridFullDemo",
      "id": "component-DatagridFullDemo-a53f165f28bf320d4e4ce977a6289e04",
      "file": "src/website/src/app/documentation/demos/datagrid/full/full.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-full-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./full.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "currentPageSize",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "isServerDriven",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "loading",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "loremIpsumColumn",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "options",
          "defaultValue":
            "{\n    totalUsers: 103,\n    pageSize: '10',\n    selectable: true,\n    loremIpsum: false,\n\n    server: false,\n    latency: '500',\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "pokemonComparator",
          "defaultValue": "new PokemonComparator()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "pokemonFilter",
          "defaultValue": "new PokemonFilter()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "resetting",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "selected",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "total",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 34
        }
      ],
      "methodsClass": [
        {
          "name": "refresh",
          "args": [
            {
              "name": "state",
              "type": "ClrDatagridStateInterface"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72,
          "jsdoctags": [
            {
              "name": "state",
              "type": "ClrDatagridStateInterface",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "reset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { ClrDatagridStateInterface } from '@clr/angular';\nimport { FetchResult, Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\nimport { ColorFilter } from '../utils/color-filter';\nimport { PokemonComparator } from '../utils/pokemon-comparator';\nimport { PokemonFilter } from '../utils/pokemon-filter';\n\n@Component({\n  selector: 'clr-datagrid-full-demo',\n  providers: [Inventory],\n  templateUrl: './full.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridFullDemo {\n  options = {\n    totalUsers: 103,\n    pageSize: '10',\n    selectable: true,\n    loremIpsum: false,\n\n    server: false,\n    latency: '500',\n  };\n\n  resetting = true;\n  currentPageSize: number;\n  users: User[];\n  selected: User[];\n  loremIpsumColumn: boolean;\n  // Server-driven specific\n  isServerDriven = false;\n  loading = true;\n  total: number;\n\n  pokemonComparator = new PokemonComparator();\n  pokemonFilter = new PokemonFilter();\n\n  constructor(private inventory: Inventory) {\n    this.reset();\n  }\n\n  reset() {\n    this.resetting = true;\n    this.loading = true;\n\n    // Timeout hack to make sure we completely reset the datagrid\n    setTimeout(() => {\n      this.inventory.size = this.options.totalUsers;\n      this.currentPageSize = Number.parseInt(this.options.pageSize, 10);\n      this.selected = this.options.selectable ? [] : null;\n      this.loremIpsumColumn = this.options.loremIpsum;\n      this.isServerDriven = this.options.server;\n      this.inventory.latency = Number.parseInt(this.options.latency, 10);\n\n      this.inventory.reset();\n      if (this.isServerDriven) {\n        this.users = [];\n      } else {\n        this.users = this.inventory.all;\n      }\n      this.resetting = false;\n    });\n  }\n\n  refresh(state: ClrDatagridStateInterface) {\n    if (!this.isServerDriven) {\n      return;\n    }\n    this.loading = true;\n    const filters: { [key: string]: any[] } = {};\n    if (state.filters) {\n      for (const filter of state.filters) {\n        if (filter instanceof ColorFilter) {\n          filters.color = (<ColorFilter>filter).listSelected();\n        } else {\n          const { property, value } = <{ property: string; value: string }>filter;\n          filters[property] = [value];\n        }\n      }\n    }\n    this.inventory\n      .filter(filters)\n      .sort(<{ by: string; reverse: boolean }>state.sort)\n      .fetch(state.page && state.page.from, state.page && state.page.size)\n      .then((result: FetchResult) => {\n        this.users = result.users;\n        this.total = result.length;\n        this.loading = false;\n      });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 43,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Full Datagrid demo</h2>\n\n<form clrForm (ngSubmit)=\"reset()\">\n    <clr-input-container>\n        <label>Number of users</label>\n        <input type=\"number\" name=\"number-of-users\" clrInput [(ngModel)]=\"options.totalUsers\">\n    </clr-input-container>\n\n    <clr-select-container>\n        <label>Rows per page</label>\n        <select clrSelect name=\"rows-per-page\" [(ngModel)]=\"options.pageSize\">\n            <option value=\"0\">No pagination</option>\n            <option value=\"10\">10</option>\n            <option value=\"25\">25</option>\n            <option value=\"100\">100</option>\n        </select>\n    </clr-select-container>\n\n    <clr-checkbox-wrapper>\n        <input type=\"checkbox\" name=\"selectable\" clrCheckbox [(ngModel)]=\"options.selectable\" />\n        <label>Selectable</label>\n    </clr-checkbox-wrapper>\n\n    <clr-checkbox-wrapper>\n        <input type=\"checkbox\" name=\"multi-line-text\" clrCheckbox [(ngModel)]=\"options.loremIpsum\" />\n        <label>Multi-line text</label>\n    </clr-checkbox-wrapper>\n\n    <clr-checkbox-wrapper>\n        <input type=\"checkbox\" name=\"server-driven\" clrCheckbox [(ngModel)]=\"options.server\" />\n        <label>Server-driven</label>\n    </clr-checkbox-wrapper>\n\n    <clr-select-container *ngIf=\"options.server\">\n        <label>Latency</label>\n        <select clrSelect name=\"latency\" [(ngModel)]=\"options.latency\">\n            <option value=\"0\">0 ms</option>\n            <option value=\"100\">100ms</option>\n            <option value=\"200\">200ms</option>\n            <option value=\"500\">500ms</option>\n            <option value=\"1000\">1s</option>\n            <option value=\"2000\">2s</option>\n        </select>\n    </clr-select-container>\n\n    <button type=\"submit\" class=\"btn btn-primary\">Apply</button>\n</form>\n\n<div *ngIf=\"!resetting\">\n    <div *ngIf=\"selected\" class=\"card card-block\">\n        <p class=\"card-text username-list\">\n            Selected users:\n            <em *ngIf=\"selected.length == 0\">No user selected.</em>\n            <span class=\"username\" *ngFor=\"let user of selected\">{{user.name}}</span>\n        </p>\n    </div>\n\n    <clr-datagrid *ngIf=\"!isServerDriven\" [(clrDgSelected)]=\"selected\">\n        <clr-dg-column>User ID</clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n        <clr-dg-column [clrDgSortBy]=\"pokemonComparator\">\n            Pokemon\n            <clr-dg-string-filter [clrDgStringFilter]=\"pokemonFilter\"></clr-dg-string-filter>\n        </clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'color'\">\n            Favorite color\n            <clr-dg-filter [clrDgFilter]=\"colorFilter\">\n                <clr-datagrid-color-filter-demo #colorFilter class=\"color-filter\">\n                </clr-datagrid-color-filter-demo>\n            </clr-dg-filter>\n        </clr-dg-column>\n        <clr-dg-column *ngIf=\"loremIpsumColumn\">Multi-line text</clr-dg-column>\n\n        <clr-dg-placeholder>No users found</clr-dg-placeholder>\n        <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n            <clr-dg-cell>{{user.id}}</clr-dg-cell>\n            <clr-dg-cell>{{user.name}}</clr-dg-cell>\n            <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n            <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n            <clr-dg-cell>\n                <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n            </clr-dg-cell>\n            <clr-dg-cell class=\"lorem-ipsum\" *ngIf=\"loremIpsumColumn\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tortor tellus,\n                tincidunt eget mauris molestie, ullamcorper facilisis lacus. Vivamus sagittis\n                suscipit libero, et tristique justo consectetur eget.\n            </clr-dg-cell>\n        </clr-dg-row>\n\n        <clr-dg-footer>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            of {{pagination.totalItems}} users\n            <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n        </clr-dg-footer>\n    </clr-datagrid>\n\n    <clr-datagrid *ngIf=\"isServerDriven\" [(clrDgSelected)]=\"selected\"\n                  (clrDgRefresh)=\"refresh($event)\" [clrDgLoading]=\"loading\">\n        <clr-dg-column>User ID</clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'pokemon'\">Pokemon</clr-dg-column>\n        <clr-dg-column [clrDgField]=\"'color'\">\n            Favorite color\n            <clr-dg-filter [clrDgFilter]=\"colorFilter\">\n                <clr-datagrid-color-filter-demo #colorFilter class=\"color-filter\">\n                </clr-datagrid-color-filter-demo>\n            </clr-dg-filter>\n        </clr-dg-column>\n        <clr-dg-column *ngIf=\"loremIpsumColumn\">Multi-line text</clr-dg-column>\n\n        <clr-dg-placeholder>No users found</clr-dg-placeholder>\n        <clr-dg-row *ngFor=\"let user of users\" [clrDgItem]=\"user\">\n            <clr-dg-cell>{{user.id}}</clr-dg-cell>\n            <clr-dg-cell>{{user.name}}</clr-dg-cell>\n            <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n            <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n            <clr-dg-cell>\n                <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n            </clr-dg-cell>\n            <clr-dg-cell class=\"lorem-ipsum\" *ngIf=\"loremIpsumColumn\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tortor tellus,\n                tincidunt eget mauris molestie, ullamcorper facilisis lacus. Vivamus sagittis\n                suscipit libero, et tristique justo consectetur eget.\n            </clr-dg-cell>\n        </clr-dg-row>\n\n        <clr-dg-footer>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            of {{total}} users\n            <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"\n                               [clrDgTotalItems]=\"total\"></clr-dg-pagination>\n        </clr-dg-footer>\n    </clr-datagrid>\n</div>\n"
    },
    {
      "name": "DatagridHideShowColumnsDemo",
      "id": "component-DatagridHideShowColumnsDemo-a81028920dc04048989b903cef366498",
      "file": "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-hide-show-columns-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./hide-show-columns.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "currentPageSize",
          "defaultValue": "10",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "customToggle",
          "defaultValue": "CUSTOM_TOGGLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 55
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst CUSTOM_TOGGLE = `\n<clr-dg-column-toggle>\n    <clr-dg-column-toggle-title>Column Toggle Title</clr-dg-column-toggle-title>\n    <clr-dg-column-toggle-button>Select All Button</clr-dg-column-toggle-button>\n</clr-dg-column-toggle>\n`;\n\nconst EXAMPLE = `\n<clr-datagrid>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            User ID\n        </ng-container>\n    </clr-dg-column>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Name\n        </ng-container>\n    </clr-dg-column>\n    ...\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        ...\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{pagination.totalItems}} users\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n`;\n\n@Component({\n  selector: 'clr-datagrid-hide-show-columns-demo',\n  providers: [Inventory],\n  templateUrl: './hide-show-columns.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridHideShowColumnsDemo {\n  example = EXAMPLE;\n  customToggle = CUSTOM_TOGGLE;\n  users: User[];\n  currentPageSize: number = 10;\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 56,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Hide/Show Columns</h2>\n\n<p>\n    Datagrid columns are hideable with the <code class=\"clr-code\">*clrDgHideableColumn</code> directive. Because this is\n    a structural directive it cannot be used on the <code class=\"clr-code\">clr-dg-column</code> component directly.\n    Instead, you use <code class=\"clr-code\">*clrDgHideableColumn</code> on an ng-container inside your\n    <code class=\"clr-code\">clr-dg-column</code>. It defaults to showing the column but you can use the hidden property\n    to pre-configure it.\n</p>\n\n<clr-datagrid>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            User ID\n        </ng-container>\n    </clr-dg-column>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Name\n        </ng-container>\n    </clr-dg-column>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Creation date\n        </ng-container>\n    </clr-dg-column>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n            Pokemon\n        </ng-container>\n    </clr-dg-column>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn>\n            Favorite color\n        </ng-container>\n    </clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{pagination.totalItems}} users\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"example\"  clrLanguage=\"html\"></clr-code-snippet>\n\n<h4>Custom Toggle Strings</h4>\n\n<clr-alert [clrAlertType]=\"'danger'\" [clrAlertClosable]=\"false\">\n  <clr-alert-item>\n        <span class=\"alert-text\">\n          Overriding the column toggle text as described below is deprecated as of 2.0 and will be removed in a future major release.\n          Instead, you should use the <a routerLink=\"../../internationalization\">internationalization documentation</a> to change the language strings.\n        </span>\n  </clr-alert-item>\n</clr-alert>\n\n<p>If you need to customize the hide/show toggle component you can override the defaults by adding a <code class=\"clr-doce\">clr-dg-column-toggle</code> component at the beginning of the <code class=\"clr-code\">clr-dg-footer</code> component:\n</p>\n<clr-code-snippet [clrCode]=\"customToggle\"  clrLanguage=\"html\"></clr-code-snippet>\n\n"
    },
    {
      "name": "DatagridPaginationDemo",
      "id": "component-DatagridPaginationDemo-8df1e150cc42db6897cbc78cd98671f5",
      "file": "src/website/src/app/documentation/demos/datagrid/pagination/pagination.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-pagination-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["pagination.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 30
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst EXAMPLE = `\n<-- Inside the full datagrid declaration -->\n<clr-dg-footer>\n    <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n        <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Users per page</clr-dg-page-size>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{pagination.totalItems}} users\n    </clr-dg-pagination>\n</clr-dg-footer>\n`;\n\n@Component({\n  selector: 'clr-datagrid-pagination-demo',\n  providers: [Inventory],\n  templateUrl: 'pagination.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridPaginationDemo {\n  example = EXAMPLE;\n  users: User[];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 103;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 30,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Pagination</h2>\n\n<p>\n    So far, our examples' data only contained a few entries. The point of a datagrid is to display large amounts of data, and we can't reasonably display it all at the same time on the page. To solve this, our datagrid supports pagination.\n</p>\n<p>\n    To activate pagination on your datagrid, you simply need to add a\n    <code class=\"clr-code\">&lt;clr-dg-pagination&gt;</code> component in your datagrid's footer. This component exposes many of properties, most of them bindable, to help you interact with it. You can optionally include a <code class=\"clr-code\">clr-dg-page-size</code> component to bind a list of options to display for toggling the number of items per page.\n</p>\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Input/Output</th>\n            <th class=\"left\">Component property</th>\n            <th class=\"left\">Effect</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">[(clrDgPage)]</td>\n            <td class=\"left\">currentPage</td>\n            <td class=\"left\">Index of the currently displayed page, starting from 1.</td>\n        </tr>\n        <tr>\n            <td class=\"left\">[clrDgPageSize]</td>\n            <td class=\"left\">pageSize</td>\n            <td class=\"left\">Number of items displayed per page. Defaults to 10.</td>\n        </tr>\n        <tr>\n            <td class=\"left\">[clrDgTotalItems]</td>\n            <td class=\"left\">totalItems</td>\n            <td class=\"left\">Total number of items present in the datagrid, after the filters have been applied.</td>\n        </tr>\n        <tr>\n            <td class=\"left\">[clrDgLastPage]</td>\n            <td class=\"left\">lastPage</td>\n            <td class=\"left\">Index of the last page for the current data.</td>\n        </tr>\n        <tr>\n            <td>&nbsp;</td>\n            <td class=\"left\">firstItem</td>\n            <td class=\"left\">Index of the first item displayed on the current page, starting from 0.</td>\n        </tr>\n        <tr>\n            <td class=\"left\">&nbsp;</td>\n            <td class=\"left\">lastItem</td>\n            <td class=\"left\">Index of the last item displayed on the current page, starting from 0.</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>\n    Here is an example of how to use pagination, and attach a template reference variable to it to display information on the current page.\n</p>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n            <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Users per page</clr-dg-page-size>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}} of {{pagination.totalItems}} users\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"example\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridPlaceholderDemo",
      "id": "component-DatagridPlaceholderDemo-2b319185d4da856fb739f739a8f74431",
      "file": "src/website/src/app/documentation/demos/datagrid/placeholder/placeholder.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-placeholder-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["placeholder.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "users",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst EXAMPLE = `\n<clr-datagrid>\n    <-- ... -->\n    <clr-dg-placeholder>We couldn't find any users!</clr-dg-placeholder>\n    \n    <clr-dg-row *ngFor=\"let user of users\">\n        <-- ... -->\n    </clr-dg-row>\n    <-- ... -->\n</clr-datagrid>\n`;\n\n@Component({\n  selector: 'clr-datagrid-placeholder-demo',\n  providers: [Inventory],\n  templateUrl: 'placeholder.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridPlaceholderDemo {\n  example = EXAMPLE;\n  users: User[] = [];\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Placeholder</h2>\n\n<p>\n    Your datagrid can be empty for any number of reasons: you are still fetching the data from the server, the filters\n    selected by the user are too strict, or simply you didn't find any data to display in it.\n    In these cases, we display a simple placeholder image, but it can be useful to display a message to the user\n    explaining what is happening. To do so, simply add a <code class=\"clr-code\">&lt;clr-dg-placeholder&gt;</code>\n    element next to your rows.\n</p>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-placeholder>We couldn't find any users!</clr-dg-placeholder>\n    <clr-dg-row *ngFor=\"let user of users\"></clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"example\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridSelectionDemo",
      "id": "component-DatagridSelectionDemo-8748dbf806046f6538617b99f2afdc81",
      "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-selection-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["selection.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "lockedUsers",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "mainExample",
          "defaultValue": "MAIN_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 62
        },
        {
          "name": "rowSelected",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "rowSelectionExample",
          "defaultValue": "ROW_SELECTION_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "selected",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 68
        },
        {
          "name": "selectionChangeEventExample",
          "defaultValue": "SELECTION_CHANGE_EVENT_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "singleRowExample",
          "defaultValue": "SINGLE_ROW_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "unselectableRow",
          "defaultValue": "UNSELECTABLE_ROW",
          "type": "",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 67
        }
      ],
      "methodsClass": [
        {
          "name": "lockRows",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 87
        },
        {
          "name": "unlockRows",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 80
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst MAIN_EXAMPLE = `\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`;\n\nconst SINGLE_ROW_EXAMPLE = `\n<clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\" [(clrDgSelected)]=\"item.selected\">\n    <-- ... -->\n</clr-dg-row>\n`;\n\nconst ROW_SELECTION_EXAMPLE = `\n<clr-datagrid [(clrDgSelected)]=\"rowSelected\" [clrDgRowSelection]=\"true\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <-- ... -->\n    </clr-dg-row>\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`;\n\nconst SELECTION_CHANGE_EVENT_EXAMPLE = `\n<clr-datagrid [clrDgSelected]=\"selected\"\n              (clrDgSelectedChange)=\"selectionChanged($event)\">\n    <-- ... -->\n</clr-datagrid>\n`;\nconst UNSELECTABLE_ROW = `\n<clr-dg-row [clrDgSelectable]=\"!user.locked\" *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n  <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <-- ... -->\n  </clr-dg-row>\n</clr-dg-row>\n`;\n\n@Component({\n  selector: 'clr-datagrid-selection-demo',\n  providers: [Inventory],\n  templateUrl: 'selection.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridSelectionDemo {\n  mainExample = MAIN_EXAMPLE;\n  rowSelectionExample = ROW_SELECTION_EXAMPLE;\n  singleRowExample = SINGLE_ROW_EXAMPLE;\n  selectionChangeEventExample = SELECTION_CHANGE_EVENT_EXAMPLE;\n  unselectableRow = UNSELECTABLE_ROW;\n  users: User[];\n  selected: User[] = [];\n  rowSelected: User[] = [];\n  lockedUsers: User[] = [];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n\n    this.lockedUsers = [...inventory.all];\n  }\n\n  unlockRows() {\n    this.lockedUsers = this.lockedUsers.map(row => {\n      delete row.locked;\n      return row;\n    });\n  }\n\n  lockRows() {\n    this.lockedUsers = this.lockedUsers.map((user, index) => {\n      // lock few rows\n      if ([2, 3, 5, 9].includes(index)) {\n        user.locked = true;\n      }\n      return user;\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 70,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Selection</h2>\n\n<p>\n    To allow actions on multiple items at once, we provide the ability for the user to select rows\n    in the datagrid. To make rows selectable in your datagrid, you need to do the following:\n</p>\n<ul>\n    <li>\n        Add a <code class=\"clr-code\">[clrDgItem]</code> input on each\n        <code class=\"clr-code\">&lt;clr-dg-row&gt;</code> component to tell us what model the user\n        is actually selecting. Most of the time, this will simply be the current data object in\n        the iteration.\n    </li>\n    <li>\n        Add a <code class=\"clr-code\">[(clrDgSelected)]</code> two-way binding on the datagrid\n        itself, to have access to the list of currently selected items. Note that by adding\n        items to this list yourself, you can dynamically select elements if you need to.\n    </li>\n</ul>\n\n<p>\n    In addition to a checkbox for each row to select individual rows, there will be a checkbox in the\n    header row that will select all of the currently visible rows.\n</p>\n\n<p>\n    In the following example, we simply display the names of the selected users, but since we\n    have access to the full objects, we could perform any operation we want on them.\n</p>\n\n<div class=\"card card-block\">\n    <p class=\"card-text username-list\">\n        Selected users:\n        <em *ngIf=\"selected.length == 0\">No user selected.</em>\n        <span class=\"username\" *ngFor=\"let user of selected\">{{user.name}}</span>\n    </p>\n</div>\n\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"mainExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    Depending on the use case, you might want to allow selection when clicking anywhere in the grid row. Note that this\n    is not recommended when the rows contain clickable items. For example, if your cells contain input, buttons, etc.\n    it is best to avoid enabling whole row selection.\n</p>\n<p>\n    For row selection mode add <code class=\"clr-code\">[(clrDgRowSelection)]</code> and\n    set it to <code class=\"clr-code\">true</code>.\n</p>\n<clr-datagrid [(clrDgSelected)]=\"rowSelected\" [clrDgRowSelection]=\"true\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"rowSelectionExample\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-alert [clrAlertType]=\"'danger'\" [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n          <span class=\"alert-text\">\n            <code class=\"clr-code\">clrDgRowSelection</code> has been deprecated in 2.0 and will be removed in a future major release.\n            It is impossible to support this functionality properly and also comply with accessibility standards for Clarity, and\n            we no longer can recommend using this pattern. The workaround is to simply use single selection without row selection.\n          </span>\n    </clr-alert-item>\n</clr-alert>\n\n<p>\n    If you need an easier access to the selected state of a row, without having to go through the entire array,\n    we also provide a boolean <code class=\"clr-code\">[(clrDgSelected)]</code> two-way binding on the\n    <code class=\"clr-code\">&lt;clr-dg-row&gt;</code> itself. For instance, when your model itself tracks if items are\n    selected, you can simply write:\n</p>\n<clr-code-snippet [clrCode]=\"singleRowExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    If you need to listen to when the selection changes, you can use Angular's <a href=\"https://angular.io/guide/template-syntax\">two way binding</a> to listen to the <code class=\"clr-code\">(clrDgSelectedChange)</code> event:\n</p>\n<clr-code-snippet [clrCode]=\"selectionChangeEventExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    Mark a row with <code class=\"clr-code\">clrDgSelectable</code>, this way the state of the row could not be changed by\n    user interactions. This property works only when using single or multi-selection modes.\n</p>\n<clr-code-snippet [clrCode]=\"unselectableRow\" clrLanguage=\"html\"></clr-code-snippet>\n\n<button class=\"btn btn-primary\" (click)=\"lockRows()\">Lock Rows</button>\n<button class=\"btn btn-primary\" (click)=\"unlockRows()\">Unlock Rows</button>\n\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row [clrDgSelectable]=\"!user.locked\" *clrDgItems=\"let user of lockedUsers\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<h4>Preserving Selection</h4>\n<p>\n    By default, when a filter is applied to the datagrid the selection is cleared. This is done to ensure that all\n    selected items are always visible in the datagrid. In certain instances, this might not be desireable, therefore\n    we provide the <code class=\"clr-code\">[clrDgPreserveSelection]</code> input. Setting this to true will retain the\n    current selection on the datagrid, even if filters are applied and selected items are not visible.\n</p>\n<p>\n    Note: If you do enable <code class=\"clr-code\">[clrDgPreserveSelection]</code>, before performing any action on the\n    selected items, a confirmation should be shown to ensure the end-user is aware of which items they are operating on,\n    since the filters may hide some of the selected items from the user causing a discovery issue.\n</p>"
    },
    {
      "name": "DatagridSelectionSingleDemo",
      "id": "component-DatagridSelectionSingleDemo-504ab85190313107886291852463be8f",
      "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "moduleId": "module.id",
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-selection-single-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["single-selection.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "lockedUsers",
          "defaultValue": "[]",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "rowSelected",
          "type": "User",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "rowSelectionExample",
          "defaultValue": "ROW_SELECTION_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "selectionChangeEventExample",
          "defaultValue": "SELECTION_CHANGE_EVENT_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 60
        },
        {
          "name": "singleSelected",
          "type": "User",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "unselectableRow",
          "defaultValue": "UNSELECTABLE_ROW",
          "type": "",
          "optional": false,
          "description": "",
          "line": 61
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 62
        }
      ],
      "methodsClass": [
        {
          "name": "lockRows",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 82
        },
        {
          "name": "unlockRows",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst EXAMPLE = `\n<clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected user: <span class=\"username\" *ngIf=\"selectedUser\">{{selectedUser.name}}</span>\n`;\n\nconst ROW_SELECTION_EXAMPLE = `\n<clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\" [clrDgRowSelection]=\"true\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected user: <span class=\"username\" *ngIf=\"selectedUser\">{{selectedUser.name}}</span>\n`;\n\nconst SELECTION_CHANGE_EVENT_EXAMPLE = `\n<clr-datagrid [clrDgSingleSelected]=\"selected\"\n              (clrDgSingleSelectedChange)=\"selectionChanged($event)\">\n    <-- ... -->\n</clr-datagrid>\n`;\n\nconst UNSELECTABLE_ROW = `\n<clr-dg-row [clrDgSelectable]=\"!user.locked\" *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n  <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <-- ... -->\n  </clr-dg-row>\n</clr-dg-row>\n`;\n\n@Component({\n  moduleId: module.id,\n  selector: 'clr-datagrid-selection-single-demo',\n  providers: [Inventory],\n  templateUrl: 'single-selection.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridSelectionSingleDemo {\n  example = EXAMPLE;\n  rowSelectionExample = ROW_SELECTION_EXAMPLE;\n  selectionChangeEventExample = SELECTION_CHANGE_EVENT_EXAMPLE;\n  unselectableRow = UNSELECTABLE_ROW;\n  users: User[];\n  singleSelected: User;\n  rowSelected: User;\n  lockedUsers: User[] = [];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n\n    this.lockedUsers = [...inventory.all];\n  }\n\n  unlockRows() {\n    this.lockedUsers = this.lockedUsers.map(row => {\n      delete row.locked;\n      return row;\n    });\n  }\n\n  lockRows() {\n    this.lockedUsers = this.lockedUsers.map((user, index) => {\n      // lock few rows\n      if ([2, 3, 5, 10].includes(index)) {\n        user.locked = true;\n      }\n      return user;\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 65,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Selection (Single)</h2>\n\n<p>\n    Depending on the use case, you might want to restrict the user to only allow single selection in a datagrid.\n    If you haven't done so, please read the previous section on general selection first.\n</p>\n<ul>\n    <li>\n        For single select, instead of <code class=\"clr-code\">[(clrDgSelected)]</code>,\n        add a <code class=\"clr-code\">[(clrDgSingleSelected)]</code> two-way binding on the datagrid\n        itself, to have access to the currently selected item. Note that by setting this value\n        yourself, you can dynamically select an element if you need to.\n    </li>\n</ul>\n\n<p>\n    In the following example, we simply display the name of the selected user, but since we\n    have access to the full objects, we could perform any operation we want on it.\n</p>\n\n<div class=\"card card-block\">\n    <p class=\"card-text username-list\">\n        Selected user:\n        <em *ngIf=\"!singleSelected\">No user selected.</em>\n        <span class=\"username\" *ngIf=\"singleSelected\">{{singleSelected.name}}</span>\n    </p>\n</div>\n\n<clr-datagrid [(clrDgSingleSelected)]=\"singleSelected\">\n\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"example\" clrLanguage=\"html\"></clr-code-snippet>\n\n<clr-alert [clrAlertType]=\"'danger'\" [clrAlertClosable]=\"false\">\n  <clr-alert-item>\n        <span class=\"alert-text\">\n          <code class=\"clr-code\">clrDgRowSelection</code> has been deprecated in 2.0 and will be removed in a future major release.\n          It is impossible to support this functionality properly and also comply with accessibility standards for Clarity, and\n          we no longer can recommend using this pattern. The workaround is to simply use single selection without row selection.\n        </span>\n  </clr-alert-item>\n</clr-alert>\n\n<p>\n    We also offer an <code class=\"clr-code\">[clrDgRowSelection]</code> input to allow users to\n    click anywhere on a row to select it. We however recommend against using this feature unless you have\n    a very specific use case that requires it, due to the various accessibility concerns it raises\n    (table rows cannot be actionable elements at the same time). We are considering deprecating\n    this feature in the future if it continues to hinder accessibility.\n</p>\n\n<clr-alert [clrAlertType]=\"'warning'\" [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            Do not use <code class=\"clr-code\">[clrDgRowSelection]</code> if your row contains any type of clickable\n            elements (buttons, links, inputs, expand caret, single-row actions, etc.).\n            Doing so would produce invalid HTML in the form of nested buttons,\n            which will break in various unpredictable ways depending on the browser.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n\n<div class=\"card card-block\">\n    <p class=\"card-text username-list\">\n        Selected user:\n        <em *ngIf=\"!rowSelected\">No user selected.</em>\n        <span class=\"username\" *ngIf=\"rowSelected\">{{rowSelected.name}}</span>\n    </p>\n</div>\n\n<clr-datagrid [(clrDgSingleSelected)]=\"rowSelected\">\n\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"rowSelectionExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    If you need to listen to when the selection changes, you can use Angular's <a href=\"https://angular.io/guide/template-syntax\">two way binding</a> to listen to the <code class=\"clr-code\">(clrDgSingleSelectedChange)</code> event:\n</p>\n<clr-code-snippet [clrCode]=\"selectionChangeEventExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    In order to conditionally disable selection on a row, use the <code class=\"clr-code\">clrDgSelectable</code> \n    input to disable selection state changes. This has to be done on each row you wish to disable, and works with \n    single and multi selection.\n</p>\n<clr-code-snippet [clrCode]=\"unselectableRow\" clrLanguage=\"html\"></clr-code-snippet>\n\n<button class=\"btn btn-primary\" (click)=\"lockRows()\">Lock Rows</button>\n<button class=\"btn btn-primary\" (click)=\"unlockRows()\">Unlock Rows</button>\n\n<clr-datagrid [(clrDgSingleSelected)]=\"rowSelected\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row [clrDgSelectable]=\"!user.locked\" *clrDgItems=\"let user of lockedUsers\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n"
    },
    {
      "name": "DatagridServerDrivenDemo",
      "id": "component-DatagridServerDrivenDemo-bd2d41b21ae6e62462827aac7c5e3fd6",
      "file": "src/website/src/app/documentation/demos/datagrid/server-driven/server-driven.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-server-driven-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["server-driven.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "examples",
          "defaultValue": "EXAMPLES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "loading",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "total",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [
        {
          "name": "refresh",
          "args": [
            {
              "name": "state",
              "type": "ClrDatagridStateInterface"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "jsdoctags": [
            {
              "name": "state",
              "type": "ClrDatagridStateInterface",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { ClrDatagridStateInterface } from '@clr/angular';\nimport { FetchResult, Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\nimport { EXAMPLES } from './examples';\n\n@Component({\n  selector: 'clr-datagrid-server-driven-demo',\n  providers: [Inventory],\n  templateUrl: 'server-driven.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridServerDrivenDemo {\n  examples = EXAMPLES;\n  users: User[];\n  total: number;\n  loading: boolean = true;\n\n  constructor(private inventory: Inventory) {\n    inventory.size = 103;\n    this.inventory.latency = 500;\n    inventory.reset();\n  }\n\n  refresh(state: ClrDatagridStateInterface) {\n    this.loading = true;\n    const filters: { [prop: string]: any[] } = {};\n    if (state.filters) {\n      for (const filter of state.filters) {\n        const { property, value } = <{ property: string; value: string }>filter;\n        filters[property] = [value];\n      }\n    }\n    if (!state.page) {\n      state.page = {\n        from: 0,\n        to: 9,\n        size: 10,\n      };\n    }\n    this.inventory\n      .filter(filters)\n      .sort(<{ by: string; reverse: boolean }>state.sort)\n      .fetch(state.page.from, state.page.size)\n      .then((result: FetchResult) => {\n        this.users = result.users;\n        this.total = result.length;\n        this.loading = false;\n      });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 23,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Server-Driven datagrid</h2>\n\n<p>\n    When dealing with large amounts of data or heavy processing, a datagrid often has access the\n    currently displayed data only, requesting only the necessary pieces from the server. This is a\n    very common case that we fully support.\n</p>\n<p>\n    We expose events and hooks on all parts of the datagrid to make sure you can trigger any\n    requests you need based on precise user actions. But an important thing to note is that when\n    the server does handle pagination, it needs to also deal with sorting and filtering,\n    because all three are tightly coupled. In light of this, we decided to expose a single global\n    output <code class=\"clr-code\">(clrDgRefresh)</code> that emits the current \"state\" of the\n    datagrid whenever it changes due to a user action or an external one. This state has the\n    following format:\n</p>\n<clr-code-snippet [clrCode]=\"examples.stateInterface\" clrLanguage=\"typescript\"></clr-code-snippet>\n<p>\n    It contains all the information you need to send to the server in order to get the slice of\n    data currently displayed. It even contains redundant information (\n    <code class=\"clr-code\">page.to</code> and <code class=\"clr-code\">page.size</code> for instance),\n    to make sure you have access to the most practical for you without extra processing.\n</p>\n<p>\n    The <code class=\"clr-code\">filters</code> array contains either a custom state object returned by\n    the <code class=\"clr-code\">state</code> method of the filter or the filter instance itself if the\n    optional <code class=\"clr-code\">state</code> method is not implemented.\n</p>\n<p>\n    One important thing to note is that since you don't have all the data available at once, you\n    cannot use the smart iterator\n    <code class=\"clr-code\">*clrDgItems</code>: it would sort, filter and paginate a subset of the\n    data that has already gone through all that. So all you need to do is to go back to a simple\n    <code class=\"clr-code\">*ngFor</code>, which we support.\n</p>\n<p>\n    Finally, since server calls are involved, we need some way of notifying the user that his\n    action has been acknowledged and that we are currently working on it. To this effect, we\n    provide an input <code class=\"clr-code\">[clrDgLoading]</code> that you can use to display the\n    datagrid in a loading state, while fetching data.\n</p>\n\n<p>\n    Here is an example showcasing all this with a fake server latency of 500ms. It also\n    demonstrates how to adapt the state we emit when it does not match exactly your server's API:\n    in this example, the filters are re-formatted from an array to a map.\n</p>\n\n<clr-datagrid (clrDgRefresh)=\"refresh($event)\" [clrDgLoading]=\"loading\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon'\">Pokemon</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'color'\">Favorite color</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n            <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Users per page</clr-dg-page-size>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}} of {{pagination.totalItems}} users\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"examples.serverDrivenTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"examples.serverDrivenHTML\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridSingleActionDemo",
      "id": "component-DatagridSingleActionDemo-756d78ed31f7a8c1fcd6f4f619be88bf",
      "file": "src/website/src/app/documentation/demos/datagrid/single-action/single-action.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-single-action-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["single-action.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "mainExample",
          "defaultValue": "MAIN_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "toDelete",
          "type": "User",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "toEdit",
          "type": "User",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [
        {
          "name": "cleanUp",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45
        },
        {
          "name": "onDelete",
          "args": [
            {
              "name": "user",
              "type": "User"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "jsdoctags": [
            {
              "name": "user",
              "type": "User",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onEdit",
          "args": [
            {
              "name": "user",
              "type": "User"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50,
          "jsdoctags": [
            {
              "name": "user",
              "type": "User",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst MAIN_EXAMPLE = `\n<clr-datagrid>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-action-overflow>\n            <button class=\"action-item\" (click)=\"onEdit(user)\">Edit</button>\n            <button class=\"action-item\" (click)=\"onDelete(user)\">Delete</button>\n        </clr-dg-action-overflow>\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`;\n\n@Component({\n  selector: 'clr-datagrid-single-action-demo',\n  providers: [Inventory],\n  templateUrl: 'single-action.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridSingleActionDemo {\n  mainExample = MAIN_EXAMPLE;\n  users: User[];\n  toDelete: User;\n  toEdit: User;\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n\n  cleanUp(): void {\n    this.toDelete = null;\n    this.toEdit = null;\n  }\n\n  onEdit(user: User) {\n    this.cleanUp();\n    this.toEdit = user;\n  }\n\n  onDelete(user: User) {\n    this.cleanUp();\n    this.toDelete = user;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 37,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<h2>Single row action</h2>\n\n<p>\n    You can allow actions on an item in a single row, in the cases where batch operation is not\n    applicable. You can use this pattern in both selectable and non-selectable datagrids.\n    Add a <code class=\"clr-code\">clr-dg-action-overflow</code> inside a <code class=\"clr-code\">clr-dg-row</code>.\n    The content inside of it will be projected as an action menu which will toggle when the user clicks on the\n    ellipsis icon as shown below. We recommend that the menu items be buttons with a class\n    <code class=\"clr-code\">.action-item</code> as in the example.\n</p>\n\n<p>\n    In the following example, we simply display the names of the selected users, but since we\n    have access to the full objects, we could perform any operation we want on them.\n</p>\n\n<div class=\"card card-block\">\n    <p class=\"card-text username-list\">\n        User to be edited:\n        <em *ngIf=\"!toEdit\">No user selected.</em>\n        <span class=\"username\" *ngIf=\"toEdit\">{{toEdit.name}}</span>\n    </p>\n\n    <p class=\"card-text username-list\">\n        User to be deleted:\n        <em *ngIf=\"!toDelete\">No user selected.</em>\n        <span class=\"username\" *ngIf=\"toDelete\">{{toDelete.name}}</span>\n    </p>\n</div>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-action-overflow>\n            <button class=\"action-item\" (click)=\"onEdit(user)\">Edit</button>\n            <button class=\"action-item\" (click)=\"onDelete(user)\">Delete</button>\n        </clr-dg-action-overflow>\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"mainExample\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridSmartIteratorDemo",
      "id": "component-DatagridSmartIteratorDemo-c0facf4281bd83c6a3f701558461396a",
      "file": "src/website/src/app/documentation/demos/datagrid/smart-iterator/smart-iterator.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-smart-iterator-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./smart-iterator.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\n\nconst EXAMPLE = `\n<-- Inside the full datagrid declaration -->\n<clr-dg-row *clrDgItems=\"let user of users\">\n    <-- Cells declarations -->\n</clr-dg-row>\n`;\n\n@Component({\n  selector: 'clr-datagrid-smart-iterator-demo',\n  providers: [Inventory],\n  templateUrl: './smart-iterator.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridSmartIteratorDemo {\n  example = EXAMPLE;\n  users: User[];\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Smart iterator</h2>\n\n<p>\n    If you want to let us handle all the data processing needed by our various features, you will\n    need to use <code class=\"clr-code\">*clrDgItems</code> instead of\n    <code class=\"clr-code\">*ngFor</code>. They have the exact syntax\n    and behave the same way, but the former lets us have full control what is actually being displayed.\n    As you can see in the following example it doesn't change anything for our simple case, but it\n    will as soon as we start adding features like sorting, filtering, pagination, ...\n</p>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"example\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "DatagridSortingDemo",
      "id": "component-DatagridSortingDemo-894318a74fc68f3a0df2845ec398c329",
      "file": "src/website/src/app/documentation/demos/datagrid/sorting/sorting.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-sorting-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./sorting.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "descSort",
          "defaultValue": "ClrDatagridSortOrder.DESC",
          "type": "ClrDatagridSortOrder",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "examples",
          "defaultValue": "EXAMPLES",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "pokemonComparator",
          "defaultValue": "new PokemonComparator()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "sorted",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "sortOrder",
          "defaultValue": "ClrDatagridSortOrder.DESC",
          "type": "ClrDatagridSortOrder",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "users",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "usersDeprecated",
          "type": "User[]",
          "optional": false,
          "description": "",
          "line": 22
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { Inventory } from '../inventory/inventory';\nimport { User } from '../inventory/user';\nimport { ClrDatagridSortOrder } from '@clr/angular';\nimport { PokemonComparator } from '../utils/pokemon-comparator';\nimport { EXAMPLES } from './examples';\n\n@Component({\n  selector: 'clr-datagrid-sorting-demo',\n  providers: [Inventory],\n  templateUrl: './sorting.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridSortingDemo {\n  examples = EXAMPLES;\n  users: User[];\n  usersDeprecated: User[];\n  sortOrder: ClrDatagridSortOrder = ClrDatagridSortOrder.DESC;\n  sorted: boolean = false;\n  descSort: ClrDatagridSortOrder = ClrDatagridSortOrder.DESC;\n\n  pokemonComparator = new PokemonComparator();\n\n  constructor(inventory: Inventory) {\n    inventory.size = 10;\n    inventory.reset();\n    this.users = inventory.all;\n    this.usersDeprecated = inventory.all;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "inventory",
            "type": "Inventory"
          }
        ],
        "line": 27,
        "jsdoctags": [
          {
            "name": "inventory",
            "type": "Inventory",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Custom sort</h2>\n\n<p>\n    Sometimes, the natural sort order for a property is not the relevant one. Sometimes, a column is not even a property on your\n    model but is dynamically generated instead. In these cases, you might want to specify a custom comparator to sort the\n    column according to your needs. This can be done by providing a comparator through the\n    <code class=\"clr-code\">[clrDgSortBy]</code> input, whether or not your column is declared as a\n    <code class=\"clr-code\">clrDgField</code>, and will always take precedence over it if it is.\n</p>\n<p>\n    A comparator is just an object that implements a <code class=\"clr-code\">compare</code> method that could be given as\n    parameter to Javascript's native\n    <code class=\"clr-code\">Array.sort()</code> function. In other words, if a and b are two elements being compared, then:\n</p>\n<ul>\n    <li>\n        if compare(a, b) is less than 0, a comes first,\n    </li>\n    <li>\n        if compare(a, b) returns 0, leave a and b unchanged with respect to each other, but sorted with respect to all other items,\n    </li>\n    <li>\n        if compare(a, b) is greater than 0, b comes first.\n    </li>\n</ul>\n<p>\n    The safest way to check that your types comply with our API is to have your comparator be an instance of a class that implement\n    the <code class=\"clr-code\">ClrDatagridComparatorInterface</code> interface provided by Clarity.\n</p>\n<div class=\"alert alert-info\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                Why use an object instead of the function directly?\n            </span>\n            <br>\n            <span>\n                Using an object implementing an interface allows strong type-checking, which is safer\n                for your application. If your sorting function does not comply with our API, you will\n                get a clear error during typescript compilation, instead of an obscure one during\n                runtime.\n            </span>\n            <br>\n            <span>\n                Admittedly, we could achieve strong typing by exporting a function signature instead\n                of a whole interface, but not only do interfaces leave room for future features without\n                forcing breaking changes, they also encourage you to write your business logic\n                outside of the controller, naturally creating pure Typescript or Javascript \"logic\"\n                classes, which are far more reusable.\n            </span>\n        </div>\n    </div>\n</div>\n<p>\n    In our example, everyone knows pokemon should not be sorted lexicographically, but according to Pok&eacute;dex number.\n</p>\n\n<p>\n    The datagrid is currently <b>{{sortOrder !== 0 ? \"\" : \"not\"}}</b> sorted<b>{{sortOrder === 1 ? \" ascendingly\" : sortOrder\n    === -1 ? \" descendingly\" : \"\"}}</b>.\n</p>\n<p>\n    <button class=\"btn btn-secondary\" (click)=\"sortOrder = 1\" [disabled]=\"sortOrder === 1\">\n        Sort ascendingly\n    </button>\n    <button class=\"btn btn-secondary\" (click)=\"sortOrder = -1\" [disabled]=\"sortOrder === -1\">\n        Sort descendingly\n    </button>\n    <button class=\"btn btn-secondary\" (click)=\"sortOrder = 0\" [disabled]=\"sortOrder === 0\">\n        Clear sort\n    </button>\n</p>\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon.name'\" [clrDgSortBy]=\"pokemonComparator\" [(clrDgSortOrder)]=\"sortOrder\">Pokemon</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            {{user.pokemon.name}} <span class=\"badge badge-5\">#{{user.pokemon.number}}</span>\n        </clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"examples.sortingTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"examples.sortingHTML\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n    The following example is showcasing the deprecated way of sorting pokemon. This will be removed in the next major release.\n</p>\n<p>\n    The datagrid is currently {{sorted ? \"\" : \"not\"}} sorted.\n    <button class=\"btn btn-secondary\" (click)=\"sorted = !sorted\">\n        {{sorted ? \"Clear sort\" : \"Sort\"}}\n    </button>\n</p>\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon.name'\" [clrDgSortBy]=\"pokemonComparator\" [(clrDgSorted)]=\"sorted\">Pokemon</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of usersDeprecated\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            {{user.pokemon.name}} <span class=\"badge badge-5\">#{{user.pokemon.number}}</span>\n        </clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n\n<clr-code-snippet [clrCode]=\"examples.sortingTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"examples.sortingHTML\" clrLanguage=\"html\"></clr-code-snippet>\n\n<h4>Pre-Sorted Columns</h4>\n<p>Columns can be pre-sorted ascending or descending by declaring the <code class=\"clr-code\">clrSortOrder</code>\n    input on <code class=\"clr-code\">clr-dg-column</code>. You must also provide the\n    <code class=\"clr-code\">[clrDgField]</code> so it knows what field in the provided object to sort on. Clarity\n    provides an enum for such a scenario: <code class=\"clr-code\">ClrDatagridSortOrder</code></p>\n<p>Here is an example that presorts the <b>Name</b> column for descending sort order.</p>\n\n<clr-code-snippet [clrCode]=\"examples.preSortTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"examples.preSortHTML\" clrLanguage=\"html\"></clr-code-snippet>\n\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\" [clrDgSortOrder]=\"descSort\">Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>\n        Pokemon\n    </clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            {{user.pokemon.name}} <span class=\"badge badge-5\">#{{user.pokemon.number}}</span>\n        </clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>"
    },
    {
      "name": "DatagridUsageDemo",
      "id": "component-DatagridUsageDemo-77eb296815cf3119cdeab5dcbe4d12ae",
      "file": "src/website/src/app/documentation/demos/datagrid/usage/usage.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "Inventory"
        }
      ],
      "selector": "clr-datagrid-usage-demo",
      "styleUrls": ["../datagrid.demo.scss"],
      "styles": [],
      "templateUrl": ["./usage.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nimport { Inventory } from '../inventory/inventory';\n\n@Component({\n  selector: 'clr-datagrid-usage-demo',\n  providers: [Inventory],\n  templateUrl: './usage.html',\n  styleUrls: ['../datagrid.demo.scss'],\n})\nexport class DatagridUsageDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.color-square {\n  display: inline-block;\n  vertical-align: text-bottom;\n  height: $clr_baselineRem_0_583;\n  width: $clr_baselineRem_0_583;\n  border: $clr-global-borderwidth solid $clr-color-neutral-1000;\n  border-radius: $clr_baselineRem_4px;\n}\n\n.color-filter {\n  display: block;\n  width: $clr_baselineRem_100px;\n}\n\n.color-selectable {\n  cursor: pointer;\n  margin: $clr_baselineRem_2px;\n  opacity: 0.2;\n\n  &:hover,\n  &.color-selected {\n    opacity: 1;\n  }\n}\n\n.lorem-ipsum {\n  max-width: $clr_baselineRem_300px;\n}\n\n.username-list {\n  margin-bottom: 0;\n\n  .username:not(:last-child)::after {\n    content: ', ';\n  }\n  .username:last-child::after {\n    content: '.';\n  }\n}\n\nh2:first-child {\n  margin-top: $clr_baselineRem_1;\n}\n\n.limit-height clr-datagrid {\n  height: $clr_baselineRem_12;\n}\n",
          "styleUrl": "../datagrid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h2>Usage guidelines</h2>\n\n<h4 id=\"for-structured-content\">For Structured Content</h4>\n\n<p>Datagrids work best for structured, homogeneous content, where each object has the same attributes. When\n    common attributes are directly aligned in columns, users can quickly scan and compare them.</p>\n\n<p>For data sets with a blend of text, images, and data visualizations, or content with mixed formatting,\n    <a routerLink=\"../cards\">cards</a> offer a better layout.</p>\n\n<h4 id=\"for-large-volumes-of-data\">For Large Volumes of Data</h4>\n\n<p>A datagrid is well-suited for presenting large volumes of data that don’t fit on one page.\n    Users can filter and sort the data according to preference.</p>\n\n<p>For smaller amounts of data (10 to 20 lines), datagrids are a relatively heavy component.\n    Use datagrids if:</p>\n\n<ul>\n    <li>The data set will grow</li>\n    <li>Users need search, filter, or batch operations</li>\n</ul>\n\n<p>For a smaller volume of data, use a <a routerLink=\"../tables\">table</a>. Tables are a\n    lighter-weight solution with a static view.</p>\n\n"
    },
    {
      "name": "DatalistBasicDemo",
      "id": "component-DatalistBasicDemo-f04128c4af534ff10c731a9f8a2f86de",
      "file": "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datalist-basic-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./datalist-basic.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "basicHTML",
          "defaultValue": "basicHTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "basicTS",
          "defaultValue": "basicTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "items",
          "defaultValue": "['Item1', 'Item2', 'Item3']",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "vertical",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst basicHTML = `\n<form clrForm>\n    <clr-datalist-container>\n        <input clrDatalistInput [(ngModel)]=\"vertical\" placeholder=\"No label\" name=\"Option\"/>\n        <datalist>\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n    </clr-datalist-container>\n</form>\n`;\n\nconst basicTS = `\n@Component({\n  selector: 'basic-datalist',\n  templateUrl: './basic.html',\n})\nexport class DatalistBasicDemo {\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  vertical = '';\n}\n`;\n\n@Component({\n  selector: 'clr-datalist-basic-demo',\n  templateUrl: './datalist-basic.demo.html',\n})\nexport class DatalistBasicDemo {\n  basicHTML = basicHTML;\n  basicTS = basicTS;\n\n  disabled = false;\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  vertical = '';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<form clrForm>\n    <clr-datalist-container>\n        <input clrDatalistInput [(ngModel)]=\"vertical\" placeholder=\"No label\" name=\"Option\"/>\n        <datalist>\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n    </clr-datalist-container>\n</form>\n\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>basic.html</button>\n        <clr-tab-content *clrIfActive>\n            <clr-code-snippet [clrCode]=\"basicHTML\" clrLanguage=\"html\"></clr-code-snippet>\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>basic.ts</button>\n        <clr-tab-content *clrIfActive>\n            <clr-code-snippet [clrCode]=\"basicTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n"
    },
    {
      "name": "DatalistDemo",
      "id": "component-DatalistDemo-34e825da569a6c398ae1309e510df3fe",
      "file": "src/website/src/app/documentation/demos/datalist/datalist.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datalist-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./datalist.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-datalist-demo',\n  templateUrl: './datalist.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class DatalistDemo extends ClarityDocComponent {\n  constructor() {\n    super('datalist');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"true\">\n    <article>\n        <h5 class=\"component-summary\">\n            The datalist element offers a flexible input when users need to filter and select from a large\n            list of pre-defined options. Or, they need to input a custom value (not provided in the pre-defined list)\n            for the input.\n        </h5>\n\n        <div class=\"design-guidelines\">\n            <h3>Usage</h3>\n\n            <p>\n                Use a datalist when the user needs to choose from a list of items that is long enough for it to be\n                filtered it before selection. Or, there are pre-defined options but the user needs the ability to input\n                a custom value for their use case.\n            </p>\n\n            <p>\n                Use a datalist of you want to provide a standard set of options but also allow the user to enter a\n                custom value that may not be pre-defined.\n            </p>\n\n            <p>\n                Do not confuse a datalist element with the select input. Datalist elements usually have more than 13\n                options that the user will need to filter or narrow down before making a choice. If there are 3-13\n                options, consider using the <a routerLink=\"../../select\">select</a> input.\n            </p>\n\n            <h3>Auto-completion</h3>\n\n            <p>\n                Autocomplete is a familiar pattern for users of web technology. Searching, item suggestion and\n                filtering are all common activities users encounter when interacting with web technology and content.\n                The HTML5 element <code class=\"clr-code\">datalist</code> natively supports autocomplete behavior on\n                the web.\n            </p>\n        </div>\n        <div class=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n            <p>\n                The HTML <code class=\"clr-code\">datalist</code> element contains a list of pre-defined\n                <code class=\"clr-code\">option</code> elements that can be chosen for an input control value. Or, the\n                user can type a different value into the input.\n            </p>\n\n            <p>\n                Natively, the <code class=\"clr-code\">id</code> for a datailist provides the link to an input via the value given for the input's\n                <code class=\"clr-code\">list</code>  attribute. Clarity handles this association by default; it\n                generates and associates the datalist id with its corresponding input element via the\n                <code class=\"clr-code\">list</code> attribute on the input. The app markes the input for a datalist by\n                using the <code class=\"clr-code\">clrDatalistInput</code> directive on the input and default, unique\n                values are generated for the component. If there is an application side need to declare s custom id\n                for the datalist, this value will be used instead of the generated id.\n            </p>\n\n            <h3>Validation</h3>\n\n            <p>\n                Datalists in template driven forms implement the same validation attributes that is described by native\n                HTML form validation. Datalists in reactive forms allow apps to utilize the built in Angular validators\n                (e.g <code class=\"clr-code\">required</code> or <code class=\"clr-code\">minlength</code>) or, they can\n                add custom validator functions directly to the form control model in the component class.\n            </p>\n\n            <p>\n                As with other Clarity form controls, the datalist and its associated input belong inside a container.\n                In this case it is named <code class=\"clr-code\">clr-datalist-container</code>. Besides the required\n                input with the <code class=\"clr-code\">clrDatalistInput</code> directive and the datalist element this\n                container tkaes three other optional elements. An optional <code class=\"clr-code\"label></code> element,\n                <code class=\"clr-code\">clr-control-helper</code> and the\n                <code class=\"clr-code\">clr-control-error</code> elements if there is validation for it.\n            </p>\n\n            <h3>Basic Example</h3>\n            <clr-datalist-basic-demo></clr-datalist-basic-demo>\n\n            <h3>Template Validataion</h3>\n            <clr-datalist-template-validation-demo></clr-datalist-template-validation-demo>\n\n            <h3>Reactive Validation</h3>\n            <clr-datalist-reactive-validation-demo></clr-datalist-reactive-validation-demo>\n\n\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "DatalistReactiveValidationDemo",
      "id": "component-DatalistReactiveValidationDemo-ff7ef111eb26f5f31364ac9d54682d4b",
      "file": "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datalist-reactive-validation-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./datalist-reactive-validation.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "items",
          "defaultValue": "['Item1', 'Item2', 'Item3']",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "model",
          "defaultValue":
            "new FormGroup({\n    item: new FormControl('', [Validators.required, Validators.minLength(4)]),\n  })",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "reactiveHTML",
          "defaultValue": "reactiveHTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "reactiveTS",
          "defaultValue": "reactiveTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        }
      ],
      "methodsClass": [
        {
          "name": "submit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nconst reactiveHTML = `\n<form clrForm [formGroup]=\"model\">\n    <clr-datalist-container>\n        <label>Reactive Datalist</label>\n        <input clrDatalistInput placeholder=\"Option\" name=\"Option\" formControlName=\"item\" />\n        <datalist id=\"clr-custom-datalistid-1\">\n            <option *ngFor=\"let item of items\" [value]=\"item + ' dl 1'\"></option>\n        </datalist>\n    </clr-datalist-container>\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"model.invalid\" (click)=\"submit()\">\n        Submit\n    </button>\n</form>\n`;\n\nconst reactiveTS = `\n@Component({\n  selector: 'reactive-form',\n  templateUrl: './reactive.html',\n})\nexport class ReactiveForm {\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  model = new FormGroup({\n    item: new FormControl('', [ Validators.required, Validators.minLength(4)]),\n  });\n  submit() {\n    console.log('Form submit', this.model);\n  }\n}\n`;\n\n@Component({\n  selector: 'clr-datalist-reactive-validation-demo',\n  templateUrl: './datalist-reactive-validation.demo.html',\n})\nexport class DatalistReactiveValidationDemo {\n  reactiveHTML = reactiveHTML;\n  reactiveTS = reactiveTS;\n\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  model = new FormGroup({\n    item: new FormControl('', [Validators.required, Validators.minLength(4)]),\n  });\n\n  submit() {\n    console.log('Form submit', this.model);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<form clrForm clrLayout=\"vertical\" [formGroup]=\"model\">\n    <clr-datalist-container>\n        <label>Datalist - Reactive Form</label>\n        <input clrDatalistInput autocomplete=\"off\" formControlName=\"item\" />\n        <datalist id=\"clr-custom-datalistid-1\">\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n        <clr-control-helper>Helper text</clr-control-helper>\n        <clr-control-error>There was an error</clr-control-error>\n    </clr-datalist-container>\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"model.invalid\" (click)=\"submit()\">Submit</button>\n</form>\n\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>reactive.html</button>\n        <clr-tab-content *clrIfActive>\n            <clr-code-snippet [clrCode]=\"reactiveHTML\" clrLanguage=\"html\"></clr-code-snippet>\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>reactive.ts</button>\n        <clr-tab-content *clrIfActive>\n            <clr-code-snippet [clrCode]=\"reactiveTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n\n"
    },
    {
      "name": "DatalistTemplateValidationDemo",
      "id": "component-DatalistTemplateValidationDemo-fbd0090453ac52c8bbd65fcc0cd023e1",
      "file": "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datalist-template-validation-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./datalist-template-validation.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "items",
          "defaultValue": "['Item1', 'Item2', 'Item3']",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "templateHTML",
          "defaultValue": "templateHTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "templateTS",
          "defaultValue": "templateTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "vertical",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst templateHTML = `\n<form clrForm>\n    <clr-datalist-container>\n        <label>Template Datalist</label>\n        <input minlength=\"4\" name=\"Option\" required \n               clrDatalistInput [disabled]=\"disabled\" [(ngModel)]=\"vertical\"/>\n        <datalist>\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n        <clr-control-helper>Helper text</clr-control-helper>\n        <clr-control-error>There was an error</clr-control-error>\n    </clr-datalist-container>\n</form>\n`;\nconst templateTS = `\n@Component({\n  selector: 'template-form',\n  templateUrl: './template.html',\n})\nexport class TemplateForm {\n  disabled = false;\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  vertical = '';\n}\n`;\n\n@Component({\n  selector: 'clr-datalist-template-validation-demo',\n  templateUrl: './datalist-template-validation.demo.html',\n})\nexport class DatalistTemplateValidationDemo {\n  templateHTML = templateHTML;\n  templateTS = templateTS;\n\n  disabled = false;\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  vertical = '';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<button class=\"btn btn-sm btn-primary\" (click)=\"disabled = !disabled\">Toggle Disabled</button>\n<form clrForm>\n    <clr-datalist-container>\n        <label>{{ disabled ? 'Disabled':'Enabled' }}</label>\n        <input minlength=\"4\"\n               name=\"Option\"\n               required\n               clrDatalistInput\n               [disabled]=\"disabled\"\n               [(ngModel)]=\"vertical\"/>\n        <datalist>\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n        <clr-control-helper>Helper text</clr-control-helper>\n        <clr-control-error>There was an error</clr-control-error>\n    </clr-datalist-container>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>template.html</button>\n        <clr-tab-content *clrIfActive>\n            <clr-code-snippet [clrCode]=\"templateHTML\" clrLanguage=\"html\"></clr-code-snippet>\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>template.ts</button>\n        <clr-tab-content *clrIfActive>\n            <clr-code-snippet [clrCode]=\"templateTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n"
    },
    {
      "name": "DatepickerAPIDemo",
      "id": "component-DatepickerAPIDemo-784b16642377d60bd686407853928200",
      "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datepicker-api-demo",
      "styleUrls": ["../datepicker.demo.scss"],
      "styles": [],
      "templateUrl": ["./datepicker-api.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "demo",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "maxExample",
          "defaultValue": "MAX_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "minExample",
          "defaultValue": "MIN_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "minMaxExample",
          "defaultValue": "MIN_MAX_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<form clrForm>\n    <clr-date-container>\n        <label>Basic Demo</label>\n        <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\">\n    </clr-date-container>\n</form>\n`;\n\nconst MIN_EXAMPLE = `\n<form clrForm>\n  <clr-date-container>\n    <label>Min date: 2019-11-17</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" min=\"2019-11-17\">\n  </clr-date-container>\n</form>\n`;\nconst MAX_EXAMPLE = `\n<form clrForm>\n  <clr-date-container>\n    <label>Max date: 2019-11-19</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" max=\"2019-11-19\">\n  </clr-date-container>\n</form>\n`;\nconst MIN_MAX_EXAMPLE = `\n<form clrForm>\n  <clr-date-container>\n    <label>Min date: 2019-11-17 AND Max date: 2019-11-19</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" min=\"2019-11-17\" max=\"2019-11-19\">\n  </clr-date-container>\n</form>\n`;\n@Component({\n  selector: 'clr-datepicker-api-demo',\n  templateUrl: './datepicker-api.demo.html',\n  styleUrls: ['../datepicker.demo.scss'],\n})\nexport class DatepickerAPIDemo {\n  htmlExample = HTML_EXAMPLE;\n  minExample = MIN_EXAMPLE;\n  maxExample = MAX_EXAMPLE;\n  minMaxExample = MIN_MAX_EXAMPLE;\n  demo;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.datepicker-demo {\n  margin-top: $clr_baselineRem_1;\n}\n\n.datepicker-output {\n  border: $clr-global-borderwidth solid $clr-color-neutral-400;\n  border-radius: $clr-global-borderradius;\n  background: $clr-color-neutral-0;\n  padding: $clr_baselineRem_0_5;\n}\n",
          "styleUrl": "../datepicker.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<h3>API</h3>\n<h4><code class=\"clr-code\">clrDate</code> Directive</h4>\n<p>\n    To use the date picker, add the <code class=\"clr-code\">clrDate</code> directive to an\n    <code class=\"clr-code\">input</code> field. Then, place the input inside the\n    <code class=\"clr-code\">clr-date-container</code> container element.\n</p>\n<form class=\"datepicker-demo\" clrForm clrLayout=\"horizontal\">\n    <clr-date-container>\n        <label>Basic Demo</label>\n        <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\">\n    </clr-date-container>\n</form>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n\n<clr-alert [clrAlertClosable]=\"false\">\n    <div class=\"alert-item\">\n        <span class=\"alert-text\">\n            It is recommended that you set the <code class=\"clr-code\">type</code>\n            to <code class=\"clr-code\">date</code> as it increases readability\n            of your code, helps with SEO, and keeps your HTML markup semantic. When the date picker\n            is enabled, this <code class=\"clr-code\">type</code> is overridden to\n            <code class=\"clr-code\">text</code> to disable the built-in date pickers\n            that some desktop browsers provide.\n        </span>\n    </div>\n</clr-alert>\n\n<h4>Min/Max attributes</h4>\n<p>The earliest and latest acceptable dates can also be set. Just like the native HTML5 date spec a\n    <code class=\"clr-code\">yyyy-mm-dd</code> string can be used in the value for min or max. If the max value isn't\n    a possible date then that the input has no max value. Similar for min values, if the string used is not a possible\n    date then the input will not have a min value.\n</p>\n<p>Only dates inside the min/max range will be selectable for the input when there is a bound placed for the min or max\n    attribute. </p>\n\n<h5>Only Min</h5>\n<form clrForm clrLayout=\"vertical\">\n    <clr-date-container>\n        <label>Min date: 2019-11-17</label>\n        <input type=\"date\" clrDate name=\"minDemo\" [(ngModel)]=\"demo\" min=\"2019-11-17\">\n    </clr-date-container>\n</form>\n<clr-code-snippet [clrCode]=\"minExample\"></clr-code-snippet>\n<h5>Only Max</h5>\n<form clrForm clrLayout=\"vertical\">\n    <clr-date-container>\n        <label>Max date: 2019-11-19</label>\n        <input type=\"date\" clrDate name=\"maxDemo\" [(ngModel)]=\"demo\" max=\"2019-11-19\">\n    </clr-date-container>\n</form>\n<clr-code-snippet [clrCode]=\"maxExample\"></clr-code-snippet>\n<h5>Min and Max</h5>\n<form clrForm clrLayout=\"horizontal\">\n    <clr-date-container>\n        <label>Min date: 2019-11-17 AND Max date: 2019-11-19</label>\n        <input type=\"date\" clrDate name=\"minMaxDemo\" [(ngModel)]=\"demo\" min=\"2019-11-17\" max=\"2019-11-19\">\n    </clr-date-container>\n</form>\n<clr-code-snippet [clrCode]=\"minMaxExample\"></clr-code-snippet>\n"
    },
    {
      "name": "DatepickerDateIODemo",
      "id": "component-DatepickerDateIODemo-b821c54388618d0204189a92351e647d",
      "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-date-io.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datepicker-date-io-demo",
      "styleUrls": ["../datepicker.demo.scss"],
      "styles": [],
      "templateUrl": ["./datepicker-date-io.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "date",
          "defaultValue": "new Date()",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<form clrForm clrLayout=\"vertical\">\n  <clr-date-container>\n    <label>Date Object</label>\n    <input type=\"date\" [(clrDate)]=\"date\">\n  </clr-date-container>\n</form>\n`;\n\n@Component({\n  selector: 'clr-datepicker-date-io-demo',\n  templateUrl: './datepicker-date-io.demo.html',\n  styleUrls: ['../datepicker.demo.scss'],\n})\nexport class DatepickerDateIODemo {\n  date: Date = new Date();\n\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.datepicker-demo {\n  margin-top: $clr_baselineRem_1;\n}\n\n.datepicker-output {\n  border: $clr-global-borderwidth solid $clr-color-neutral-400;\n  border-radius: $clr-global-borderradius;\n  background: $clr-color-neutral-0;\n  padding: $clr_baselineRem_0_5;\n}\n",
          "styleUrl": "../datepicker.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<clr-alert [clrAlertClosable]=\"false\">\n    <div class=\"alert-item\">\n        <span class=\"alert-text\">\n            Date picker emits <code class=\"clr-code\">null</code> when an invalid date is entered\n            after a valid date was set.\n        </span>\n    </div>\n</clr-alert>\n<form clrForm class=\"datepicker-demo\" clrLayout=\"vertical\">\n    <clr-date-container>\n        <label>Date Object</label>\n        <input type=\"date\" [(clrDate)]=\"date\">\n    </clr-date-container>\n</form>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n<h6>Output: </h6>\n<pre class=\"datepicker-output\">\n{{date | json}}\n</pre>\n"
    },
    {
      "name": "DatepickerDemo",
      "id": "component-DatepickerDemo-9e2eaefd99fe1e44255bc84fa68a1fa2",
      "file": "src/website/src/app/documentation/demos/datepicker/datepicker.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datepicker-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./datepicker.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "expanded",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\nimport localeFr from '@angular/common/locales/fr';\nimport { registerLocaleData } from '@angular/common';\n\nregisterLocaleData(localeFr);\n\n@Component({\n  selector: 'clr-datepicker-demo',\n  templateUrl: './datepicker.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class DatepickerDemo extends ClarityDocComponent {\n  expanded: boolean = true;\n\n  constructor() {\n    super('datepicker');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 22
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"datepicker-header\">\n            Date Picker is a popover control for picking a date value for a date input. It's also sometimes referred to as\n            Datepicker.\n        </h5>\n\n        <div id=\"design-guidelines\">\n            <h2>Design Guidelines</h2>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6 clr-col-lg-7\">\n                    <p>\n                        Date Picker is a calendar-view popover. It is paired with a text input\n                        so that it can send a formatted date value to the input.\n                    </p>\n\n                    <p>\n                        Date Picker is shown by clicking, or gaining focus and hitting enter,\n                        on the calendar icon next to the input field.\n                    </p>\n\n                    <p>\n                        Today’s date is displayed in bold. Unless preloaded with another date,\n                        today’s date will be selected in the Date Picker.\n                    </p>\n\n                    <p>\n                        Clicking on the check-calendar icon inside the Date Picker\n                        returns the focus to today’s date.\n                    </p>\n\n                    <p>\n                        Focus is indicated by a grey background. Focus can be moved around inside the\n                        Date Picker using arrow and tab keys. Clicking the enter key will select a value.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-col-lg-5\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"padding: 48px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img\n                                        class=\"clrweb-Img\"\n                                        src=\"assets/images/documentation/datepicker/datepicker.png\"\n                                        alt=\"Date Picker\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div id=\"usage\">\n                <h3>Usage</h3>\n                <p>\n                    A Date Picker is used to select a date when a user needs to understand the date in context with\n                    other possible dates. Date choices are influenced by day of the week, or week within a month. A Date\n                    Picker is also helpful when the formatting of the date is important.\n                </p>\n                <p>\n                    Date Pickers aren’t helpful when the date is a known value like a birthdate. A user will likely want\n                    to type that value in versus hunting for it in a Date Picker. In cases where space is limited, it\n                    may be a good idea to omit the Date Picker.\n                </p>\n            </div>\n            <div id=\"views\">\n                <h3>Views</h3>\n                <p>\n                    The Month and Year views are shown when a user clicks on the month or year titles in the date view.\n                </p>\n                <div class=\"clr-row\">\n                    <div class=\"clr-col-12 clr-col-md-6\">\n                        <div class=\"clrweb-DoxMedia\">\n                            <div class=\"clrweb-DoxMedia-block\" style=\"padding: 48px\">\n                                <div class=\"clrweb-DoxMedia-img\">\n                                    <img\n                                            class=\"clrweb-Img\"\n                                            src=\"assets/images/documentation/datepicker/monthpicker.png\"\n                                            alt=\"Month Picker\">\n                                </div>\n                            </div>\n                            <div class=\"clrweb-DoxMedia-text\">\n                                <h6>Month</h6>\n                                <p>\n                                    12 month values can be selected from. Arrow keys can be used to navigate through the\n                                    values. Selecting a month value will return the user back to the date view.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"clr-col-12 clr-col-md-6\">\n                        <div class=\"clrweb-DoxMedia\">\n                            <div class=\"clrweb-DoxMedia-block\" style=\"padding: 48px\">\n                                <div class=\"clrweb-DoxMedia-img\">\n                                    <img\n                                            class=\"clrweb-Img\"\n                                            src=\"assets/images/documentation/datepicker/yearpicker.png\"\n                                            alt=\"Year Picker\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Year</h6>\n                            <p>\n                                10 year values are displayed at one time. Arrow keys can be used to navigate through the\n                                values, future years, and past years. Selecting a year value will return the user back\n                                to the date view.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <h3>Small Screens</h3>\n                <p>\n                    We automatically disable the Clarity Date Picker on small mobile phones.\n                    This is done because unlike desktop browsers, most mobile browsers have a\n                    built-in date picker. These built-in date pickers are optimized to\n                    work on mobile devices and provide an experience which the user is already\n                    familiar with.\n                </p>\n                <clr-alert [clrAlertClosable]=\"false\">\n                    <div class=\"alert-item\">\n                        <span class=\"alert-text\">\n                            Clarity Date Picker is shown at screen width <code class=\"clr-code\">768px</code>\n                            and above.\n                        </span>\n                    </div>\n                </clr-alert>\n            </div>\n\n            <div>\n                <h3>Important Notes about User Input</h3>\n\n                <p></p>\n                <ul class=\"list\">\n                    <li>\n                        Every time the user changes the value in the input field,\n                        the value is validated against the placeholder to check if a valid date is entered or not.\n                        If a valid date is entered, the date picker opens with the entered date\n                        selected. If an invalid date is entered, the date picker opens with the focus on\n                        today's date.\n                    </li>\n                    <li>\n                        Selecting a date from the date picker overrides the value in the input field.\n                    </li>\n                    <li>\n                        Date picker ideally requires a 4 digit year but can convert a 2 digit year input\n                        by the user to a 4 digit year. For eg: a 2 digit year 20 will convert to 2020.\n                        If the 4 digit conversion is 20 more than the current year, we subtract 100 from it.\n                        If the current year is 2018 and the year input is 99, then the converted year is 1999.\n                        Anything other than a 4 digit or 2 digit year is considered invalid.\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div id=\"accessibility-guidelines\">\n            <h2 id=\"accessibility\">Accessibility</h2>\n\n            <p>\n                For applications that use the <code class=\"clr-code\">ClrDateInput</code> directive and the associated\n                <code class=\"clr-code\">ClrDateContainer</code> component there is built in support that adds accessible\n                behavior to the control and its form. This behavior includes:\n            </p>\n            <p></p>\n            <ol>\n                <li>\n                    Programmatically associating the correct label <code class=\"clr-code\">for</code>\n                    attribute with the <code class=\"clr-code\">id</code> of the input</li>\n                <li>\n                    Automatic wiring up of the <code class=\"clr-code\">aria-describedby</code> behavior with associated\n                    <code class=\"clr-code\">clr-control-error</code> elements\n                </li>\n                <li>\n                    An <code class=\"clr-code\">aria-live</code> region that can notify screen readers about changes in\n                    the control error state\n                </li>\n                <li>\n                    Adds the label to a general form summary for screen readers when the control is in an error state\n                    after a form submit\n                </li>\n            </ol>\n        </div>\n        <div id=\"code-examples\">\n            <h2 id=\"examples\">Code & Examples</h2>\n            <clr-datepicker-api-demo></clr-datepicker-api-demo>\n            <clr-datepicker-internationalization-demo></clr-datepicker-internationalization-demo>\n            <clr-datepicker-io-demo></clr-datepicker-io-demo>\n\n            <h3 id=\"summary-of-options\">Summary of Options</h3>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[(clrDate)]</b>\n                        <div class=\"hidden-sm-up\">Type: Date</div>\n                        <div class=\"hidden-sm-up\">NA</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">Javascript Date Objects</td>\n                    <td class=\"hidden-xs-down\">NA</td>\n                    <td class=\"left\">\n                        Two-way binding on the date value.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">[min]</td>\n                    <td class=\"hidden-xs-down\">string</td>\n                    <td class=\"hidden-xs-down\">N/A</td>\n                    <td class=\"left\">Sets the earliest acceptable date and must be in the YYYY-MM-DD format.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">[max]</td>\n                    <td class=\"hidden-xs-down\">string</td>\n                    <td class=\"hidden-xs-down\">N/A</td>\n                    <td class=\"left\">Sets the latest acceptable date and must be in the YYYY-MM-DD format.</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "DatepickerENUSDemo",
      "id": "component-DatepickerENUSDemo-34167526874cb4d053111d50dca11b6c",
      "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-enUS.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datepicker-en-us-demo",
      "styleUrls": [],
      "styles": [],
      "template":
        "<h5 style=\"margin-top: 24px\">Locale Identifier: en-US</h5>\n<form clrForm clrLayout=\"vertical\">\n    <clr-date-container>\n        <label>US locale</label>\n        <input type=\"date\" clrDate>\n    </clr-date-container>\n</form>\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Key</th>\n            <th class=\"left\">Value</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Language</td>\n            <td class=\"left\">English</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Territory</td>\n            <td class=\"left\">US</td>\n        </tr>\n        <tr>\n            <td class=\"left\">First Day of the Week (Retrieved from Angular)</td>\n            <td class=\"left\">Sunday (S)</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Date Format (Retrieved from Angular)</td>\n            <td class=\"left\">M/d/yy</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Placeholder Generated</td>\n            <td class=\"left\">MM/DD/YYYY</td>\n        </tr>\n    </tbody>\n</table>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-datepicker-en-us-demo',\n  template: `\n        <h5 style=\"margin-top: 24px\">Locale Identifier: en-US</h5>\n        <form clrForm clrLayout=\"vertical\">\n            <clr-date-container>\n                <label>US locale</label>\n                <input type=\"date\" clrDate>\n            </clr-date-container>\n        </form>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Key</th>\n                    <th class=\"left\">Value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Language</td>\n                    <td class=\"left\">English</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Territory</td>\n                    <td class=\"left\">US</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">First Day of the Week (Retrieved from Angular)</td>\n                    <td class=\"left\">Sunday (S)</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Date Format (Retrieved from Angular)</td>\n                    <td class=\"left\">M/d/yy</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Placeholder Generated</td>\n                    <td class=\"left\">MM/DD/YYYY</td>\n                </tr>\n            </tbody>\n        </table>\n    `,\n})\nexport class DatepickerENUSDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "DatepickerFRDemo",
      "id": "component-DatepickerFRDemo-9846ad546cc6641181e095d784504381",
      "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-fr.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{ provide: LOCALE_ID, useValue:  }"
        }
      ],
      "selector": "clr-datepicker-fr-demo",
      "styleUrls": [],
      "styles": [],
      "template":
        "<h5 style=\"margin-top: 24px\">Locale Idenitifer: fr</h5>\n<form clrForm clrLayout=\"vertical\">\n    <clr-date-container>\n        <label>FR Locale</label>\n        <input type=\"date\" clrDate>\n    </clr-date-container>\n</form>\n<table class=\"table\">\n    <thead>\n    <tr>\n        <th class=\"left\">Key</th>\n        <th class=\"left\">Value</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td class=\"left\">Language</td>\n        <td class=\"left\">French</td>\n    </tr>\n    <tr>\n        <td class=\"left\">Territory</td>\n        <td class=\"left\">-</td>\n    </tr>\n    <tr>\n        <td class=\"left\">First Day of the Week (Retrieved from Angular)</td>\n        <td class=\"left\">Monday (L)</td>\n    </tr>\n    <tr>\n        <td class=\"left\">Date Format (Retrieved from Angular)</td>\n        <td class=\"left\">dd/MM/y</td>\n    </tr>\n    <tr>\n        <td class=\"left\">Placeholder Generated</td>\n        <td class=\"left\">DD/MM/YYYY</td>\n    </tr>\n    </tbody>\n</table>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, LOCALE_ID } from '@angular/core';\n\n@Component({\n  selector: 'clr-datepicker-fr-demo',\n  template: `\n        <h5 style=\"margin-top: 24px\">Locale Idenitifer: fr</h5>\n        <form clrForm clrLayout=\"vertical\">\n            <clr-date-container>\n                <label>FR Locale</label>\n                <input type=\"date\" clrDate>\n            </clr-date-container>\n        </form>\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th class=\"left\">Key</th>\n                <th class=\"left\">Value</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td class=\"left\">Language</td>\n                <td class=\"left\">French</td>\n            </tr>\n            <tr>\n                <td class=\"left\">Territory</td>\n                <td class=\"left\">-</td>\n            </tr>\n            <tr>\n                <td class=\"left\">First Day of the Week (Retrieved from Angular)</td>\n                <td class=\"left\">Monday (L)</td>\n            </tr>\n            <tr>\n                <td class=\"left\">Date Format (Retrieved from Angular)</td>\n                <td class=\"left\">dd/MM/y</td>\n            </tr>\n            <tr>\n                <td class=\"left\">Placeholder Generated</td>\n                <td class=\"left\">DD/MM/YYYY</td>\n            </tr>\n            </tbody>\n        </table>\n    `,\n  providers: [{ provide: LOCALE_ID, useValue: 'fr' }],\n})\nexport class DatepickerFRDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "DatepickerInternationalizationDemo",
      "id": "component-DatepickerInternationalizationDemo-e74fb3b8d2ce84ae2546556a44198402",
      "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datepicker-internationalization-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./datepicker-internationalization.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "provideLocaleExample",
          "defaultValue": "PROVIDE_LOCALE_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "registerLocaleExample",
          "defaultValue": "REGISTER_LOCALE_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst PROVIDE_LOCALE_EXAMPLE = `\nproviders: [\n    {provide: LOCALE_ID, useValue: 'fr'}\n]\n`;\n\nconst REGISTER_LOCALE_EXAMPLE = `\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\n\nregisterLocaleData(localeFr);\n`;\n\n@Component({\n  selector: 'clr-datepicker-internationalization-demo',\n  templateUrl: './datepicker-internationalization.demo.html',\n})\nexport class DatepickerInternationalizationDemo {\n  registerLocaleExample = REGISTER_LOCALE_EXAMPLE;\n  provideLocaleExample = PROVIDE_LOCALE_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<h3>Internationalization</h3>\n<p>\n    Clarity uses the\n    <a href=\"https://github.com/angular/angular/tree/master/packages/common/locales\" target=\"_blank\">locale identifiers</a>\n    supported by Angular for getting the date format,\n    first day of the week, month and day names. These values are used to generate the\n    input field placeholder and the calendar.\n</p>\n\n<div>\n    <h4>Placeholder</h4>\n    <p>\n        Using the date format retrieved from Angular,\n        the placeholder is generated in one of the following formats:\n    </p>\n    <ol class=\"list\">\n        <li>big-endian (YYYY/MM/DD)</li>\n        <li>little-endian (DD/MM/YYYY)</li>\n        <li>middle-endian (MM/DD/YYYY)</li>\n    </ol>\n    <clr-alert [clrAlertClosable]=\"false\">\n        <div class=\"alert-item\">\n        <span class=\"alert-text\">\n            We recommend against overriding the automatically generated placeholder.\n            Adding an incorrect placeholder will create confusion while entering the\n            date in the input.\n        </span>\n        </div>\n    </clr-alert>\n</div>\n\n<p>\n    The following demo shows two date pickers. The first date picker uses the\n    <code class=\"clr-code\">en-US</code> locale identifier whereas the\n    second one uses <code class=\"clr-code\">fr</code>.\n    Both the date pickers have different first day of the week and the calendar is\n    generated based on the first day of the week.\n</p>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-md-6\">\n        <clr-datepicker-en-us-demo></clr-datepicker-en-us-demo>\n    </div>\n    <div class=\"clr-col-12 clr-col-md-6\">\n        <clr-datepicker-fr-demo></clr-datepicker-fr-demo>\n    </div>\n</div>\n\n<p>\n    By default, Angular uses the <code class=\"clr-code\">en-US</code> locale but you\n    can set your application's locale to a different value\n    using the <code class=\"clr-code\">--locale</code> parameter while\n    building your Angular CLI application.\n</p>\n<p>\n    Changing the locale requires its data to be registered first.\n    <clr-code-snippet [clrCode]=\"registerLocaleExample\"></clr-code-snippet>\n    Afterwards you can simply provide the locale in any Module or Component by the\n    <code class=\"clr-code\">LOCALE_ID</code> token.\n    <clr-code-snippet [clrCode]=\"provideLocaleExample\"></clr-code-snippet>\n</p>\n<p>\n    For more information on setting the locale\n    parameter and loading the locale data, please read the Angular\n    <a href=\"https://angular.io/guide/i18n\" target=\"_blank\">internationalization</a>\n    documentation.\n</p>\n\n<clr-alert [clrAlertClosable]=\"false\" [clrAlertType]=\"'warning'\">\n    <div class=\"alert-item\">\n        <span class=\"alert-text\">\n            The date picker uses the locale set for the application to ensure consistency of\n            date inputs and outputs across the application.\n            It is not recommended to override the locale identifier to use different locales\n            for different date picker instances in the same application.\n        </span>\n    </div>\n</clr-alert>\n"
    },
    {
      "name": "DatepickerIODemo",
      "id": "component-DatepickerIODemo-0f6d6af24652c4f80819971bca65d0a3",
      "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-io.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datepicker-io-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./datepicker-io.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-datepicker-io-demo',\n  templateUrl: './datepicker-io.demo.html',\n})\nexport class DatepickerIODemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<h4>Accessing the Date</h4>\n\n<div>\n    <p>\n        You can access the Date in two ways:\n    </p>\n    <div>\n        <h6>1. As a Javascript Date Object</h6>\n        <p>\n            You can add a two way binding on <code class=\"clr-code\">clrDate</code> to access the date value.\n            The benefit of using this approach is that you can interact with the Date picker\n            directly using Javascript Date objects which would avoid converting values from\n            string to date and vice versa on the application side.\n        </p>\n        <div class=\"datepicker-demo\">\n            <clr-datepicker-date-io-demo></clr-datepicker-date-io-demo>\n        </div>\n    </div>\n    <div>\n        <h6>2. As a date string (in current locale format)</h6>\n        <div>\n            <a href=\"https://angular.io/guide/forms#template-driven-forms\" target=\"_blank\">\n                a. Template Driven Forms\n            </a>\n            <p>\n                Template Driven Forms use the <code class=\"clr-code\">ngModel</code> directive to\n                create a binding between the model and the input field.\n            </p>\n            <clr-datepicker-template-driven-forms-demo></clr-datepicker-template-driven-forms-demo>\n        </div>\n        <p></p>\n        <div>\n            <a href=\"https://angular.io/guide/reactive-forms\" target=\"_blank\">b. Reactive Forms</a>\n            <p>\n                Reactive Forms use <code class=\"clr-code\">FormControl</code>s to create the binding between\n                the model and the input field.\n            </p>\n            <clr-datepicker-reactive-forms-demo></clr-datepicker-reactive-forms-demo>\n        </div>\n    </div>\n    <p></p>\n    <clr-alert [clrAlertClosable]=\"false\" [clrAlertType]=\"'warning'\">\n        <div class=\"alert-item\">\n        <span class=\"alert-text\">\n            We recommend that you either access the date as a string or as a javascript date object from the date picker.\n            Using both at the same time might cause unexpected behavior.\n        </span>\n        </div>\n    </clr-alert>\n</div>"
    },
    {
      "name": "DatepickerReactiveFormsDemo",
      "id": "component-DatepickerReactiveFormsDemo-383fd8e6424454291ac96758df17d374",
      "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datepicker-reactive-forms-demo",
      "styleUrls": ["../datepicker.demo.scss"],
      "styles": [],
      "templateUrl": ["./datepicker-reactive-forms.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dateForm",
          "defaultValue": "new FormGroup({ date: new FormControl() })",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "tsExample",
          "defaultValue": "TS_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nconst HTML_EXAMPLE = `\n<form clrForm [formGroup]=\"dateForm\" novalidate>\n    <h4>Reactive Form Demo</h4>\n    <clr-date-container>\n        <label>Date</label>\n        <input type=\"date\" clrDate formControlName=\"date\"/>\n    </clr-date-container>\n</form>\n<pre class=\"datepicker-output\">\n    {{dateForm.value | json}}\n</pre>\n`;\n\nconst TS_EXAMPLE = `\n@Component({\n    selector: \"clr-form-demo\",\n    templateUrl: \"./form-demo.html\"\n})\nexport class DatepickerReactiveFormsDemo {\n    dateForm = new FormGroup({date: new FormControl()});\n}\n`;\n\n@Component({\n  selector: 'clr-datepicker-reactive-forms-demo',\n  templateUrl: './datepicker-reactive-forms.html',\n  styleUrls: ['../datepicker.demo.scss'],\n})\nexport class DatepickerReactiveFormsDemo {\n  dateForm = new FormGroup({ date: new FormControl() });\n\n  htmlExample = HTML_EXAMPLE;\n  tsExample = TS_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.datepicker-demo {\n  margin-top: $clr_baselineRem_1;\n}\n\n.datepicker-output {\n  border: $clr-global-borderwidth solid $clr-color-neutral-400;\n  border-radius: $clr-global-borderradius;\n  background: $clr-color-neutral-0;\n  padding: $clr_baselineRem_0_5;\n}\n",
          "styleUrl": "../datepicker.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<form clrForm [formGroup]=\"dateForm\" novalidate>\n    <h4>Reactive Form Demo</h4>\n    <clr-date-container>\n        <label>Date</label>\n        <input type=\"date\" clrDate formControlName=\"date\"/>\n    </clr-date-container>\n</form>\n<pre class=\"datepicker-output\">\n{{dateForm.value | json}}\n</pre>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"tsExample\" [clrLanguage]=\"'typescript'\"></clr-code-snippet>\n"
    },
    {
      "name": "DatepickerTemplateDrivenFormsDemo",
      "id": "component-DatepickerTemplateDrivenFormsDemo-5db4a6864a3cee6fff928d3395587579",
      "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-datepicker-template-driven-forms-demo",
      "styleUrls": ["../datepicker.demo.scss"],
      "styles": [],
      "templateUrl": ["./datepicker-template-driven-forms.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "date",
          "defaultValue": "'01/02/2015'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "tsExample",
          "defaultValue": "TS_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<form clrForm #simpleForm=\"ngForm\">\n    <h4>Template Driven Form Demo</h4>\n    <clr-date-container>\n        <label>Enter Date</label>\n        <input type=\"date\" name=\"date\" [(ngModel)]=\"date\" clrDate>\n    </clr-date-container>\n</form>\n<pre class=\"datepicker-output\">\n{{simpleForm.value | json}}\n</pre>\n`;\n\nconst TS_EXAMPLE = `\n@Component({\n    selector: \"clr-form-demo\",\n    templateUrl: \"./form-demo.html\"\n})\nexport class DatepickerTemplateDrivenFormsDemo {\n    date: string = \"01/02/2015\";\n}\n`;\n\n@Component({\n  selector: 'clr-datepicker-template-driven-forms-demo',\n  templateUrl: './datepicker-template-driven-forms.html',\n  styleUrls: ['../datepicker.demo.scss'],\n})\nexport class DatepickerTemplateDrivenFormsDemo {\n  date: string = '01/02/2015';\n\n  htmlExample = HTML_EXAMPLE;\n  tsExample = TS_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.datepicker-demo {\n  margin-top: $clr_baselineRem_1;\n}\n\n.datepicker-output {\n  border: $clr-global-borderwidth solid $clr-color-neutral-400;\n  border-radius: $clr-global-borderradius;\n  background: $clr-color-neutral-0;\n  padding: $clr_baselineRem_0_5;\n}\n",
          "styleUrl": "../datepicker.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<form clrForm #simpleForm=\"ngForm\">\n    <h4>Template Driven Form Demo</h4>\n    <clr-date-container>\n        <label>Enter Date</label>\n        <input type=\"date\" name=\"date\" [(ngModel)]=\"date\" clrDate>\n    </clr-date-container>\n</form>\n<pre class=\"datepicker-output\">\n{{simpleForm.value | json}}\n</pre>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"tsExample\" [clrLanguage]=\"'typescript'\"></clr-code-snippet>"
    },
    {
      "name": "DesignStepperDemo",
      "id": "component-DesignStepperDemo-58360df02e064162620ca758160178d0",
      "file": "src/website/src/app/documentation/demos/stepper/design-stepper.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-design-stepper-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./design-stepper.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-design-stepper-demo',\n  templateUrl: './design-stepper.demo.html',\n})\nexport class DesignStepperDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<p>\n  Each panel representing each step will contain a title and a description that describes the entire workflow at a\n  glance. After completing each step, collapsed panels then replace step descriptions with summaries describing what the\n  user has accomplished.\n</p>\n\n<h4>\n  Here is when you might want to use a stepper over normal forms or wizards:\n</h4>\n\n<ul>\n  <li>Complex and long work processes that may not fit in one viewport</li>\n  <li>When the user would need to see the forms in-line with the rest of the page content</li>\n  <li>If users need more detail than step titles to understand the process.</li>\n  <li>If summaries of previous steps are helpful in informing next steps.</li>\n</ul>\n<h3>Style</h3>\n<img src=\"assets/images/documentation/stepper/stepper-style.png\" alt=\"\" class=\"clrweb-DoxMedia-img\" />\n\n<p>\n  Steppers are composed of two sections, the stepper header and input section.\n</p>\n\n<h5>Stepper Header Section</h5>\n\n<p>\n  The step title section has three states: completed, active, to-do. When a step is in its active state, its title\n  section will be highlighted and its input section will be visible for users to interact. As users complete steps, the\n  steps are marked with a green bar to the left, and a summary of user's input will replace the description.\n</p>\n\n<h5>Input Section</h5>\n\n<p>\n  The input section has two elements: the form and the buttons. The form is used to collect input from users to finish\n  the step. The buttons section will allow the users to proceed to the next step or finish the workflow. To go back to a\n  previous step, users need to click on the step title of one of the previous steps. That step will become the active\n  step with its input section visible for editing.\n</p>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col-12 clr-col-md-6\">\n    <div class=\"clrweb-DoxMedia is-dont-block\">\n      <div class=\"clrweb-DoxMedia-block\" style=\"height: 276px\">\n        <div class=\"clrweb-DoxMedia-img\">\n          <img src=\"assets/images/documentation/stepper/stepper-dont.png\" alt=\"\" />\n        </div>\n      </div>\n      <div class=\"clrweb-DoxMedia-text\">\n        <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n        <p>\n          Don't use ambiguous a non-action oriented description that does not specify what users are accomplishing.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"clr-col-12 clr-col-md-6\">\n    <div class=\"clrweb-DoxMedia is-do-block\">\n      <div class=\"clrweb-DoxMedia-block\" style=\"height: 276px\">\n        <div class=\"clrweb-DoxMedia-img\">\n          <img src=\"assets/images/documentation/stepper/stepper-do.png\" alt=\"\" />\n        </div>\n      </div>\n      <div class=\"clrweb-DoxMedia-text\">\n        <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n        <p>\n          Use clear copy in the final call to action to best represent the action that users are taking in completing the stepper.\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h5>Final Call to Action</h5>\n\n<p>\n  For the button label in the final call to action, we recommend that the copy also describe an immediate outcome of completing a\n  stepper. If the workflow will require more time to process after the stepper is complete, then FINISH or other\n  non-specific terminology may work better.\n</p>\n\n<p>\n  Though we recommend action-oriented button labels, there are use cases where labels like DONE work well. If the user\n  is viewing read-only information, we recommend using labels like DONE.\n</p>\n"
    },
    {
      "name": "DocumentationComponent",
      "id": "component-DocumentationComponent-fa1b4a51ab6fc6502e05861e563fd73f",
      "file": "src/website/src/app/documentation/documentation.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "documentation",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["documentation.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "components",
          "defaultValue": "COMPONENTS.list",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "environment",
          "defaultValue": "environment",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "navExpandedState",
          "defaultValue": "{\n    pattern: true,\n    component: true,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 23
        }
      ],
      "methodsClass": [
        {
          "name": "cacheNavState",
          "args": [
            {
              "name": "$event",
              "type": ""
            },
            {
              "name": "state",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "state",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport { ClarityIcons } from '@clr/icons';\nimport { AllShapes } from '@clr/icons/shapes/all-shapes';\nimport * as COMPONENTS from '../../settings/componentlist.json';\n\n@Component({\n  selector: 'documentation',\n  templateUrl: 'documentation.component.html',\n  host: {\n    '[class.content-container]': 'true',\n  },\n})\nexport class DocumentationComponent {\n  environment = environment;\n  components = COMPONENTS.list;\n  navExpandedState = {\n    pattern: true,\n    component: true,\n  };\n\n  constructor() {\n    ClarityIcons.add(AllShapes);\n    const cache = localStorage.getItem('navExpandedCache');\n    if (cache) {\n      try {\n        const state = JSON.parse(cache);\n        this.navExpandedState = state;\n      } catch (e) {\n        // Do nothing, defaults are set to open\n      }\n    }\n    console.log(this.navExpandedState);\n  }\n\n  cacheNavState($event, state) {\n    this.navExpandedState[state] = $event;\n    localStorage.setItem('navExpandedCache', JSON.stringify(this.navExpandedState));\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 26
      },
      "templateData":
        "<clr-vertical-nav class=\"documentation-vertical-nav\" [clr-nav-level]=\"2\">\n    <version-switcher></version-switcher>\n\n    <clr-alert [clrAlertType]=\"'warning'\" [clrAlertAppLevel]=\"true\" [clrAlertClosable]=\"false\">\n        <clr-alert-item>\n            <span class=\"alert-text\">\n                V3 is in prelease. Install it using the @next tag from NPM.\n            </span>\n        </clr-alert-item>\n    </clr-alert>\n\n\n    <a clrVerticalNavLink routerLink=\"/documentation\" routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{exact:true}\">\n        <clr-icon shape=\"home\" clrVerticalNavIcon></clr-icon> Component Status\n    </a>\n\n     <a clrVerticalNavLink routerLink=\"get-started\" routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{exact:true}\">\n        <clr-icon shape=\"help-info\" clrVerticalNavIcon></clr-icon> Get Started\n    </a>\n\n    <clr-vertical-nav-group routerLinkActive=\"active\" [clrVerticalNavGroupExpanded]=\"navExpandedState?.pattern\" (clrVerticalNavGroupExpandedChange)=\"cacheNavState($event, 'pattern')\">\n        <clr-icon shape=\"library\" clrVerticalNavIcon></clr-icon> Patterns\n        <clr-vertical-nav-group-children>\n            <ng-container *ngFor=\"let component of components\">\n                <a clrVerticalNavLink [routerLink]=\"component.url\" routerLinkActive=\"active\" *ngIf=\"component.url && !component.noDemo && component.type == 'pattern'\">\n                    {{component.text}}\n                </a>\n            </ng-container>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n\n    <clr-vertical-nav-group routerLinkActive=\"active\"  [clrVerticalNavGroupExpanded]=\"navExpandedState?.component\" (clrVerticalNavGroupExpandedChange)=\"cacheNavState($event, 'component')\">\n        <clr-icon shape=\"cog\" clrVerticalNavIcon></clr-icon> Components\n        <clr-vertical-nav-group-children>\n            <ng-container *ngFor=\"let component of components\">\n                <a clrVerticalNavLink [routerLink]=\"component.url\" routerLinkActive=\"active\" *ngIf=\"component.url && !component.noDemo && component.type == 'component'\">\n                    {{component.text}}\n                </a>\n            </ng-container>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n</clr-vertical-nav>\n<router-outlet></router-outlet>"
    },
    {
      "name": "DocWrapper",
      "id": "component-DocWrapper-4acacc95edbf44af60e97f51ff3a6fc6",
      "file": "src/website/src/app/documentation/demos/_doc-wrapper/doc-wrapper.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-doc-wrapper",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./doc-wrapper.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "description",
          "defaultValue": "''",
          "line": 20,
          "type": "string"
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "ng",
          "defaultValue": "0",
          "line": 19,
          "type": "number"
        },
        {
          "name": "title",
          "defaultValue": "''",
          "line": 16,
          "type": "string"
        },
        {
          "name": "ui",
          "defaultValue": "0",
          "line": 18,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'clr-doc-wrapper',\n  templateUrl: './doc-wrapper.html',\n  host: {\n    '[class.dox-wrapper]': 'true',\n  },\n})\nexport class DocWrapper {\n  @Input() title: string = '';\n  @Input() newLayout: boolean = false;\n  @Input() ui: number = 0;\n  @Input() ng: number = 0;\n  @Input() description: string = '';\n\n  get useNewLayout() {\n    return !!this.newLayout;\n  }\n\n  get uiInProgress() {\n    return 4 < this.ui && this.ui < 20;\n  }\n\n  get uiDone() {\n    return this.ui > 19;\n  }\n\n  get ngInProgress() {\n    return 4 < this.ng && this.ui < 20;\n  }\n\n  get ngDone() {\n    return this.ng > 19;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "useNewLayout": {
          "name": "useNewLayout",
          "getSignature": {
            "name": "useNewLayout",
            "type": "",
            "returnType": "",
            "line": 22
          }
        },
        "uiInProgress": {
          "name": "uiInProgress",
          "getSignature": {
            "name": "uiInProgress",
            "type": "",
            "returnType": "",
            "line": 26
          }
        },
        "uiDone": {
          "name": "uiDone",
          "getSignature": {
            "name": "uiDone",
            "type": "",
            "returnType": "",
            "line": 30
          }
        },
        "ngInProgress": {
          "name": "ngInProgress",
          "getSignature": {
            "name": "ngInProgress",
            "type": "",
            "returnType": "",
            "line": 34
          }
        },
        "ngDone": {
          "name": "ngDone",
          "getSignature": {
            "name": "ngDone",
            "type": "",
            "returnType": "",
            "line": 38
          }
        }
      },
      "templateData":
        "<div class=\"dox-wrapper dox-header\" [class.new-component-layout]=\"useNewLayout\">\n    <section>\n        <h1 clrFocusOnViewInit>{{title}}</h1>\n        <h5 *ngIf=\"description\">\n            {{ description }}\n        </h5>\n\n        <div *ngIf=\"!useNewLayout\" class=\"component-workstream-bugs\">\n            <span class=\"bug bug-html\" [class.hidden]=\"!uiDone && !uiInProgress\">\n            <img src=\"assets/images/bugs/badge_html5{{uiInProgress?'_inprogress':''}}.svg\"\n                 alt=\"{{uiInProgress?'Development in Progress':'HTML5'}}\"\n                 title=\"{{uiInProgress?'Development in Progress':'HTML5'}}\">\n            </span>\n            <span class=\"bug bug-css\" [class.hidden]=\"!uiDone && !uiInProgress\">\n            <img src=\"assets/images/bugs/badge_css3{{uiInProgress?'_inprogress':''}}.svg\"\n                 alt=\"{{uiInProgress?'Development in Progress':'CSS3'}}\"\n                 title=\"{{uiInProgress?'Development in Progress':'CSS3'}}\">\n            </span>\n            <span class=\"bug bug-ng\" *ngIf=\"ngDone || ngInProgress\">\n            <img src=\"assets/images/bugs/badge_ng{{ngInProgress?'_inprogress':''}}.svg\"\n                 alt=\"{{uiInProgress?'Development in Progress':'Angular'}}\"\n                 title=\"{{uiInProgress?'Development in Progress':'Angular'}}\">\n            </span>\n        </div>\n\n        <div class=\"dox-tabs\">\n            <ul class=\"list-unstyled\" [scrollspy]=\"scrollable\">\n                <li *ngIf=\"!useNewLayout\">\n                    <a routerLink=\".\"\n                       routerLinkActive=\"active\"\n                       fragment=\"top\"\n                       id=\"topTabLink\"\n                       class=\"clrweb-tablink\">\n                        Examples &amp; Code\n                    </a>\n                </li>\n                <li *ngIf=\"!useNewLayout\">\n                    <a routerLink=\".\"\n                       routerLinkActive=\"active\"\n                       fragment=\"guidelines\"\n                       class=\"clrweb-tablink\"\n                       id=\"guidelinesTabLink\">\n                        Design Guidelines\n                    </a>\n                </li>\n                <li *ngIf=\"useNewLayout\">\n                    <a routerLink=\".\"\n                       routerLinkActive=\"active\"\n                       fragment=\"top\"\n                       id=\"topTabLink\"\n                       class=\"clrweb-tablink\">\n                        Design Guidelines\n                    </a>\n                </li>\n                <li *ngIf=\"useNewLayout\">\n                    <a routerLink=\".\"\n                       routerLinkActive=\"active\"\n                       fragment=\"examples\"\n                       class=\"clrweb-tablink\"\n                       id=\"guidelinesTabLink\">\n                        Code &amp; Examples\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </section>\n</div>\n\n<section class=\"dox-content\" hash-listener #scrollable>\n    <div class=\"dox-content-wrapper\">\n        <a id=\"top\"></a>\n        <ng-content></ng-content>\n    </div>\n</section>"
    },
    {
      "name": "DropdownAngularCloseItemFalseDemo",
      "id": "component-DropdownAngularCloseItemFalseDemo-835de9514045b86eaa8097614570808b",
      "file": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-close-item-false.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-dropdown-angular-close-item-false-demo",
      "styleUrls": ["./dropdown.demo.scss"],
      "styles": [],
      "templateUrl": ["./dropdown-angular-close-item-false.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n    <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\n        <button clrDropdownTrigger aria-label=\"Dropdown demo button\">\n            <clr-icon shape=\"error\" class=\"is-error\" size=\"24\"></clr-icon>\n            <clr-icon shape=\"caret down\"></clr-icon>\n        </button>\n        <clr-dropdown-menu *clrIfOpen>\n            <label class=\"dropdown-header\" aria-hidden=\"true\">Dropdown header</label>\n            <div aria-label=\"Dropdown header Action 1\" clrDropdownItem>Action 1</div>\n            <div aria-label=\"Dropdown header Action 2\"  clrDropdownItem>Action 2</div>\n            <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\n            <div clrDropdownItem>Link 1</div>\n            <div clrDropdownItem>Link 2</div>\n        </clr-dropdown-menu>\n    </clr-dropdown>\n`;\n\n@Component({\n  selector: 'clr-dropdown-angular-close-item-false-demo',\n  templateUrl: './dropdown-angular-close-item-false.demo.html',\n  styleUrls: ['./dropdown.demo.scss'],\n})\nexport class DropdownAngularCloseItemFalseDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.demo-menu-height {\n    height: $clr_baselineRem_336px;\n  }\n}\n",
          "styleUrl": "./dropdown.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example squeeze\">\n    <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\n        <button clrDropdownTrigger  aria-label=\"Dropdown demo button\">\n            <clr-icon shape=\"error\" class=\"is-error\" size=\"24\"></clr-icon>\n            <clr-icon shape=\"caret down\"></clr-icon>\n        </button>\n        <clr-dropdown-menu *clrIfOpen>\n            <label class=\"dropdown-header\" aria-hidden=\"true\">Dropdown header</label>\n            <div aria-label=\"Dropdown header Action 1\" clrDropdownItem>Action 1</div>\n            <div aria-label=\"Dropdown header Action 2\"  clrDropdownItem>Action 2</div>\n            <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\n            <div clrDropdownItem>Link 1</div>\n            <div clrDropdownItem>Link 2</div>\n        </clr-dropdown-menu>\n    </clr-dropdown>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "DropdownAngularPositioningDemo",
      "id": "component-DropdownAngularPositioningDemo-2a6526c550d9228b8279028c77d961c4",
      "file": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-positioning.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-dropdown-angular-positioning-demo",
      "styleUrls": ["./dropdown.demo.scss"],
      "styles": [],
      "templateUrl": ["./dropdown-angular-positioning.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 42
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<clr-dropdown>\n    <button class=\"btn btn-outline-primary\" clrDropdownTrigger>\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <clr-dropdown-menu clrPosition=\"top-left\" *clrIfOpen>\n        <label class=\"dropdown-header\" aria-hidden=\"true\">Dropdown header</label>\n        <div aria-label=\"Dropdown header Action 1\" clrDropdownItem>Action 1</div>\n        <div aria-label=\"Dropdown header Disabled Action\" [clrDisabled]=\"true\" clrDropdownItem>Disabled Action</div>\n        <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\n        <clr-dropdown>\n            <button clrDropdownTrigger>Link 1</button>\n            <clr-dropdown-menu>\n                <button clrDropdownItem>Foo</button>\n                <clr-dropdown>\n                    <button clrDropdownTrigger>Bar</button>\n                    <clr-dropdown-menu clrPosition=\"left-top\">\n                        <button clrDropdownItem>Baz</button>\n                    </clr-dropdown-menu>\n                </clr-dropdown>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n        <div clrDropdownItem>Link 2</div>\n    </clr-dropdown-menu>\n</clr-dropdown>\n`;\n\n@Component({\n  selector: 'clr-dropdown-angular-positioning-demo',\n  templateUrl: './dropdown-angular-positioning.demo.html',\n  styleUrls: ['./dropdown.demo.scss'],\n})\nexport class DropdownAngularPositioningDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.demo-menu-height {\n    height: $clr_baselineRem_336px;\n  }\n}\n",
          "styleUrl": "./dropdown.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example squeeze\">\n    <clr-dropdown>\n        <button class=\"btn btn-outline-primary\" clrDropdownTrigger>\n            Dropdown\n            <clr-icon shape=\"caret down\"></clr-icon>\n        </button>\n        <clr-dropdown-menu clrPosition=\"top-left\" *clrIfOpen>\n            <label class=\"dropdown-header\" aria-hidden=\"true\">Dropdown header</label>\n            <div aria-label=\"Dropdown header Action 1\" clrDropdownItem>Action 1</div>\n            <div aria-label=\"Dropdown header Disabled Action\" [clrDisabled]=\"true\" clrDropdownItem>Disabled Action</div>\n            <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\n            <clr-dropdown>\n                <button clrDropdownTrigger>Link 1</button>\n                <clr-dropdown-menu>\n                    <button clrDropdownItem>Foo</button>\n                    <clr-dropdown>\n                        <button clrDropdownTrigger>Bar</button>\n                        <clr-dropdown-menu clrPosition=\"left-top\">\n                            <button clrDropdownItem>Baz</button>\n                        </clr-dropdown-menu>\n                    </clr-dropdown>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n            <div clrDropdownItem>Link 2</div>\n        </clr-dropdown-menu>\n    </clr-dropdown>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "DropdownsDemo",
      "id": "component-DropdownsDemo-807486e60125a7f2a3c7fc89556aa625",
      "file": "src/website/src/app/documentation/demos/dropdown/dropdown.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-dropdowns-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./dropdown.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-dropdowns-demo',\n  templateUrl: './dropdown.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class DropdownsDemo extends ClarityDocComponent {\n  newLayout = true;\n  constructor() {\n    super('dropdowns');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"a-dropdown-menu-lists-actions-that-users-can-perform-within-an-application-or-on-a-selected-object\">\n            A dropdown menu allows the user to choose an option or action from a contextual list. The source of the\n            dropdown is usually a button.</h5>\n\n        <div id=\"design-guidelines\">\n            <div class=\"clrweb-DoxMedia\">\n                <div class=\"clrweb-DoxMedia-block\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/dropdowns/img_dropdown menu styles.png\" alt=\"Dropdown menu styles\">\n                    </div>\n                </div>\n            </div>\n\n\n            <h3 id=\"description\">Description</h3>\n            <p></p>\n            <ul class=\"list\">\n                <li>Default line height is 30 px; 36 px for x-small breakpoint (<544px) touch targets</li>\n                <li>Headers and or dividers may be used to organize a longer list of items</li>\n                <li>Menu width: Minimum 168 px; Maximum 336 px</li>\n                <li>Items in the list have hover and click states</li>\n            </ul>\n\n            <div class=\"clrweb-DoxVersusBox\">\n                <div class=\"clrweb-DoxVersusBox-pin\">\n                    <clr-icon shape=\"pin\"></clr-icon>\n                </div>\n                <div class=\"clrweb-DoxVersusBox-items\">\n                    <div class=\"clrweb-DoxVersusBox-itemWrapper\">\n                        <div class=\"clrweb-DoxVersusBox-item\">\n                            <clr-dropdown>\n                                <button type=\"button\" clrDropdownTrigger class=\"btn btn-link\">\n                                    Departments\n                                    <clr-icon shape=\"caret down\"></clr-icon>\n                                </button>\n                                <clr-dropdown-menu clrPosition=\"bottom-left\">\n                                    <button type=\"button\" clrDropdownItem>Art</button>\n                                    <button type=\"button\" clrDropdownItem>Business</button>\n                                    <button type=\"button\" clrDropdownItem>Science</button>\n                                    <button type=\"button\" clrDropdownItem>Mathematics</button>\n                                </clr-dropdown-menu>\n                            </clr-dropdown>\n                            <p><b>Dropdown menus</b> present a list of options that take an immediate\n                                action or navigate the user outside of the current context.</p>\n                        </div>\n                    </div>\n                    <div class=\"clrweb-DoxVersusBox-vsWrapper\">\n                        <div class=\"clrweb-DoxVersusBox-vs\">vs</div>\n                    </div>\n                    <div class=\"clrweb-DoxVersusBox-itemWrapper\">\n                        <div class=\"clrweb-DoxVersusBox-item\">\n                            <div class=\"select\">\n                                <select id=\"selects_3\">\n                                    <option>New York</option>\n                                    <option>San Francisco</option>\n                                    <option>Austin</option>\n                                    <option>Paris</option>\n                                    <option>Seattle</option>\n                                </select>\n                            </div>\n                            <p><b>Select boxes</b> present a list of options that the user can choose from and\n                                apply to an input field.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"behavior\">Behavior</h3>\n            <p></p>\n            <ul class=\"list\">\n                <li>Clicking on the toggle opens the dropdown</li>\n                <li>By default, selecting a menu item or clicking outside the menu dismisses the menu. You can change\n                    this behavior to keep the menu open on item selection</li>\n            </ul>\n\n            <h3 id=\"placement\">Placement</h3>\n            <p>\n                By default, a dropdown opens from the bottom of the toggle, along the left side. You can change\n                the placement by using one of the eight direction classes.\n            </p>\n\n            <div class=\"clrweb-DoxMedia\">\n                <div class=\"clrweb-DoxMedia-block\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/dropdowns/img_menu_placement.png\" alt=\"Dropdown menu placement\">\n                    </div>\n                </div>\n            </div>\n\n\n            <h3 id=\"recommendations\">Recommendations</h3>\n            <p></p>\n            <ul class=\"list\">\n                <li>Use a button for the toggle. The button can contain either text or an icon</li>\n                <li>Order menu items by usage, except for destructive actions, which belong at the bottom</li>\n                <li>Keep the text short and concise. Long menu items are truncated from the end and an ellipsis added</li>\n                <li>Nested menus may be used to organize long lists of items into categories</li>\n                <li>Limit menus to three levels: Root menu plus up to two levels of nested menus</li>\n                <li>Disable a menu item if:</li>\n                <ul class=\"list\">\n                    <li>It can apply in a different context</li>\n                    <li>The user doesn’t have permissions for the action</li>\n                    <li>An applicable object is not currently selected</li>\n                </ul>\n            </ul>\n\n          <h2 id=\"nested-menu\">Nested Menu</h2>\n\n          <p>Nested menus are an extension of dropdown menus. They save screen space by organizing a long list of\n            items into categories that the user can click to reveal deeper levels.</p>\n\n          <h3>Description</h3>\n          <p></p>\n          <ul class=\"list\">\n            <li>Same visual style as standard dropdown menu with the exception of a darker border (#9A9A9A)</li>\n            <li>Slight overlap (4px) over root menu to emphasize stack order</li>\n            <li>Width: Minimum 168 px; Maximum 336 px</li>\n            <li>Default line height is 30 px; 36 px for x-small breakpoint (<544px)</li>\n          </ul>\n\n          <h3>Interaction</h3>\n          <p></p>\n          <ul class=\"list\">\n            <li>With mouse: Click group name to reveal nested menus. Group name stays in selected state to\n              serve as a breadcrumb</li>\n            <li>Clicking outside of the menu dismisses all menus</li>\n          </ul>\n\n          <div class=\"clrweb-DoxMedia\">\n            <div class=\"clrweb-DoxMedia-block\">\n              <div class=\"clrweb-DoxMedia-img\">\n                <img src=\"assets/images/documentation/dropdowns/img_nested_levels.png\"\n                     alt=\"Dropdown nested menu\"/>\n              </div>\n            </div>\n          </div>\n\n          <h3>Placement</h3>\n          <div class=\"clr-row\">\n            <div class=\"clr-col-12 clr-col-lg-6\">\n              <div class=\"clrweb-DoxMedia\">\n                <div class=\"clrweb-DoxMedia-block\">\n                  <div class=\"clrweb-DoxMedia-img\">\n                    <img src=\"assets/images/documentation/dropdowns/img_placement_default.png\"\n                         alt=\"Dropdown nested menu\"/>\n                  </div>\n                </div>\n                <div class=\"clrweb-DoxMedia-text\">\n                  <h6>Default placement and stack order</h6>\n                  <p>\n                    By default a nested menu pops up on the right side of its root menu.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"clr-col-12 clr-col-lg-6\">\n              <div class=\"clrweb-DoxMedia\">\n                <div class=\"clrweb-DoxMedia-block\">\n                  <div class=\"clrweb-DoxMedia-img\">\n                    <img src=\"assets/images/documentation/dropdowns/img_placement_resp.png\"\n                         alt=\"Dropdown nested menu\"/>\n                  </div>\n                </div>\n                <div class=\"clrweb-DoxMedia-text\">\n                  <h6>Small screen / responsive placement and stack order (<544px)</h6>\n                  <p>\n                    If screen space isn’t available to the right of the root menu, the nested menu\n                    appears on the left side. If there is a second nested menu, it appears to the\n                    right of the first nested menu, creating a zig-zag pattern.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"accessibility\">\n          <h2>Accessibility</h2>\n          <clr-alert [clrAlertType]=\"'warning'\" [clrAlertClosable]=\"false\">\n            <clr-alert-item>\n              <span class=\"alert-text\">\n                  Clarity static (HTML/CSS) component does not come pre-baked with all the necessary ARIA attributes. The application developer should follow the guidelines below in their implementation.\n              </span>\n            </clr-alert-item>\n          </clr-alert>\n          <p>Clarity Angular component follows these guidelines:</p>\n          <ul class=\"list\">\n            <li>A dropdown menu should have an element with the role <code class=\"clr-code\">button</code> that opens the menu.</li>\n            <li>The element with the <code class=\"clr-code\">button</code> role should also have an <code class=\"clr-code\">aria-expanded</code>\n              attribute which is set to true when the dropdown menu is open.\n            </li>\n            <li>The items should be inside an element with the role <code class=\"clr-code\">menu</code>, and have the role <code class=\"clr-code\">menuitem</code>.</li>\n            <li>If the menu uses headings, the heading should be used as an accessible description for each related item.</li>\n            <li>A visual element with role <code class=\"clr-code\">separator</code> may be used between groups of items within a menu. The separator is not focusable or interactive.</li>\n            <li>An element that is not a menu item inside the menu should have the <code class=\"clr-code\">aria-hidden</code> attribute set to <code class=\"clr-code\">true</code>.</li>\n            <li>A menu item should not use the <code class=\"clr-code\">disabled</code> attribute so\n              <a href=\"https://www.w3.org/TR/wai-aria-practices-1.1/#kbd_disabled_controls\" target=\"_blank\">disabled items can be focusable</a>.\n              Instead, use <code class=\"clr-code\">[clrDisabled]</code> to add the disabled visual style and ARIA attribute when needed.\n              It is up to the application to ensure that the <a href=\"https://www.w3.org/TR/wai-aria-practices-1.1/#menu\" target=\"_blank\">disabled item is not activatable</a>.\n            </li>\n          </ul>\n\n          <h4>Keyboard Interaction</h4>\n\n          <table class=\"table table-vertical\">\n            <tbody>\n              <tr>\n                <th>Enter, Space, Down Arrow on the menu button</th>\n                <td>Opens the menu and focuses on the first item</td>\n              </tr>\n              <tr>\n                <th>Up Arrow on menu</th>\n                <td>Focus on the previous item, or the last item if currently on the first one</td>\n              </tr>\n              <tr>\n                <th>Down Arrow on menu</th>\n                <td>Focus on the next item, or the first item if currently on the first one</td>\n              </tr>\n              <tr>\n                <th>Right Arrow on a menu item with submenu</th>\n                <td>Opens the submenu and focuses on the first item</td>\n              </tr>\n              <tr>\n                <th>Left Arrow on a submenu</th>\n                <td>Closes the submenu and focuses on its parent item</td>\n              </tr>\n              <tr>\n                <th>Esc</th>\n                <td>Closes the menu and focuses on the trigger (in the case of submenu the trigger is its parent item).</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div id=\"code-examples\">\n\n            <h3 id=\"examples\">Examples</h3>\n\n            <h6 id=\"default-dropdown-bottom-left\">1. Default dropdown (bottom-left):</h6>\n\n            <clr-dropdown-static-default-demo></clr-dropdown-static-default-demo>\n\n            <h6 id=\"bottom-right\">2. Bottom-right</h6>\n\n            <clr-dropdown-static-positioning-demo></clr-dropdown-static-positioning-demo>\n\n            <h6 id=\"clarity-icon-as-the-dropdown-toggle\">3. Clarity icon as the dropdown toggle</h6>\n\n            <clr-dropdown-static-icon-toggle-demo></clr-dropdown-static-icon-toggle-demo>\n\n            <h6 id=\"link-button-as-the-dropdown-toggle\">4. Link Button as the dropdown toggle</h6>\n\n            <clr-dropdown-static-buttonlink-toggle-demo></clr-dropdown-static-buttonlink-toggle-demo>\n\n            <h3>CSS classes</h3>\n\n            <h6 id=\"dropdown\">.dropdown:</h6>\n\n            <p>This class is a wrapper class around the <code class=\"clr-code\">.dropdown-toggle</code> and th\n                <code class=\"clr-code\">.dropdown-menu</code>\n            </p>\n\n            <h6 id=\"dropdown-toggle\">.dropdown-toggle:</h6>\n\n            <p>Extend this class on a button, icon or text link clicking on which the dropdown menu\n                will be activated</p>\n\n            <h6 id=\"dropdown-menu\">.dropdown-menu:</h6>\n\n            <p>A required wrapper intended to contain the dropdown menu. Items in the menu should extend the <code\n                class=\"clr-code\">.dropdown-header</code>\n                or <code class=\"clr-code\">.dropdown-item</code> class. <code class=\"clr-code\">.dropdown-divider</code>\n                can be on a block element used to separate item groups.\n                <code class=\"clr-code\">.active</code> class with <code class=\"clr-code\">.dropdown-item</code> adds a\n                different styling for selected elements.\n                Add the <code class=\"clr-code\">.disabled</code> class to dropdown items to style them as disabled.</p>\n\n            <h6 id=\"open\">.open:</h6>\n\n            <p>A class to open the dropdown menu. Must be applied with <code class=\"clr-code\">.dropdown</code></p>\n\n            <p>The following classes when extended along with <code class=\"clr-code\">.dropdown</code> will\n                open the menu in the respective directions:</p>\n\n            <ul class=\"list\">\n                <li>.bottom-left</li>\n                <li>.bottom-right</li>\n                <li>.top-left</li>\n                <li>.top-right</li>\n                <li>.left-bottom</li>\n                <li>.left-top</li>\n                <li>.right-top</li>\n                <li>.right-bottom</li>\n            </ul>\n\n            <p>If used in one of the nested menus (that is, not the root level <code class=\"clr-code\">.dropdown</code>),\n                only the following classes are valid:</p>\n\n            <ul class=\"list\">\n                <li>.bottom-left</li>\n                <li>.bottom-right</li>\n                <li>.top-left</li>\n                <li>.top-right</li>\n            </ul>\n\n\n            <h2 id=\"angular-component\">Angular Component</h2>\n\n            <p>\n                The dropdown component uses the <code class=\"clr-code\">*clrIfOpen</code> structural directive\n                (detailed documentation coming soon) on the\n                menu to indicate clearly that the menu is only present in the DOM when open. We heavily recommend using\n                it for many reasons: better performance, making the intent clear in your own templates,\n                and following a more natural lifecycle for any directives or components inside of the menu.\n            </p>\n            <p>\n                If for some reason this behavior was not the one you wanted, we also support the dropdown menu without a\n                <code class=\"clr-code\">*clrIfOpen</code> directive on it. It will be created eagerly when the dropdown\n                itself initializes, and will not be destroyed or recreated until the dropdown itself is. Please make\n                sure you know exactly why you are omitting this directive if you end up doing so.\n            </p>\n\n            <h3 id=\"summary-of-options\">Summary of Options</h3>\n\n            <h6><code class=\"clr-code\">&lt;clr-dropdown&gt;</code> component</h6>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input / Output</th>\n                    <th class=\"left hidden-xs-down\">Values</th>\n                    <th class=\"left hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrCloseMenuOnItemClick]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: true</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">Boolean</td>\n                    <td class=\"left hidden-xs-down\">true</td>\n                    <td class=\"left\">If true, the menu will close when a dropdown item is clicked</td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h6><code class=\"clr-code\">&lt;clr-dropdown-menu&gt;</code> component</h6>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input / Output</th>\n                    <th class=\"left hidden-xs-down\">Values</th>\n                    <th class=\"left hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrPosition]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>Direction classnames</div>\n                        <div class=\"hidden-sm-up\">Default: \"bottom-left\"</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        CSS dropdown menu direction classnames.\n                    </td>\n                    <td class=\"left hidden-xs-down\">bottom-left</td>\n                    <td class=\"left\">Sets the direction in which the menu will open. If used in one of the nested menus,\n                        only four classes are valid: bottom-left, bottom-right, top-left, and top-right.</td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h6><code class=\"clr-code\">clrDropdownItem</code> directive</h6>\n            <table class=\"table\">\n              <thead>\n              <tr>\n                <th class=\"left\">Input / Output</th>\n                <th class=\"left hidden-xs-down\">Values</th>\n                <th class=\"left hidden-xs-down\">Default</th>\n                <th class=\"left\">Effect</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td class=\"left\">\n                  <b>[clrDisabled]</b>\n                  <div class=\"hidden-sm-up\">Type: Boolean</div>\n                  <div class=\"hidden-sm-up\">Default: false</div>\n                </td>\n                <td class=\"left hidden-xs-down\">Boolean</td>\n                <td class=\"left hidden-xs-down\">false</td>\n                <td class=\"left\">If true, the menu item will have disabled style and set the aria-disabled attribute to true.</td>\n              </tr>\n              </tbody>\n            </table>\n\n            <h4 id=\"example\">Example</h4>\n\n            <h6 id=\"clrmenuposition-is-set-to-top-left-default-is-bottom-left\">1. <code class=\"clr-code\">clrPosition</code>\n                is set to top-left.\n                Default is bottom-left. For nested <code class=\"clr-code\">&lt;clr-dropdown&gt;</code>,\n                only the following positions are valid:\n                bottom-left, bottom-right, top-left, top-right.</h6>\n\n            <clr-dropdown-angular-positioning-demo></clr-dropdown-angular-positioning-demo>\n\n            <h6 id=\"clrclosemenuonitemclick-is-set-to-false-default-is-true\">2. clrCloseMenuOnItemClick is set to false.\n                Default is true.</h6>\n\n            <clr-dropdown-angular-close-item-false-demo></clr-dropdown-angular-close-item-false-demo>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "DropdownStaticButtonLinkToggleDemo",
      "id": "component-DropdownStaticButtonLinkToggleDemo-511644866222111fe1815fca0bd32c4b",
      "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-buttonlink-toggle.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-dropdown-static-buttonlink-toggle-demo",
      "styleUrls": ["./dropdown.demo.scss"],
      "styles": [],
      "templateUrl": ["./dropdown-static-buttonlink-toggle.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"dropdown open\">\n    <button class=\"dropdown-toggle btn btn-link\">\n        Dropdown Toggle\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div aria-label=\"Dropdown header Lorem\" class=\"dropdown-item\">Lorem.</div>\n        <div aria-label=\"Dropdown header Lorem ipsum\" class=\"dropdown-item\">Lorem ipsum.</div>\n        <div aria-label=\"Dropdown header Lorem ipsum dolor\" class=\"dropdown-item\">Lorem ipsum dolor.</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link</div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-dropdown-static-buttonlink-toggle-demo',\n  styleUrls: ['./dropdown.demo.scss'],\n  templateUrl: './dropdown-static-buttonlink-toggle.demo.html',\n})\nexport class DropdownStaticButtonLinkToggleDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.demo-menu-height {\n    height: $clr_baselineRem_336px;\n  }\n}\n",
          "styleUrl": "./dropdown.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div ngNonBindable class=\"clr-example squeeze demo-menu-height\">\n    <div class=\"dropdown open\">\n        <button class=\"dropdown-toggle btn btn-link\">\n            Dropdown Toggle\n            <clr-icon shape=\"caret down\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <h4 class=\"dropdown-header\">Dropdown header</h4>\n            <div aria-label=\"Dropdown header Lorem\" class=\"dropdown-item\">Lorem.</div>\n            <div aria-label=\"Dropdown header Lorem ipsum\" class=\"dropdown-item\">Lorem ipsum.</div>\n            <div aria-label=\"Dropdown header Lorem ipsum dolor\" class=\"dropdown-item\">Lorem ipsum dolor.</div>\n            <div class=\"dropdown-divider\"></div>\n            <div class=\"dropdown-item\">Link</div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "DropdownStaticDefaultDemo",
      "id": "component-DropdownStaticDefaultDemo-a7c50b2f0433a7b6f465e754a40458cb",
      "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-default.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-dropdown-static-default-demo",
      "styleUrls": ["./dropdown.demo.scss"],
      "styles": [],
      "templateUrl": ["./dropdown-static-default.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"dropdown open\">\n    <button class=\"dropdown-toggle btn btn-primary\" type=\"button\">\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item active\">Action</div>\n        <div class=\"dropdown-item disabled\">Disabled Link</div>\n        <div class=\"dropdown-divider\" role=\"separator\"></div>\n        <button class=\"dropdown-item\">Lorem.</button>\n        <div class=\"dropdown open right-bottom\">\n            <button class=\"dropdown-item active expandable\">Lorem ipsum.</button>\n            <div class=\"dropdown-menu\">\n                <div class=\"dropdown-item\">Foo.</div>\n                <div class=\"dropdown open right-top\">\n                    <button class=\"dropdown-item active expandable\">Bar.</button>\n                    <div class=\"dropdown-menu\">\n                        <div class=\"dropdown-item\">Baz.</div>\n                    </div>\n                </div>\n                <div class=\"dropdown-item\">Foo 2.</div>\n            </div>\n        </div>\n        <button class=\"dropdown-item\">Ipsum.</button>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-dropdown-static-default-demo',\n  styleUrls: ['./dropdown.demo.scss'],\n  templateUrl: './dropdown-static-default.demo.html',\n})\nexport class DropdownStaticDefaultDemo {\n  example = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.demo-menu-height {\n    height: $clr_baselineRem_336px;\n  }\n}\n",
          "styleUrl": "./dropdown.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div ngNonBindable class=\"clr-example squeeze demo-menu-height\">\n    <div class=\"dropdown open\">\n        <button class=\"dropdown-toggle btn btn-primary\" type=\"button\">\n            Dropdown\n            <clr-icon shape=\"caret down\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <h4 class=\"dropdown-header\">Dropdown header</h4>\n            <div class=\"dropdown-item active\">Action</div>\n            <div class=\"dropdown-item disabled\">Disabled Link</div>\n            <div class=\"dropdown-divider\" role=\"separator\"></div>\n            <button class=\"dropdown-item\">Lorem.</button>\n            <div class=\"dropdown open right-bottom\">\n                <button class=\"dropdown-item active expandable\">Lorem ipsum.</button>\n                <div class=\"dropdown-menu\">\n                    <div class=\"dropdown-item\">Foo.</div>\n                    <div class=\"dropdown open right-top\">\n                        <button class=\"dropdown-item active expandable\">Bar.</button>\n                        <div class=\"dropdown-menu\">\n                            <div class=\"dropdown-item\">Baz.</div>\n                        </div>\n                    </div>\n                    <div class=\"dropdown-item\">Foo 2.</div>\n                </div>\n            </div>\n            <button class=\"dropdown-item\">Ipsum.</button>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "DropdownStaticFontAwesomeToggleDemo",
      "id": "component-DropdownStaticFontAwesomeToggleDemo-5d5be218148f1ccbb294a8d907c1a10e",
      "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-fontawesome-toggle.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-dropdown-static-fontawesome-toggle-demo",
      "styleUrls": ["./dropdown.demo.scss"],
      "styles": [],
      "templateUrl": ["./dropdown-static-fontawesome-toggle.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"dropdown bottom-right open\">\n    <button class=\"dropdown-toggle\">\n        <span class=\"fa fa-home fa-fw\"></span>\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item\">Action 1</div>\n        <div class=\"dropdown-item\">Action 2</div>\n        <div class=\"dropdown-item\">Action 3</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link 1</div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-dropdown-static-fontawesome-toggle-demo',\n  styleUrls: ['./dropdown.demo.scss'],\n  templateUrl: './dropdown-static-fontawesome-toggle.demo.html',\n})\nexport class DropdownStaticFontAwesomeToggleDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.demo-menu-height {\n    height: $clr_baselineRem_336px;\n  }\n}\n",
          "styleUrl": "./dropdown.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example squeeze demo-menu-height\">\n  <div class=\"dropdown bottom-right open\">\n    <button class=\"dropdown-toggle\">\n      <span class=\"fa fa-home fa-fw\"></span>\n      <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n      <h4 class=\"dropdown-header\">Dropdown header</h4>\n      <div class=\"dropdown-item\">Action 1</div>\n      <div class=\"dropdown-item\">Action 2</div>\n      <div class=\"dropdown-item\">Action 3</div>\n      <div class=\"dropdown-divider\"></div>\n      <div class=\"dropdown-item\">Link 1</div>\n    </div>\n  </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "DropdownStaticIconToggleDemo",
      "id": "component-DropdownStaticIconToggleDemo-fd3e1dc818c6f37f4036819dd502deae",
      "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-icon-toggle.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-dropdown-static-icon-toggle-demo",
      "styleUrls": ["./dropdown.demo.scss"],
      "styles": [],
      "templateUrl": ["./dropdown-static-icon-toggle.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"dropdown bottom-left open\">\n    <button class=\"dropdown-toggle\">\n        <clr-icon shape=\"error\" class=\"is-error\" size=\"24\"></clr-icon>\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item\">Lorem.</div>\n        <div class=\"dropdown-item\">Lorem ipsum.</div>\n        <div class=\"dropdown-item\">Lorem ipsum dolor.</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Action 1</div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-dropdown-static-icon-toggle-demo',\n  styleUrls: ['./dropdown.demo.scss'],\n  templateUrl: './dropdown-static-icon-toggle.demo.html',\n})\nexport class DropdownStaticIconToggleDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.demo-menu-height {\n    height: $clr_baselineRem_336px;\n  }\n}\n",
          "styleUrl": "./dropdown.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example squeeze demo-menu-height\">\n  <div class=\"dropdown bottom-left open\">\n    <button class=\"dropdown-toggle\">\n      <clr-icon shape=\"error\" class=\"is-error\" size=\"24\"></clr-icon>\n      <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n      <h4 class=\"dropdown-header\">Dropdown header</h4>\n      <div class=\"dropdown-item\">Lorem.</div>\n        <div class=\"dropdown-item\">Lorem ipsum.</div>\n        <div class=\"dropdown-item\">Lorem ipsum dolor.</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Action 1</div>\n      </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "DropdownStaticPositioningDemo",
      "id": "component-DropdownStaticPositioningDemo-dfdffc4af17a3c31b55f5ce45ed59d3d",
      "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-positioning.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-dropdown-static-positioning-demo",
      "styleUrls": ["./dropdown.demo.scss"],
      "styles": [],
      "templateUrl": ["./dropdown-static-positioning.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"dropdown bottom-right open\">\n    <button class=\"dropdown-toggle btn btn-primary\">\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item active\">First Action</div>\n        <div class=\"dropdown-item disabled\">Disabled Action</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link 1</div>\n        <div class=\"dropdown-item\">Link 2</div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-dropdown-static-positioning-demo',\n  styleUrls: ['./dropdown.demo.scss'],\n  templateUrl: './dropdown-static-positioning.demo.html',\n})\nexport class DropdownStaticPositioningDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.demo-menu-height {\n    height: $clr_baselineRem_336px;\n  }\n}\n",
          "styleUrl": "./dropdown.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div ngNonBindable class=\"clr-example squeeze demo-menu-height\">\n  <div class=\"dropdown bottom-right open\">\n    <button class=\"dropdown-toggle btn btn-primary\">\n      Dropdown\n      <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n      <h4 class=\"dropdown-header\">Dropdown header</h4>\n      <div class=\"dropdown-item active\">First Action</div>\n      <div class=\"dropdown-item disabled\">Disabled Action</div>\n      <div class=\"dropdown-divider\"></div>\n      <div class=\"dropdown-item\">Link 1</div>\n      <div class=\"dropdown-item\">Link 2</div>\n    </div>\n  </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ElectricPokemonDemo",
      "id": "component-ElectricPokemonDemo-76415f6d91c374c4a352b9c6da246bbf",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/electric.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-electric-pokemon-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Electric</h4>\n<p>\n    There are relatively few Electric Pokémon; in fact only four were added in the third generation.\n    Most are based on rodents or inanimate objects.\n</p>\n<p>\n    Electric Pokémon are very good defensively, being weak only to Ground moves.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Electric</h4>\n<p>\n    There are relatively few Electric Pokémon; in fact only four were added in the third generation. \n    Most are based on rodents or inanimate objects.\n</p>\n<p>\n    Electric Pokémon are very good defensively, being weak only to Ground moves.\n</p>\n`;\n@Component({\n  selector: 'clr-electric-pokemon-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Electric</h4>\n        <p>\n            There are relatively few Electric Pokémon; in fact only four were added in the third generation. \n            Most are based on rodents or inanimate objects.\n        </p>\n        <p>\n            Electric Pokémon are very good defensively, being weak only to Ground moves.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>`,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class ElectricPokemonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "FightingPokemonDemo",
      "id": "component-FightingPokemonDemo-feb5444d53e8c45423fac6532d51d478",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fighting.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-fighting-pokemon-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Fighting</h4>\n<p>\n    Fighting Pokémon are strong and muscle-bound, often based on martial artists.\n    Fighting moves are super-effective against five other types (as is Ground),\n    making them very good offensively. Most Fighting type moves are in the Physical category,\n    for obvious reasons.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Fighting</h4>\n<p>\n    Fighting Pokémon are strong and muscle-bound, often based on martial artists. \n    Fighting moves are super-effective against five other types (as is Ground), \n    making them very good offensively. Most Fighting type moves are in the Physical category, \n    for obvious reasons.\n</p>  \n`;\n\n@Component({\n  selector: 'clr-fighting-pokemon-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Fighting</h4>\n        <p>\n            Fighting Pokémon are strong and muscle-bound, often based on martial artists. \n            Fighting moves are super-effective against five other types (as is Ground), \n            making them very good offensively. Most Fighting type moves are in the Physical category, \n            for obvious reasons.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>  \n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>`,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class FightingPokemonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "FirePokemonDemo",
      "id": "component-FirePokemonDemo-0777ba7323e094337a6c26f5a45fd0ed",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fire.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-fire-pokemon-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Fire</h4>\n<p>\n    Fire is one of the three basic elemental types along with Water and Grass,\n    which constitute the three starter Pokémon. This creates a\n    simple triangle to explain the type concept easily to new players.\n    Fire types are notoriously rare in the early stages of the games\n    so choosing the Fire variation starter is often a plus.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Fire</h4>\n<p>\n    Fire is one of the three basic elemental types along with Water and Grass, \n    which constitute the three starter Pokémon. This creates a \n    simple triangle to explain the type concept easily to new players. \n    Fire types are notoriously rare in the early stages of the games \n    so choosing the Fire variation starter is often a plus.\n</p>\n`;\n\n@Component({\n  selector: 'clr-fire-pokemon-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Fire</h4>\n        <p>\n            Fire is one of the three basic elemental types along with Water and Grass, \n            which constitute the three starter Pokémon. This creates a \n            simple triangle to explain the type concept easily to new players. \n            Fire types are notoriously rare in the early stages of the games \n            so choosing the Fire variation starter is often a plus.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n`,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class FirePokemonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "FormsDemo",
      "id": "component-FormsDemo-5c8a794331733fb2d8845b308bc0875d",
      "file": "src/website/src/app/documentation/demos/forms/forms.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-forms-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./forms.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "ngErrors",
          "defaultValue": "NgErrors",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "ngForm",
          "defaultValue": "NgForm",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "ngHelpers",
          "defaultValue": "NgHelpers",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "ngLabelSize",
          "defaultValue": "NgLabelSize",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "ngLayouts",
          "defaultValue": "NgLayouts",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "ngOptional",
          "defaultValue": "NgOptional",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "ngOverride",
          "defaultValue": "NgOverride",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "ngReactiveHtml",
          "defaultValue": "NgReactiveHtml",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "ngReactiveTs",
          "defaultValue": "NgReactiveTs",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "ngReset",
          "defaultValue": "NgReset",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "ngStructure",
          "defaultValue": "NgStructure",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "ngValidate",
          "defaultValue": "NgValidate",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "uiErrors",
          "defaultValue": "UiErrors",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "uiForm",
          "defaultValue": "UiForm",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "uiGrid",
          "defaultValue": "UiGrid",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "uiLayouts",
          "defaultValue": "UiLayouts",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 45
        },
        {
          "name": "uiStructure",
          "defaultValue": "UiStructure",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nimport * as UiErrors from 'raw-loader!./ui/errors.html';\nimport * as UiForm from 'raw-loader!./ui/form.html';\nimport * as UiGrid from 'raw-loader!./ui/grid.html';\nimport * as UiLayouts from 'raw-loader!./ui/layouts.html';\nimport * as UiStructure from 'raw-loader!./ui/structure.html';\n\nimport * as NgErrors from 'raw-loader!./ng/errors.html';\nimport * as NgForm from 'raw-loader!./ng/form.html';\nimport * as NgHelpers from 'raw-loader!./ng/helpers.html';\nimport * as NgLayouts from 'raw-loader!./ng/layouts.html';\nimport * as NgReactiveTs from '!raw-loader!./ng/reactive.txt';\nimport * as NgReactiveHtml from 'raw-loader!./ng/reactive.html';\nimport * as NgStructure from 'raw-loader!./ng/structure.html';\nimport * as NgOverride from 'raw-loader!./ng/override.html';\nimport * as NgOptional from 'raw-loader!./ng/optional.html';\nimport * as NgReset from '!raw-loader!./ng/reset.txt';\nimport * as NgValidate from '!raw-loader!./ng/validate.txt';\nimport * as NgLabelSize from '!raw-loader!./ng/label-size.html';\n\n@Component({\n  selector: 'clr-forms-demo',\n  templateUrl: './forms.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class FormsDemo extends ClarityDocComponent {\n  constructor() {\n    super('forms');\n  }\n  newLayout = true;\n\n  uiErrors: any = UiErrors;\n  uiForm: any = UiForm;\n  uiGrid: any = UiGrid;\n  uiLayouts: any = UiLayouts;\n  uiStructure: any = UiStructure;\n\n  ngErrors: any = NgErrors;\n  ngForm: any = NgForm;\n  ngHelpers: any = NgHelpers;\n  ngLayouts: any = NgLayouts;\n  ngReactiveTs: any = NgReactiveTs;\n  ngReactiveHtml: any = NgReactiveHtml;\n  ngStructure: any = NgStructure;\n  ngOptional: any = NgOptional;\n  ngOverride: any = NgOverride;\n  ngReset: any = NgReset;\n  ngValidate: any = NgValidate;\n  ngLabelSize: any = NgLabelSize;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 36
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"a-form-is-a-structured-layout-of-related-input-components\">\n            Forms are a grouping of input controls that allow a user to submit information to your application.    \n        </h5>\n\n        <div id=\"top\">\n            <h3 id=\"guidelines\">Design Guidelines</h3>\n            <p>Forms are comprised of text and input components such as checkboxes, dropdowns, input fields, radio buttons, and toggle switches. The easier users can complete forms, the better your response rates will typically be. Forms should be clear, concise, and relevant to its context.</p>\n\n            <h4 id=\"form-layouts\">Form Layouts </h4>\n            <p>Clarity offers three types of forms: horizontal (our recommended default), vertical and compact.</p>\n\n            <div class=\"clrweb-DoxMedia clr-row\">\n                <div class=\"clrweb-DoxMedia-block clr-col-md-6\" style=\"padding-top: 0\">\n                    <clr-forms-example-block layout=\"horizontal\"></clr-forms-example-block>\n                </div>\n                <div class=\"clrweb-DoxMedia-text clr-col-md-6\">\n                    <h6>Horizontal - Default</h6>\n                    <p>Horizontal formats are good for the quick scanning of labels, and can be used in cases of limited vertical space. The space between label and input however can slow users down.</p>\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia clr-row\">\n                <div class=\"clrweb-DoxMedia-block clr-col-md-6\" style=\"padding-top: 0\">\n                    <clr-forms-example-block layout=\"vertical\"></clr-forms-example-block>\n                </div>\n                <div class=\"clrweb-DoxMedia-text clr-col-md-6\">\n                    <h6>Vertical</h6>\n                    <p>This option is better for scanning, mobile experiences, accessibility, and localization. While it offers better completion rates, it is less ideal for longer forms.</p>\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia clr-row\">\n                <div class=\"clrweb-DoxMedia-block clr-col-md-6\" style=\"padding-top: 0\">\n                    <clr-forms-example-block layout=\"compact\"></clr-forms-example-block>\n                </div>\n                <div class=\"clrweb-DoxMedia-text clr-col-md-6\">\n                    <h6>Compact</h6>\n                    <p>For cases with highly limited space, we provide a compact form layout.</p>\n                </div>\n            </div>\n\n            <h4 id=\"form-architecture\">Form Architecture</h4>\n            <h6>Columns</h6>\n            <p>Forms should help users complete their goal as quickly as possible. Column structure can help make it easier for users to complete your form.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clrweb-DoxMedia is-do-block clr-col-6\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/forms/architecture-do.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"clrweb-DoxMedia-text\">\n                        <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                        <p>Put forms in one column. Multiple columns disrupt users’ vertical rhythm and completion.</p>\n                    </div>\n                </div>\n                <div class=\"clrweb-DoxMedia is-dont-block clr-col-6\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/forms/architecture-dont.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"clrweb-DoxMedia-text\">\n                        <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                        <p>Create multiple columns of input fields per page, except for small, related inputs like name “first” and “last.”</p>\n                    </div>\n                </div>\n            </div>\n\n            <h4 id=\"input-grouping\">Input Grouping</h4>\n            <p>Grouping will make scanning easier. A form with more than 6 inputs will likely have inputs that can be grouped together, like “address”: street, city, zip, county, country, etc.</p>\n            <p>For the grouping of labels and their input fields, we recommend grouping labels closely with their respective input fields.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clrweb-DoxMedia is-do-block clr-col-4\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/forms/input-grouping-do.svg\" alt=\"align inputs and labels\" />\n                    </div>\n                    <div class=\"clrweb-DoxMedia-text\">\n                        <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                    </div>\n                </div>\n                <div class=\"clrweb-DoxMedia is-do-block clr-col-4\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/forms/input-grouping-do2.svg\" alt=\"don't have inputs misaligned\" />\n                    </div>\n                    <div class=\"clrweb-DoxMedia-text\">\n                        <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                    </div>\n                </div>\n                <div class=\"clrweb-DoxMedia is-dont-block clr-col-4\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/forms/input-grouping-dont.svg\" alt=\"don't right align inputs\" />\n                    </div>\n                    <div class=\"clrweb-DoxMedia-text\">\n                        <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Form Length</h4>\n            <p>Forms should only be as long as absolutely necessary. We recommend reviewing each form input and asking whether you could obtain the information in another way, or at a later, more convenient time.</p>\n\n            <h4 id=\"form-elements\">Form Elements</h4>\n            <h6>Radios, Checkboxes, and Select Box</h6>\n            <p>For inputs with 3 or more options, you may use radios, checkboxes or select boxes. We recommend placing your options vertically in one column to make it easier to scan.</p>\n            <p>Radios and checkboxes are used when it is helpful to compare options within the context of the form, as all selections will be visible at all times. Select boxes typically have more than 7 options that do not need to be compared with each other.</p>\n\n            <h4 id=\"validation-error-messages\">Validation and Error Messaging</h4>\n            <p>You also want to let users know when something is wrong with the information provided.</p>\n            <h6>Error Message Styling</h6>\n            <p>When showing error inputs, highlight the input field with red in some way, but also pair the red with another visual indicator, like an icon. This will help with accessibility.</p>\n            <div class=\" clr-row\">\n                <div class=\"clrweb-DoxMedia is-do-block clr-col-6\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/forms/error-do.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"clrweb-DoxMedia-text\">\n                        <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                        <p>Place icons outside the input field. This will also help avoid browser and third-party app collision conflicts.</p>\n                    </div>\n                </div>\n                <div class=\"clrweb-DoxMedia is-dont-block clr-col-6\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/forms/error-dont.svg\" alt=\"\" />\n                    </div>\n                    <div class=\"clrweb-DoxMedia-text\">\n                        <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                        <p>Put icons inside the input field. If inside, account for changing form value space (increase characters).</p>\n                    </div>\n                </div>\n            </div>\n            <h6>Error Message Content</h6>\n            <p>Humanize the error messaging as much as possible. The content should provide clear guidance on how to fix the error. Avoid unrecognizable system error messages like \"code 500 error\".</p>\n            <p>You may also consider using more than one error message when helpful. For example, if an email address input field has an error, consider either showing “please enter an email address” for a blank field, or “email address needs an ’@’ symbol followed by a domain” for an invalid symbol.</p>\n            <h6>Error Message Location</h6>\n            <p>We recommend displaying error messages within the same area where the error occurs.</p>\n            <h6>Error Message Behavior</h6>\n            <p>For most cases, validate when the user leaves the field (onblur). Invalidating fields while users are still typing can be frustrating.</p>\n            <p>There are some cases where real-time validation can be helpful, such as inputs with sensitive field value lengths (like tweets), or when users return to an error field and successfully edit the error field, or for password fields with visible password strength criteria.</p>\n\n            <div class=\"alert alert-info\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            The UX design guidelines documentation is currently a work in progress, and will be updated when they are ready.\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"accessibility\">\n            <h2>Forms Accessibility</h2>\n            <p>\n                Clarity form controls are built with <code class=\"clr-code\">clr-CONTROLNAME-container</code> elements.\n                These elements are used to build in the accessibility needed to make Clarity forms accessible. While it\n                is control dependent, the containers enable screen readers to be aware of errors both on the control\n                itself and in the form as a whole. They enable the behaviors that describe controls with their\n                respective labels that in an accessible way.\n            </p>\n\n            <p>\n                Without the <code class=\"clr-code\">clr-CONTROL-container</code> parent the forms and form controls\n                are not accessible. In the examples below and on the documentation page for each control you can\n                find example markup for making the forms and form controls accessible.\n            </p>\n\n            <p>\n                Finally, for screen readers, if there are any controls with errors after the submit action an\n                <code class=\"clr-code\">aria-live</code> region will be updated with the associated labels for each\n                control in the error state.\n            </p>\n        </div>\n\n        <div class=\"code-examples\">\n            <h2 id=\"forms-using-angular\">Forms Using Angular</h2>\n\n            <p>Clarity has created a set of directives to help manage forms with minimal effort by developers. The structure is more condensed and easier to implement, so it is the recommended approach to use the following if you are using Angular. More form controls are being added regularly.</p>\n\n            <h4 id=\"examples\">Basic form</h4>\n\n            <p>Then declare a form start by adding the <code class=\"clr-code\">clrForm</code> directive to the form element. This will wire up some internals to manage the form itself.</p>\n\n            <clr-code-snippet [clrCode]=\"ngForm\"></clr-code-snippet>\n\n            <h4>Layout options</h4>\n\n            <p>If you wish to have a different layout, then you can use the <code class=\"clr-code\">clrLayout</code> directive to set the desired layout. The appropriate grid classes will be applied to enable automatic layout switching for mobile viewports.</p>\n\n            <clr-code-snippet [clrCode]=\"ngLayouts\"></clr-code-snippet>\n\n            <h4>Basic structure</h4>\n\n            <p>When you start to fill in your form controls, each will should be wrapped in a container like you see here in this text input example.</p>\n\n            <clr-code-snippet [clrCode]=\"ngStructure\"></clr-code-snippet>\n\n            <h4>Helper and validation messages</h4>\n\n            <p>These Angular components also support built in helper text and validation with error messages. </p>\n\n            <clr-code-snippet [clrCode]=\"ngHelpers\"></clr-code-snippet>\n\n            <p>All fields should be assumed to be required. Clarity does not support a required input treatment for labels (which often comes in the form of an * by the label). The recommendation is to focus your forms to include only required fields, and if a field is optional then you can describe it as such in the label like (Optional).</p>\n\n            <clr-alert clrAlertType=\"info\" [clrAlertClosable]=\"false\">\n                <clr-alert-item>\n              <span class=\"alert-text\">\n                For screen reader accessibility, forms with validation messages should\n                provide a descriptive message on how validation messages will be triggered.\n                The <code class=\"clr-code\">.clr-sr-only</code> class will hide content\n                and only make it visible for screen readers.\n              </span>\n                </clr-alert-item>\n            </clr-alert>\n\n            <clr-code-snippet [clrCode]=\"ngOptional\"></clr-code-snippet>\n\n            <div class=\"alert alert-info\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                        This pattern is more accessible and clear by writing the word \"error\" explicitly for users (and screenreaders) to read, with research to back this up compared with the use of a red required asterisk (<span style=\"color: red\">*</span>). See <a href=\"https://www.fusionbox.com/blog/detail/rethinking-the-red-required-asterisk-for-better-form-ux/599/\">this article from fusionbox</a> provides some evidence for this rationale.\n                    </span>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Multiple error messages</h4>\n\n            <p>If you want to support multiple error messages, you can do this by defining an error message for each scenario using <code class=\"clr-code\">clrIfError</code>. It is recommended that you create an error message for each validator you specify. Use the validator name provided in the binding for <code class=\"clr-code\">*clrIfError=\"'errorName'\"</code>, which might be your custom validator or a built in Angular one.</p>\n\n            <h4>Reset and force validation</h4>\n\n            <p>All Clarity form controls support resetting the validation state simply by calling the <code class=\"clr-code\">reset()</code> method on the <code class=\"clr-code\">FormControl</code> or <code class=\"clr-code\">FormGroup</code>.</p>\n\n            <clr-code-snippet [clrCode]=\"ngReset\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n            <p>Normally, validation errors only appear after the control has been focused on by the user. In cases where you want to force validation errors to show (such as when the user tried to submit a form), you simply need to mark every control as touched with Angular. You can use the form API to accomplish this, <code class=\"clr-code\">ClrForm.markAsTouched()</code>, which will force all form controls inside of a form to be touched, which will display the validation errors.</p>\n\n            <clr-code-snippet [clrCode]=\"ngValidate\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n            <h4>Layout with grid</h4>\n            \n            <p>You can use the <code class=\"clr-code\">clrLabelSize</code> directive to configure the label width for an entire form. This is useful for <code class=\"clr-code\">horizontal</code> and compact layouts, but doesn't apply when you are using <code class=\"clr-code\">vertical</code> layout. It will accept a number between 1-12 to calculate the width according to our grid, and the controls will adopt the remaining size. For example if you pass <code class=\"clr-code\">clrLabelSize=\"4\"</code> it will size the controls to use 8 grid columns for a total of 12 columns.</p>\n            \n            <clr-code-snippet [clrCode]=\"ngLabelSize\"></clr-code-snippet>\n\n            <h4>Overriding column widths</h4>\n\n            <p>For horizontal layouts, you can override the default widths for labels (2 columns) and controls (10 columns). Even on horizontal layouts, the default behavior should still use a vertical layout for narrow mobile sizes. That means you should always include the class <code class=\"clr-code\">clr-col-12</code> on both the input and label. Ensure your override columns add up to 12 to use the full space.</p>\n\n            <clr-code-snippet [clrCode]=\"ngOverride\"></clr-code-snippet>\n\n            <h4>Reactive Forms</h4>\n\n            <p>Forms also work with reactive forms with the same support for validations.</p>\n\n            <clr-code-snippet [clrCode]=\"ngReactiveTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n            <clr-code-snippet [clrCode]=\"ngReactiveHtml\"></clr-code-snippet>\n\n\n            <h2 id=\"forms-code-samples\">Forms with CSS</h2>\n\n            <p>If you want to use just the HTML/CSS for building your own form controls, this section describes how to use them. If you are interested in how to use it with Angular, please jump to the Angular section.</p>\n\n            <h4>Basic form</h4>\n\n            <p>A Clarity form first must include the <code class=\"clr-code\">.clr-form</code> class, typically on the form element itself.</p>\n\n            <clr-code-snippet [clrCode]=\"uiForm\"></clr-code-snippet>\n\n            <h4>Layout options</h4>\n\n            <p>Forms support three layout options, horizontal, vertical (used if no classes are provided), and compact. You can change the layout by simply applying an additional class to the form.</p>\n\n            <clr-code-snippet [clrCode]=\"uiLayouts\"></clr-code-snippet>\n\n            <h4>Basic structure</h4>\n\n            <p>Each control that you add inside has a similar structure, and they are each covered in their own documentation. However, the general structure is like this for a normal text input.</p>\n\n            <clr-code-snippet [clrCode]=\"uiStructure\"></clr-code-snippet>\n\n            <h4>Layouts with grid</h4>\n\n            <p>If you choose to use a layout other than vertical, you should also provide the corresponding grid classes to allow the form layout to dynamically switch to vertical for narrow width devices. Excluding this may cause experience issues with mobile or narrow widths.</p>\n\n            <clr-code-snippet [clrCode]=\"uiGrid\"></clr-code-snippet>\n\n            <h4>Error state</h4>\n\n            <p>For error states, you simply need to add the <code class=\"clr-code\">clr-error</code> class to the <code class=\"clr-code\">clr-control-container</code> element. This will automatically display the error icon, turn the input outline to red, and change the color of the subtext to red. It is recommend that you change the content of the subtext for error messages, but that is up to the application to manage.</p>\n\n            <clr-code-snippet [clrCode]=\"uiGrid\"></clr-code-snippet>\n\n            <p>View documentation for each form control to get specifics on their HTML structure.</p>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "FormsExampleBlockComponent",
      "id": "component-FormsExampleBlockComponent-e28623dc09177302030fab6ab636dde2",
      "file": "src/website/src/app/documentation/demos/forms/forms-example-block.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-forms-example-block",
      "styleUrls": [],
      "styles": [
        "\n.clr-form-horizontal .clr-control-label, .clr-form-compact .clr-control-label {\n    width: 2rem;\n    min-width: 2rem;\n}\n.clr-form-horizontal .clr-textarea, .clr-form-compact .clr-textarea {\n    max-width: 170px;\n}\n.clr-form-compact .clr-input {\n    max-width: 100px;\n}\nh5 {\n    margin-top: 0;\n}\n"
      ],
      "template":
        "    <form class=\"clr-form clr-form-{{layout.toLowerCase()}}\">\n    <div class=\"clr-form-control\">\n        <label for=\"example{{id}}\" class=\"clr-control-label\">Label</label>\n        <div class=\"clr-control-container\">\n            <div class=\"clr-input-wrapper\">\n                <input type=\"text\" id=\"example{{id}}\" placeholder=\"Placeholder\" class=\"clr-input\">\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-form-control\">\n        <label for=\"example{{id + 1}}\" class=\"clr-control-label\">Label</label>\n        <div class=\"clr-control-container\">\n            <div class=\"clr-select-wrapper\">\n                <select placeholder=\"Select Option\" id=\"example{{id + 1}}\">\n                    <option>Option 1</option>\n                    <option>Option 2</option>\n                    <option>Option 3</option>\n                </select>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-form-control\">\n        <label for=\"example{{id + 2}}\" class=\"clr-control-label\">Label</label>\n        <div class=\"clr-control-container\">\n            <div class=\"clr-textarea-wrapper\">\n                <textarea id=\"example{{id + 2}}\" placeholder=\"Placeholder\" class=\"clr-textarea\"></textarea>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-form-control\">\n        <label for=\"example4\" class=\"clr-control-label\">Label</label>\n        <div class=\"clr-control-container\">\n            <div class=\"clr-input-wrapper\">\n                <input type=\"text\" id=\"example{{id + 3}}\" placeholder=\"Placeholder\" class=\"clr-input\">\n            </div>\n            <span class=\"clr-subtext\">Helper Text</span>\n        </div>\n    </div>\n</form>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "layout",
          "line": 73
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "id",
          "defaultValue": "id + 4",
          "type": "",
          "optional": false,
          "description": "",
          "line": 72
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\nlet id = -2;\n\n@Component({\n  selector: 'clr-forms-example-block',\n  styles: [\n    `\n.clr-form-horizontal .clr-control-label, .clr-form-compact .clr-control-label {\n    width: 2rem;\n    min-width: 2rem;\n}\n.clr-form-horizontal .clr-textarea, .clr-form-compact .clr-textarea {\n    max-width: 170px;\n}\n.clr-form-compact .clr-input {\n    max-width: 100px;\n}\nh5 {\n    margin-top: 0;\n}\n`,\n  ],\n  template: `\n    <form class=\"clr-form clr-form-{{layout.toLowerCase()}}\">\n    <div class=\"clr-form-control\">\n        <label for=\"example{{id}}\" class=\"clr-control-label\">Label</label>\n        <div class=\"clr-control-container\">\n            <div class=\"clr-input-wrapper\">\n                <input type=\"text\" id=\"example{{id}}\" placeholder=\"Placeholder\" class=\"clr-input\">\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-form-control\">\n        <label for=\"example{{id + 1}}\" class=\"clr-control-label\">Label</label>\n        <div class=\"clr-control-container\">\n            <div class=\"clr-select-wrapper\">\n                <select placeholder=\"Select Option\" id=\"example{{id + 1}}\">\n                    <option>Option 1</option>\n                    <option>Option 2</option>\n                    <option>Option 3</option>\n                </select>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-form-control\">\n        <label for=\"example{{id + 2}}\" class=\"clr-control-label\">Label</label>\n        <div class=\"clr-control-container\">\n            <div class=\"clr-textarea-wrapper\">\n                <textarea id=\"example{{id + 2}}\" placeholder=\"Placeholder\" class=\"clr-textarea\"></textarea>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-form-control\">\n        <label for=\"example4\" class=\"clr-control-label\">Label</label>\n        <div class=\"clr-control-container\">\n            <div class=\"clr-input-wrapper\">\n                <input type=\"text\" id=\"example{{id + 3}}\" placeholder=\"Placeholder\" class=\"clr-input\">\n            </div>\n            <span class=\"clr-subtext\">Helper Text</span>\n        </div>\n    </div>\n</form>\n    `,\n})\nexport class FormsExampleBlockComponent {\n  id = id + 4;\n  @Input() layout;\n\n  constructor() {\n    id = id + 4;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData":
        "\n.clr-form-horizontal .clr-control-label, .clr-form-compact .clr-control-label {\n    width: 2rem;\n    min-width: 2rem;\n}\n.clr-form-horizontal .clr-textarea, .clr-form-compact .clr-textarea {\n    max-width: 170px;\n}\n.clr-form-compact .clr-input {\n    max-width: 100px;\n}\nh5 {\n    margin-top: 0;\n}\n\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 73
      }
    },
    {
      "name": "FragmentContentComponent",
      "id": "component-FragmentContentComponent-5a2bcd7ed0307d612bfb1ca509a217c0",
      "file": "src/website/src/app/icons/utils/fragment-content.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "fragment-content",
      "styleUrls": ["./fragment-content.component.scss"],
      "styles": [],
      "template":
        "<div [attr.id]=\"fragmentLink\" class=\"fragment-content\" #fragmentContent><ng-content></ng-content></div>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "fragmentLink",
          "line": 44,
          "type": "string"
        },
        {
          "name": "fragmentOffsetTop",
          "line": 46,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "activeFragment",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "activeFragmentLinkEl",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "el",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [114]
        },
        {
          "name": "fragmentClick",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "fragmentContent",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 49,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'fragmentContent', {static: true}"
            }
          ]
        },
        {
          "name": "fragmentContentElState",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "subscriptions",
          "defaultValue": "[]",
          "type": "Subscription[]",
          "optional": false,
          "description": "",
          "line": 42,
          "modifierKind": [112]
        },
        {
          "name": "windowResize",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "windowScroll",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 55
        }
      ],
      "methodsClass": [
        {
          "name": "coordinatesOnDoc",
          "args": [
            {
              "name": "el",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "{ top: number; left: number; }",
          "typeParameters": [],
          "line": 109,
          "jsdoctags": [
            {
              "name": "el",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "fragmentLinkClickHandler",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 116
        },
        {
          "name": "fragmentScrollHandler",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 147
        },
        {
          "name": "fragmentWindowResizeHandler",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 161
        },
        {
          "name": "isScrollPositive",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 140
        },
        {
          "name": "isScrollWithinActiveZone",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 132
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83
        },
        {
          "name": "setInitialScrollPosition",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 172
        },
        {
          "name": "updateElementState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 100
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import {\n  Component,\n  ElementRef,\n  Input,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n  Renderer2,\n  NgZone,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ActiveFragmentService } from './active-fragment.service';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n//noinspection TypeScriptCheckImport\nimport jump from 'jump.js';\n\n@Component({\n  selector: 'fragment-content',\n  template: `<div [attr.id]=\"fragmentLink\" class=\"fragment-content\" #fragmentContent><ng-content></ng-content></div>`,\n  styleUrls: ['./fragment-content.component.scss'],\n})\nexport class FragmentContentComponent implements AfterViewInit, OnDestroy {\n  constructor(\n    public el: ElementRef,\n    private _ngZone: NgZone,\n    private _renderer: Renderer2,\n    private _route: ActivatedRoute,\n    private _activeFragmentService: ActiveFragmentService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  private subscriptions: Subscription[] = [];\n\n  @Input() fragmentLink: string;\n\n  @Input() fragmentOffsetTop: number;\n\n  @ViewChild('fragmentContent', { static: true })\n  fragmentContent: ElementRef;\n\n  fragmentContentElState: any;\n  activeFragmentLinkEl: any;\n  activeFragment: string;\n\n  windowScroll: Function;\n  windowResize: Function;\n  fragmentClick: Function;\n\n  ngAfterViewInit() {\n    this.fragmentLinkClickHandler();\n    this.fragmentWindowResizeHandler();\n    this.fragmentScrollHandler();\n\n    const scrollSpySubscription = this._activeFragmentService.activeFragment\n      .pipe(distinctUntilChanged())\n      .subscribe(fragment => {\n        if (fragment) {\n          if (this.activeFragmentLinkEl) {\n            this._renderer.removeClass(this.activeFragmentLinkEl, 'active');\n          }\n\n          this.activeFragment = fragment;\n          this.activeFragmentLinkEl = this._activeFragmentService.fragmentLinks[this.activeFragment].nativeElement;\n          this._renderer.addClass(this.activeFragmentLinkEl, 'active');\n        }\n      });\n\n    this.setInitialScrollPosition();\n\n    this.subscriptions.push(scrollSpySubscription);\n  }\n\n  ngOnDestroy() {\n    if (this.activeFragmentLinkEl) {\n      this.activeFragmentLinkEl.classList.remove('active');\n    }\n\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n\n    // unregister all render events.\n    if (isPlatformBrowser(this.platformId)) {\n      this.windowScroll();\n      this.windowResize();\n      this.fragmentClick();\n\n      window.scrollTo(0, 0);\n    }\n  }\n\n  updateElementState() {\n    this.fragmentContentElState = this.fragmentContent.nativeElement.getBoundingClientRect();\n    this.fragmentContentElState.xCordOnDoc = this.coordinatesOnDoc(this.fragmentContent.nativeElement).left;\n    this.fragmentContentElState.yCordOnDoc = this.coordinatesOnDoc(this.fragmentContent.nativeElement).top;\n\n    // Get the window screen height\n    this.fragmentContentElState.screenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  }\n\n  coordinatesOnDoc(el: any) {\n    const top = el.getBoundingClientRect().top + window.pageYOffset - document.body.clientTop;\n    const left = el.getBoundingClientRect().left + window.pageXOffset - document.body.clientLeft;\n\n    return { top: top, left: left };\n  }\n\n  fragmentLinkClickHandler() {\n    const fragmentLinkEl = this._activeFragmentService.fragmentLinks[this.fragmentLink].nativeElement;\n    this.fragmentClick = this._renderer.listen(fragmentLinkEl, 'click', () => {\n      this.updateElementState();\n\n      if (this.fragmentContentElState.yCordOnDoc < -this.fragmentOffsetTop) {\n        this.fragmentOffsetTop = -this.fragmentContentElState.yCordOnDoc;\n      }\n\n      jump(this.fragmentContent.nativeElement, {\n        offset: this.fragmentOffsetTop,\n        duration: 500,\n      });\n    });\n  }\n\n  isScrollWithinActiveZone() {\n    // this.fragmentContentElState.top is the relative scroll position of the fragment content on the document.\n    // It checks if this.fragmentContentElState.top comes within 300px from the top.\n    // 180px is the minimum space for activating the page.\n\n    return this.fragmentContentElState.top < 300;\n  }\n\n  isScrollPositive() {\n    // If the document scrolltop passes the fragment content's top,\n    // this.fragmentContentElState.top gets negative value.\n\n    return this.fragmentContentElState.top >= 0;\n  }\n\n  fragmentScrollHandler() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.windowScroll = this._renderer.listen(window, 'scroll', () => {\n        this._ngZone.runOutsideAngular(() => {\n          this.updateElementState();\n\n          if (this.isScrollWithinActiveZone() && this.isScrollPositive()) {\n            this._activeFragmentService.activeFragment.next(this.fragmentLink);\n          }\n        });\n      });\n    }\n  }\n\n  fragmentWindowResizeHandler() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.windowResize = this._renderer.listen(window, 'resize', () => {\n        this._ngZone.runOutsideAngular(() => {\n          this.updateElementState();\n        });\n      });\n    }\n  }\n\n  // Setting the initial scroll position depending on which fragment is clicked on\n  setInitialScrollPosition() {\n    if (isPlatformBrowser(this.platformId) && this._route.snapshot.fragment === this.fragmentLink) {\n      setTimeout(() => {\n        this.updateElementState();\n\n        if (this.fragmentContentElState.yCordOnDoc < -this.fragmentOffsetTop) {\n          this.fragmentOffsetTop = -this.fragmentContentElState.yCordOnDoc;\n        }\n\n        jump(this.fragmentContent.nativeElement, {\n          offset: this.fragmentOffsetTop,\n          duration: 500,\n          callback: () => {\n            if (this.isScrollWithinActiveZone() && this.isScrollPositive()) {\n              this._activeFragmentService.activeFragment.next(this.fragmentLink);\n            }\n          },\n        });\n      });\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host {\n  position: relative;\n}\n\n.scroll-to-anchor {\n  position: absolute;\n  left: 0;\n}\n",
          "styleUrl": "./fragment-content.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef"
          },
          {
            "name": "_ngZone",
            "type": "NgZone"
          },
          {
            "name": "_renderer",
            "type": "Renderer2"
          },
          {
            "name": "_route",
            "type": "ActivatedRoute"
          },
          {
            "name": "_activeFragmentService",
            "type": "ActiveFragmentService"
          },
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 32,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_ngZone",
            "type": "NgZone",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_renderer",
            "type": "Renderer2",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_activeFragmentService",
            "type": "ActiveFragmentService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "OnDestroy"]
    },
    {
      "name": "GetStartedComponent",
      "id": "component-GetStartedComponent-3bae1953cf2157d385e3a233ade2b14b",
      "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "get-started",
      "styleUrls": ["./get-started.component.scss"],
      "styles": [],
      "templateUrl": ["./get-started.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "colorFigma",
          "defaultValue": "environment.figma_color",
          "type": "",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "darkFigma",
          "defaultValue": "environment.figma_link_dark",
          "type": "",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "htmlImports",
          "defaultValue": "HTML_IMPORTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 75,
          "modifierKind": [114]
        },
        {
          "name": "iconFigma",
          "defaultValue": "environment.figma_icons",
          "type": "",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "lightFigma",
          "defaultValue": "environment.figma_link_light",
          "type": "",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "ngModuleExample",
          "defaultValue": "NG_MODULE_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 74,
          "modifierKind": [114]
        },
        {
          "name": "nodeImports",
          "defaultValue": "NODE_IMPORTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 76,
          "modifierKind": [114]
        },
        {
          "name": "sketchBaseUrl",
          "defaultValue": "environment.sketch_base_url",
          "type": "",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "sketchIconsUrl",
          "defaultValue": "environment.sketch_icons_url",
          "type": "",
          "optional": false,
          "description": "",
          "line": 67
        },
        {
          "name": "sketchVersion",
          "defaultValue": "RELEASES.all[RELEASES.current].sketch",
          "type": "",
          "optional": false,
          "description": "",
          "line": 68
        },
        {
          "name": "uiCdn",
          "defaultValue": "UI_CDN",
          "type": "",
          "optional": false,
          "description": "",
          "line": 73,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "gaClick",
          "args": [
            {
              "name": "eventName",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 78,
          "jsdoctags": [
            {
              "name": "eventName",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport * as RELEASES from '../../../releases/release-list.json';\n\nconst NG_MODULE_EXAMPLE = `\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ClarityModule } from \"@clr/angular\";\nimport { AppComponent } from \"./app.component\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        ClarityModule,\n        ...\n     ],\n     declarations: [ AppComponent ],\n     bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n`;\n\nconst HTML_IMPORTS = `\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/ui/clr-ui.min.css\">\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n<script src=\"path/to/node_modules/@clr/icons/clr-icons.min.js\"></script>\n`;\n\nconst NODE_IMPORTS = `\n\"styles\": [\n      \"node_modules/@clr/icons/clr-icons.min.css\",\n      \"node_modules/@clr/ui/clr-ui.min.css\",\n      ... any other styles\n],\n\"scripts\": [\n  ... any existing scripts\n  \"node_modules/@webcomponents/custom-elements/custom-elements.min.js\",\n  \"node_modules/@clr/icons/clr-icons.min.js\"\n]\n`;\n\nconst UI_CDN = `\n<!-- Load the latest version -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@clr/ui/clr-ui.min.css\" />\n<!-- Or load a specific version -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@clr/ui@0.12.5/clr-ui.min.css\" />\n`;\n\n@Component({\n  selector: 'get-started',\n  templateUrl: './get-started.component.html',\n  styleUrls: ['./get-started.component.scss'],\n  host: {\n    '[class.content-area]': 'true',\n  },\n})\nexport class GetStartedComponent {\n  sketchBaseUrl = environment.sketch_base_url;\n  sketchIconsUrl = environment.sketch_icons_url;\n  sketchVersion = RELEASES.all[RELEASES.current].sketch;\n  lightFigma = environment.figma_link_light;\n  darkFigma = environment.figma_link_dark;\n  iconFigma = environment.figma_icons;\n  colorFigma = environment.figma_color;\n  public uiCdn = UI_CDN;\n  public ngModuleExample = NG_MODULE_EXAMPLE;\n  public htmlImports = HTML_IMPORTS;\n  public nodeImports = NODE_IMPORTS;\n\n  gaClick(eventName: string) {\n    if (window.ga) {\n      window.ga('send', 'event', 'design-resource', 'click', eventName, this.sketchVersion);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../styles/clarity-imports';\n\n.design-assets {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n\n  @media (min-width: 320px) and (max-width: 480px) {\n    grid-template-columns: 1fr;\n  }\n\n  h4 {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n",
          "styleUrl": "./get-started.component.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<section class=\"dox-content\">\n    <h1 id=\"introduction\" clrFocusOnViewInit>Get started with Clarity Design System</h1>\n    <p>Project Clarity is an open source design system that brings together UX guidelines, an HTML/CSS framework, and\n        Angular components. Clarity is for both designers and developers.\n    </p>\n    <p>Clarity’s designs stem from continuous exploration and research. These designs are built into our HTML/CSS\n        components, which can be used any web UI, regardless of the underlying JavaScript framework. Clarity also offers\n        a set of well-designed and implemented\n        data-bound components built on top of Angular, one of the most popular JavaScript frameworks in the\n        industry.\n    </p>\n    <h2 id=\"howToUse\">How to Use Clarity</h2>\n    <p>We offer three approaches for utilizing Clarity: just the UX guidelines, UX guidelines and our HTML/CSS framework, or put everything together with our Angular implementation.</p>\n    \n    <h3 id=\"designResources\">Using Clarity Design Resources</h3>\n    <p>Jumpstart your project with one of our Sketch or Figma-based design resources. Start by downloading the <a\n        href=\"https://github.com/chrismsimpson/Metropolis\" target=\"_blank\">Metropolis fonts</a>. Then download your\n        resources of choice. We recommend that with your UI Library selection, that you also select the matching\n        Icon Library as the two work together. </p>\n    <div class=\"design-assets\">\n        <div>\n            <h4>Primary Font</h4>\n            <a class=\"btn btn-primary btn-sm\" href=\"https://github.com/chrismsimpson/Metropolis/archive/r8.zip\" target=\"_blank\" rel=\"noopener\" (click)=\"gaClick('font-metropolis')\">\n                Metropolis (R8)\n            </a>\n        </div>\n        <div>\n            <h4>Figma Libraries</h4>\n            <a [href]=\"lightFigma\" target=\"_blank\" (click)=\"gaClick('figma-light')\"\n                class=\"btn btn-primary btn-sm\" rel=\"noopener\">UI Library - Light ({{sketchVersion}})\n            </a>\n            <a [href]=\"darkFigma\" target=\"_blank\" (click)=\"gaClick('figma-dark')\"\n                class=\"btn btn-primary btn-sm\" rel=\"noopener\">UI Library - Dark ({{sketchVersion}})\n            </a>\n            <a [href]=\"iconFigma\" target=\"_blank\" (click)=\"gaClick('figma-icons')\"\n                class=\"btn btn-primary btn-sm\" rel=\"noopener\">Icon Library ({{sketchVersion}})\n            </a>\n            <a [href]=\"colorFigma\" target=\"_blank\" (click)=\"gaClick('figma-color')\"\n                class=\"btn btn-primary btn-sm\" rel=\"noopener\">Color Library ({{sketchVersion}})\n            </a>\n        </div>\n        <div>\n            <h4>Sketch Libraries</h4>\n            <a [href]=\"sketchBaseUrl + '/light/clarity-library-light-' + sketchVersion + '.sketch'\" target=\"_blank\" (click)=\"gaClick('sketch-light')\"\n               class=\"btn btn-primary btn-sm\" rel=\"noopener\">UI Library - Light ({{sketchVersion}})\n            </a>\n            <a [href]=\"sketchBaseUrl + '/dark/clarity-library-dark-' + sketchVersion + '.sketch'\" target=\"_blank\" (click)=\"gaClick('sketch-dark')\"\n               class=\"btn btn-primary btn-sm\" rel=\"noopener\">UI Library - Dark ({{sketchVersion}})\n            </a>\n            <a [href]=\"sketchIconsUrl\" target=\"_blank\" (click)=\"gaClick('sketch-icons')\"\n               class=\"btn btn-primary btn-sm\" rel=\"noopener\">Icon Library ({{sketchVersion}})\n            </a>\n        </div>\n    </div>\n\n    <h3 id=\"uiInstallation\">HTML/CSS Framework</h3>\n    <p>If you just want to use our HTML/CSS implementations, you need to get the latest code from NPM and then add the assets to your project.</p>\n    <p><clr-code-snippet [clrCode]=\"'npm install @clr/ui --save'\" [clrDisablePrism]=\"true\"></clr-code-snippet></p>\n    <p>You'll need to include one of the files found at <code class=\"clr-code\">node_modules/@clr/ui/clr-ui.min.css</code> for the normal theme or <code class=\"clr-code\">node_modules/@clr/ui/clr-ui-dark.min.css</code> for the dark theme into your build tooling.</p>\n    <p>You can also load this CSS file from a CDN like you see below. See <a href=\"https://unpkg.com/#/\">unpkg.com</a> for more details.</p>\n    <p><clr-code-snippet [clrCode]=\"uiCdn\" clrLanguage=\"html\"></clr-code-snippet></p>\n\n    <h3 id=\"angularCLI\">Angular Option 1: Installing using Angular CLI (Recommended)</h3>\n    <p>For any Angular application, which uses the CLI v6 or greater, we recommend using the <code class=\"clr-code\">ng add</code> feature of the CLI to install Clarity for you. This works regardless if you have a brand new application, or one that you've been working on for some time, just as long as you have Angular 6 setup.</p>\n    <div class=\"alert alert-info\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">We highly recommend that all Angular projects use the CLI, because we'll also work on supporting migration features which will make it easier to keep Clarity and Angular up to date.</span>\n            </div>\n        </div>\n    </div>\n    <p></p>\n    <ol class=\"list\">\n        <li>Generate a new Angular application (if you haven't already):\n            <clr-code-snippet\n                    [clrCode]=\"'ng new my-app'\"\n                    [clrDisablePrism]=\"true\"></clr-code-snippet>\n        </li>\n        <li>Navigate to the directory:\n            <clr-code-snippet\n                    [clrCode]=\"'cd my-app'\"\n                    [clrDisablePrism]=\"true\"></clr-code-snippet>\n        </li>\n        <li>Run the ng add command for Clarity:\n            <clr-code-snippet\n                    [clrCode]=\"'ng add @clr/angular'\"\n                    [clrDisablePrism]=\"true\"></clr-code-snippet>\n        </li>\n    </ol>\n    <p></p>\n    <p>If you are using the Angular CLI with multiple projects, you can specify which project to add Clarity to by using the <code class=\"clr-code\">--project PROJECTNAME</code> flag.</p>\n    <p></p>\n\n    <h3 id=\"seedProjectAngular\">Angular Option 2: Manually adding Clarity to an Angular project</h3>\n    <p>You can build an Angular app, then install Clarity onto your project.</p>\n    <h4 id=\"step-1-build-an-angular-2-app\">Step 1: Build an Angular App</h4>\n    <p>Create a new Angular application, if you need a quickstart use <a href=\"https://angular.io/docs/ts/latest/quickstart.html\">the 5 Min Quickstart</a>.\n    <h4 id=\"installing\">Step 2: Install Clarity packages</h4>\n    <p>Clarity is published as three separate packages on NPM, as well as one dependency.</p>\n    <p>\n        <a id=\"clarity_icons\"></a>\n    </p>\n    <ul class=\"list\">\n        <li><b>@clr/icons.</b> The library that provides the custom element icons.</li>\n        <li><b>@clr/ui.</b> Contains the static styles for building HTML components.</li>\n        <li><b>@clr/angular.</b> Contains the Angular components. This package depends on @clr/ui for styles.\n        <li><b>@webcomponents/custom-elements.</b> A polyfill for webcomponents for older browsers, which Clarity depends upon.</li>\n    </ul>\n\n    <p>Install them all by running the following command with NPM.</p>\n    <p><clr-code-snippet\n                    [clrCode]=\"'npm install @clr/icons @clr/angular @clr/ui @webcomponents/custom-elements@1.0.0 --save'\"\n                    [clrDisablePrism]=\"true\"></clr-code-snippet>\n    </p>\n\n    <h5 id=\"step-3-scripts-styles\">Step 3: Adding scripts and styles</h5>\n    <p>If you are using the Angular CLI, you need to add the <code class=\"clr-code\">angular.json</code> file.</p>\n    <p>Find the <code class=\"clr-code\">scripts</code> and <code class=\"clr-code\">styles</code> arrays and add the following:\n        <clr-code-snippet\n                [clrCode]=\"nodeImports\"\n                [clrDisablePrism]=\"true\"></clr-code-snippet></p>\n    <p></p>\n    <p>If you are not using the CLI, you'll need to add the files listed above to your build tooling or you could also put them in the head of the index.html file like:\n    <clr-code-snippet\n                [clrCode]=\"htmlImports\"\n                [clrDisablePrism]=\"true\"></clr-code-snippet></p>\n    <p></p>\n\n    <h5 id=\"step-4-install-clarity-angular\">Step 4: Add Clarity to Angular application</h5>\n    <p>Import the ClarityModule into your Angular application's module. Some features also depend upon the <code class=\"clr-code\">BrowserAnimationsModule</code>, so you should add it as well. Your application's main module might look\n            like this:\n            <clr-code-snippet [clrCode]=\"ngModuleExample\" [clrLanguage]=\"'typescript'\"></clr-code-snippet>\n    </p>\n\n    <h4 id=\"step-5-run-your-app\">Step 5: Run Your App</h4>\n    <clr-code-snippet\n            clrLanguage=\"bash\"\n            [clrCode]=\"'npm start'\"\n            [clrDisablePrism]=\"true\"></clr-code-snippet>\n    <h4 id=\"step6-update\">Step 6: Update Clarity</h4>\n    <p>In order to keep up with Clarity, you can use ng update to automatically update Clarity to the latest version in your Angular project. This will also run any migration schematics, which can update code for you or warn you about changes in Clarity that affect your application. It usually helps to update Angular first, then Clarity.</p>\n    <clr-code-snippet\n            clrLanguage=\"bash\"\n            [clrCode]=\"'ng update @angular/core @angular/cli\nng update @clr/angular'\"\n            [clrDisablePrism]=\"true\"></clr-code-snippet>\n    <p>If you want to update to a prerelease version, you can do so by running:</p>\n    <clr-code-snippet\n            clrLanguage=\"bash\"\n            [clrCode]=\"'ng update @angular/core@next @angular/cli@next\nng update @clr/angular@next'\"\n            [clrDisablePrism]=\"true\"></clr-code-snippet>\n    <h2 id=\"browserSupport\">Device and Browser Support</h2>\n    <p class=\"bump-down\"><img src=\"assets/images/get-started/device_support.png\" alt=\"Device and Browser Support\"\n                              class=\"hidden-sm-down img-fluid\"></p>\n    <ul class=\"hidden-md-up\">\n        <li>Internet Explorer 11</li>\n        <li>MS Edge</li>\n        <li>Latest versions of Chrome, Safari, and Firefox</li>\n    </ul>\n    <p>\n        <em>* - Note that Clarity only supports the latest two versions of the listed browsers, with the exception of\n            Internet Explorer.</em>\n    </p>\n    <h2>Screen Reader Support</h2>\n    <p class=\"bump-down\">\n        Clarity is tested across several sets of screen reader and browser combinations against the WCAG 2.1 spec.\n        The testing has identified the two combinations that enable us to provide support when fixing\n        issues related to the various assistive technologies available to users. The following are the primary\n        combinations that we focus on when addressing issues on the Windows and macOS platforms:\n    </p>\n    <ul>\n        <li>NVDA + Firefox (Windows)</li>\n        <li>VoiceOver + Safari (Apple)</li>\n    </ul>\n    <p>\n        <em>\n            The latest version of both screen reader and browser is used when testing issues and WCAG 2.1\n            compliance.\n        </em>\n    </p>\n    <h2 id=\"contribute_guidelines\">Contributing to Clarity</h2>\n    <p>The Clarity team welcomes contributions from the community. See our <a\n            href=\"https://github.com/vmware/clarity//blob/master/CONTRIBUTING.md\" rel=\"noopener\" target=\"_blank\">contribution\n        guidelines</a> on GitHub.\n    </p>\n    <h2 id=\"reportingBugs\">Reporting an Issue</h2>\n    <p>Ongoing work and feature requests are tracked using <a href=\"https://github.com/vmware/clarity/issues\"\n                                                              rel=\"noopener\" target=\"_blank\">GitHub Issues</a>. Please feel free to\n        file an issue.\n    </p>\n    <p>When submitting issues please provide a minimal app that demonstrates the issue by forking one of the Clarity\n    Stackblitz projects. Since it depends on your issue starting with the correct Clarity version and\n    theme will help us deliver support. You can find all of the <a href=\"https://stackblitz.com/@clr-team\" target=\"_blank\">StackBlitz templates here</a>.\n\n    <h2 id=\"stackoverflow\">StackOverflow</h2>\n    <p>\n        Ask questions on StackOverflow with the\n        <a target=\"_blank\" href=\"https://stackoverflow.com/questions/tagged/vmware-clarity\">vmware-clarity</a> tag\n        to get the community's attention faster. You can also view FAQs by\n        filtering on the <a target=\"_blank\" href=\"https://stackoverflow.com/questions/tagged/vmware-clarity\">vmware-clarity</a>\n        tag on StackOverflow.\n    </p>\n\n    <h2 id=\"attributions\">Attributions</h2>\n    <p>See the <a href=\"https://github.com/vmware/clarity/blob/master/ATTRIBUTION.md\" target=\"_blank\">legal\n        attributions</a> for third party software included in Clarity.\n    </p>\n    <div style=\"visibility: hidden; height: 80vh;\">This is a spacer to force sidenav highlighting on scroll</div>\n</section>\n"
    },
    {
      "name": "GrassPokemonDemo",
      "id": "component-GrassPokemonDemo-89c6d3b51bd9fc7959aa1b544c25c08b",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/grass.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grass-pokemon-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Grass</h4>\n<p>\n    Grass is one of the three basic elemental types along with Fire and Water,\n    which constitute the three starter Pokémon. This creates a simple triangle\n    to explain the type concept easily to new players.\n</p>\n<p>\n    Grass is one of the weakest types statistically, with 5 defensive weaknesses\n    and 7 types that are resistant to Grass moves. Furthermore, many Grass Pokémon\n    have Poison as their secondary type, adding a Psychic vulnerability.\n    The type combination with the most weaknesses is Grass/Psychic.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Grass</h4>\n<p>\n  Grass is one of the three basic elemental types along with Fire and Water, \n  which constitute the three starter Pokémon. This creates a simple triangle \n  to explain the type concept easily to new players.\n</p>            \n<p>\n  Grass is one of the weakest types statistically, with 5 defensive weaknesses \n  and 7 types that are resistant to Grass moves. Furthermore, many Grass Pokémon \n  have Poison as their secondary type, adding a Psychic vulnerability. \n  The type combination with the most weaknesses is Grass/Psychic.\n</p>\n`;\n@Component({\n  selector: 'clr-grass-pokemon-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Grass</h4>\n        <p>\n            Grass is one of the three basic elemental types along with Fire and Water, \n            which constitute the three starter Pokémon. This creates a simple triangle \n            to explain the type concept easily to new players.\n        </p>            \n        <p>\n            Grass is one of the weakest types statistically, with 5 defensive weaknesses \n            and 7 types that are resistant to Grass moves. Furthermore, many Grass Pokémon \n            have Poison as their secondary type, adding a Psychic vulnerability. \n            The type combination with the most weaknesses is Grass/Psychic.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n`,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class GrassPokemonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "GridAutoLayout1Demo",
      "id": "component-GridAutoLayout1Demo-aaa93e5314a19f547c96fa8682bdea71",
      "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-1.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-auto-layout-1",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-auto-layout-1.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-auto-layout-1',\n  templateUrl: './grid-auto-layout-1.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridAutoLayout1Demo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/5</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/5</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/5</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/5</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/5</span>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/3</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/3</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/3</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "GridAutoLayout2Demo",
      "id": "component-GridAutoLayout2Demo-2a20e644da29a83c5c3f623637802c60",
      "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-auto-layout-2",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-auto-layout-2.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE1 = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-4\">\n        <span>1/3 (auto)</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>Remaining</span>\n    </div>\n</div>\n`;\n\nconst EXAMPLE2 = `\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/4 (auto)</span>\n    </div>\n    <div class=\"clr-col-6\">\n        <span>1/2 (fixed)</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/4 (auto)</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-auto-layout-2',\n  templateUrl: './grid-auto-layout-2.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridAutoLayout2Demo {\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">1/3 (fixed)</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">Remaining</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/4 (auto)</span>\n        </div>\n        <div class=\"clr-col-6\">\n            <span class=\"clr-example-col-value\">1/2 (fixed)</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/4 (auto)</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n"
    },
    {
      "name": "GridAutoLayout3Demo",
      "id": "component-GridAutoLayout3Demo-5fd42de3285f816df6b603c8dd7bcc6f",
      "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-3.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-auto-layout-3",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-auto-layout-3.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE1 = `\n<div class=\"clr-row\">\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>1 of 3</span>\n    </div>\n    <div class=\"clr-col-lg-auto\">\n        <span>Variable width content</span>\n    </div>\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>3 of 3</span>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1 of 3</span>\n    </div>\n    <div class=\"clr-col-md-auto\">\n        <span>Variable Width Content</span>\n    </div>\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>3 of 3</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-auto-layout-3',\n  templateUrl: './grid-auto-layout-3.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridAutoLayout3Demo {\n  example1 = EXAMPLE1;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col clr-col-lg-2\">\n            <span class=\"clr-example-col-value\">1 of 3</span>\n        </div>\n        <div class=\"clr-col-lg-auto\">\n            <span class=\"clr-example-col-value\">Variable width content</span>\n        </div>\n        <div class=\"clr-col clr-col-lg-2\">\n            <span class=\"clr-example-col-value\">3 of 3</span>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1 of 3</span>\n        </div>\n        <div class=\"clr-col-md-auto\">\n            <span class=\"clr-example-col-value\">Variable Width Content</span>\n        </div>\n        <div class=\"clr-col clr-col-lg-2\">\n            <span class=\"clr-example-col-value\">3 of 3</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>"
    },
    {
      "name": "GridAutoLayout4Demo",
      "id": "component-GridAutoLayout4Demo-dcacf7d202a0dda2031188d7cb38b146",
      "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-4.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-auto-layout-4",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-auto-layout-4.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE1 = `\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-break-row\">\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-auto-layout-4',\n  templateUrl: './grid-auto-layout-4.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridAutoLayout4Demo {\n  example1 = EXAMPLE1;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">clr-col</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">clr-col</span>\n        </div>\n        <div class=\"clr-break-row\">\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">clr-col</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">clr-col</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>"
    },
    {
      "name": "GridColumnOffsettingDemo",
      "id": "component-GridColumnOffsettingDemo-3ee177158ede04f3b8097301cafa32bc",
      "file": "src/website/src/app/documentation/demos/grid/grid-column-offsetting.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-column-offsetting",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-column-offsetting.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-sm-4\">\n        <span>clr-col-sm-4</span>\n    </div>\n    <div class=\"clr-col-sm-6 clr-offset-sm-2\">\n        <span>clr-col-sm-6 clr-offset-sm-2</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-column-offsetting',\n  templateUrl: './grid-column-offsetting.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridColumnOffsettingDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example clr-example-column-demo\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-sm-4\">\n            <span class=\"clr-example-col-value\">clr-col-sm-4</span>\n        </div>\n        <div class=\"clr-col-sm-6 clr-offset-sm-2\">\n            <span class=\"clr-example-col-value\">clr-col-sm-6 clr-offset-sm-2</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "GridColumnOrderingDemo",
      "id": "component-GridColumnOrderingDemo-19762f0174b4ac1ac083c9da36d13cb9",
      "file": "src/website/src/app/documentation/demos/grid/grid-column-ordering.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-column-ordering",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-column-ordering.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1st, Unordered</span>\n    </div>\n    <div class=\"clr-col clr-order-3\">\n        <span>2nd, Order 3</span>\n    </div>\n    <div class=\"clr-col clr-order-2\">\n        <span>3rd, Order 2</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-column-ordering',\n  templateUrl: './grid-column-ordering.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridColumnOrderingDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1st, Unordered</span>\n        </div>\n        <div class=\"clr-col clr-order-3\">\n            <span class=\"clr-example-col-value\">2nd, Order 3</span>\n        </div>\n        <div class=\"clr-col clr-order-2\">\n            <span class=\"clr-example-col-value\">3rd, Order 2</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "GridColumnsDemo",
      "id": "component-GridColumnsDemo-b99458f97639057b829750eb9f97aca4",
      "file": "src/website/src/app/documentation/demos/grid/grid-columns.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-columns",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-columns.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-4\">\n        <span>4</span>\n    </div>\n    <div class=\"clr-col-6\">\n        <span>6</span>\n    </div>\n    <div class=\"clr-col-2\">\n        <span>2</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-columns',\n  templateUrl: './grid-columns.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridColumnsDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">4</span>\n        </div>\n        <div class=\"clr-col-6\">\n            <span class=\"clr-example-col-value\">6</span>\n        </div>\n        <div class=\"clr-col-2\">\n            <span class=\"clr-example-col-value\">2</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n<div class=\"clr-example clr-example-column\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-1\">\n            <span class=\"clr-example-col-value\">1</span>\n        </div>\n        <div class=\"clr-col-11\">\n            <span class=\"clr-example-col-value\">11</span>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col-2\">\n            <span class=\"clr-example-col-value\">2</span>\n        </div>\n        <div class=\"clr-col-10\">\n            <span class=\"clr-example-col-value\">10</span>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col-3\">\n            <span class=\"clr-example-col-value\">3</span>\n        </div>\n        <div class=\"clr-col-9\">\n            <span class=\"clr-example-col-value\">9</span>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">4</span>\n        </div>\n        <div class=\"clr-col-8\">\n            <span class=\"clr-example-col-value\">8</span>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col-5\">\n            <span class=\"clr-example-col-value\">5</span>\n        </div>\n        <div class=\"clr-col-7\">\n            <span class=\"clr-example-col-value\">7</span>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col-6\">\n            <span class=\"clr-example-col-value\">6</span>\n        </div>\n        <div class=\"clr-col-6\">\n            <span class=\"clr-example-col-value\">6</span>\n        </div>\n    </div>\n    <div class=\"clr-row\">\n        <div class=\"clr-col-12\">\n            <span class=\"clr-example-col-value\">12</span>\n        </div>\n    </div>\n</div>\n"
    },
    {
      "name": "GridColumnStackingDemo",
      "id": "component-GridColumnStackingDemo-8c604c21690ae89d3e9d3267d23af32b",
      "file": "src/website/src/app/documentation/demos/grid/grid-column-stacking.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-column-stacking",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-column-stacking.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-sm-12 clr-col-md-6\">\n        <span>clr-col-sm-12 clr-col-md-6</span>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-6\">\n        <span>clr-col-sm-12 clr-col-md-6</span>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n        <span>clr-col-sm-12 clr-col-md-12</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-column-stacking',\n  templateUrl: './grid-column-stacking.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridColumnStackingDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-sm-12 clr-col-md-6\">\n            <span class=\"clr-example-col-value\">clr-col-sm-12 clr-col-md-6</span>\n        </div>\n        <div class=\"clr-col-sm-12 clr-col-md-6\">\n            <span class=\"clr-example-col-value\">clr-col-sm-12 clr-col-md-6</span>\n        </div>\n        <div class=\"clr-col-sm-12 clr-col-md-12\">\n            <span class=\"clr-example-col-value\">clr-col-sm-12 clr-col-md-12</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "GridColumnWrappingDemo",
      "id": "component-GridColumnWrappingDemo-f91e137a9d78fd325d7234c00f83c14b",
      "file": "src/website/src/app/documentation/demos/grid/grid-column-wrapping.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-column-wrapping",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-column-wrapping.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-6\">\n        <span>clr-col-7</span>\n    </div>\n    <div class=\"clr-col-8\">\n        <span>clr-col-8</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-column-wrapping',\n  templateUrl: './grid-column-wrapping.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridColumnWrappingDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-6\">\n            <span class=\"clr-example-col-value\">clr-col-6</span>\n        </div>\n        <div class=\"clr-col-8\">\n            <span class=\"clr-example-col-value\">clr-col-8</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>"
    },
    {
      "name": "GridDemo",
      "id": "component-GridDemo-38fe373959e705a7a6c2e48f509603bf",
      "file": "src/website/src/app/documentation/demos/grid/grid.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./grid.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-grid-demo',\n  templateUrl: './grid.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class GridDemo extends ClarityDocComponent {\n  constructor() {\n    super('grid');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"a-grid-provides-a-structure-of-rows-and-columns-for-aligning-content-grids-are-useful-because-they-help-create-a-familiar-and-easily-navigable-structure-for-content\">\n            A grid provides a structure of rows and columns for aligning content. Grids are useful because they help\n            create a familiar and easily navigable structure for content.</h5>\n\n        <div id=\"code-examples\">\n            <p>\n                Clarity extends the 12-column\n                <a href=\"https://getbootstrap.com/docs/4.1/layout/grid/\" target=\"_blank\">\n                    Bootstrap 4 Flex Grid\n                </a>\n                and prefixes the grid classes with <code class=\"clr-code\">clr-</code>.\n                Prefixing allows us to avoid conflicting with other grid systems.\n                However, it also means if you are familiar with the grid classes\n                in Bootstrap 4, the Clarity grid will be familiar.\n            </p>\n\n            <p>\n                Important features about the grid are listed below:\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12\">\n                    <table class=\"table hidden-xs-down\">\n                        <thead>\n                        <tr>\n                            <th class=\"left\"></th>\n                            <th class=\"left\">Extra Small</th>\n                            <th class=\"left\">Small</th>\n                            <th class=\"left\">Medium</th>\n                            <th class=\"left\">Large</th>\n                            <th class=\"left\">Extra Large</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr>\n                            <td class=\"left\">Grid behavior</td>\n                            <td class=\"left\">Horizontal</td>\n                            <td class=\"left\" colspan=\"4\">Collapsed to start, horizontal above breakpoints</td>\n                        </tr>\n                        <tr>\n                            <td class=\"left\">Container width</td>\n                            <td class=\"left\">&lt;576px</td>\n                            <td class=\"left\">≥576px</td>\n                            <td class=\"left\">≥768px</td>\n                            <td class=\"left\">≥992px</td>\n                            <td class=\"left\">≥1200px</td>\n                        </tr>\n                        <tr>\n                            <td class=\"left\">Class prefix</td>\n                            <td class=\"left\"><code class=\"clr-code\">.clr-col-</code></td>\n                            <td class=\"left\"><code class=\"clr-code\">.clr-col-sm-</code></td>\n                            <td class=\"left\"><code class=\"clr-code\">.clr-col-md-</code></td>\n                            <td class=\"left\"><code class=\"clr-code\">.clr-col-lg-</code></td>\n                            <td class=\"left\"><code class=\"clr-code\">.clr-col-xl-</code></td>\n                        </tr>\n                        <tr>\n                            <td class=\"left\">Number of columns</td>\n                            <td class=\"left\" colspan=\"5\">12</td>\n                        </tr>\n                        <tr>\n                            <td class=\"left\">Gutter width</td>\n                            <td class=\"left\" colspan=\"5\">24px (12px on the left and right of column)</td>\n                        </tr>\n                        <tr>\n                            <td class=\"left\">Nestable</td>\n                            <td class=\"left\" colspan=\"5\">Yes</td>\n                        </tr>\n                        <tr>\n                            <td class=\"left\">Offsets</td>\n                            <td class=\"left\" colspan=\"5\">Yes</td>\n                        </tr>\n                        <tr>\n                            <td class=\"left\">Column order</td>\n                            <td class=\"left\" colspan=\"5\">Yes</td>\n                        </tr>\n                        </tbody>\n                    </table>\n\n                    <div class=\"hidden-sm-up\">\n                        <p>\n                            <b>Grid Behavior</b><br/> Horizontal for extra-small. All other breakpoints\n                            are collapsed to start, then horizontal above the breakpoint.\n                        </p>\n\n                        <p>\n                            <b>Common Properties</b>\n                        </p>\n\n                        <ul class=\"list\">\n                            <li>Number of columns: 12</li>\n                            <li>Gutter width: 24px (12px on the left and right of column)</li>\n                            <li>All columns support nesting, offsets, and column order</li>\n                        </ul>\n\n                        <table class=\"table-vertical table\">\n                            <tr>\n                                <th>\n                                    Extra small<br/> &lt; 576px\n                                </th>\n                                <td>\n                                    <code class=\"clr-code\">.clr-col-</code>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>\n                                    Small<br/> &ge; 576px\n                                </th>\n                                <td>\n                                    <code class=\"clr-code\">.clr-col-sm-</code>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>\n                                    Medium<br/> &ge; 768px\n                                </th>\n                                <td>\n                                    <code class=\"clr-code\">.clr-col-md-</code>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>\n                                    Large<br/> &ge; 992px\n                                </th>\n                                <td>\n                                    <code class=\"clr-code\">.clr-col-lg-</code>\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>\n                                    Extra large<br/> &ge; 1200px\n                                </th>\n                                <td>\n                                    <code class=\"clr-code\">.clr-col-xl-</code>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n\n                </div>\n            </div>\n\n            <h3 id=\"rows\">Rows</h3>\n\n            <p>A <code class=\"clr-code\">.clr-row</code> is a horizontal group of 12 columns.</p>\n\n            <h3 id=\"columns\">Columns</h3>\n\n            <p>The column classes specify the number of columns per row. The value appended to the class prefix must be\n                between 1 and 12.</p>\n\n            <clr-grid-demo-columns></clr-grid-demo-columns>\n\n            <h3 id=\"column-stacking\">Column Stacking</h3>\n\n            <p>Grid columns can occupy different widths on different device sizes.</p>\n\n            <p>\n                In the example below, if the device size is ≥ 768px (medium or above), the grid has two columns of equal\n                width and a third column that occupies the entire width of the row.  For device sizes &lt; 768px, each\n                column occupies the entire width of the\n                row and the columns are stacked. Resize your browser to see how this works.\n            </p>\n\n            <clr-grid-demo-column-stacking></clr-grid-demo-column-stacking>\n\n            <h3 id=\"column-wrapping\">Column Wrapping</h3>\n\n            <p>\n                Placing more than 12 columns in a single row will wrap the columns exceeding the row,\n                as one unit, onto a new line.\n            </p>\n\n            <clr-grid-demo-column-wrapping></clr-grid-demo-column-wrapping>\n\n            <h3 id=\"flexbox-grid-auto-layout\">Flexbox Grid Auto Layout</h3>\n\n            <h6>Equal Width</h6>\n\n            <p>Using the <code class=\"clr-code\">.clr-col-*</code> class divides the row into\n                equal width columns.</p>\n\n            <clr-grid-demo-auto-layout-1></clr-grid-demo-auto-layout-1>\n\n            <h6>Setting One Column Width</h6>\n\n            <p>\n                A specific width can be assigned to a column. All the siblings of that columns will\n                automatically resize around it.\n            </p>\n\n            <clr-grid-demo-auto-layout-2></clr-grid-demo-auto-layout-2>\n\n            <h6>Variable Width Content</h6>\n\n            <p>\n                Using the <code class=\"clr-code\">.clr-col-*-auto</code> class on a column sizes it based on\n                the width of its content.\n            </p>\n\n            <clr-grid-demo-auto-layout-3></clr-grid-demo-auto-layout-3>\n\n            <h6>Multi Row</h6>\n\n            <p>\n                Using the <code class=\"clr-code\">.clr-break-row</code> class after a column, breaks the following\n                columns to a new line.\n            </p>\n\n            <clr-grid-demo-auto-layout-4></clr-grid-demo-auto-layout-4>\n\n            <h3 id=\"column-offsets\">Column Offsets</h3>\n\n            <p>The responsive <code class=\"clr-code\">clr-offset-*</code> classes increase a column’s\n                left margin by <code class=\"clr-code\">*</code> number of columns.</p>\n            <clr-grid-demo-column-offsetting></clr-grid-demo-column-offsetting>\n\n            <h3 id=\"column-ordering\">Column Ordering</h3>\n\n            <clr-alert [clrAlertType]=\"'danger'\" [clrAlertClosable]=\"false\">\n                <clr-alert-item>\n                      <span class=\"alert-text\">\n                        The usage of the CSS <code class=\"clr-code\">order</code> property is no longer recommended by Clarity due to its potential to cause accessibility issues with respect to reading order. Screen reader software uses DOM order to render content to users and when doing so, does not honor the CSS <code class=\"clr-code\">order</code> property. Usage of this property can result in violating the WCAG Success Criterion - <a href=\"https://www.w3.org/TR/WCAG21/#meaningful-sequence\">1.3.2 Meaningful Sequence</a>. For more information about this issue see <a href=\"https://www.w3.org/TR/css-flexbox-1/#order-accessibility\">https://www.w3.org/TR/css-flexbox-1/#order-accessibility</a>.\n                      </span>\n                </clr-alert-item>\n              </clr-alert>\n\n            <p>The responsive <code class=\"clr-code\">clr-order-*</code> class modifiers\n                change the order of columns where <code class=\"clr-code\">*</code> represents the order.</p>\n\n            <clr-grid-demo-column-ordering></clr-grid-demo-column-ordering>\n\n            <h3 id=\"vertical-alignment-in-rows\">Vertical Alignment in Rows</h3>\n\n            <p>Columns within a row can be vertically aligned using the following responsive classes:</p>\n\n            <ul>\n                <li><code class=\"clr-code\">clr-align-items-*-start</code></li>\n                <li><code class=\"clr-code\">clr-align-items-*-center</code></li>\n                <li><code class=\"clr-code\">clr-align-items-*-end</code></li>\n            </ul>\n\n            <clr-grid-demo-vertical-alignment></clr-grid-demo-vertical-alignment>\n\n            <p>A column can individually be vertically aligned in a row using the following responsive classes:</p>\n\n            <ul>\n                <li><code class=\"clr-code\">clr-align-self-*-start</code></li>\n                <li><code class=\"clr-code\">clr-align-self-*-center</code></li>\n                <li><code class=\"clr-code\">clr-align-self-*-end</code></li>\n            </ul>\n\n            <clr-grid-demo-individual-vertical-alignment></clr-grid-demo-individual-vertical-alignment>\n\n            <h3 id=\"horizontal-alignment-in-rows\">Horizontal Alignment in Rows</h3>\n\n            <p>To align columns horizontally within a row, extend the row with one of the following responsive classes:</p>\n\n            <ul>\n                <li><code class=\"clr-code\">clr-justify-content-*-start</code></li>\n                <li><code class=\"clr-code\">clr-justify-content-*-center</code></li>\n                <li><code class=\"clr-code\">clr-justify-content-*-end</code></li>\n                <li><code class=\"clr-code\">clr-justify-content-*-around</code></li>\n                <li><code class=\"clr-code\">clr-justify-content-*-between</code></li>\n            </ul>\n\n            <clr-grid-demo-horizontal-alignment></clr-grid-demo-horizontal-alignment>\n\n            <h3 id=\"grid-nesting\">Grid Nesting</h3>\n\n            <clr-grid-demo-nesting></clr-grid-demo-nesting>\n        </div>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>Clarity recommends that your application layout stay on the grid. A grid-based approach:</p>\n\n            <ul class=\"list\">\n                <li>Aligns content consistently</li>\n                <li>Establishes a foundation that can be easily built upon for future designs</li>\n                <li>Simplifies layout decisions required of a designer</li>\n                <li>Coordinates the efforts of multiple designers</li>\n            </ul>\n\n            <h4 id=\"applying-the-grid\">Applying the Grid</h4>\n\n            <p>Apply the grid with consideration of content. Some pages might benefit from a three-column\n                layout, where other pages might work best with a two-column layout.</p>\n\n            <p>You can vary the column layout within the same page. This strategy works well for presenting\n                content that scrolls vertically.</p>\n\n            <p>Don’t lock your design into a layout optimized for a large window.</p>\n\n            <h4 id=\"grids-and-card-layouts\">Grids and Card Layouts</h4>\n\n            <p>Designing to a grid is especially important for <a routerLink=\"../../cards\">card</a>\n                layouts. Cards contains blocks of content and their height and width can vary. The grid\n                aligns the cards in a way that is easy for users to navigate.</p>\n\n            <h4 id=\"if-you-decide-not-to-conform-to-the-grid\">If You Decide Not to Conform to the Grid</h4>\n\n            <p>Do so with intent. Find a balance between aesthetics and conformity. Keep in mind that elements\n                that are not aligned to the grid draw attention in the same way as color, contrast, and\n                iconography and require more cognitive effort on the part of the user.</p>\n        </div>\n    </article>\n</clr-doc-wrapper>"
    },
    {
      "name": "GridItemsHorizontalAlignmentDemo",
      "id": "component-GridItemsHorizontalAlignmentDemo-fad8e87475e88cca5e6aa6f60fb0d43b",
      "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-horizontal-alignment",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-items-horizontal-alignment.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example1",
          "defaultValue": "EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 89
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 90
        },
        {
          "name": "example3",
          "defaultValue": "EXAMPLE_3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 91
        },
        {
          "name": "example4",
          "defaultValue": "EXAMPLE_4",
          "type": "",
          "optional": false,
          "description": "",
          "line": 92
        },
        {
          "name": "example5",
          "defaultValue": "EXAMPLE_5",
          "type": "",
          "optional": false,
          "description": "",
          "line": 93
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE_1 = `\n<div class=\"clr-row clr-justify-content-start\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`;\n\nconst EXAMPLE_2 = `\n<div class=\"clr-row clr-justify-content-center\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`;\n\nconst EXAMPLE_3 = `\n<div class=\"clr-row clr-justify-content-end\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`;\n\nconst EXAMPLE_4 = `\n<div class=\"clr-row clr-justify-content-around\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`;\n\nconst EXAMPLE_5 = `\n<div class=\"clr-row clr-justify-content-between\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-horizontal-alignment',\n  templateUrl: './grid-items-horizontal-alignment.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridItemsHorizontalAlignmentDemo {\n  example1 = EXAMPLE_1;\n  example2 = EXAMPLE_2;\n  example3 = EXAMPLE_3;\n  example4 = EXAMPLE_4;\n  example5 = EXAMPLE_5;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <h6>Start</h6>\n    <div class=\"clr-row clr-justify-content-start\">\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n<div class=\"clr-example\">\n    <h6>Center</h6>\n    <div class=\"clr-row clr-justify-content-center\">\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n<div class=\"clr-example\">\n    <h6>End</h6>\n    <div class=\"clr-row clr-justify-content-end\">\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example3\"></clr-code-snippet>\n<div class=\"clr-example\">\n    <h6>Space Around</h6>\n    <div class=\"clr-row clr-justify-content-around\">\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example4\"></clr-code-snippet>\n<div class=\"clr-example\">\n    <h6>Space Between</h6>\n    <div class=\"clr-row clr-justify-content-between\">\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n        <div class=\"clr-col-4\">\n            <span class=\"clr-example-col-value\">\n                1/3\n            </span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example5\"></clr-code-snippet>\n"
    },
    {
      "name": "GridItemsIndividualVerticalAlignmentDemo",
      "id": "component-GridItemsIndividualVerticalAlignmentDemo-44b8e78b32b645cbbc63b1700209c909",
      "file": "src/website/src/app/documentation/demos/grid/grid-items-individual-vertical-alignment.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-individual-vertical-alignment",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-items-individual-vertical-alignment.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col clr-align-self-start\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col clr-align-self-center\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col clr-align-self-end\">\n        <span>1/3</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-individual-vertical-alignment',\n  templateUrl: './grid-items-individual-vertical-alignment.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridItemsIndividualVerticalAlignmentDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-example-row clr-row\">\n        <div class=\"clr-col clr-align-self-start\">\n            <span class=\"clr-example-col-value\">1/3</span>\n        </div>\n        <div class=\"clr-col clr-align-self-center\">\n            <span class=\"clr-example-col-value\">1/3</span>\n        </div>\n        <div class=\"clr-col clr-align-self-end\">\n            <span class=\"clr-example-col-value\">1/3</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "GridItemsVerticalAlignmentDemo",
      "id": "component-GridItemsVerticalAlignmentDemo-d8aabcc79fbe846bb5ee48788cc8c667",
      "file": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-vertical-alignment",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-items-vertical-alignment.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row clr-align-items-start\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`;\n\nconst EXAMPLE1 = `\n<div class=\"clr-row clr-align-items-center\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`;\n\nconst EXAMPLE2 = `\n<div class=\"clr-row clr-align-items-end\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-vertical-alignment',\n  templateUrl: './grid-items-vertical-alignment.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridItemsVerticalAlignmentDemo {\n  example = EXAMPLE;\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <h6>Start</h6>\n    <div class=\"clr-example-row clr-row clr-align-items-start\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/2</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/2</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n<div class=\"clr-example\">\n    <h6>Center</h6>\n    <div class=\"clr-example-row clr-row clr-align-items-center\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/2</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/2</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n<div class=\"clr-example\">\n    <h6>End</h6>\n    <div class=\"clr-example-row clr-row clr-align-items-end\">\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/2</span>\n        </div>\n        <div class=\"clr-col\">\n            <span class=\"clr-example-col-value\">1/2</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n"
    },
    {
      "name": "GridNestingDemo",
      "id": "component-GridNestingDemo-0cee1b834abc409486509b2af87eeff9",
      "file": "src/website/src/app/documentation/demos/grid/grid-nesting.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-grid-demo-nesting",
      "styleUrls": ["./grid.demo.scss"],
      "styles": [],
      "templateUrl": ["./grid-nesting.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-9\">\n        <span>9</span>\n        <div class=\"clr-row\">\n            <div class=\"clr-col-3\">\n                <span>3</span>\n            </div>\n            <div class=\"clr-col-9\">\n                <span>9</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-3\">\n        <span>3</span>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-grid-demo-nesting',\n  templateUrl: './grid-nesting.html',\n  styleUrls: ['./grid.demo.scss'],\n})\nexport class GridNestingDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .clr-example-col-value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: $clr_baselineRem_1_5;\n    border-radius: $clr-global-borderradius;\n    background: hsl(201, 29%, 88%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row,\n  .clr-example-nesting-row {\n    background: hsl(206, 25%, 25%);\n    margin: $clr_baselineRem_0_25 0;\n  }\n\n  .clr-example-row {\n    height: $clr_baselineRem_4_5;\n  }\n\n  .clr-example-nesting-row {\n    .clr-example-nesting-row {\n      background: hsl(206, 13%, 44%);\n    }\n  }\n}\n",
          "styleUrl": "./grid.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<div class=\"clr-example\">\n    <div class=\"clr-example-nesting-row clr-row\">\n        <div class=\"clr-col-9\">\n            <span class=\"clr-example-col-value\">9</span>\n            <div class=\"clr-example-nesting-row clr-row\">\n                <div class=\"clr-col-3\">\n                    <span class=\"clr-example-col-value\">3</span>\n                </div>\n                <div class=\"clr-col-9\">\n                    <span class=\"clr-example-col-value\">9</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-3\">\n            <span class=\"clr-example-col-value\">3</span>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>"
    },
    {
      "name": "GroceryItemsComponent",
      "id": "component-GroceryItemsComponent-565050253a6df2ca8b102ac6f145caf2",
      "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-items.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "my-grocery-items",
      "styleUrls": [],
      "styles": [],
      "template":
        "<ng-container [clrLoading]=\"loading\">\n    <clr-tree-node *ngFor=\"let item of items$ | async\" [(clrSelected)]=\"item.selected\">\n        {{item.name}}\n    </clr-tree-node>\n</ng-container>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "group",
          "line": 22,
          "type": "Group"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "items$",
          "type": "Observable<Item[]>",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "itemsService",
          "defaultValue": "ITEMS_SERVICE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "loading",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ITEMS_SERVICE, Group, Item } from './grocery-models';\n\n@Component({\n  selector: 'my-grocery-items',\n  template: `\n        <ng-container [clrLoading]=\"loading\">\n            <clr-tree-node *ngFor=\"let item of items$ | async\" [(clrSelected)]=\"item.selected\">\n                {{item.name}}\n            </clr-tree-node>\n        </ng-container>\n    `,\n})\nexport class GroceryItemsComponent implements OnInit {\n  @Input() group: Group;\n  items$: Observable<Item[]>;\n  loading = false;\n\n  ngOnInit() {\n    this.loading = true;\n    this.items$ = this.itemsService.getItems(this.group).pipe(tap(() => (this.loading = false)));\n  }\n\n  itemsService = ITEMS_SERVICE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["OnInit"]
    },
    {
      "name": "HeaderColorsDemo",
      "id": "component-HeaderColorsDemo-4cb8e3d3e3f60a7c39676c9b6af1f682",
      "file": "src/website/src/app/documentation/demos/header/header-colors.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-header-demo-colors",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "templateUrl": ["./header-colors.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<header class=\"header header-1\">\n    ...\n</header>\n\n<header class=\"header header-2\">\n    ...\n</header>\n\n<header class=\"header header-3\">\n    ...\n</header>\n\n<header class=\"header header-4\">\n    ...\n</header>\n\n<header class=\"header header-5\">\n    ...\n</header>\n\n<header class=\"header header-6\">\n    ...\n</header>\n\n<header class=\"header header-7\">\n    ...\n</header>\n`;\n\n@Component({\n  selector: 'clr-header-demo-colors',\n  templateUrl: './header-colors.demo.html',\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class HeaderColorsDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-1 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-2 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-3 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-4 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-5 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-7\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "HeaderColorsDemo",
      "id": "component-HeaderColorsDemo-91d20ffe47cc1f125b5dbd57d2f072cf-1",
      "file": "src/website/src/app/documentation/demos/nav/header-colors.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-header-demo-colors",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "templateUrl": ["./header-colors.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-header-demo-colors',\n  templateUrl: './header-colors.demo.html',\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class HeaderColorsDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": "",
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "HeaderColorsDemo-1",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-1 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-2 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-3 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-4 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-5 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n        </header>\n    </div>\n</div>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;header class=&quot;header header-1&quot;&gt;\n    ...\n&lt;/header&gt;\n\n&lt;header class=&quot;header header-2&quot;&gt;\n    ...\n&lt;/header&gt;\n\n&lt;header class=&quot;header header-3&quot;&gt;\n    ...\n&lt;/header&gt;\n\n&lt;header class=&quot;header header-4&quot;&gt;\n    ...\n&lt;/header&gt;\n\n&lt;header class=&quot;header header-5&quot;&gt;\n    ...\n&lt;/header&gt;\n\n&lt;header class=&quot;header header-6&quot;&gt;\n    ...\n&lt;/header&gt;\n</code></pre>\n"
    },
    {
      "name": "HeaderDemo",
      "id": "component-HeaderDemo-d4e53f2ad9098b5ae372f79e9af42e81",
      "file": "src/website/src/app/documentation/demos/header/header.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-header-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./header.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-header-demo',\n  templateUrl: './header.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class HeaderDemo extends ClarityDocComponent {\n  constructor() {\n    super('header');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article class=\"header-dox\">\n\n        <h5 class=\"component-summary no-left-padding\" id=\"buttons-header\">\n            Headers provide branding, navigation, search, and access to global\n            application actions such as settings and notifications.\n        </h5>\n\n        <div id=\"design-guidelines\">\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 col-no-padding\">\n                    <div class=\"clrweb-DocMedia-block\">\n                        <div class=\"header-demo\">\n                            <header class=\"header-6\">\n                                <div class=\"branding\">\n                                    <a class=\"logo-and-title\">\n                                        <clr-icon shape=\"file\"></clr-icon>\n                                        <span class=\"title\">Note App</span>\n                                    </a>\n                                </div>\n                                <div class=\"header-nav\">\n                                    <a href=\"javascript://\" class=\"nav-link\">\n                                        <span class=\"nav-text\">Notes</span>\n                                    </a>\n                                    <a href=\"javascript://\" class=\"active nav-link\">\n                                        <span class=\"nav-text\">Shared Notes</span>\n                                    </a>\n                                </div>\n                                <div class=\"header-actions\">\n                                    <div class=\"dropdown\">\n                                        <button class=\"nav-icon dropdown-toggle\" aria-label=\"toggle settings menu\">\n                                            <clr-icon shape=\"cog\"></clr-icon>\n                                            <clr-icon shape=\"caret down\"></clr-icon>\n                                        </button>\n                                        <div class=\"dropdown-menu\">\n                                            <a href=\"javascript://\">About</a>\n                                            <a href=\"javascript://\">Preferences</a>\n                                            <a href=\"javascript://\">Log out</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </header>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <h3>Style</h3>\n            <p>The header is consistent across all pages of an application. This offers a recognizable\n                unifying element to the application.</p>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-sm-6\">\n                    <h5>Branding</h5>\n                    <p>Include both your application’s name and logo if available. Clicking on the app’s name or logo\n                        should take you to the homepage of the application.</p>\n                </div>\n                <div class=\"clr-col-12 clr-col-sm-6 header-dox__media-container\">\n                    <img class=\"clrweb-Img\" src=\"assets/images/documentation/header/header_01.svg\" alt=\"\">\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-sm-6\">\n                    <h5>Top Level Navigation</h5>\n                    <p>Include top level navigation items. These items should be persistent throughout your experience.</p>\n                    <p>Have a maximum of four items in top-level navigation. For more info, take a look at <a\n                            routerLink=\"../../navigation\">Navigation</a>.</p>\n                    <h5>Typography</h5>\n                    <p>Use clear language for top level navigation items. Do not combine icons and text.</p>\n                    <p>If you’re using icons on their own in the header, using tooltips will help users\n                        understand what an icon means.</p>\n                </div>\n                <div class=\"clr-col-12 clr-col-sm-6 header-dox__media-container\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <img alt=\"Use Text for navigational items\" class=\"clrweb-Img\"\n                            src=\"assets/images/documentation/header/header_04.svg\" alt=\"\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Use Text for navigational items.\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"clrweb-DoxMedia is-warn-block\">\n                        <img alt=\"Use Text for navigational items\" class=\"clrweb-Img\"\n                            src=\"assets/images/documentation/header/header_02.svg\" alt=\"\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-warn\">Not Recommended</h6>\n                            <p>\n                                Use icons alone for top level navigation items.\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"clrweb-DoxMedia is-warn-block\">\n                        <img alt=\"Use Text for navigational items\" class=\"clrweb-Img\"\n                            src=\"assets/images/documentation/header/header_03.svg\" alt=\"\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-warn\">Not Recommended</h6>\n                            <p>\n                                Only use a combination of text and icons when the provided text gives additional\n                                context specific to the user, for example, the user's username.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Responsive Navigation</h3>\n            <p>\n                Clarity includes functionality for displaying the navigation on smaller devices like\n                tablets and phones with the <em>responsive navigation component</em> in clarity-angular. Details\n                on how to use <a routerLink=\"../../navigation\"\n                fragment=\"responsive_navigation\">Clarity's responsive header can be found in our documentation\n                on app navigation</a>.\n            </p>\n\n            <h3>Search</h3>\n            <p>There are many different ways to include search in the header. Which way you choose depends on search's\n                prominence and its utility within the application.</p>\n            <div class=\"clr-row\">\n                <div class=\"\"></div>\n                <div class=\"clr-col-12 col-no-padding\">\n                    <div class=\"clrweb-DocMedia-block\">\n                        <div class=\"header-demo\">\n                            <header class=\"header-6\">\n                                <div class=\"branding\">\n                                    <a class=\"logo-and-title\">\n                                        <clr-icon shape=\"file\"></clr-icon>\n                                        <span class=\"title\">Note App</span>\n                                    </a>\n                                </div>\n                                <form class=\"search\">\n                                    <label for=\"search_input\">\n                                        <input id=\"search_input-a\" type=\"text\" placeholder=\"Search all notes...\">\n                                    </label>\n                                </form>\n                                <div class=\"header-actions\">\n                                    <div class=\"dropdown\">\n                                        <button class=\"nav-icon dropdown-toggle\" aria-label=\"toggle settings menu\">\n                                            <clr-icon shape=\"cog\"></clr-icon>\n                                            <clr-icon shape=\"caret down\"></clr-icon>\n                                        </button>\n                                        <div class=\"dropdown-menu\">\n                                            <a href=\"javascript://\">About</a>\n                                            <a href=\"javascript://\">Preferences</a>\n                                            <a href=\"javascript://\">Log out</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </header>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <p>Use search as a prominent navigation item in the header if you are building a search-based user\n                experience.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 col-no-padding\">\n                    <div class=\"clrweb-DocMedia-block\">\n                        <div class=\"header-demo\">\n                            <header class=\"header-6\">\n                                <div class=\"branding\">\n                                    <a class=\"logo-and-title\">\n                                        <clr-icon shape=\"file\"></clr-icon>\n                                        <span class=\"title\">Note App</span>\n                                    </a>\n                                </div>\n                                <div class=\"header-nav\">\n                                    <a href=\"javascript://\" class=\"nav-link\">\n                                        <span class=\"nav-text\">Notes</span>\n                                    </a>\n                                    <a href=\"javascript://\" class=\"active nav-link\">\n                                        <span class=\"nav-text\">Shared Notes</span>\n                                    </a>\n                                </div>\n                                <form class=\"search\">\n                                    <label for=\"search_input\">\n                                        <input id=\"search_input\" type=\"text\" placeholder=\"Search all notes...\">\n                                    </label>\n                                </form>\n                                <div class=\"header-actions\">\n                                    <div class=\"dropdown\" aria-label=\"toggle settings menu\">\n                                        <button class=\"nav-icon dropdown-toggle\">\n                                            <clr-icon shape=\"cog\"></clr-icon>\n                                            <clr-icon shape=\"caret down\"></clr-icon>\n                                        </button>\n                                        <div class=\"dropdown-menu\">\n                                            <a href=\"javascript://\">About</a>\n                                            <a href=\"javascript://\">Preferences</a>\n                                            <a href=\"javascript://\">Log out</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </header>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <p>\n                Use search in addition to navigation items when you have 2 or 3 top-level navigational items and search\n                continues to be core to your navigation experience.\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 col-no-padding\">\n                    <div class=\"clrweb-DocMedia-block\">\n                        <div class=\"header-demo\">\n                            <img class=\"clrweb-Img\" src=\"assets/images/documentation/header/header_05.svg\" alt=\"\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <p>\n                Use search as a secondary item to the right of the header if search is not core to your navigation\n                experience or if you need to emphasize 3 or more top level navigation items.\n            </p>\n\n            <div style=\"margin: 48px 0;\">\n                <div class=\"clrweb-DoxBookmark hidden-sm-down\">\n                    <div class=\"clrweb-DoxBookmark-bookmark\" aria-label=\"bookmark\">\n                        <clr-icon shape=\"bookmark\"></clr-icon>\n                    </div>\n                    <p>\n                        You can read more in about <a rel=\"noopener\" target=\"_blank\"\n                        href=\"https://github.com/vmware/clarity/issues/186\">search</a> in the\n                        design spec. The search component itself is a work in progress.\n                    </p>\n                </div>\n            </div>\n\n            <h3>Right Side Action Area</h3>\n            <p>The area to the right of the header serves as a location for global actions and\n                top-level navigational items that are important yet visited less frequently.</p>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 col-no-padding\">\n                    <div class=\"clrweb-DocMedia-block\">\n                        <div class=\"header-demo\">\n                            <img class=\"clrweb-Img\" src=\"assets/images/documentation/header/header_06.svg\" alt=\"\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <p>\n                For example, this action area on the right side of the header could include\n                application settings, user settings, help, about, and other similar items.\n            </p>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <p>The header and subnav support app-level information and navigation links.</p>\n\n            <h6 id=\"header-1\">\n                .header\n            </h6>\n\n            <p>\n                <code class=\"clr-code\">.header</code> is a wrapper around the following four sections:\n            </p>\n\n            <ul class=\"list\">\n                <li>Branding</li>\n                <li>Navigation</li>\n                <li>Search</li>\n                <li>Settings</li>\n            </ul>\n\n            <h6 id=\"branding\">\n                .branding\n            </h6>\n\n            <p>\n                <code class=\"clr-code\">.branding</code> contains the product logo and the product\n                title. The logo extends the <code class=\"clr-code\">.clr-icon</code> class and the\n                title extends the <code class=\"clr-code\">.title</code> class.\n            </p>\n\n            <h6 id=\"header-nav\">.header-nav</h6>\n\n            <p>\n                <code class=\"clr-code\">.header-nav</code> contains the navigation links.\n                Each navigation link extends the <code class=\"clr-code\">.nav-link</code> class along with the\n                <code class=\"clr-code\">.nav-text</code> class for text links and the <code\n                class=\"clr-code\">.nav-icon</code> class icon links.\n            </p>\n\n            <clr-header-demo-links></clr-header-demo-links>\n\n            <h6 id=\"search\">\n                .search\n            </h6>\n\n            <p>\n                <code class=\"clr-code\">.search</code> is a form containing the search icon and the search input field.\n            </p>\n\n            <h6 id=\"header-actions\">\n                .header-actions\n            </h6>\n\n            <p style=\"margin-bottom: 48px\">\n                <code class=\"clr-code\">.header-actions</code> is a wrapper that contains secondary\n                navigation links. Each navigation link extends the <code class=\"clr-code\">.nav-link</code>\n                class. Navigation links can be text or icons.\n            </p>\n\n            <clr-alert [clrAlertClosable]=\"false\">\n                <clr-alert-item>\n                    <span class=\"alert-text\">\n                        For information about headers with responsive navigation, see\n                        <a routerLink=\"../../navigation\"\n                        fragment=\"responsive_navigation\">Responsive Navigation</a>.\n                    </span>\n                </clr-alert-item>\n            </clr-alert>\n\n            <h4 id=\"types\">\n                Types\n            </h4>\n            <clr-header-demo-types></clr-header-demo-types>\n\n            <h4 id=\"color-options\">\n                Color Options\n            </h4>\n            <clr-header-demo-colors></clr-header-demo-colors>\n\n            <h3 id=\"subnav\">\n                Subnav\n            </h3>\n\n            <p>\n                <code class=\"clr-code\">.subnav</code> immediately follows the <code class=\"clr-code\">.header</code>. It\n                wraps a <a routerLink=\"../../tabs\">tab</a> and an <code class=\"clr-code\">aside</code> section.\n            </p>\n\n            <clr-nav-demo-subnav></clr-nav-demo-subnav>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "HeaderLinksDemo",
      "id": "component-HeaderLinksDemo-01a956ccb16926a1dc439bf72e49466f",
      "file": "src/website/src/app/documentation/demos/header/header-links.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-header-demo-links",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "templateUrl": ["./header-links.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<header class=\"header-6\">\n    <div class=\"branding\">\n        ...\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"javascript://\" class=\"active nav-link nav-text\">Dashboard</a>\n        <a href=\"javascript://\" class=\"nav-link nav-text\">Interactive Analytics</a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n`;\n\n@Component({\n  selector: 'clr-header-demo-links',\n  templateUrl: './header-links.demo.html',\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class HeaderLinksDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"active nav-link nav-text\">Dashboard</a>\n                <a href=\"javascript://\" class=\"nav-link nav-text\">Interactive Analytics</a>\n            </div>\n            <div class=\"header-actions\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>"
    },
    {
      "name": "HeaderLinksDemo",
      "id": "component-HeaderLinksDemo-47a5597a275b212dec30868e3e11ba65-1",
      "file": "src/website/src/app/documentation/demos/nav/header-links.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-header-demo-links",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "templateUrl": ["./header-links.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-header-demo-links',\n  templateUrl: './header-links.demo.html',\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class HeaderLinksDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": "",
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "HeaderLinksDemo-1",
      "templateData":
        "<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"active nav-link nav-text\">Dashboard</a>\n                <a href=\"javascript://\" class=\"nav-link nav-text\">Interactive Analytics</a>\n            </div>\n            <div class=\"header-actions\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n    </div>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n    &lt;header class=&quot;header-6&quot;&gt;\n        &lt;div class=&quot;branding&quot;&gt;\n            ...\n        &lt;/div&gt;\n        &lt;div class=&quot;header-nav&quot;&gt;\n            &lt;a href=&quot;javascript://&quot; class=&quot;active nav-link nav-text&quot;&gt;Dashboard&lt;/a&gt;\n            &lt;a href=&quot;javascript://&quot; class=&quot;nav-link nav-text&quot;&gt;Interactive Analytics&lt;/a&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;header-actions&quot;&gt;\n            &lt;a href=&quot;javascript://&quot; class=&quot;nav-link nav-icon&quot;&gt;\n                &lt;clr-icon shape=&quot;cog&quot;&gt;&lt;/clr-icon&gt;\n            &lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/header&gt;\n</code></pre>"
    },
    {
      "name": "HeaderTypesDemo",
      "id": "component-HeaderTypesDemo-5f62f04feb73c964279a741dc6fe93a4",
      "file": "src/website/src/app/documentation/demos/header/header-types.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-header-demo-types",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "templateUrl": ["./header-types.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 125
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"...\" class=\"active nav-link\"><span class=\"nav-text\">Dashboard</span></a>\n        <a href=\"...\" class=\"nav-link\"><span class=\"nav-text\">Interactive Analytics</span></a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <form class=\"search\">\n        <label for=\"search_input\">\n            <input id=\"search_input\" type=\"text\" placeholder=\"Search for keywords...\">\n        </label>\n    </form>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <clr-dropdown>\n            <button class=\"nav-icon\" clrDropdownTrigger aria-label=\"toggle settings menu\">\n                <clr-icon shape=\"cog\"></clr-icon>\n                <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n                <a href=\"...\" clrDropdownItem>About</a>\n                <a href=\"...\" clrDropdownItem>Preferences</a>\n                <a href=\"...\" clrDropdownItem>Log out</a>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-text\">\n            Log Out\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <clr-dropdown>\n            <button class=\"nav-text\" clrDropdownTrigger aria-label=\"open user profile\">\n                john.doe@vmware.com\n                <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n                <a href=\"...\" clrDropdownItem>Preferences</a>\n                <a href=\"...\" clrDropdownItem>Log out</a>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"javascript://\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon-text\">\n            <clr-icon shape=\"user\"></clr-icon>\n            <span class=\"nav-text\">username</span>\n        </a>\n    </div>\n</header>\n`;\n\n@Component({\n  selector: 'clr-header-demo-types',\n  templateUrl: './header-types.demo.html',\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class HeaderTypesDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"active nav-link nav-text\">Dashboard</a>\n                <a href=\"javascript://\" class=\"nav-link nav-text\">Interactive Analytics</a>\n            </div>\n            <div class=\"header-actions\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <form class=\"search\">\n                <label for=\"search_input\">\n                    <input id=\"search_input\" type=\"text\" placeholder=\"Search for keywords...\">\n                </label>\n            </form>\n            <div class=\"header-actions\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-actions\">\n                <clr-dropdown>\n                    <button class=\"nav-icon\" clrDropdownTrigger aria-label=\"toggle settings menu\">\n                        <clr-icon shape=\"cog\"></clr-icon>\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n                        <a href=\"javascript://\" clrDropdownItem>About</a>\n                        <a href=\"javascript://\" clrDropdownItem>Preferences</a>\n                        <a href=\"javascript://\" clrDropdownItem>Log out</a>\n                    </clr-dropdown-menu>\n                </clr-dropdown>\n            </div>\n        </header>\n\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-actions\">\n                <a href=\"javascript://\" class=\"nav-link nav-text\">\n                    Log Out\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-actions header-actions--overflow\">\n                <clr-dropdown>\n                    <button class=\"nav-text\" clrDropdownTrigger aria-label=\"open user profile\">\n                        john.doe@vmware.com\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n                        <a href=\"javascript://\" clrDropdownItem>Preferences</a>\n                        <a href=\"javascript://\" clrDropdownItem>Log out</a>\n                    </clr-dropdown-menu>\n                </clr-dropdown>\n            </div>\n        </header>\n\n        <header class=\"header-6\">\n            <div class=\"branding\">\n              <a href=\"javascript://\" class=\"nav-link\">\n                <clr-icon shape=\"vm-bug\"></clr-icon>\n                <span class=\"title\">Project Clarity</span>\n              </a>\n            </div>\n            <div class=\"header-actions\">\n              <a href=\"javascript://\" class=\"nav-link nav-icon-text\">\n                <clr-icon shape=\"user\"></clr-icon>\n                <span class=\"nav-text\">username</span>\n              </a>\n            </div>\n        </header>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "HeaderTypesDemo",
      "id": "component-HeaderTypesDemo-73e8c72c453c40296704d12059819dae-1",
      "file": "src/website/src/app/documentation/demos/nav/header-types.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-nav-header-demo-types",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "templateUrl": ["./header-types.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-nav-header-demo-types',\n  templateUrl: './header-types.demo.html',\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class HeaderTypesDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": "",
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "HeaderTypesDemo-1",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"active nav-link nav-text\">Dashboard</a>\n                <a href=\"javascript://\" class=\"nav-link nav-text\">Interactive Analytics</a>\n            </div>\n            <div class=\"header-actions\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <form class=\"search\">\n                <label for=\"search_input\">\n                    <input id=\"search_input\" type=\"text\" placeholder=\"Search for keywords...\">\n                </label>\n            </form>\n            <div class=\"header-actions\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-actions\">\n                <clr-dropdown>\n                    <button class=\"nav-icon\" clrDropdownTrigger>\n                        <clr-icon shape=\"cog\"></clr-icon>\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <clr-dropdown-menu clrPosition=\"bottom-right\">\n                        <a href=\"javascript://\" clrDropdownItem>About</a>\n                        <a href=\"javascript://\" clrDropdownItem>Preferences</a>\n                        <a href=\"javascript://\" clrDropdownItem>Log out</a>\n                    </clr-dropdown-menu>\n                </clr-dropdown>\n            </div>\n        </header>\n\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cloud\"></clr-icon>\n                </a>\n                <a href=\"javascript://\" class=\"active nav-link nav-icon\">\n                    <clr-icon shape=\"folder\"></clr-icon>\n                </a>\n            </div>\n            <form class=\"search\">\n                <label for=\"search_input1\">\n                    <input id=\"search_input1\" type=\"text\" placeholder=\"Search for keywords...\">\n                </label>\n            </form>\n            <div class=\"header-actions\">\n                <clr-dropdown>\n                    <button class=\"nav-icon\" clrDropdownTrigger>\n                        <clr-icon shape=\"user\"></clr-icon>\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <clr-dropdown-menu clrPosition=\"bottom-right\">\n                        <a href=\"javascript://\" clrDropdownItem>About</a>\n                        <a href=\"javascript://\" clrDropdownItem>Preferences</a>\n                        <a href=\"javascript://\" clrDropdownItem>Log out</a>\n                    </clr-dropdown-menu>\n                </clr-dropdown>\n            </div>\n        </header>\n\n        <header class=\"header-6 space-below\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-actions\">\n                <a href=\"javascript://\" class=\"nav-link nav-text\">\n                    Log Out\n                </a>\n            </div>\n        </header>\n\n        <header class=\"header-6\">\n            <div class=\"branding\">\n                <a href=\"javascript://\" class=\"nav-link\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-actions header-actions--overflow\">\n                <clr-dropdown>\n                    <button class=\"nav-text\" clrDropdownTrigger>\n                        john.doe@vmware.com\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <clr-dropdown-menu clrPosition=\"bottom-right\">\n                        <a href=\"javascript://\" clrDropdownItem>Preferences</a>\n                        <a href=\"javascript://\" clrDropdownItem>Log out</a>\n                    </clr-dropdown-menu>\n                </clr-dropdown>\n            </div>\n        </header>\n    </div>\n</div>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;header class=&quot;header-6&quot;&gt;\n    &lt;div class=&quot;branding&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link&quot;&gt;\n            &lt;clr-icon shape=&quot;vm-bug&quot;&gt;&lt;/clr-icon&gt;\n            &lt;span class=&quot;title&quot;&gt;Project Clarity&lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;header-nav&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;active nav-link&quot;&gt;&lt;span class=&quot;nav-text&quot;&gt;Dashboard&lt;/span&gt;&lt;/a&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link&quot;&gt;&lt;span class=&quot;nav-text&quot;&gt;Interactive Analytics&lt;/span&gt;&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;header-actions&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link nav-icon&quot;&gt;\n            &lt;clr-icon shape=&quot;cog&quot;&gt;&lt;/clr-icon&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n&lt;/header&gt;\n\n&lt;header class=&quot;header-6&quot;&gt;\n    &lt;div class=&quot;branding&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link&quot;&gt;\n            &lt;clr-icon shape=&quot;vm-bug&quot;&gt;&lt;/clr-icon&gt;\n            &lt;span class=&quot;title&quot;&gt;Project Clarity&lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;form class=&quot;search&quot;&gt;\n        &lt;label for=&quot;search_input&quot;&gt;\n            &lt;input id=&quot;search_input&quot; type=&quot;text&quot; placeholder=&quot;Search for keywords...&quot;&gt;\n        &lt;/label&gt;\n    &lt;/form&gt;\n    &lt;div class=&quot;header-actions&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link nav-icon&quot;&gt;\n            &lt;clr-icon shape=&quot;cog&quot;&gt;&lt;/clr-icon&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n&lt;/header&gt;\n\n&lt;header class=&quot;header-6&quot;&gt;\n    &lt;div class=&quot;branding&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link&quot;&gt;\n            &lt;clr-icon shape=&quot;vm-bug&quot;&gt;&lt;/clr-icon&gt;\n            &lt;span class=&quot;title&quot;&gt;Project Clarity&lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;header-actions&quot;&gt;\n        &lt;clr-dropdown&gt;\n            &lt;button class=&quot;nav-icon&quot; clrDropdownTrigger&gt;\n                &lt;clr-icon shape=&quot;cog&quot;&gt;&lt;/clr-icon&gt;\n                &lt;clr-icon shape=&quot;caret down&quot;&gt;&lt;/clr-icon&gt;\n            &lt;/button&gt;\n            &lt;clr-dropdown-menu clrPosition=&quot;bottom-right&quot;&gt;\n                &lt;a href=&quot;...&quot; clrDropdownItem&gt;About&lt;/a&gt;\n                &lt;a href=&quot;...&quot; clrDropdownItem&gt;Preferences&lt;/a&gt;\n                &lt;a href=&quot;...&quot; clrDropdownItem&gt;Log out&lt;/a&gt;\n            &lt;/clr-dropdown-menu&gt;\n        &lt;/clr-dropdown&gt;\n    &lt;/div&gt;\n&lt;/header&gt;\n\n&lt;header class=&quot;header-6&quot;&gt;\n    &lt;div class=&quot;branding&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link&quot;&gt;\n            &lt;clr-icon shape=&quot;vm-bug&quot;&gt;&lt;/clr-icon&gt;\n            &lt;span class=&quot;title&quot;&gt;Project Clarity&lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;header-nav&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link nav-icon&quot;&gt;\n            &lt;clr-icon shape=&quot;cloud&quot;&gt;&lt;/clr-icon&gt;\n        &lt;/a&gt;\n        &lt;a href=&quot;...&quot; class=&quot;active nav-link nav-icon&quot;&gt;\n            &lt;clr-icon shape=&quot;folder&quot;&gt;&lt;/clr-icon&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;form class=&quot;search&quot;&gt;\n        &lt;label for=&quot;search_input&quot;&gt;\n            &lt;input id=&quot;search_input&quot; type=&quot;text&quot; placeholder=&quot;Search for keywords...&quot;&gt;\n        &lt;/label&gt;\n    &lt;/form&gt;\n    &lt;div class=&quot;header-actions&quot;&gt;\n        &lt;clr-dropdown&gt;\n            &lt;button class=&quot;nav-icon&quot; clrDropdownTrigger&gt;\n                &lt;clr-icon shape=&quot;user&quot;&gt;&lt;/clr-icon&gt;\n                &lt;clr-icon shape=&quot;caret down&quot;&gt;&lt;/clr-icon&gt;\n            &lt;/button&gt;\n            &lt;clr-dropdown-menu clrPosition=&quot;bottom-right&quot;&gt;\n                &lt;a href=&quot;...&quot; clrDropdownItem&gt;About&lt;/a&gt;\n                &lt;a href=&quot;...&quot; clrDropdownItem&gt;Preferences&lt;/a&gt;\n                &lt;a href=&quot;...&quot; clrDropdownItem&gt;Log out&lt;/a&gt;\n            &lt;/clr-dropdown-menu&gt;\n        &lt;/clr-dropdown&gt;\n    &lt;/div&gt;\n&lt;/header&gt;\n\n&lt;header class=&quot;header-6&quot;&gt;\n    &lt;div class=&quot;branding&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link&quot;&gt;\n            &lt;clr-icon shape=&quot;vm-bug&quot;&gt;&lt;/clr-icon&gt;\n            &lt;span class=&quot;title&quot;&gt;Project Clarity&lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;header-actions&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link nav-text&quot;&gt;\n            Log Out\n        &lt;/a&gt;\n    &lt;/div&gt;\n&lt;/header&gt;\n\n&lt;header class=&quot;header-6&quot;&gt;\n    &lt;div class=&quot;branding&quot;&gt;\n        &lt;a href=&quot;...&quot; class=&quot;nav-link&quot;&gt;\n            &lt;clr-icon shape=&quot;vm-bug&quot;&gt;&lt;/clr-icon&gt;\n            &lt;span class=&quot;title&quot;&gt;Project Clarity&lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;header-actions&quot;&gt;\n        &lt;clr-dropdown&gt;\n            &lt;button class=&quot;nav-text&quot; clrDropdownTrigger&gt;\n                john.doe@vmware.com\n                &lt;clr-icon shape=&quot;caret down&quot;&gt;&lt;/clr-icon&gt;\n            &lt;/button&gt;\n            &lt;clr-dropdown-menu clrPosition=&quot;bottom-right&quot;&gt;\n                &lt;a href=&quot;...&quot; clrDropdownItem&gt;Preferences&lt;/a&gt;\n                &lt;a href=&quot;...&quot; clrDropdownItem&gt;Log out&lt;/a&gt;\n            &lt;/clr-dropdown-menu&gt;\n        &lt;/clr-dropdown&gt;\n    &lt;/div&gt;\n&lt;/header&gt;\n</code></pre>\n"
    },
    {
      "name": "HeaderTypesOldDemo",
      "id": "component-HeaderTypesOldDemo-6bf0e4394357cbbe82af8564e996db9e",
      "file": "src/website/src/app/documentation/demos/nav/header-types-old.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-header-demo-types-old",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "templateUrl": ["./header-types-old.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-header-demo-types-old',\n  templateUrl: './header-types-old.demo.html',\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class HeaderTypesOldDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<header class=\"header-6\" style=\"margin-top: 12px\">\n    <div class=\"branding\">\n        <a href=\"#\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"divider\"></div>\n    <div class=\"header-nav\">\n        <a class=\"active nav-link\"><span class=\"nav-icon fa fa-home fa-fw\"></span></a>\n        <a class=\"nav-link\"><span class=\"nav-icon fa fa-cloud fa-fw\"></span></a>\n    </div>\n    <div class=\"divider\"></div>\n    <form class=\"search-box\">\n        <span class=\"nav-icon fa fa-search\"></span>\n        <input type=\"text\" placeholder=\"Search for VMs...\">\n    </form>\n    <div class=\"settings\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\" style=\"margin-top: 12px\">\n    <div class=\"branding\">\n        <a href=\"#\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-nav\">\n        <a class=\"active nav-link\"><span class=\"nav-icon fa fa-home fa-fw\"></span></a>\n        <a class=\"nav-link\"><span class=\"nav-icon fa fa-cloud fa-fw\"></span></a>\n    </div>\n</header>\n\n<header class=\"header-6\" style=\"margin-top: 12px\">\n    <div class=\"branding\">\n        <a href=\"#\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <form class=\"search-box\">\n        <span class=\"nav-icon fa fa-search\"></span>\n        <input type=\"text\" placeholder=\"Search for VMs...\">\n    </form>\n</header>\n\n<header class=\"header-6\" style=\"margin-top: 12px\">\n    <div class=\"branding\">\n        <a href=\"#\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"settings\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n"
    },
    {
      "name": "HomeComponent",
      "id": "component-HomeComponent-2f3c76d6d2cd11a7be7cea773adb329e",
      "file": "src/website/src/app/home/home.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "home",
      "styleUrls": ["./home.component.scss"],
      "styles": [],
      "templateUrl": ["home.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "currentSeason",
          "defaultValue": "`bg-img-${this.getCurrentSeason()}`",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "environment",
          "defaultValue": "environment",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [
        {
          "name": "getCurrentSeason",
          "args": [],
          "optional": false,
          "returnType": "\"winter\" | \"spring\" | \"summer\" | \"autumn\"",
          "typeParameters": [],
          "line": 21,
          "modifierKind": [112]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'home',\n  templateUrl: 'home.component.html',\n  styleUrls: ['./home.component.scss'],\n  host: {\n    '[class.content-container]': 'true',\n  },\n})\nexport class HomeComponent {\n  currentSeason = `bg-img-${this.getCurrentSeason()}`;\n  environment = environment;\n\n  private getCurrentSeason() {\n    const now = new Date();\n    const currentYear = now.getFullYear();\n\n    if (now < new Date(currentYear, 2, 1)) {\n      return 'winter'; // Jan 1 - Mar 1\n    }\n\n    if (now < new Date(currentYear, 5, 1)) {\n      return 'spring'; // Mar 1 - Jun 1\n    }\n\n    if (now < new Date(currentYear, 8, 1)) {\n      return 'summer'; // Jun 1 - Sep 1\n    }\n\n    if (now < new Date(currentYear, 11, 1)) {\n      return 'autumn'; // Sep 1 - Dec 1\n    }\n\n    return 'winter'; // Dec 1 - Dec 31\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "@import '../../../../clr-core/styles/variables/variables.color';\n@import '../../styles/variables';\n@import '../../styles/mixins';\n\n.layout-home {\n  background-color: $clr-color-neutral-50;\n\n  .main-container {\n    height: auto;\n\n    .content-area {\n      overflow-x: hidden;\n      padding: 0;\n    }\n  }\n\n  $clrweb-home-sectionPadding: $clr_baselineRem_4;\n\n  section {\n    padding-top: $clrweb-home-sectionPadding;\n    padding-bottom: $clrweb-home-sectionPadding;\n\n    &.home-hero {\n      padding-top: $clr_baselineRem_2_5;\n      padding-bottom: $clr_baselineRem_3;\n    }\n\n    &.home-cards,\n    &.home-process {\n      padding-top: 0;\n    }\n\n    &.home-contact {\n      padding: 0;\n    }\n  }\n}\n\n.home-hero {\n  height: $clr_baselineRem_29;\n  max-width: $clr_baselineRem_52;\n  width: 100%;\n  margin: 0 auto;\n  position: relative;\n\n  .home-hero-content {\n    position: relative;\n    width: 100%;\n    max-width: $clr_baselineRem_27;\n    z-index: 1;\n  }\n\n  h1 {\n    font-weight: 200;\n    letter-spacing: -0.02em;\n    line-height: $clr_baselineRem_3;\n    font-size: $clr_baselineRem_2_66;\n    margin-bottom: $clr_baselineRem_0_5;\n    margin-top: $clr_baselineRem_0_5;\n  }\n\n  p.head {\n    font-size: $clr_baselineRem_0_75;\n    font-weight: 200;\n    line-height: $clr_baselineRem_1_5;\n    margin: $clr_baselineRem_0_25 $clr_baselineRem_5px;\n    color: $clr-color-neutral-1000;\n    max-width: $clr_baselineRem_26;\n  }\n\n  .home-hero-btn {\n    margin: $clr_baselineRem_1_5 0 $clr_baselineRem_1;\n    padding-left: $clr_baselineRem_5px;\n  }\n\n  .btn {\n    width: $clr_baselineRem_7;\n    height: $clr_baselineRem_2;\n    line-height: $clr_baselineRem_2 - $clr_baselineRem_1px;\n    margin: 0;\n    margin-right: $clr_baselineRem_0_75;\n    font-weight: 400;\n  }\n\n  .btn-secondary {\n    margin-right: 0;\n  }\n\n  p.subtext {\n    margin-left: $clr_baselineRem_5px;\n\n    & > a {\n      color: inherit;\n      text-decoration: underline;\n\n      &:hover,\n      &:active,\n      &:focus {\n        color: $clr-color-neutral-900;\n        text-decoration: underline;\n      }\n    }\n  }\n\n  .bg-img {\n    height: $clr_baselineRem_21_67;\n    width: $clr_baselineRem_28_875;\n    position: absolute;\n    bottom: 0;\n    left: $clr_baselineRem_25_5;\n    background-image: url('../../assets/images/clarity-logo.svg');\n    background-size: cover;\n    background-position: center center;\n\n    &-spring {\n      background-image: url('../../assets/images/clarity-logo-spring.svg');\n    }\n\n    &-winter {\n      background-image: url('../../assets/images/clarity-logo-winter.svg');\n    }\n  }\n}\n\n.home-cards {\n  width: 100%;\n  max-width: $clr_baselineRem_52;\n  margin: 0 auto;\n  z-index: 1;\n  position: relative;\n\n  .home-cards-container {\n    background-color: rgba($clr-color-neutral-0, 0.9);\n    width: 100%;\n    padding: $clr_baselineRem_2 0 $clr_baselineRem_1;\n    border-radius: $clr-global-borderradius;\n    margin-top: $clr_baselineRem_7 * -1;\n    border: $clr-global-borderwidth solid $clr-color-neutral-300;\n\n    @include clarityWebBoxShadow;\n\n    & > h1 {\n      margin: 0;\n      margin-bottom: $clr_baselineRem_2;\n      text-align: center;\n    }\n  }\n\n  .home-card-wrapper {\n    width: 100%;\n    margin: 0;\n  }\n\n  .home-card {\n    padding: $clr_baselineRem_1 $clr_baselineRem_1 0 $clr_baselineRem_2;\n    text-align: left;\n  }\n\n  .home-card-angular {\n    padding-right: $clr_baselineRem_1_5;\n    padding-left: $clr_baselineRem_1;\n  }\n\n  .home-card-title {\n    line-height: $clr_baselineRem_2;\n    vertical-align: middle;\n    margin: $clr_baselineRem_0_5 0 $clr_baselineRem_4px;\n    font-weight: 200;\n    text-align: center;\n  }\n\n  .home-card-bug {\n    text-align: center;\n  }\n\n  p {\n    margin: 0 auto;\n    font-size: $clr_baselineRem_0_667;\n    line-height: $clr_baselineRem_1_16;\n    width: 100%;\n    max-width: $clr_baselineRem_10;\n  }\n}\n\n.home-process {\n  width: 100%;\n  padding: 0;\n  max-width: $clr_baselineRem_40_0833;\n  margin: 0 auto;\n\n  h1 {\n    margin: 0;\n    margin-top: $clr_baselineRem_1;\n    margin-bottom: $clr_baselineRem_3;\n    text-align: center;\n  }\n\n  & > .row {\n    margin: 0;\n  }\n\n  .home-process-block__title {\n    position: relative;\n\n    & > .img {\n      height: $clr_baselineRem_1_5;\n      width: $clr_baselineRem_1_5;\n      position: absolute;\n      left: $clr_baselineRem_0_25;\n      top: $clr_baselineRem_0_25;\n      background-position: center center;\n      background-size: contain;\n      background-repeat: no-repeat;\n\n      &.bulb {\n        background-image: url('../../assets/images/home/ic-bulb.svg');\n      }\n\n      &.evolving {\n        background-image: url('../../assets/images/home/ic_evolving.svg');\n      }\n\n      &.rapid {\n        background-image: url('../../assets/images/home/ic_rapid.svg');\n      }\n\n      &.reliable {\n        background-image: url('../../assets/images/home/ic_reliable.svg');\n      }\n    }\n\n    & > h3 {\n      padding-left: $clr_baselineRem_2_25;\n      line-height: $clr_baselineRem_2;\n    }\n  }\n}\n\n.home-process-block {\n  padding-left: 0;\n  padding-right: 0;\n\n  p {\n    width: 100%;\n    max-width: $clr_baselineRem_17;\n    margin-top: 0;\n    margin-bottom: $clr_baselineRem_2;\n    font-size: $clr_baselineRem_0_667;\n  }\n\n  &:nth-child(2n + 0) {\n    padding-left: $clr_baselineRem_1_5;\n  }\n}\n\n.home-contact {\n  width: 100%;\n  background: linear-gradient(\n    to right,\n    $clr-color-action-600 0%,\n    $clr-color-action-600 50%,\n    $clr-color-neutral-900 50%\n  );\n}\n\n.home-contact-container,\n.layout-home footer {\n  max-width: $clr_baselineRem_52;\n  width: 100%;\n  margin: 0 auto;\n}\n\n.home-contact-block {\n  padding: 0;\n\n  &:nth-child(2n + 0) {\n    padding-left: $clr_baselineRem_1_5;\n\n    a.home-contact_link {\n      padding-left: $clr_baselineRem_3 + $clr_baselineRem_0_25;\n    }\n\n    .img {\n      width: $clr_baselineRem_3;\n    }\n  }\n}\n\na.home-contact_link {\n  display: block;\n  line-height: $clr_baselineRem_3;\n  margin-top: $clr_baselineRem_4;\n  margin-bottom: $clr_baselineRem_1;\n  position: relative;\n  padding-left: $clr_baselineRem_2_25;\n\n  color: $clr-color-neutral-0;\n\n  & > .img {\n    display: block;\n    height: $clr_baselineRem_3;\n    width: $clr_baselineRem_2;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  &.mit-link > .img {\n    background-image: url('../../assets/images/home/MIT.png');\n    background-position: center center;\n    background-repeat: no-repeat;\n  }\n\n  &.twr-link > .img {\n    background-image: url('../../assets/images/home/twitter.svg');\n    background-position: center center;\n    background-repeat: no-repeat;\n  }\n}\n\n@media (max-width: 1364px) {\n  .home-hero {\n    width: 100%;\n  }\n}\n\n@media (max-width: 1291px) {\n  .layout-home {\n    section,\n    section.home-contact {\n      padding-left: $clr_baselineRem_0_75;\n      padding-right: $clr_baselineRem_0_75;\n    }\n\n    section.home-cards {\n      padding-left: $clr_baselineRem_1;\n      padding-right: $clr_baselineRem_1;\n    }\n\n    section.home-process {\n      padding-left: $clr_baselineRem_0_5;\n      padding-right: $clr_baselineRem_0_5;\n    }\n\n    footer {\n      padding-left: $clr_baselineRem_1;\n      padding-right: $clr_baselineRem_1;\n    }\n  }\n}\n\n@media (max-width: 1092px) {\n  .home-hero {\n    .bg-img {\n      left: $clr_baselineRem_21;\n    }\n  }\n}\n\n@media (max-width: 991px) {\n  .layout-home section.home-hero {\n    padding-top: $clr_baselineRem_1;\n    padding-bottom: $clr_baselineRem_3;\n    height: $clr_baselineRem_27_5;\n  }\n}\n\n@media (max-width: 907px) {\n  .layout-home {\n    section.home-process {\n      padding-left: $clr_baselineRem_1_75;\n      padding-right: $clr_baselineRem_1_75;\n    }\n  }\n\n  .home-cards {\n    .home-cards-container {\n      & > h1 {\n        font-size: $clr_baselineRem_1_16;\n        line-height: $clr_baselineRem_1_5;\n        margin-bottom: $clr_baselineRem_1;\n      }\n    }\n\n    .home-card {\n      padding: $clr_baselineRem_1 $clr_baselineRem_0_5 0 $clr_baselineRem_1;\n    }\n\n    .home-card-angular {\n      padding-right: $clr_baselineRem_0_5;\n      padding-left: $clr_baselineRem_0_5;\n    }\n  }\n}\n\n@media (max-width: 768px) {\n  .layout-home section {\n    &.home-hero {\n      padding-top: $clr_baselineRem_1;\n      height: $clr_baselineRem_20_5;\n      padding-bottom: $clr_baselineRem_1;\n    }\n\n    &.home-cards {\n      padding-bottom: $clr_baselineRem_1;\n    }\n\n    &.home-process {\n      padding-left: $clr_baselineRem_1;\n      padding-right: $clr_baselineRem_1;\n    }\n\n    &.home-contact {\n      background: none;\n      padding-left: 0;\n      padding-right: 0;\n    }\n  }\n\n  .home-hero {\n    h1 {\n      margin-top: 0;\n      font-size: $clr_baselineRem_2;\n    }\n\n    .home-hero-btn {\n      margin-top: $clr_baselineRem_0_75;\n      width: $clr_baselineRem_336px;\n    }\n\n    .btn {\n      display: block;\n      margin: $clr_baselineRem_1 auto;\n    }\n\n    .bg-img {\n      height: $clr_baselineRem_14_33;\n      width: $clr_baselineRem_18_95833;\n      left: $clr_baselineRem_15_5;\n    }\n\n    p.subtext {\n      margin-top: $clr_baselineRem_1_5;\n      font-size: $clr_baselineRem_0_667;\n    }\n  }\n\n  .home-cards {\n    .home-cards-container {\n      margin-top: -1 * $clr_baselineRem_3;\n\n      & > h1 {\n        margin-bottom: $clr_baselineRem_1_5;\n        padding-left: $clr_baselineRem_1;\n        padding-right: $clr_baselineRem_1;\n      }\n    }\n\n    .home-card {\n      position: relative;\n      padding: $clr_baselineRem_1 $clr_baselineRem_2_5 $clr_baselineRem_1 $clr_baselineRem_7_5;\n      width: 100%;\n      max-width: 100%;\n      text-align: left;\n    }\n\n    .home-card-bug {\n      position: absolute;\n      width: $clr_baselineRem_5_5;\n      top: 50%;\n      left: $clr_baselineRem_1_5;\n      margin-top: -1 * $clr_baselineRem_1_33;\n    }\n\n    .home-card-wrapper {\n      display: block;\n      // flex-direction: column;\n    }\n\n    .home-card-title {\n      line-height: $clr_baselineRem_1;\n      margin: 0;\n      text-align: left;\n    }\n\n    p {\n      margin: 0;\n      font-size: $clr_baselineRem_0_667;\n      max-width: 100%;\n      margin-top: $clr_baselineRem_0_667;\n    }\n  }\n\n  .home-process {\n    h1 {\n      font-size: $clr_baselineRem_1_16;\n      margin-bottom: 0;\n    }\n\n    & > .row {\n      display: block;\n      // flex-direction: column;\n    }\n  }\n\n  .home-process-block {\n    width: 100%;\n    max-width: 100%;\n\n    &:nth-child(2n + 0) {\n      padding-left: 0;\n    }\n\n    p {\n      width: 100%;\n      max-width: 100%;\n      margin-top: $clr_baselineRem_0_5;\n      margin-bottom: 0;\n      padding: 0 $clr_baselineRem_0_5;\n    }\n  }\n\n  .home-contact {\n    & > .row {\n      height: $clr_baselineRem_10;\n      flex-direction: column-reverse;\n      -ms-flex-direction: column;\n    }\n  }\n\n  .home-contact-block {\n    background-color: $clr-color-action-600;\n    width: 100%;\n    max-width: 100%;\n    padding-left: $clr_baselineRem_1_5;\n\n    & + .home-contact-block {\n      background-color: $clr-color-neutral-900;\n    }\n  }\n\n  a.home-contact_link {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n@media (max-width: 545px) {\n  .home-hero {\n    h1 {\n      font-size: $clr_baselineRem_1_5;\n    }\n\n    p.head {\n      line-height: $clr_baselineRem_1;\n      max-width: $clr_baselineRem_19_167;\n    }\n\n    .home-hero-btn {\n      width: $clr_baselineRem_9_5;\n    }\n\n    .bg-img {\n      height: $clr_baselineRem_12_29167;\n      width: $clr_baselineRem_16_25;\n      left: 55%;\n      bottom: $clr_baselineRem_1;\n    }\n  }\n\n  .home-cards {\n    .home-cards-container {\n      padding-top: $clr_baselineRem_1_5;\n      margin-top: -1 * $clr_baselineRem_2;\n    }\n\n    .home-card {\n      padding-left: $clr_baselineRem_6_5;\n      padding-right: $clr_baselineRem_0_75;\n    }\n\n    .home-card-bug {\n      left: $clr_baselineRem_0_5;\n    }\n\n    p {\n      line-height: $clr_baselineRem_1;\n    }\n  }\n\n  .home-contact-block {\n    padding-left: $clr_baselineRem_0_5 !important;\n  }\n}\n\n@media (max-width: 420px) {\n  .layout-home {\n    section {\n      &.home-cards {\n        padding-bottom: $clr_baselineRem_1;\n        padding-left: 0;\n        padding-right: 0;\n        border: 0 none;\n        border-radius: 0;\n        box-shadow: none;\n      }\n\n      &.home-hero {\n        height: auto;\n      }\n\n      &.home-process {\n        padding-bottom: $clr_baselineRem_1;\n        padding-left: $clr_baselineRem_0_5;\n        padding-right: $clr_baselineRem_0_5;\n      }\n    }\n  }\n\n  .home-hero {\n    h1 {\n      font-size: $clr_baselineRem_1_33;\n      line-height: $clr_baselineRem_1_5;\n      text-align: center;\n      margin-bottom: $clr_baselineRem_0_583;\n    }\n\n    p.head {\n      line-height: $clr_baselineRem_1;\n      max-width: $clr_baselineRem_11_0833;\n      font-size: $clr_baselineRem_0_667;\n      margin: 0 auto;\n      text-align: center;\n    }\n\n    p.subtext {\n      margin-top: $clr_baselineRem_1;\n      font-size: $clr_baselineRem_0_667;\n      margin-left: 0;\n      text-align: center;\n    }\n\n    .bg-img {\n      display: none;\n    }\n\n    .home-hero-btn {\n      width: 100%;\n      padding-left: 0;\n    }\n\n    .btn {\n      min-width: $clr_baselineRem_7;\n      width: 80%;\n      max-width: $clr_baselineRem_9_167;\n    }\n  }\n\n  .home-cards {\n    .home-cards-container {\n      padding-top: $clr_baselineRem_1;\n      margin-top: 0;\n    }\n\n    .home-card-bug {\n      position: static;\n      margin: 0 auto $clr_baselineRem_0_75;\n    }\n\n    .home-card {\n      padding-left: $clr_baselineRem_1;\n      padding-right: $clr_baselineRem_1;\n    }\n\n    .home-card-title {\n      text-align: center;\n    }\n\n    p {\n      width: 80%;\n      max-width: $clr_baselineRem_10_833;\n      margin: $clr_baselineRem_0_75 auto 0;\n    }\n  }\n\n  .home-process-block {\n    p {\n      font-size: $clr_baselineRem_0_583;\n      margin-top: $clr_baselineRem_0_25;\n    }\n  }\n\n  a.mit-link {\n    line-height: $clr_baselineRem_0_75;\n    padding-top: $clr_baselineRem_0_75;\n    padding-bottom: $clr_baselineRem_0_5;\n  }\n}\n",
          "styleUrl": "./home.component.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<main class=\"content-area layout-home\" style=\"overflow-y: hidden\">\n    <section class=\"home-hero\">\n        <div class=\"home-hero-content\">\n            <h1>Clarity Design System</h1>\n            <p class=\"head\">\n                UX guidelines, HTML/CSS framework, and Angular components\n                working together to craft exceptional experiences\n            </p>\n            <div class=\"home-hero-btn\">\n                <a routerLink=\"get-started\" class=\"btn btn-primary\">Get Started</a>\n                <a routerLink=\"documentation\" *ngIf=\"environment.latest == environment.version\" class=\"btn btn-secondary btn-outline\">Documentation</a>\n                <a href=\"https://{{environment.latest}}.clarity.design\" *ngIf=\"environment.latest !== environment.version\" class=\"btn btn-secondary btn-outline\">Documentation</a>\n            </div>\n            <p class=\"subtext\">\n                View the <a rel=\"noopener\" target=\"_blank\" href=\"https://github.com/vmware/clarity\">source</a> on GitHub\n            </p>\n        </div>\n        <div class=\"bg-img\" [ngClass]=\"currentSeason\"></div>\n    </section>\n\n    <section class=\"home-cards\">\n        <div class=\"home-cards-container clearfix\">\n            <h1>Designed for designers and built for developers</h1>\n            <div class=\"home-card-wrapper clr-row\">\n                <div class=\"home-card home-card-sketch clr-col-3\">\n                    <div class=\"home-card-bug\">\n                        <img src=\"assets/images/home/sketch.png\" alt=\"Sketch logo\">\n                    </div>\n                    <h3 class=\"home-card-title\">Sketch Template</h3>\n                    <p>\n                        Jumpstart your project using our\n                        <a routerLink=\"get-started\" fragment=\"designResources\">Sketch template</a>\n                        with ready-to-use components.\n                    </p>\n                </div>\n\n                <div class=\"home-card home-card-ux clr-col-3\">\n                    <div class=\"home-card-bug\">\n                        <img src=\"assets/images/home/ux.svg\" alt=\"UX guidelines\">\n                    </div>\n                    <h3 class=\"home-card-title\">UX guidelines</h3>\n                    <p>\n                        Reference UX guidelines that stem from ongoing research\n                        and exploration, making it easy to design cohesive experiences.\n                    </p>\n                </div>\n\n                <div class=\"home-card home-card-html clr-col-3\">\n                    <div class=\"home-card-bug\">\n                        <img src=\"assets/images/home/html.svg\" alt=\"HTML/CSS\">\n                    </div>\n                    <h3 class=\"home-card-title\">HTML/CSS</h3>\n                    <p>\n                        Start building with our HTML/CSS framework and rapidly\n                        go from prototype to production.\n                    </p>\n                </div>\n\n                <div class=\"home-card home-card-angular clr-col-3\">\n                    <div class=\"home-card-bug\">\n                        <img src=\"assets/images/home/angular.svg\" alt=\"Angular logo\">\n                    </div>\n                    <h3 class=\"home-card-title\">Angular</h3>\n                    <p>\n                        Use our set of data-bound and performant components\n                        on top of Angular to add interactivity\n                    </p>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"home-process\">\n        <h1>From prototype to product, faster and better</h1>\n\n        <div class=\"clr-row\">\n            <div class=\"home-process-block clr-col-6\">\n                <div class=\"home-process-block__title\">\n                    <div class=\"img bulb\"></div>\n                    <!-- <img src=\"assets/images/home/ic-bulb.svg\" alt=\"Product-Based Approach\"> -->\n                    <h3>Product-based</h3>\n                </div>\n                <p>\n                    We work closely with product teams to understand and\n                    solve the vast array of challenges they face. These\n                    solutions are built into Clarity and contributed\n                    back to the community.\n                </p>\n            </div>\n            <div class=\"home-process-block clr-col-6\">\n                <div class=\"home-process-block__title\">\n                    <div class=\"img rapid\"></div>\n                    <!-- <img src=\"assets/images/home/ic_rapid.svg\" alt=\"Rapid development\"> -->\n                    <h3>Rapid development</h3>\n                </div>\n                <p>\n                    Clarity’s shared foundation of design and development\n                    makes communication and collaboration between different\n                    areas of expertise easier than ever.\n                </p>\n            </div>\n            <div class=\"home-process-block clr-col-6\">\n                <div class=\"home-process-block__title\">\n                    <div class=\"img evolving\"></div>\n                    <!-- <img src=\"assets/images/home/ic_evolving.svg\" alt=\"Evolving\"> -->\n                    <h3>Evolving</h3>\n                </div>\n                <p>\n                    Design patterns and technology change quickly. Clarity\n                    is built to anticipate and adopt to changes quickly\n                    and easily.\n                </p>\n            </div>\n            <div class=\"home-process-block clr-col-6\">\n                <div class=\"home-process-block__title\">\n                    <div class=\"img reliable\"></div>\n                    <!-- <img src=\"assets/images/home/ic_reliable.svg\" alt=\"Reliable\"> -->\n                    <h3>Reliable</h3>\n                </div>\n                <p>\n                    We have a dedicated team focused on shipping frequently,\n                    with a high bar of quality standard.\n                </p>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"home-contact\">\n        <div class=\"clr-row home-contact-container\">\n            <div class=\"home-contact-block clr-col-6\">\n                <a href=\"//opensource.org/licenses/MIT\" class=\"mit-link home-contact_link\" rel=\"noopener\" target=\"_blank\">\n                    <span class=\"img\"></span>\n                    Clarity is licensed under the MIT License. <span class=\"xtra\">Read more here.</span>\n                </a>\n            </div>\n            <div class=\"home-contact-block clr-col-6\">\n                <a href=\"//twitter.com/VMwareClarity\" class=\"twr-link home-contact_link\" rel=\"noopener\" target=\"_blank\">\n                    <span class=\"img\"></span>\n                    @VMwareClarity\n                </a>\n            </div>\n        </div>\n    </section>\n\n    <footer>\n        <div class=\"footer-wrapper\">\n            <a href=\"https://www.netlify.com\" style=\"float: right;\" rel=\"noopener\" target=\"_blank\">\n                <img src=\"https://www.netlify.com/img/global/badges/netlify-color-accent.svg\"/>\n            </a>\n            <img class=\"vmware-weblogo\" src=\"assets/images/home/logo_vmware.svg\" alt=\"VMware\">\n            <p class=\"copyright\">&copy; 2016 - 2019 VMware, Inc. All Rights Reserved.</p>\n        </div>\n    </footer>\n</main>\n"
    },
    {
      "name": "I18nDemo",
      "id": "component-I18nDemo-1e8e6412d99ce81baa79a5d032655545",
      "file": "src/website/src/app/documentation/demos/i18n/i18n.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./i18n.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "strings",
          "defaultValue":
            "[\n    { key: 'open', role: 'Open button text' },\n    { key: 'close', role: 'Close button text' },\n    { key: 'show', role: 'Show button text' },\n    { key: 'hide', role: 'Hide button text' },\n    { key: 'expand', role: 'Expandable components: expand caret' },\n    { key: 'collapse', role: 'Expandable components: collapse caret' },\n    { key: 'more', role: 'Overflow menus: ellipsis button' },\n    { key: 'select', role: 'Selectable components: checkbox or radio' },\n    { key: 'selectAll', role: 'Selectable components: checkbox to select all' },\n    { key: 'previous', role: 'Pagination: previous button' },\n    { key: 'next', role: 'Pagination: next button' },\n    { key: 'current', role: 'Pagination: go to current' },\n    { key: 'info', role: 'Alert levels: info' },\n    { key: 'success', role: 'Alert levels: success' },\n    { key: 'warning', role: 'Alert levels: warning' },\n    { key: 'danger', role: 'Alert levels: danger' },\n    { key: 'rowActions', role: 'Datagrid: row actions icon alt text' },\n    { key: 'pickColumns', role: 'Datagrid: show and hide columns icon alt text' },\n    { key: 'showColumns', role: 'Datagrid: show columns title' },\n    { key: 'sortColumn', role: 'Datagrid: sort columns title' },\n    { key: 'firstPage', role: 'Datagrid: pagination first page button text' },\n    { key: 'lastPage', role: 'Datagrid: pagination last page button text' },\n    { key: 'nextPage', role: 'Datagrid: pagination next page button text' },\n    { key: 'previousPage', role: 'Datagrid: pagination previous page button text' },\n    { key: 'currentPage', role: 'Datagrid: pagination current page button text' },\n    { key: 'totalPages', role: 'Datagrid: pagination total pages button text' },\n    { key: 'minValue', role: 'Datagrid: minimum value (numeric filters)' },\n    { key: 'maxValue', role: 'Datagrid: maximum value (numeric filters)' },\n    {\n      key: 'showColumnsMenuDescription',\n      role: 'Datagrid: screen reader only description of the Show/Hide columns menu',\n    },\n    {\n      key: 'allColumnsSelected',\n      role: 'Datagrid: screen reader only confirmation that all columns were selected',\n    },\n    { key: 'loading', role: 'Display loading text (Default: Loading)' },\n    { key: 'datepickerToggle', role: 'The open/close button for a datepicker' },\n    {\n      key: 'datepickerPreviousMonth',\n      role: 'The button that navigates daypicker to a monthpicker',\n    },\n    {\n      key: 'datepickerCurrentMonth',\n      role: 'The button that navigates a daypicker to current month',\n    },\n    { key: 'allColumnsSelected', role: 'Datagrid: screen reader only confirmation that all columns were selected' },\n    { key: 'loading', role: 'Display loading text (Default: Loading)' },\n    { key: 'singleSelectionAriaLabel', role: 'Datagrid: aria label for header single selection header column' },\n    { key: 'singleActionableAriaLabel', role: 'Datagrid: aria label for row action header column' },\n    { key: 'detailExpandableAriaLabel', role: 'Datagrid: aria label for expandable row toggle button' },\n    { key: 'alertCloseButtonAriaLabel', role: 'Alert: aria label for closing alert' },\n    { key: 'datepickerOpen', role: 'The open/close button for a datepicker' },\n    { key: 'datepickerPreviousMonth', role: 'The button that navigates daypicker to a monthpicker' },\n    { key: 'datepickerCurrentMonth', role: 'The button that navigates a daypicker to current month' },\n    {\n      key: 'datepickerNextMonth',\n      role: 'The button that navigates a daypicker to the next month',\n    },\n    {\n      key: 'datepickerPreviousDecade',\n      role: 'The button that navigates a yearpicker to previous decade',\n    },\n    {\n      key: 'datepickerNextDecade',\n      role: 'The button that navigates a yearpicker to next decade',\n    },\n    {\n      key: 'datepickerCurrentDecade',\n      role: 'The button that navigates the yearpicker to current decade',\n    },\n    {\n      key: 'datepickerSelectMonthText',\n      role:\n        'Populates aria-label and title for monthpicker button. Is concatenated with the (localized) value for calendarMonth as well as this value',\n    },\n    {\n      key: 'datepickerSelectYearText',\n      role:\n        'Populates aria-label and title for yearpicker button. Is concatenated with the (localized) value for calendarYear as well as this value',\n    },\n    {\n      key: 'daypickerSRCurrentMonthPhrase',\n      role:\n        'Used in an aria-live region. Makes up one part of a phrase that is read to screen reader users when the month changes.',\n    },\n    {\n      key: 'daypickerSRCurrentYearPhrase',\n      role:\n        'Used in an aria-live region. Makes up one part of a phrase that is read to screen reader users when the year changes.',\n    },\n    {\n      key: 'daypickerSRCurrentDecadePhrase',\n      role:\n        'Used in an aria-live region. Makes up one part of a phrase that is read to screen reader users when the decade changes.',\n    },\n    { key: 'stackViewChanged', role: 'Stack View: describes a particular stack block has changed' },\n    {\n      key: 'verticalNavToggle',\n      role:\n        'Applies expanded/collapsed state to an aria-expanded attribute for screen readers when vertical nav button  expands/collapses the entire menu',\n    },\n    {\n      key: 'verticalNavGroupToggle',\n      role:\n        'Applies the expanded/collapsed state to an aria-expanded attribute for screen readers whenever vertical nav group buttons are expanded/collapsed',\n    },\n    {\n      key: 'signpostToggle',\n      role: 'Applies the aria-label value to the signpost trigger.',\n    },\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  templateUrl: './i18n.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class I18nDemo extends ClarityDocComponent {\n  newLayout = true;\n  constructor() {\n    super('internationalization');\n  }\n\n  // List of the string keys and what they mean\n  strings = [\n    { key: 'open', role: 'Open button text' },\n    { key: 'close', role: 'Close button text' },\n    { key: 'show', role: 'Show button text' },\n    { key: 'hide', role: 'Hide button text' },\n    { key: 'expand', role: 'Expandable components: expand caret' },\n    { key: 'collapse', role: 'Expandable components: collapse caret' },\n    { key: 'more', role: 'Overflow menus: ellipsis button' },\n    { key: 'select', role: 'Selectable components: checkbox or radio' },\n    { key: 'selectAll', role: 'Selectable components: checkbox to select all' },\n    { key: 'previous', role: 'Pagination: previous button' },\n    { key: 'next', role: 'Pagination: next button' },\n    { key: 'current', role: 'Pagination: go to current' },\n    { key: 'info', role: 'Alert levels: info' },\n    { key: 'success', role: 'Alert levels: success' },\n    { key: 'warning', role: 'Alert levels: warning' },\n    { key: 'danger', role: 'Alert levels: danger' },\n    { key: 'rowActions', role: 'Datagrid: row actions icon alt text' },\n    { key: 'pickColumns', role: 'Datagrid: show and hide columns icon alt text' },\n    { key: 'showColumns', role: 'Datagrid: show columns title' },\n    { key: 'sortColumn', role: 'Datagrid: sort columns title' },\n    { key: 'firstPage', role: 'Datagrid: pagination first page button text' },\n    { key: 'lastPage', role: 'Datagrid: pagination last page button text' },\n    { key: 'nextPage', role: 'Datagrid: pagination next page button text' },\n    { key: 'previousPage', role: 'Datagrid: pagination previous page button text' },\n    { key: 'currentPage', role: 'Datagrid: pagination current page button text' },\n    { key: 'totalPages', role: 'Datagrid: pagination total pages button text' },\n    { key: 'minValue', role: 'Datagrid: minimum value (numeric filters)' },\n    { key: 'maxValue', role: 'Datagrid: maximum value (numeric filters)' },\n    {\n      key: 'showColumnsMenuDescription',\n      role: 'Datagrid: screen reader only description of the Show/Hide columns menu',\n    },\n    {\n      key: 'allColumnsSelected',\n      role: 'Datagrid: screen reader only confirmation that all columns were selected',\n    },\n    { key: 'loading', role: 'Display loading text (Default: Loading)' },\n    { key: 'datepickerToggle', role: 'The open/close button for a datepicker' },\n    {\n      key: 'datepickerPreviousMonth',\n      role: 'The button that navigates daypicker to a monthpicker',\n    },\n    {\n      key: 'datepickerCurrentMonth',\n      role: 'The button that navigates a daypicker to current month',\n    },\n    { key: 'allColumnsSelected', role: 'Datagrid: screen reader only confirmation that all columns were selected' },\n    { key: 'loading', role: 'Display loading text (Default: Loading)' },\n    { key: 'singleSelectionAriaLabel', role: 'Datagrid: aria label for header single selection header column' },\n    { key: 'singleActionableAriaLabel', role: 'Datagrid: aria label for row action header column' },\n    { key: 'detailExpandableAriaLabel', role: 'Datagrid: aria label for expandable row toggle button' },\n    { key: 'alertCloseButtonAriaLabel', role: 'Alert: aria label for closing alert' },\n    { key: 'datepickerOpen', role: 'The open/close button for a datepicker' },\n    { key: 'datepickerPreviousMonth', role: 'The button that navigates daypicker to a monthpicker' },\n    { key: 'datepickerCurrentMonth', role: 'The button that navigates a daypicker to current month' },\n    {\n      key: 'datepickerNextMonth',\n      role: 'The button that navigates a daypicker to the next month',\n    },\n    {\n      key: 'datepickerPreviousDecade',\n      role: 'The button that navigates a yearpicker to previous decade',\n    },\n    {\n      key: 'datepickerNextDecade',\n      role: 'The button that navigates a yearpicker to next decade',\n    },\n    {\n      key: 'datepickerCurrentDecade',\n      role: 'The button that navigates the yearpicker to current decade',\n    },\n    {\n      key: 'datepickerSelectMonthText',\n      role:\n        'Populates aria-label and title for monthpicker button. Is concatenated with the (localized) value for calendarMonth as well as this value',\n    },\n    {\n      key: 'datepickerSelectYearText',\n      role:\n        'Populates aria-label and title for yearpicker button. Is concatenated with the (localized) value for calendarYear as well as this value',\n    },\n    {\n      key: 'daypickerSRCurrentMonthPhrase',\n      role:\n        'Used in an aria-live region. Makes up one part of a phrase that is read to screen reader users when the month changes.',\n    },\n    {\n      key: 'daypickerSRCurrentYearPhrase',\n      role:\n        'Used in an aria-live region. Makes up one part of a phrase that is read to screen reader users when the year changes.',\n    },\n    {\n      key: 'daypickerSRCurrentDecadePhrase',\n      role:\n        'Used in an aria-live region. Makes up one part of a phrase that is read to screen reader users when the decade changes.',\n    },\n    { key: 'stackViewChanged', role: 'Stack View: describes a particular stack block has changed' },\n    {\n      key: 'verticalNavToggle',\n      role:\n        'Applies expanded/collapsed state to an aria-expanded attribute for screen readers when vertical nav button  expands/collapses the entire menu',\n    },\n    {\n      key: 'verticalNavGroupToggle',\n      role:\n        'Applies the expanded/collapsed state to an aria-expanded attribute for screen readers whenever vertical nav group buttons are expanded/collapsed',\n    },\n    {\n      key: 'signpostToggle',\n      role: 'Applies the aria-label value to the signpost trigger.',\n    },\n  ];\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n  <article>\n    <h5 class=\"component-summary\" id=\"summary\">Easily translate internal Clarity text into multiple languages.</h5>\n    <div>\n      <clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\">\n        <clr-alert-item>\n          <div class=\"alert-text\">There is a breaking change required to fix the language support starting in version 2.1.1 and 1.2.1. The\n          original implementation was broken in a way that could not be fixed with the original API, and due to the\n          importance of this service for localization we opted to introduce a different API. If you have an\n          implementation of a custom language strings before this release,\n          <a routerLink=\"./\" fragment=\"updating-to-latest\">follow the instructions</a> on how to update your code.\n          </div>\n        </clr-alert-item>\n      </clr-alert>\n\n      <h3 id=\"design-guidelines\">Internal language strings</h3>\n      <p>\n        Clarity has a list of text strings that it uses internally for things such as icon alt text or button text. When\n        possible, Clarity avoids using text strings that have to be translated, and rarely changes this list. Any\n        Angular application that needs to support multiple languages can create a different translation and use it for\n        each language.\n      </p>\n\n      <p>\n        In order to improve accessibility of its components, Clarity added a default English title to all icons or\n        non-text interactive elements internal to its components. In order to internationalize them we rely on a\n        <code class=\"clr-code\">ClrCommonStringsService</code> service that allows you to provide localized strings for\n        your entire app, which will override our default titles.\n      </p>\n      <h3 id=\"examples\">How to Localize</h3>\n\n      <p>\n        First, you need to make a new object that has a key value pair for each string you want to localize. You only\n        need to define the strings that you need for your application.\n      </p>\n\n      <pre><code clr-code-highlight=\"language-ts\" ngNonBindable>\nexport const klingonLocale: ClrCommonStrings = &#123;\n  open: 'ghIt',\n  close: 'SoQmoH'\n&#125;\n</code></pre>\n      <p>Then you'll need to inject the </p>\n      <pre><code clr-code-highlight=\"language-ts\" ngNonBindable>\nimport &#123; ClrCommonStringsService &#125; from '@clr/angular';\nimport &#123; klingonLocale &#125; from './translations/klingon';\n\n@Component(&#123;...&#125;)\nexport class AppComponent &#123;\n  constructor(commonStrings: ClrCommonStringsService) &#123;\n    // Call this method to set the new locale values into the service, defaults for English\n    // will be used for in any missing strings\n    commonStrings.localize(klingonLocale);\n  &#125;\n&#125;\n</code></pre>\n\n      <p>\n        It is possible to call the <code class=\"clr-code\">ClrCommonStringsService.localize()</code> method at anytime\n        and change the translation. You could call a backend service to load these translation strings as well and then\n        update them on the fly when a user changes translations in your app.\n      </p>\n\n      <pre><code clr-code-highlight=\"language-ts\" ngNonBindable>\n@Injectable()\nexport class MyCommonStringsService implements ClrCommonStrings &#123;\n  constructor(@Inject(LOCALE_ID) locale: string, server: MyServer, commonStrings: ClrCommonStringsService) &#123;\n    // Imagine this service loads a JSON object of strings for a locale\n    server.fetchTexts(locale).subscribe(texts =&gt; &#123;\n      // Pass the new localization strings to the service\n      commonStrings.localize(texts);\n      ...\n    &#125;);\n  &#125;\n&#125;\n    </code></pre>\n\n      <h3>Localization Strings</h3>\n      <p>\n        The list of strings available to configure can be found by simply looking at the declaration of the\n        <code class=\"clr-code\">ClrCommonStrings</code> interface, which is found below.\n      </p>\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th class=\"left\">Property name</th>\n            <th class=\"left\">Purpose</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let string of strings\">\n            <td class=\"left\">{{ string.key }}</td>\n            <td class=\"left\">{{ string.role }}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <h3 id=\"updating-to-latest\">Updating to v1.2.1 or 2.1.1</h3>\n\n      <p>If you used the original implementation of <code class=\"clr-code\">ClrCommonStrings</code> found in versions prior to v1.2.1 and v2.1.1, you need to follow\n        these steps to update to the new API.\n      </p>\n\n      <p>1. Remove the provider from your <code class=\"clr-code\">AppModule</code>. It should have looked something like the following.</p>\n\n      <pre><code clr-code-highlight=\"language-ts\" ngNonBindable>\n@NgModule(&#123;\n  imports: [...],\n  declarations: [...],\n  providers: [&#123; provide: ClrCommonStrings, useClass: MyCommonStringsService &#125;]\n&#125;)\nexport class AppModule &#123;&#125;\n      </code></pre>\n\n      <p>2. Convert your string service class to an object. This is optional but makes for easier formatting. If you skip this step, you'll\n        have to create a new instance of your class to convert it to an object.\n      </p>\n\n<pre><code clr-code-highlight=\"language-ts\" ngNonBindable>\n// Old class format\nexport class MyCommonStringsService implements ClrCommonStrings &#123;\n  open = 'ghIt';\n  close = 'SoQmoH';\n&#125;\n\n// New object format\nexport const klingonLocale: ClrCommonStrings = &#123;\n  open: 'ghIt',\n  close: 'SoQmoH'\n&#125;\n</code></pre>\n\n      <p>3. You can now inject the <code class=\"clr-code\">ClrCommonStringsService</code> into your <code class=\"clr-code\">AppComponent</code> and pass in the localized strings, as shown above.</p>\n\n      <p>The previous implementation was broken because unless each application declared the provider themselves, none of the localization strings would remain\n        after a production build and tree shaking. The refactoring that was done keeps the defaults inside of Clarity so they do not get removed, and allows applications\n        the ability to still provide custom language strings for localization.\n      </p>\n    </div>\n  </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "IconButtonsDemo",
      "id": "component-IconButtonsDemo-2f6461352dd65466a37aa4714f57acbb",
      "file": "src/website/src/app/documentation/demos/buttons/icon-buttons.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-icon-buttons-demo",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./icon-buttons.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<button type=\"button\" class=\"btn btn-icon\" aria-label=\"home\">\n    <clr-icon shape=\"home\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-primary\" aria-label=\"settings\">\n    <clr-icon shape=\"cog\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-warning\" aria-label=\"warning\">\n    <clr-icon shape=\"warning-standard\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-danger\" aria-label=\"error\">\n    <clr-icon shape=\"error-standard\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-success\" aria-label=\"done\">\n    <clr-icon shape=\"check\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon\" disabled aria-label=\"home\">\n    <clr-icon shape=\"home\"></clr-icon>\n</button>\n`;\n\n@Component({\n  selector: 'clr-icon-buttons-demo',\n  templateUrl: './icon-buttons.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class IconButtonsDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div>\n    <button type=\"button\" class=\"btn btn-icon\" aria-label=\"home\">\n        <clr-icon shape=\"home\"></clr-icon>\n    </button>\n    <button type=\"button\" class=\"btn btn-icon btn-primary\" aria-label=\"settings\">\n        <clr-icon shape=\"cog\"></clr-icon>\n    </button>\n    <button type=\"button\" class=\"btn btn-icon btn-warning\" aria-label=\"warning\">\n        <clr-icon shape=\"warning-standard\"></clr-icon>\n    </button>\n    <button type=\"button\" class=\"btn btn-icon btn-danger\" aria-label=\"error\">\n        <clr-icon shape=\"error-standard\"></clr-icon>\n    </button>\n    <button type=\"button\" class=\"btn btn-icon btn-success\" aria-label=\"done\">\n        <clr-icon shape=\"check\"></clr-icon>\n    </button>\n    <button type=\"button\" class=\"btn btn-icon\" disabled aria-label=\"home\">\n        <clr-icon shape=\"home\"></clr-icon>\n    </button>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "IconDetailCardComponent",
      "id": "component-IconDetailCardComponent-aa46201461ed971f9d477807a8c6885e",
      "file": "src/website/src/app/icons/icons-sets/icon-detail-card/icon-detail-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "icon-detail-card",
      "styleUrls": ["./icon-detail-card.component.scss"],
      "styles": [],
      "templateUrl": ["./icon-detail-card.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "clrIcon",
          "line": 97,
          "type": "string"
        },
        {
          "name": "clrIconAliases",
          "line": 113,
          "type": "[]"
        },
        {
          "name": "clrIconSet",
          "line": 108,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_activeVariantClasses",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [112]
        },
        {
          "name": "_canAlert",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 43,
          "modifierKind": [112]
        },
        {
          "name": "_canBadge",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [112]
        },
        {
          "name": "_clrIcon",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [112]
        },
        {
          "name": "_clrIconAliases",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [112]
        },
        {
          "name": "_clrIconSet",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [112]
        },
        {
          "name": "_clrIconTemplate",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [112]
        },
        {
          "name": "_hasSolid",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [112]
        },
        {
          "name": "commonPath",
          "defaultValue": "COMMON_PATH",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "variants",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\n\ndeclare const ClarityIcons: any;\n\nimport { COMMON_PATH } from '../../icons.component';\n\n@Component({\n  selector: 'icon-detail-card',\n  templateUrl: './icon-detail-card.component.html',\n  styleUrls: ['./icon-detail-card.component.scss'],\n})\nexport class IconDetailCardComponent {\n  constructor() {}\n\n  commonPath = COMMON_PATH;\n\n  private _clrIcon: string;\n  private _clrIconSet: string;\n  private _clrIconTemplate: string;\n  private _clrIconAliases: string[];\n  private _activeVariantClasses: string;\n\n  get clrIconSet(): string {\n    return this._clrIconSet;\n  }\n\n  get activeVariantClasses(): string {\n    return this._activeVariantClasses;\n  }\n\n  set activeVariantClasses(value: string) {\n    this._activeVariantClasses = value;\n  }\n\n  variants: string[];\n\n  private _canAlert: boolean;\n  private _canBadge: boolean;\n  private _hasSolid: boolean;\n\n  get canAlert(): boolean {\n    return this._canAlert;\n  }\n\n  set canAlert(value: boolean) {\n    if (value) {\n      this.variants.push('has-alert');\n    }\n    this._canAlert = value;\n  }\n\n  get canBadge(): boolean {\n    return this._canBadge;\n  }\n\n  set canBadge(value: boolean) {\n    if (value) {\n      this.variants.push('has-badge');\n    }\n    this._canBadge = value;\n  }\n\n  get hasSolid(): boolean {\n    return this._hasSolid;\n  }\n\n  set hasSolid(value: boolean) {\n    if (value) {\n      this.variants.push('is-solid');\n\n      if (this.variants.indexOf('has-alert') > -1) {\n        this.variants.push('has-alert is-solid');\n      }\n\n      if (this.variants.indexOf('has-badge') > -1) {\n        this.variants.push('has-badge is-solid');\n      }\n    }\n    this._hasSolid = value;\n  }\n\n  get clrIcon(): string {\n    return this._clrIcon;\n  }\n\n  get clrIconAliases(): string[] {\n    return this._clrIconAliases || [];\n  }\n\n  @Input()\n  set clrIcon(value: string) {\n    this._activeVariantClasses = '';\n    this.variants = [];\n    this._clrIcon = value;\n    this._clrIconTemplate = ClarityIcons.get(this._clrIcon);\n    this.canAlert = this._clrIconTemplate.indexOf('can-alert') > -1;\n    this.canBadge = this._clrIconTemplate.indexOf('can-badge') > -1;\n    this.hasSolid = this._clrIconTemplate.indexOf('has-solid') > -1;\n  }\n\n  @Input()\n  set clrIconSet(setName: string) {\n    this._clrIconSet = setName;\n  }\n\n  @Input()\n  set clrIconAliases(aliases: string[]) {\n    this._clrIconAliases = aliases;\n  }\n\n  get downloadPath() {\n    const variant = {\n      '': '-line',\n      'has-alert': '-outline-alerted',\n      'has-badge': '-outline-badged',\n      'is-solid': '-solid',\n      'has-alert is-solid': '-solid-alerted',\n      'has-badge is-solid': '-solid-badged',\n    };\n\n    return `${environment.icons_base_url}?set=${this.clrIconSet.replace('-shapes', '')}&shape=${this.clrIcon}${\n      variant[this.activeVariantClasses]\n    }`;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "@import '../../../../styles/clarity-imports';\n\n.card {\n  margin-top: 0;\n  .card-title {\n    text-transform: lowercase;\n    margin-bottom: $clr_baselineRem_1;\n    height: 24px;\n  }\n\n  .card-link {\n    margin: 0;\n  }\n\n  .card-block {\n    padding: $clr_baselineRem_1;\n  }\n  .card-footer {\n    display: flex;\n    .download-svg-icon {\n      margin: 0 0 0 auto;\n    }\n  }\n}\n\npre,\nclr-code-snippet ::ng-deep pre {\n  background-color: $clr-color-neutral-50;\n  padding: 12px;\n}\n\n.aliases {\n  font-size: 12px;\n  color: hsl(0, 0%, 40%);\n}\n\n.icon-highlight-code {\n  margin-top: $clr_baselineRem_0_5;\n  color: $clr-color-danger-700;\n}\n\n.icon-variants {\n  margin-top: $clr_baselineRem_1;\n  display: flex;\n  flex-direction: row;\n  button.icon-variant {\n    flex: 0 0 auto;\n    width: 36px;\n    height: 36px;\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n\n    border: 1px dashed rgba($clr-color-neutral-700, 0);\n    background-color: transparent;\n    outline: none;\n\n    color: $clr-color-neutral-700;\n    cursor: pointer;\n\n    padding: 0;\n    margin-right: $clr_baselineRem_2px;\n\n    transition: all 0.2s ease-out;\n\n    &.active {\n      border: 1px dashed rgba($clr-color-neutral-700, 1);\n      border-radius: $clr-global-borderradius;\n    }\n\n    &:hover {\n      border: 1px dashed rgba($clr-color-neutral-700, 1);\n      border-radius: $clr-global-borderradius;\n    }\n\n    clr-icon {\n      align-self: center;\n      margin: auto;\n      width: 24px;\n      height: 24px;\n    }\n  }\n}\n",
          "styleUrl": "./icon-detail-card.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "accessors": {
        "clrIconSet": {
          "name": "clrIconSet",
          "setSignature": {
            "name": "clrIconSet",
            "type": "void",
            "args": [
              {
                "name": "setName",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 108,
            "jsdoctags": [
              {
                "name": "setName",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "clrIconSet",
            "type": "string",
            "returnType": "string",
            "line": 29
          }
        },
        "activeVariantClasses": {
          "name": "activeVariantClasses",
          "setSignature": {
            "name": "activeVariantClasses",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 37,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "activeVariantClasses",
            "type": "string",
            "returnType": "string",
            "line": 33
          }
        },
        "canAlert": {
          "name": "canAlert",
          "setSignature": {
            "name": "canAlert",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 51,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "canAlert",
            "type": "boolean",
            "returnType": "boolean",
            "line": 47
          }
        },
        "canBadge": {
          "name": "canBadge",
          "setSignature": {
            "name": "canBadge",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 62,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "canBadge",
            "type": "boolean",
            "returnType": "boolean",
            "line": 58
          }
        },
        "hasSolid": {
          "name": "hasSolid",
          "setSignature": {
            "name": "hasSolid",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 73,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "hasSolid",
            "type": "boolean",
            "returnType": "boolean",
            "line": 69
          }
        },
        "clrIcon": {
          "name": "clrIcon",
          "setSignature": {
            "name": "clrIcon",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 97,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "clrIcon",
            "type": "string",
            "returnType": "string",
            "line": 88
          }
        },
        "clrIconAliases": {
          "name": "clrIconAliases",
          "setSignature": {
            "name": "clrIconAliases",
            "type": "void",
            "args": [
              {
                "name": "aliases",
                "type": "[]"
              }
            ],
            "returnType": "void",
            "line": 113,
            "jsdoctags": [
              {
                "name": "aliases",
                "type": "[]",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "clrIconAliases",
            "type": "[]",
            "returnType": "string[]",
            "line": 92
          }
        },
        "downloadPath": {
          "name": "downloadPath",
          "getSignature": {
            "name": "downloadPath",
            "type": "",
            "returnType": "",
            "line": 117
          }
        }
      },
      "templateData":
        "<div class=\"card\">\n    <div class=\"card-block\">\n        <h4 class=\"card-title\">\n            {{clrIcon}}\n            <ng-container *ngIf=\"clrIconAliases.length>0\">\n                <span class=\"aliases\">Aliases: [{{clrIconAliases.toString()}}]</span>\n            </ng-container>\n        </h4>\n\n        <div [ngSwitch]=\"activeVariantClasses\">\n\n            <clr-code-snippet *ngSwitchCase=\"'is-solid'\" [clrCode]=\"'&#x3C;clr-icon shape=&#x22;'+clrIcon+'&#x22; class=&#x22;'+activeVariantClasses+'&#x22;&#x3E;&#x3C;/clr-icon&#x3E;'\"></clr-code-snippet>\n\n            <clr-code-snippet *ngSwitchCase=\"'has-alert'\" [clrCode]=\"'&#x3C;clr-icon shape=&#x22;'+clrIcon+'&#x22; class=&#x22;'+activeVariantClasses+'&#x22;&#x3E;&#x3C;/clr-icon&#x3E;'\"></clr-code-snippet>\n\n            <clr-code-snippet *ngSwitchCase=\"'has-badge'\" [clrCode]=\"'&#x3C;clr-icon shape=&#x22;'+clrIcon+'&#x22; class=&#x22;'+activeVariantClasses+'&#x22;&#x3E;&#x3C;/clr-icon&#x3E;'\"></clr-code-snippet>\n\n            <clr-code-snippet *ngSwitchCase=\"'has-badge is-solid'\" [clrCode]=\"'&#x3C;clr-icon shape=&#x22;'+clrIcon+'&#x22; class=&#x22;'+activeVariantClasses+'&#x22;&#x3E;&#x3C;/clr-icon&#x3E;'\"></clr-code-snippet>\n\n            <clr-code-snippet *ngSwitchCase=\"'has-alert is-solid'\" [clrCode]=\"'&#x3C;clr-icon shape=&#x22;'+clrIcon+'&#x22; class=&#x22;'+activeVariantClasses+'&#x22;&#x3E;&#x3C;/clr-icon&#x3E;'\"></clr-code-snippet>\n\n            <pre *ngSwitchDefault class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>clr-icon</span> <span class=\"token attr-name\">shape</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{clrIcon}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>clr-icon</span><span class=\"token punctuation\">&gt;</span></span></code></pre>\n        </div>\n\n        <div class=\"icon-variants\">\n            <button type=\"button\" class=\"icon-variant\" [class.active]=\"activeVariantClasses===''\" (click)=\"activeVariantClasses=''\">\n                <clr-icon [attr.shape]=\"clrIcon\" size=\"24\"></clr-icon>\n            </button>\n            <button type=\"button\" class=\"icon-variant\" *ngFor=\"let variant of variants\" [class.active]=\"activeVariantClasses===variant\"\n                (click)=\"activeVariantClasses = variant;\">\n                <clr-icon [attr.shape]=\"clrIcon\" [attr.class]=\"variant\" size=\"24\"></clr-icon>\n            </button>\n        </div>\n    </div>\n    <div class=\"card-footer\">\n        See more usage options in&nbsp;<a [routerLink]=\"['./how-to-use']\" class=\"card-link\">How To Use</a>\n        <a class=\"btn btn-sm download-svg-icon hidden-sm-down download-svg-icon\" [href]=\"downloadPath\" download>\n            <clr-icon shape=\"download\"></clr-icon>\n            SVG ICON\n        </a>\n    </div>\n</div>\n"
    },
    {
      "name": "IconLinksDemo",
      "id": "component-IconLinksDemo-a34eca363bfb9c46e3dfab3ae7cd7368",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/icons/icons.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-icon-links-vertical-nav-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./icons.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-vertical-nav>\n    <a clrVerticalNavLink routerLink=\"./normal\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"./electric\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n    <a clrVerticalNavLink routerLink=\"./poison\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"sad-face\"></clr-icon>\n        Poison\n    </a>\n    <a clrVerticalNavLink routerLink=\"./grass\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bug\"></clr-icon>\n        Grass\n    </a>\n    <a clrVerticalNavLink routerLink=\"./fighting\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"shield\"></clr-icon>\n        Fighting\n    </a>\n    <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"certificate\"></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`;\n\n@Component({\n  selector: 'clr-icon-links-vertical-nav-demo',\n  templateUrl: './icons.html',\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class IconLinksDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Icon Links</h4>\n\n<p>\n    Use the <code class=\"clr-code\">clrVerticalNavIcon</code> directive on the icon leading\n    the text in a navigation link.\n</p>\n\n<div class=\"clr-example\">\n    <div class=\"main-container\" style=\"height: 400px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav>\n                <a clrVerticalNavLink routerLink=\"./normal\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n                    Normal\n                </a>\n                <a clrVerticalNavLink routerLink=\"./electric\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n                    Electric\n                </a>\n                <a clrVerticalNavLink routerLink=\"./poison\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"sad-face\"></clr-icon>\n                    Poison\n                </a>\n                <a clrVerticalNavLink routerLink=\"./grass\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"bug\"></clr-icon>\n                    Grass\n                </a>\n                <a clrVerticalNavLink routerLink=\"./fighting\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"shield\"></clr-icon>\n                    Fighting\n                </a>\n                <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">\n                    <clr-icon clrVerticalNavIcon shape=\"certificate\"></clr-icon>\n                    Credit\n                </a>\n            </clr-vertical-nav>\n            <div class=\"content-area demo-allow-scroll\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "IconsA11yComponent",
      "id": "component-IconsA11yComponent-bfe99c85e88eca0f8cf550661b13bac4",
      "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "icons-a11y",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./icons-a11y.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "indicator",
          "defaultValue": "indicator",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "interactive",
          "defaultValue": "interactive",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "interactiveNoLabel",
          "defaultValue": "interactiveNoLabel",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "presentational",
          "defaultValue": "presentational",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst presentational = `<clr-icon shape=\"info-circle\"></clr-icon>`;\n\nconst interactive = `\n<button class=\"btn\">\n  <clr-icon shape=\"bars\"></clr-icon> Menu\n</button>`;\n\nconst interactiveNoLabel = `\n<button class=\"btn btn-icon\" aria-label=\"main menu\">\n  <clr-icon shape=\"bars\"></clr-icon>\n</button>\n`;\n\nconst indicator = `\n<p>\n  <clr-icon shape=\"exclamation-triangle\" title=\"Usage Warning\"></clr-icon>\n  CPU usage is at 99% use.\n</p>\n`;\n\n@Component({\n  selector: 'icons-a11y',\n  templateUrl: './icons-a11y.component.html',\n  // styleUrls: ['./icons-a11y.component.scss'],\n})\nexport class IconsA11yComponent {\n  presentational = presentational;\n  interactive = interactive;\n  interactiveNoLabel = interactiveNoLabel;\n  indicator = indicator;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<h2>Icon Accessibility</h2>\n<p>\n  Icons have different accessibility requirements dependent on the context they are being used in.\n</p>\n\n<h3>Presentational</h3>\n<p>\n  Icons by default are presentational only meaning they do not provide any context to screen readers\n  and will be purely cosmetic without additional markup.\n</p>\n\n<clr-icon shape=\"info-circle\" size=\"36\"></clr-icon>\n\n<clr-code-snippet [clrCode]=\"presentational\" clrLanguage=\"html\"></clr-code-snippet>\n\n<h3>Interactive</h3>\n<p>When icons are used in buttons or links they should be used in conjunction with descriptive text.</p>\n\n<button class=\"btn\">\n  <clr-icon shape=\"bars\"></clr-icon> Menu\n</button>\n\n<clr-code-snippet [clrCode]=\"interactive\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p>\n  If the icon in an interactive item does not have text then the parent interactive\n  item (typically a button or link) should have an appropriate <code class=\"clr-code\">aria-label</code>\n  describing the interaction.\n</p>\n\n<button class=\"btn btn-icon\" aria-label=\"main menu\">\n  <clr-icon shape=\"bars\"></clr-icon>\n</button>\n\n<clr-code-snippet [clrCode]=\"interactiveNoLabel\" clrLanguage=\"html\"></clr-code-snippet>\n\n<h3>Status/Indicator</h3>\n<p>\n  If an icon is used to show a status/indicator or part of a larger body of text\n  then the icon should have a title attribute so the icon can be properly\n  read by the screen reader.\n</p>\n\n<p>\n  <clr-icon shape=\"exclamation-triangle\" title=\"Usage Warning\" size=\"36\"></clr-icon>\n  CPU usage is at 99% use.\n</p>\n\n<clr-code-snippet [clrCode]=\"indicator\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "IconsApiComponent",
      "id": "component-IconsApiComponent-2938c64ee4221982d000d633d873c5be",
      "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "icons-api",
      "styleUrls": ["./icons-api.component.scss"],
      "styles": [],
      "templateUrl": ["./icons-api.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "addCustomIcon",
          "defaultValue": "ADD_CUSTOM_ICON",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "addCustomIconResult",
          "defaultValue": "ADD_CUSTOM_ICON_RESULT",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "aliasIcon",
          "defaultValue": "ALIAS_ICON",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "aliasIconResult",
          "defaultValue": "ALIAS_ICON_RESULT",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "apiImports",
          "defaultValue": "API_IMPORTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "checkIconTemplate",
          "defaultValue": "CHECK_ICON_TEMPLATE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst API_IMPORTS = `\nimport { ClarityIcons } from '@clr/icons';\n`;\n\nconst CHECK_ICON_TEMPLATE = `\n<svg xmlns:xlink=\"https://www.w3.org/1999/xlink\" xmlns=\"https://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 36 36\" version=\"1.1\">\n    <title>check</title>\n    <path d=\"M13.72,27.69,3.29,17.27a1,1,0,0,1,1.41-1.41l9,9L31.29,7.29a1,1,0,0,1,1.41,1.41Z\" class=\"clr-i-outline clr-i-outline-path-1\"></path>\n</svg>\n`;\n\nconst ADD_CUSTOM_ICON = `ClarityIcons.add({\"my-custom-icon\": \"<svg ... >[your SVG code goes here]</svg>\"});`;\nconst ADD_CUSTOM_ICON_RESULT = `<clr-icon shape=\"my-custom-icon\" size=\"24\"></clr-icon>`;\n\nconst ALIAS_ICON = `ClarityIcons.alias({\"bell\": [\"alarm\", \"oh-noehz\"]});`;\nconst ALIAS_ICON_RESULT = `\n<clr-icon shape=\"bell\"></clr-icon>\n<clr-icon shape=\"alarm\"></clr-icon>\n<clr-icon shape=\"oh-noehz\"></clr-icon>`;\n\n@Component({\n  selector: 'icons-api',\n  templateUrl: './icons-api.component.html',\n  styleUrls: ['./icons-api.component.scss'],\n})\nexport class IconsApiComponent {\n  apiImports = API_IMPORTS;\n  checkIconTemplate = CHECK_ICON_TEMPLATE;\n  addCustomIcon = ADD_CUSTOM_ICON;\n  addCustomIconResult = ADD_CUSTOM_ICON_RESULT;\n  aliasIcon = ALIAS_ICON;\n  aliasIconResult = ALIAS_ICON_RESULT;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '../icons-get-started/icons-get-started.component';\n",
          "styleUrl": "./icons-api.component.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<h2>Clarity Icons Api</h2>\n\n\n<p>\n    The Clarity Icons library features a namespaced core of functionality that is publicly accessible from the browser's\n    <code class=\"clr-code\">window</code> object. This \"API\" is available at\n    <code class=\"clr-code\">ClarityIcons</code> and provides three useful pieces of functionality such as retrieving icons, adding new icons, and creating aliases for icons.\n    It's worth noting that you can also access the API from the <code class=\"clr-code\">\"@clr/icons\"</code> module in Typescript. For\n    example:\n    <clr-code-snippet [clrCode]=\"apiImports\" clrLanguage=\"typescript\"></clr-code-snippet>\n    If you load <code class=\"clr-code\">\"@clr/icons\"</code> like this make sure that you are not also loading it via a script tag or in some other manner.\n</p>\n\n<h3 class=\"paragraph-header\">Retrieve icons</h3>\n<p>\n    You can retrieve and check the currently available icons in Clarity Icons by calling the <code class=\"clr-code\">ClarityIcons.get()</code>\n    method.\n    The method will return the list of icons, each in a form of key:value. The key being the icon name and the value its\n    template, you can\n    retrieve the specific icon template by passing its name in the method. For example: <code class=\"clr-code\">ClarityIcons.get(\"check\")</code>,\n    which will return the SVG template of the \"check\" icon:\n\n    <!--<clr-code-snippet [clrCode]=\"checkIconTemplate\"></clr-code-snippet>-->\n</p>\n\n<div class=\"example-btn-wrapper\">\n    <a href=\"https://embed.plnkr.co/RA7fzKw9KcWqJS3JDgMz/\" target=\"_blank\" class=\"btn btn-primary btn-sm\">View example</a>\n</div>\n\n<h3 class=\"paragraph-header\">Naming icons</h3>\n<ul>\n    <li>Must be non-empty string</li>\n    <li>Must not contain any whitespace characters, for example <code class=\"clr-code\">\"My Custom Icon\"</code> is not valid</li>\n    <li>\n        Names are case-insensitive meaning that\n        <code class=\"clr-code\">\"myCustomIcon\"</code> and <code class=\"clr-code\">\"mycustomicon\"</code>\n        will be the same icon\n    </li>\n</ul>\n\n\n\n<h3 class=\"paragraph-header\">Add custom icons to ClarityIcons</h3>\n<p>\n    The ClarityIcons API enables you to add your own icons to the publicly available ClarityIcons\n    architecture. Use the following call to add your icon to our library in your application:\n    <clr-code-snippet [clrCode]=\"addCustomIcon\" clrLanguage=\"typescript\"></clr-code-snippet>\n    This API method will assign your SVG markup to the named shape it is sent. The icon can then be used in your application\n    like any other icon in the Clarity Icons library.\n    <clr-code-snippet [clrCode]=\"addCustomIconResult\"></clr-code-snippet>\n</p>\n\n<div class=\"example-btn-wrapper\">\n    <a href=\"https://embed.plnkr.co/MiRlaQDHIIJd3e3Hgxyj/\" target=\"_blank\" class=\"btn btn-primary btn-sm\">View example</a>\n</div>\n\n<h3 class=\"paragraph-header\">Create aliases for icons</h3>\n<p>\n    The Clarity Icons API can create aliases for the icons in your application with a single API call:\n    <clr-code-snippet [clrCode]=\"aliasIcon\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n\n    The above method call will assign \"alarm\" and \"oh-noehz\" names to the existing \"bell\" icon shape. Now you\n    can use the \"bell\" icon with any of the new names you have assigned it.\n\n    <clr-code-snippet [clrCode]=\"aliasIconResult\"></clr-code-snippet>\n</p>\n\n<div class=\"example-btn-wrapper\">\n    <a href=\"https://embed.plnkr.co/7lsRWtqzta0FApicikel/\" target=\"_blank\" class=\"btn btn-primary btn-sm\">View example</a>\n</div>\n"
    },
    {
      "name": "IconsComponent",
      "id": "component-IconsComponent-5a2181a2215510238533c10afe238ff7",
      "file": "src/website/src/app/icons/icons.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ActiveFragmentService"
        },
        {
          "name": "IconsViewService"
        }
      ],
      "selector": "icons",
      "styleUrls": ["icons.component.scss"],
      "styles": [],
      "templateUrl": ["icons.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_iconDecoration",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 166,
          "modifierKind": [112]
        },
        {
          "name": "_iconSolidness",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 189,
          "modifierKind": [112]
        },
        {
          "name": "_isSearchbarSticky",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 100,
          "modifierKind": [112]
        },
        {
          "name": "_scrollEvent",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 68,
          "modifierKind": [112]
        },
        {
          "name": "_subscriptions",
          "defaultValue": "[]",
          "type": "Subscription[]",
          "optional": false,
          "description": "",
          "line": 70,
          "modifierKind": [112]
        },
        {
          "name": "allSetsLink",
          "defaultValue": "environment.icons_url",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "blinkIconsFromEssentialSet",
          "defaultValue":
            "blinkEssentialShapes.filter(shape => {\n    const hideIcons: string[] = [];\n\n    return hideIcons.indexOf(shape) === -1;\n  })",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "blinkIconsRandomly",
          "defaultValue": "[]",
          "type": "number[]",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "isOnIconSetsRoute",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "isSidenavSticky",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "previewClasses",
          "defaultValue": "{\n    'is-solid': false,\n    'has-alert': false,\n    'has-badge': false,\n  }",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 160
        },
        {
          "name": "searchValue",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 106
        },
        {
          "name": "thresholdOffsetTop",
          "defaultValue": "240",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 54
        }
      ],
      "methodsClass": [
        {
          "name": "getSearchValue",
          "args": [
            {
              "name": "$event",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 113,
          "jsdoctags": [
            {
              "name": "$event",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "hasPastThreshold",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 156
        },
        {
          "name": "hasResponsivenessTriggered",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 152
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 133
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 145
        },
        {
          "name": "resetSearchBar",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 108
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, AfterViewInit, OnDestroy, Renderer2, ElementRef, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { ActiveFragmentService } from './utils/active-fragment.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { EssentialShapes } from '@clr/icons/shapes/essential-shapes';\nimport { style, state, animate, transition, trigger } from '@angular/animations';\nimport { IconsViewService } from './icons-view.service';\nimport { filter } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\nconst essentialShapesNames = Object.keys(EssentialShapes);\nconst blinkEssentialShapes = essentialShapesNames;\n\nexport const COMMON_PATH = `${environment.icons_base_url}/`;\n\n@Component({\n  selector: 'icons',\n  templateUrl: 'icons.component.html',\n  styleUrls: ['icons.component.scss'],\n  providers: [ActiveFragmentService, IconsViewService],\n  animations: [\n    trigger('searchBarStickAnimation', [\n      state(\n        'void',\n        style({\n          backgroundColor: '#fafafa',\n          boxShadow: '0 0 3px 0 rgba(0,0,0,0)',\n        })\n      ),\n      state(\n        '*',\n        style({\n          backgroundColor: '#fff',\n          boxShadow: '0 0 3px 0 rgba(0,0,0,0.3)',\n        })\n      ),\n      transition('void => *', animate('300ms ease-in')),\n    ]),\n  ],\n})\nexport class IconsComponent implements AfterViewInit, OnDestroy {\n  allSetsLink = environment.icons_url;\n\n  // Check whether the current route is on ./icons\n  isOnIconSetsRoute = false;\n\n  // Scroll this much distance to make the searchbar sticky.\n  thresholdOffsetTop = 240;\n\n  isSidenavSticky = false;\n\n  // Blinking icons in the header background\n  blinkIconsFromEssentialSet: string[] = blinkEssentialShapes.filter(shape => {\n    const hideIcons: string[] = [];\n\n    return hideIcons.indexOf(shape) === -1;\n  });\n\n  // Will contain two numbers that are randomly generated every 3000ms.\n  blinkIconsRandomly: number[] = [];\n\n  private _scrollEvent: any;\n\n  private _subscriptions: Subscription[] = [];\n\n  constructor(\n    private _el: ElementRef,\n    private _router: Router,\n    private _iconsViewService: IconsViewService,\n    private _renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this._subscriptions.push(\n      this._router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        this.isOnIconSetsRoute = _router.isActive('/icons', true);\n\n        // reset search input value when route changes to another pages\n        if (!this.isOnIconSetsRoute) {\n          this.resetSearchBar();\n        }\n      })\n    );\n\n    if (isPlatformBrowser(this.platformId)) {\n      setInterval(() => {\n        this.blinkIconsRandomly = [\n          Math.floor(Math.random() * this.blinkIconsFromEssentialSet.length),\n          Math.floor(Math.random() * this.blinkIconsFromEssentialSet.length),\n        ];\n      }, 3000);\n    }\n  }\n\n  private _isSearchbarSticky = false;\n\n  get isSearchbarSticky(): boolean {\n    return this._isSearchbarSticky;\n  }\n\n  searchValue: string = '';\n\n  resetSearchBar() {\n    this.searchValue = '';\n    this._iconsViewService.searchValue.next(this.searchValue);\n  }\n\n  getSearchValue($event: any) {\n    this._iconsViewService.searchValue.next($event.target.value);\n    // this.searchValue = $event.target.value;\n  }\n\n  set isSearchbarSticky(value: boolean) {\n    // Every time the searchbar changes its state of stickiness, it loses its previous focus state so we save\n    // the focus state before searchbar changes its state of stickiness so that if the input was focused,\n    // we set focus to the search input.\n\n    this._isSearchbarSticky = value;\n\n    setTimeout(() => {\n      // search input exists only on icons-set route\n      if (this.isOnIconSetsRoute && this.searchValue.length > 0) {\n        this._el.nativeElement.querySelector('#search-icons-sticky').focus();\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this._scrollEvent = this._renderer.listen(window, 'scroll', () => {\n        this.isSidenavSticky = !this.hasResponsivenessTriggered() && this.hasPastThreshold() && this.isOnIconSetsRoute;\n\n        if (this.isSearchbarSticky !== this.hasPastThreshold()) {\n          this.isSearchbarSticky = this.hasPastThreshold();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._scrollEvent) {\n      this._scrollEvent();\n    }\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  hasResponsivenessTriggered() {\n    return document.body.getBoundingClientRect().width < 768;\n  }\n\n  hasPastThreshold() {\n    return window.pageYOffset >= this.thresholdOffsetTop;\n  }\n\n  previewClasses: any = {\n    'is-solid': false,\n    'has-alert': false,\n    'has-badge': false,\n  };\n\n  private _iconDecoration: any;\n\n  get iconDecoration(): any {\n    return this._iconDecoration;\n  }\n\n  set iconDecoration(value: any) {\n    this._iconDecoration = value;\n\n    if (this._iconDecoration === 'alert') {\n      this.previewClasses['has-badge'] = false;\n      this.previewClasses['has-alert'] = true;\n    } else if (this._iconDecoration === 'badge') {\n      this.previewClasses['has-alert'] = false;\n      this.previewClasses['has-badge'] = true;\n    } else {\n      this.previewClasses['has-alert'] = false;\n      this.previewClasses['has-badge'] = false;\n    }\n\n    this._iconsViewService.previewClasses.next(this.previewClasses);\n  }\n\n  private _iconSolidness: boolean = false;\n\n  get iconSolidness(): boolean {\n    return this._iconSolidness;\n  }\n\n  set iconSolidness(value: boolean) {\n    this._iconSolidness = value;\n    this.previewClasses['is-solid'] = this._iconSolidness;\n    this._iconsViewService.previewClasses.next(this.previewClasses);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../styles/clarity-imports';\n\n$clr-icons-hero-height: $clr_baselineRem_10;\n$clr-icons-content-top: calc(#{$clr-icons-hero-height} + #{$clr-header-height});\n$clr-icons-content-width: $clr_baselineRem_1080px;\n$clr-sidenav-width: $clr_baselineRem_9;\n$clr-searchbar-nonsticky-margintop: 0;\n$clr-searchbar-container-height: $clr_baselineRem_5 + $clr-searchbar-nonsticky-margintop;\n$clr-searchbar-container-height-sm: $clr_baselineRem_4_5;\n\n.icons-header {\n  position: fixed;\n  top: $clr-header-height;\n  left: 0;\n  width: 100%;\n  height: $clr-icons-hero-height;\n  background: $clr-color-secondary-action-800;\n\n  .icons-background {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: center;\n\n    .icon-bg-wrapper {\n      width: $clr_baselineRem_3_33;\n      height: $clr_baselineRem_3_33;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: rgba($clr-color-neutral-0, 0.2);\n      transition: all 0.3s ease-out;\n\n      clr-icon {\n        transform: translate3d(0, 0, 0) rotate(-30deg);\n      }\n\n      &.glow {\n        color: rgba($clr-color-neutral-0, 0.6);\n      }\n    }\n  }\n\n  .icons-header-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 0 $clr_baselineRem_1_5;\n\n    h1 {\n      color: $clr-color-neutral-0;\n      text-align: center;\n      margin: 0 0 $clr_baselineRem_0_5 0;\n      font-weight: 400;\n    }\n\n    .icons-header-message {\n      font-size: $clr_baselineRem_0_667;\n      color: $clr-color-neutral-0;\n      text-align: center;\n      font-weight: 100;\n      margin: $clr_baselineRem_0_5 0 $clr_baselineRem_1 0;\n    }\n  }\n}\n\n.icons-content {\n  position: absolute;\n  top: $clr-icons-content-top;\n  left: 0;\n  background-color: $clr-color-neutral-50;\n  min-height: calc(100vh - #{$clr-icons-content-top});\n  width: 100%;\n  text-align: center;\n\n  .content-container {\n    max-width: $clr-icons-content-width;\n    margin: 0 auto;\n    text-align: left;\n  }\n}\n\n.searchbar-container {\n  width: 100%;\n  height: $clr-searchbar-container-height;\n  margin: $clr-searchbar-nonsticky-margintop auto 0;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 0 $clr_baselineRem_5px 0 rgba($clr-color-neutral-1000, 0);\n  display: flex;\n  transform: translate3d(0, 0, 0);\n\n  &.sticky {\n    position: fixed;\n    top: $clr-header-height;\n    margin: 0 auto;\n    z-index: map-get($clr-layers, sidepanel) - 1;\n  }\n\n  .icons-search-wrapper {\n    width: calc(100% - #{$clr-sidenav-width});\n    max-width: calc(#{$clr-icons-content-width} - #{$clr-sidenav-width});\n    position: relative;\n    flex: 0 0 auto;\n    padding: $clr_baselineRem_1 $clr_baselineRem_1_5;\n    margin-left: $clr-sidenav-width;\n    text-align: left;\n  }\n\n  .searchbar-label {\n    position: relative;\n    display: block;\n    width: 100%;\n    height: 100%;\n\n    clr-icon[shape='search'] {\n      position: absolute;\n      left: $clr_baselineRem_0_5;\n      top: $clr_baselineRem_0_5;\n      color: $clr-color-action-600;\n    }\n\n    button.close {\n      position: absolute;\n      right: $clr_baselineRem_0_5;\n      top: $clr_baselineRem_0_5;\n      display: none;\n\n      &.active {\n        display: block;\n      }\n    }\n\n    input.searchbar-input {\n      width: 100%;\n      padding: $clr_baselineRem_1 $clr_baselineRem_2;\n      height: $clr_baselineRem_2;\n      margin-bottom: $clr_baselineRem_0_75;\n    }\n  }\n\n  .icon-preview-settings {\n    clr-toggle-wrapper,\n    clr-radio-container {\n      display: inline-block;\n      margin-top: 0;\n    }\n  }\n}\n\n.icons-sidenav {\n  border: none;\n  padding: 0;\n  text-align: left;\n  width: $clr-sidenav-width;\n\n  .nav-group {\n    label {\n      text-transform: uppercase;\n      font-weight: normal;\n      font-size: $clr_baselineRem_0_5;\n      padding: 0 0 $clr_baselineRem_0_25 $clr_baselineRem_0_25;\n    }\n\n    .nav-list {\n      padding: 0;\n\n      .nav-link {\n        padding: $clr_baselineRem_0_125 $clr_baselineRem_0_25;\n        border-radius: $clr-global-borderradius;\n      }\n    }\n  }\n\n  .sidenav-content {\n    padding: $clr_baselineRem_1_5 0 0 $clr_baselineRem_1;\n\n    &.sticky {\n      position: fixed;\n      top: $clr-header-height + $clr-searchbar-container-height;\n      max-height: calc(100vh - #{$clr_baselineRem_2_5});\n      width: inherit;\n    }\n\n    &.on-icon-sets {\n      padding: $clr_baselineRem_0_5 0 0 $clr_baselineRem_1;\n    }\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .searchbar-container {\n    height: $clr-searchbar-container-height-sm;\n\n    .icons-search-wrapper {\n      width: 100%;\n      margin-left: 0;\n    }\n\n    .icon-preview-settings {\n      display: none;\n    }\n  }\n  .icons-header {\n    .icons-header-wrapper {\n      padding: 0 $clr_baselineRem_0_5;\n    }\n  }\n}\n",
          "styleUrl": "icons.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "_el",
            "type": "ElementRef"
          },
          {
            "name": "_router",
            "type": "Router"
          },
          {
            "name": "_iconsViewService",
            "type": "IconsViewService"
          },
          {
            "name": "_renderer",
            "type": "Renderer2"
          },
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 70,
        "jsdoctags": [
          {
            "name": "_el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_iconsViewService",
            "type": "IconsViewService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_renderer",
            "type": "Renderer2",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "OnDestroy"],
      "accessors": {
        "isSearchbarSticky": {
          "name": "isSearchbarSticky",
          "setSignature": {
            "name": "isSearchbarSticky",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 118,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "isSearchbarSticky",
            "type": "boolean",
            "returnType": "boolean",
            "line": 102
          }
        },
        "iconDecoration": {
          "name": "iconDecoration",
          "setSignature": {
            "name": "iconDecoration",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "any"
              }
            ],
            "returnType": "void",
            "line": 172,
            "jsdoctags": [
              {
                "name": "value",
                "type": "any",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "iconDecoration",
            "type": "any",
            "returnType": "any",
            "line": 168
          }
        },
        "iconSolidness": {
          "name": "iconSolidness",
          "setSignature": {
            "name": "iconSolidness",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 195,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "iconSolidness",
            "type": "boolean",
            "returnType": "boolean",
            "line": 191
          }
        }
      },
      "templateData":
        "<ng-template #searchBarContent>\n  <label for=\"search-icons-sticky\" class=\"searchbar-label\">\n    <clr-icon shape=\"search\" size=\"24\"></clr-icon>\n    <button aria-label=\"Close\" class=\"close\" type=\"button\" (click)=\"resetSearchBar()\" [class.active]=\"searchValue\">\n      <clr-icon shape=\"close\" size=\"24\"></clr-icon>\n    </button>\n    <input\n      id=\"search-icons-sticky\"\n      [(ngModel)]=\"searchValue\"\n      placeholder=\"Search for Clarity Icons...\"\n      type=\"text\"\n      class=\"searchbar-input clr-input\"\n      (input)=\"getSearchValue($event)\"\n    />\n  </label>\n\n  <div class=\"icon-preview-settings\">\n    Preview:\n    <clr-toggle-wrapper>\n      <input clrToggle type=\"checkbox\" [(ngModel)]=\"iconSolidness\" />\n      <label>Solid</label>\n    </clr-toggle-wrapper>\n\n    Variations:\n    <clr-radio-container clrInline>\n      <clr-radio-wrapper>\n        <input type=\"radio\" clrRadio name=\"notificationType\" [(ngModel)]=\"iconDecoration\" checked />\n        <label>none</label>\n      </clr-radio-wrapper>\n      <clr-radio-wrapper>\n        <input type=\"radio\" clrRadio [value]=\"'badge'\" name=\"notificationType\" [(ngModel)]=\"iconDecoration\" />\n        <label>badge</label>\n      </clr-radio-wrapper>\n      <clr-radio-wrapper>\n        <input type=\"radio\" clrRadio [value]=\"'alert'\" name=\"notificationType\" [(ngModel)]=\"iconDecoration\" />\n        <label>alert</label>\n      </clr-radio-wrapper>\n    </clr-radio-container>\n  </div>\n</ng-template>\n\n<section class=\"icons-header\">\n  <div class=\"icons-background\">\n    <div\n      class=\"icon-bg-wrapper\"\n      [class.glow]=\"blinkIconsRandomly.indexOf(i) >= 0\"\n      *ngFor=\"let shape of blinkIconsFromEssentialSet; let i = index\"\n    >\n      <clr-icon [attr.shape]=\"shape\" size=\"24\"></clr-icon>\n    </div>\n  </div>\n\n  <div class=\"icons-header-wrapper\">\n    <h1>Clarity Icons</h1>\n    <p class=\"icons-header-message\">\n      Over 200 beautiful and easy to use SVG icons, flexible with variations to meet&nbsp;your&nbsp;needs\n    </p>\n    <div *ngIf=\"isOnIconSetsRoute\">\n      <a class=\"btn btn-primary\" routerLink=\"./get-started\">GET STARTED</a>\n      <a class=\"btn btn-primary hidden-sm-down\" [href]=\"allSetsLink\">DOWNLOAD ALL SVG SETS</a>\n    </div>\n    <div *ngIf=\"!isOnIconSetsRoute\">\n      <a class=\"btn btn-primary\" routerLink=\"./get-started\">GET STARTED</a>\n      <a class=\"btn btn-primary\" routerLink=\"./\">SEE ICON SETS</a>\n    </div>\n  </div>\n</section>\n\n<div *ngIf=\"isOnIconSetsRoute && isSearchbarSticky\" [@searchBarStickAnimation]=\"isSearchbarSticky\" class=\"searchbar-container sticky\">\n  <div class=\"icons-search-wrapper\">\n    <ng-container *ngTemplateOutlet=\"searchBarContent\"></ng-container>\n  </div>\n</div>\n\n<section class=\"icons-content\">\n  <div class=\"searchbar-container\" *ngIf=\"isOnIconSetsRoute\">\n    <div class=\"icons-search-wrapper\" *ngIf=\"!isSearchbarSticky\">\n      <ng-container *ngTemplateOutlet=\"searchBarContent\"></ng-container>\n    </div>\n  </div>\n\n  <div class=\"content-container\">\n    <nav class=\"sidenav icons-sidenav\" [clr-nav-level]=\"2\">\n      <section class=\"sidenav-content\" [class.on-icon-sets]=\"isOnIconSetsRoute\" [class.sticky]=\"isSidenavSticky\">\n        <section class=\"nav-group\">\n          <label>Overview</label>\n          <nav class=\"nav-list\">\n            <a routerLinkActive=\"active\" routerLink=\"get-started\" class=\"nav-link\">Get Started</a>\n            <a routerLinkActive=\"active\" routerLink=\"how-to-use\" class=\"nav-link\">How To Use</a>\n            <a routerLinkActive=\"active\" routerLink=\"accessibility\" class=\"nav-link\">Accessibility</a>\n            <a routerLinkActive=\"active\" routerLink=\"api\" class=\"nav-link\">API</a>\n          </nav>\n        </section>\n\n        <section class=\"nav-group\">\n          <label>Icon Sets</label>\n          <nav class=\"nav-list\">\n            <a routerLink=\"./\" fragment=\"core-shapes\" class=\"nav-link\">Core</a>\n            <a routerLink=\"./\" fragment=\"commerce-shapes\" class=\"nav-link\">Commerce</a>\n            <a routerLink=\"./\" fragment=\"essential-shapes\" class=\"nav-link\">Essential</a>\n            <a routerLink=\"./\" fragment=\"media-shapes\" class=\"nav-link\">Media</a>\n            <a routerLink=\"./\" fragment=\"social-shapes\" class=\"nav-link\">Social</a>\n            <a routerLink=\"./\" fragment=\"travel-shapes\" class=\"nav-link\">Travel</a>\n            <a routerLink=\"./\" fragment=\"chart-shapes\" class=\"nav-link\">Chart</a>\n            <a routerLink=\"./\" fragment=\"text-edit-shapes\" class=\"nav-link\">Text Edit</a>\n            <a routerLink=\"./\" fragment=\"technology-shapes\" class=\"nav-link\">Technology</a>\n          </nav>\n        </section>\n      </section>\n    </nav>\n\n    <div class=\"content-area\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</section>\n"
    },
    {
      "name": "IconsGetStartedComponent",
      "id": "component-IconsGetStartedComponent-61c17526ba256c72e709706e3b40355f",
      "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "icons-get-started",
      "styleUrls": ["./icons-get-started.component.scss"],
      "styles": [],
      "templateUrl": ["./icons-get-started.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "iconsImportsAllExample",
          "defaultValue": "ICONS_IMPORTS_ALL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55,
          "modifierKind": [114]
        },
        {
          "name": "iconsImportsSomeExample",
          "defaultValue": "ICONS_IMPORTS_SOME",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [114]
        },
        {
          "name": "iconsImportsTSAllExample",
          "defaultValue": "ICONS_IMPORTS_TS_ALL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [114]
        },
        {
          "name": "iconsImportsTSCoreExample",
          "defaultValue": "ICONS_IMPORTS_TS_CORE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57,
          "modifierKind": [114]
        },
        {
          "name": "iconsImportsTSSomeExample",
          "defaultValue": "ICONS_IMPORTS_TS_SOME",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst ICONS_IMPORTS_ALL = `\n<!--CLARITY ICONS STYLE-->\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n\n<!--CLARITY ICONS DEPENDENCY: CUSTOM ELEMENTS POLYFILL-->\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n\n<!--CLARITY ICONS API & ALL ICON SETS-->\n<script src=\"path/to/node_modules/@clr/icons/clr-icons.min.js\"></script>\n`;\n\nconst ICONS_IMPORTS_SOME = `\n<!--CLARITY ICONS STYLE-->\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n\n<!--CLARITY ICONS DEPENDENCY: CUSTOM ELEMENTS POLYFILL-->\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n\n<!--CLARITY ICONS API & CORE SHAPES SET-->\n<script src=\"path/to/node_modules/@clr/icons/clr-icons-lite.min.js\"></script>\n\n<!--ICON SETS-->\n<script src=\"path/to/node_modules/@clr/icons/shapes/social-shapes.min.js\"></script>\n<script src=\"path/to/node_modules/@clr/icons/shapes/travel-shapes.min.js\"></script>\n`;\n\nconst ICONS_IMPORTS_TS_CORE = `\nimport '@clr/icons';\n`;\n\nconst ICONS_IMPORTS_TS_SOME = `\nimport '@clr/icons';\nimport '@clr/icons/shapes/essential-shapes';\nimport '@clr/icons/shapes/technology-shapes';\n`;\n\nconst ICONS_IMPORTS_TS_ALL = `\nimport '@clr/icons';\nimport '@clr/icons/shapes/all-shapes';\n`;\n\n@Component({\n  selector: 'icons-get-started',\n  templateUrl: './icons-get-started.component.html',\n  styleUrls: ['./icons-get-started.component.scss'],\n})\nexport class IconsGetStartedComponent {\n  public iconsImportsAllExample = ICONS_IMPORTS_ALL;\n  public iconsImportsSomeExample = ICONS_IMPORTS_SOME;\n  public iconsImportsTSCoreExample = ICONS_IMPORTS_TS_CORE;\n  public iconsImportsTSSomeExample = ICONS_IMPORTS_TS_SOME;\n  public iconsImportsTSAllExample = ICONS_IMPORTS_TS_ALL;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../styles/clarity-imports';\n\np.lead-header {\n  font-size: 1.2em;\n  font-weight: 200;\n  line-height: 1.8em;\n}\n\n.paragraph-header {\n  font-weight: 300;\n  font-size: 1.5em;\n  margin: $clr_baselineRem_1_33 0 $clr_baselineRem_0_667;\n}\n\nclr-code-snippet ::ng-deep pre {\n  margin: $clr_baselineRem_1 0;\n  padding: $clr_baselineRem_0_75;\n}\n\nclr-code-snippet ::ng-deep pre code {\n  line-height: 1.8em;\n}\n\n.example-btn-wrapper {\n  margin: $clr_baselineRem_0_5 0 0;\n}\n",
          "styleUrl": "./icons-get-started.component.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<h2>Getting started with Clarity Icons</h2>\n\n<p class=\"lead-header\">\n    The Clarity Icons library presents pixel-perfect, scalable SVG-based icons. This new icon system gives you complete control\n    over icon color, orientation, and size. Additionally, you can access and customize any SVG graphic elements inside the\n    icon through standard CSS.\n</p>\n\n<h3 class=\"paragraph-header\">Install and load Clarity Icons:</h3>\n\n<p>\n    Install the Clarity Icons package through npm:\n    <clr-code-snippet [clrCode]=\"'npm install @clr/icons --save'\" [clrDisablePrism]=\"true\"></clr-code-snippet>\n</p>\n\n<p>Install the polyfill for Custom Elements, on which Clarity Icons is dependent:\n    <clr-code-snippet [clrCode]=\"'npm install @webcomponents/custom-elements@1.0.0 --save'\" [clrDisablePrism]=\"true\"></clr-code-snippet>\n</p>\n\n\n<p>\n    Load the library in your app by including\n    <code class=\"clr-code\">clr-icons.min.css</code> and\n    <code class=\"clr-code\">clr-icons.min.js</code>. Also, make sure to include\n    <code class=\"clr-code\">custom-elements.min.js</code>, the Custom Elements polyfill before\n    <code class=\"clr-code\">clr-icons.min.js</code>:\n    <clr-code-snippet [clrCode]=\"iconsImportsAllExample\"></clr-code-snippet>\n\n    That's it! As\n    <code class=\"clr-code\">clr-icons.min.js</code> loads not only the Clarity Icons Api, but also all icons sets, you will have access to more than 100 different icons\n    that have variants, orientations, and colors out of the box. You can now render any icon with\n    <code class=\"clr-code\">clr-icon</code> tag and specify your desired shape in its\n    <code class=\"clr-code\">shape</code> attribute.\n</p>\n\n<div class=\"example-btn-wrapper\">\n    <a href=\"https://embed.plnkr.co/lxi4NBhTf42rSDZ65KTr/\" target=\"_blank\" class=\"btn btn-primary btn-sm\">View example\n    </a>\n</div>\n\n\n<h3 class=\"paragraph-header\">Load icon sets individually:</h3>\n<p>\n    If you want to use icons from few individual sets, you don't have to load all icons with\n    <code class=\"clr-code\">clr-icons.min.js</code>. Instead, load the lighter version of Clarity Icons library with\n    <code class=\"clr-code\">clr-icons-lite.min.js</code>, which loads only Clarity Icons Api and Core Shapes set. For example, if you want to use icons from only Social Shapes\n    and Travel Shapes, you would load Clarity Icons this way:\n    <clr-code-snippet [clrCode]=\"iconsImportsSomeExample\"></clr-code-snippet>\n</p>\n\n<div class=\"example-btn-wrapper\">\n    <a href=\"https://embed.plnkr.co/d9YYiHRxxi6igd20YsgF/\" target=\"_blank\" class=\"btn btn-primary btn-sm\">View example\n    </a>\n</div>\n\n<h3 class=\"paragraph-header\">Load Clarity Icons API and icon sets in Typescript:</h3>\n\n<p>\n    It's easy to load Clarity Icons API and icon sets in Typescript.\n</p>\n\n<clr-alert [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            If you load the Clarity Icons in Typescript, make sure you are not loading it through the script tag again. Otherwise you\n            will have two different instances of Clarity Icons that override one another.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n\n<p>\n    For example:\n    <clr-code-snippet [clrCode]=\"iconsImportsTSCoreExample\" clrLanguage=\"typescript\"></clr-code-snippet>\n    The example above is loading only Clarity Icons Api and Core Shapes set. You can load more icon sets on top of it as needed:\n    <clr-code-snippet [clrCode]=\"iconsImportsTSSomeExample\" clrLanguage=\"typescript\"></clr-code-snippet>\n    And lastly, if you need to use shapes from all sets, you don't need to import and load every single icon set, because you\n    have a shortcut for loading all sets:\n    <clr-code-snippet [clrCode]=\"iconsImportsTSAllExample\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n</p>\n\n<div class=\"example-btn-wrapper\">\n    <a href=\"https://embed.plnkr.co/PlgTCx/\" target=\"_blank\" class=\"btn btn-primary btn-sm\">View example</a>\n</div>\n"
    },
    {
      "name": "IconsHowToUseComponent",
      "id": "component-IconsHowToUseComponent-654b3232a9566f77c5e9a10a020b46fa",
      "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "icons-how-to-use",
      "styleUrls": ["./icons-how-to-use.component.scss"],
      "styles": [],
      "templateUrl": ["./icons-how-to-use.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "colorExample",
          "defaultValue": "COLOR_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 102
        },
        {
          "name": "directionExample",
          "defaultValue": "DIRECTION_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 104
        },
        {
          "name": "flipExample",
          "defaultValue": "FLIP_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 105
        },
        {
          "name": "introExample",
          "defaultValue": "INTRO_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 100
        },
        {
          "name": "inverseColorExample",
          "defaultValue": "INVERSE_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 103
        },
        {
          "name": "orientationExampleDir",
          "defaultValue": "DIRECTION_EXAMPLE_DIR",
          "type": "",
          "optional": false,
          "description": "",
          "line": 106
        },
        {
          "name": "orientationExampleFlip",
          "defaultValue": "DIRECTION_EXAMPLE_FLIP",
          "type": "",
          "optional": false,
          "description": "",
          "line": 107
        },
        {
          "name": "sizeExamples",
          "defaultValue": "SIZE_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 101
        },
        {
          "name": "titleExample",
          "defaultValue": "TITLE_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 109
        },
        {
          "name": "variantExample",
          "defaultValue": "VARIANTS_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 108
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst INTRO_EXAMPLE = `\n<clr-icon shape=\"info-circle\"></clr-icon>\n`;\n\nconst SIZE_EXAMPLE = `\n<!--A. SETTING THE SIZE THROUGH CLR-ICON SIZE ATTRIBUTE-->\n<clr-icon shape=\"info-circle\" size=\"12\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"16\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"36\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"48\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"64\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"72\"></clr-icon>\n\n<!--B. SETTING THE SIZE IN STYLE ATTRIBUTE-->\n<clr-icon shape=\"info-circle\" style=\"width: 12px; height: 12px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 16px; height: 16px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 36px; height: 36px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 48px; height: 48px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 64px; height: 64px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 72px; height: 72px;\"></clr-icon>\n`;\n\nconst COLOR_EXAMPLE = `\n<clr-icon shape=\"info-circle\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-highlight\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-error\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-warning\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-success\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-info\"></clr-icon>`;\n\nconst INVERSE_EXAMPLE = `\n<clr-icon shape=\"info-circle\" class=\"is-inverse\"></clr-icon>`;\n\nconst DIRECTION_EXAMPLE = `\n<!--A. SETTING THE ROTATION DIRECTION THROUGH CLR-ICON SHAPE ATTRIBUTE-->\n<clr-icon shape=\"caret up\"></clr-icon>\n<clr-icon shape=\"caret right\"></clr-icon>\n<clr-icon shape=\"caret down\"></clr-icon>\n<clr-icon shape=\"caret left\"></clr-icon>\n\n<!--B. SETTING THE ROTATION DIRECTION THROUGH CLR-ICON DIR ATTRIBUTE-->\n<clr-icon shape=\"caret\" dir=\"up\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"right\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"down\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"left\"></clr-icon>\n\n<!--C. SETTING THE ROTATION DIRECTION IN STYLE ATTRIBUTE-->\n<clr-icon shape=\"caret\" style=\"transform: rotate(0deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(90deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(180deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(270deg);\"></clr-icon>\n`;\n\nconst FLIP_EXAMPLE = `\n<clr-icon shape=\"floppy\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"horizontal\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"vertical\"></clr-icon>\n`;\n\nconst TITLE_EXAMPLE = `\n<clr-icon shape=\"copy\" title=\"Copy Document\"></clr-icon>\n`;\n\nconst DIRECTION_EXAMPLE_DIR = `\n<clr-icon shape=\"caret\" dir=\"up\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"right\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"down\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"left\"></clr-icon>\n`;\n\nconst DIRECTION_EXAMPLE_FLIP = `\n<clr-icon shape=\"floppy\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"horizontal\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"vertical\"></clr-icon>\n`;\n\nconst VARIANTS_EXAMPLE = `\n<clr-icon shape=\"user\"></clr-icon>\n<clr-icon shape=\"user\" class=\"has-alert\"></clr-icon>\n<clr-icon shape=\"user\" class=\"has-badge\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-alert\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-badge\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-badge--success\"></clr-icon>\n`;\n\n@Component({\n  selector: 'icons-how-to-use',\n  templateUrl: './icons-how-to-use.component.html',\n  styleUrls: ['./icons-how-to-use.component.scss'],\n})\nexport class IconsHowToUseComponent {\n  introExample = INTRO_EXAMPLE;\n  sizeExamples = SIZE_EXAMPLE;\n  colorExample = COLOR_EXAMPLE;\n  inverseColorExample = INVERSE_EXAMPLE;\n  directionExample = DIRECTION_EXAMPLE;\n  flipExample = FLIP_EXAMPLE;\n  orientationExampleDir = DIRECTION_EXAMPLE_DIR;\n  orientationExampleFlip = DIRECTION_EXAMPLE_FLIP;\n  variantExample = VARIANTS_EXAMPLE;\n  titleExample = TITLE_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../styles/clarity-imports';\n@import '../icons-get-started/icons-get-started.component';\n\n.clr-example {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: transparent;\n  margin: 0;\n  padding: $clr_baselineRem_0_5 0;\n  // without specifying z-index; IE11 is acting goofy.\n  z-index: 2;\n  &.inverse {\n    background: hsl(218, 14%, 30%);\n    margin: 0 0 $clr_baselineRem_2;\n  }\n  clr-icon {\n    width: $clr_baselineRem_1_5;\n    height: $clr_baselineRem_1_5;\n    margin: 0 $clr_baselineRem_0_25;\n  }\n}\n\n.variant-options {\n  line-height: 2.5em;\n  padding: $clr_baselineRem_0_5 0 0;\n}\n.variant-table {\n  td.left:first-child {\n    width: 25%;\n  }\n}\n",
          "styleUrl": "./icons-how-to-use.component.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<h2>How to use Clarity Icons</h2>\n\n<h3 class=\"paragraph-header\">Set icon size:</h3>\n\n<p>\n    By default, the size for Clarity Icons is 16 by 16 pixels, and you have two ways of customizing this default value.\n    One is through the use of the size attribute; the other is manually customizing the width and height values in your icon's style.\n\n    <clr-code-snippet [clrCode]=\"sizeExamples\"></clr-code-snippet>\n\n    <em>Both of the methods above will produce this result:</em>\n</p>\n\n<span class=\"clr-example\">\n    <!--SETTING THE SIZE THROUGH CLR-ICON SIZE ATTRIBUTE-->\n    <clr-icon shape=\"info-circle\" size=\"12\"></clr-icon>\n    <clr-icon shape=\"info-circle\" size=\"16\"></clr-icon>\n    <clr-icon shape=\"info-circle\" size=\"36\"></clr-icon>\n    <clr-icon shape=\"info-circle\" size=\"48\"></clr-icon>\n    <clr-icon shape=\"info-circle\" size=\"64\"></clr-icon>\n    <clr-icon shape=\"info-circle\" size=\"72\"></clr-icon>\n</span>\n\n\n<h3 class=\"paragraph-header\">Rotate icons:</h3>\n\n<p>\n    The default rotation for every shape in Clarity Icons is 0 degrees. With directional icons such as arrows and carets,\n    0 degrees means it points up. To rotate an icon to another direction, specify that either in the shape or dir attribute.\n    Alternatively, you can set the rotation values in the icon's style attribute.\n\n    <clr-code-snippet [clrCode]=\"directionExample\"></clr-code-snippet>\n\n    <em>All three methods above will produce this result:</em>\n</p>\n\n<span class=\"clr-example\">\n    <!--SETTING THE ROTATION DIRECTION THROUGH CLR-ICON DIR ATTRIBUTE-->\n    <clr-icon shape=\"caret\" dir=\"up\"></clr-icon>\n    <clr-icon shape=\"caret\" dir=\"right\"></clr-icon>\n    <clr-icon shape=\"caret\" dir=\"down\"></clr-icon>\n    <clr-icon shape=\"caret\" dir=\"left\"></clr-icon>\n</span>\n\n\n<h3 class=\"paragraph-header\">Flip icons:</h3>\n\n<p>\n    You can flip icons horizontally or vertically through the use of the flip attribute.\n\n    <clr-code-snippet [clrCode]=\"flipExample\"></clr-code-snippet>\n</p>\n\n<span class=\"clr-example\">\n    <clr-icon shape=\"floppy\"></clr-icon>\n    <clr-icon shape=\"floppy\" flip=\"horizontal\"></clr-icon>\n    <clr-icon shape=\"floppy\" flip=\"vertical\"></clr-icon>\n</span>\n\n<h3 class=\"paragraph-header\">Make Icons Accessible:</h3>\n<p>\n    Add a custom title to your icon using the <code class=\"clr-code\">title</code> attribute.\n    Adding a title improves the accessibility of the icon, making it recognizable by screen readers.\n    Title attribute also helps you to localize your Icon.\n</p>\n<clr-code-snippet [clrCode]=\"titleExample\"></clr-code-snippet>\n\n<h3 class=\"paragraph-header\">Predefined Clarity color classes for icons:</h3>\n\n<p>\n    Clarity Icons also come with predefined color classes.\n    <clr-code-snippet [clrCode]=\"colorExample\"></clr-code-snippet>\n</p>\n\n<span class=\"clr-example\">\n    <clr-icon shape=\"info-circle\"></clr-icon>\n    <clr-icon shape=\"info-circle\" class=\"is-highlight\"></clr-icon>\n    <clr-icon shape=\"info-circle\" class=\"is-error\"></clr-icon>\n    <clr-icon shape=\"info-circle\" class=\"is-warning\"></clr-icon>\n    <clr-icon shape=\"info-circle\" class=\"is-success\"></clr-icon>\n    <clr-icon shape=\"info-circle\" class=\"is-info\"></clr-icon>\n</span>\n\n<p>\n    There is also <code class=\"clr-code\">is-inverse</code> color class, which is suitable for icons used on darker backgrounds.\n    <clr-code-snippet [clrCode]=\"inverseColorExample\"></clr-code-snippet>\n</p>\n\n<span class=\"clr-example inverse\">\n    <clr-icon shape=\"info-circle\" class=\"is-inverse\"></clr-icon>\n</span>\n\n\n<h3 class=\"paragraph-header\">Display variant icons:</h3>\n\n<p>\n    Clarity Icons come with variants of each icon where applicable. Variants may include:\n</p>\n\n<ul class=\"list variant-options\">\n    <li><b>Badged icons</b> have a small dot in the top right corner</li>\n    <li><b>Alerted icons</b> have a triangle in the top right corner</li>\n    <li><b>Solid icons</b> are filled in as opposed to the default outlined style</li>\n    <li><b>Combinations.</b> Such as: <i>solid + badged</i> and <i>alerted + badged</i></li>\n</ul>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <table class=\"table variant-table\">\n            <thead>\n            <tr>\n                <th class=\"left\">Class name</th>\n                <th class=\"left\">What it does</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td class=\"left\"><code class=\"clr-code\">.is-solid</code></td>\n                <td class=\"left\">Replaces the default outlined style of the icon with a filled-in solid version\n                    for icons that have a solid version.\n                </td>\n            </tr>\n            <tr>\n                <td class=\"left\"><code class=\"clr-code\">.has-alert</code></td>\n                <td class=\"left\">Causes a small yellow triangle to appear in the top right corner of an icon\n                    that supports it.\n                </td>\n            </tr>\n            <tr>\n                <td class=\"left\"><code class=\"clr-code\">.has-badge</code></td>\n                <td class=\"left\">Causes a small dot to appear in the top right corner of an icon that supports\n                    badging. By default, this dot is red.\n                </td>\n            </tr>\n            <tr>\n                <td class=\"left\"><code class=\"clr-code\">.has-badge--success</code></td>\n                <td class=\"left\">Causes a small green dot to appear in the top right corner of an icon that\n                    supports badging.\n                </td>\n            </tr>\n            <tr>\n                <td class=\"left\"><code class=\"clr-code\">.has-badge--error</code></td>\n                <td class=\"left\">Causes a small red dot to appear in the top right corner of an icon that\n                    supports badging.\n                </td>\n            </tr>\n            <tr>\n                <td class=\"left\"><code class=\"clr-code\">.has-badge--info</code></td>\n                <td class=\"left\">Causes a small blue dot to appear in the top right corner of an icon that\n                    supports badging.\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<p>\n    Displaying an icon variant only requires adding a CSS class to your <code class=\"clr-code\">clr-icon</code>\n    element. Applicable classes are listed below.\n    <clr-code-snippet [clrCode]=\"variantExample\"></clr-code-snippet>\n</p>\n\n\n\n\n<span class=\"clr-example\">\n    <clr-icon shape=\"user\" size=\"36\"></clr-icon>\n    <clr-icon shape=\"user\" class=\"has-alert\" size=\"36\"></clr-icon>\n    <clr-icon shape=\"user\" class=\"has-badge\" size=\"36\"></clr-icon>\n    <clr-icon shape=\"user\" class=\"is-solid\" size=\"36\"></clr-icon>\n    <clr-icon shape=\"user\" class=\"is-solid has-alert\" size=\"36\"></clr-icon>\n    <clr-icon shape=\"user\" class=\"is-solid has-badge\" size=\"36\"></clr-icon>\n    <clr-icon shape=\"user\" class=\"is-solid has-badge--success\" size=\"36\"></clr-icon>\n</span>\n\n\n<h3 class=\"paragraph-header\">Manipulate the inline SVG graphic elements via CSS</h3>\n\n<p>\nAfter adding <code class=\"clr-code\">clr-icon</code> in your HTML, check it with a web inspection tool. You\nwill find that SVG elements are injected inside the <code class=\"clr-code\">clr-icon</code> tag that\nresponsible for drawing the icon.\n</p>\n\n<p>\nYou can individually select any of these SVG graphic elements and stylize them through CSS. For easier\naccess to the individual graphic parts of the icon, each piece of the glyph has a unique number identifier.\nFor example,\n<code class=\"clr-code\">.clr-i-outline-path-3</code> targets the third path in the outlined version of an\nicon.\n</p>\n\n<p>\nThere are also a couple of common CSS classes that can help you target common elements.\n<code class=\"clr-code\">.clr-i-badge</code> targets the round dot in badged icons. Likewise, <code\nclass=\"clr-code\">.clr-i-alert</code> targets the yellow triangle in alerted icons. Both of these classes\nwork across solid and outlined icons.\n</p>\n"
    },
    {
      "name": "IconsSetsComponent",
      "id": "component-IconsSetsComponent-52d6cdd9abd281f268b65180a0df2981",
      "file": "src/website/src/app/icons/icons-sets/icons-sets.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "icons-sets",
      "styleUrls": ["./icons-sets.component.scss"],
      "styles": [],
      "templateUrl": ["./icons-sets.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "commonPath",
          "defaultValue": "COMMON_PATH",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "fragmentContentElRef",
          "type": "QueryList<FragmentContentComponent>",
          "optional": false,
          "description": "",
          "line": 69,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "FragmentContentComponent"
            }
          ]
        },
        {
          "name": "fragmentOffset",
          "defaultValue": "192",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 67
        },
        {
          "name": "initialHeight",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "previewClasses",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "searchedValue",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 166
        },
        {
          "name": "setNames",
          "defaultValue": "Object.keys(this.sets)",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "sets",
          "defaultValue": "ICONS_INVENTORY",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "showDetailBoxAfter",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 228
        },
        {
          "name": "showDetailInSet",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 227
        },
        {
          "name": "showDetailOn",
          "type": "any",
          "optional": false,
          "description": "<p>Icon Detail Box</p>\n",
          "line": 224
        },
        {
          "name": "showDetailOnIcon",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 225
        },
        {
          "name": "showDetailOnIconAliases",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 226
        },
        {
          "name": "subscriptions",
          "defaultValue": "[]",
          "type": "Subscription[]",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [112]
        },
        {
          "name": "totalVisibleIcons",
          "type": "number",
          "optional": false,
          "description": "<p>Filter Icons</p>\n",
          "line": 163
        },
        {
          "name": "visibleIconElRef",
          "type": "QueryList<ElementRef>",
          "optional": false,
          "description": "",
          "line": 230,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "'visibleIconElRef'"
            }
          ]
        },
        {
          "name": "windowResizeEvent",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 61
        }
      ],
      "methodsClass": [
        {
          "name": "filterIconsByTags",
          "args": [
            {
              "name": "searchedValue",
              "type": "string"
            },
            {
              "name": "tags",
              "type": "string[]"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 214,
          "jsdoctags": [
            {
              "name": "searchedValue",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "tags",
              "type": "string[]",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "filterIconsOnSearch",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 168
        },
        {
          "name": "hideDetail",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 258
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 124
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 117
        },
        {
          "name": "prepareIconsSets",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 141,
          "description": "<p>Prepare icon sets</p>\n"
        },
        {
          "name": "showDetail",
          "args": [
            {
              "name": "showDetailInSet",
              "type": "string"
            },
            {
              "name": "showDetailOnIcon",
              "type": "string"
            },
            {
              "name": "showDetailOnIconAliases",
              "type": "string[]",
              "defaultValue": "[]"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 232,
          "jsdoctags": [
            {
              "name": "showDetailInSet",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "showDetailOnIcon",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "showDetailOnIconAliases",
              "type": "string[]",
              "defaultValue": "[]",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import {\n  Component,\n  OnDestroy,\n  ViewChildren,\n  QueryList,\n  ElementRef,\n  AfterViewInit,\n  Renderer2,\n  PLATFORM_ID,\n  Inject,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { IconsViewService } from '../icons-view.service';\nimport { ActiveFragmentService } from '../utils/active-fragment.service';\nimport { ICONS_INVENTORY } from './icons-inventory';\nimport { FragmentContentComponent } from '../utils/fragment-content.component';\nimport { style, state, animate, transition, trigger } from '@angular/animations';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport jump from 'jump.js';\n\nimport { COMMON_PATH } from '../icons.component';\n\n@Component({\n  selector: 'icons-sets',\n  templateUrl: './icons-sets.component.html',\n  styleUrls: ['./icons-sets.component.scss'],\n  animations: [\n    trigger('showDetail', [\n      state(\n        'void',\n        style({\n          height: '0px',\n        })\n      ),\n      state(\n        '*',\n        style({\n          overflow: 'hidden',\n        })\n      ),\n      transition('void => *', animate('250ms ease-out')),\n      transition('* => void', animate('250ms ease-out')),\n    ]),\n  ],\n})\nexport class IconsSetsComponent implements AfterViewInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  commonPath = COMMON_PATH;\n\n  // When we filter out icons by searching, we shouldn't shrink the initial container height\n  initialHeight: number;\n\n  // Window Resize Event to be used for cancelling the event\n  windowResizeEvent: Function;\n\n  // A \"received\" object value that comes when users adjust the preview settings for icons\n  previewClasses: any;\n\n  // When jumping to a fragment, leverage some space between window top and the fragment\n  fragmentOffset: number = 192;\n\n  @ViewChildren(FragmentContentComponent) fragmentContentElRef: QueryList<FragmentContentComponent>;\n\n  sets: any = ICONS_INVENTORY;\n  setNames: string[] = Object.keys(this.sets);\n\n  constructor(\n    private _el: ElementRef,\n    private _iconsViewService: IconsViewService,\n    private _renderer: Renderer2,\n    private _activeFragmentService: ActiveFragmentService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.subscriptions.push(\n      this._iconsViewService.previewClasses.subscribe(newPreviewClasses => {\n        this.previewClasses = newPreviewClasses;\n      })\n    );\n\n    // jump to the very first fragment on search results\n    this.subscriptions.push(\n      this._iconsViewService.searchValue.pipe(debounceTime(200)).subscribe((searchedValue: string) => {\n        const firstFragRef = this.fragmentContentElRef.first;\n\n        let firstFragRefEl: any;\n\n        if (firstFragRef) {\n          firstFragRefEl = firstFragRef.el.nativeElement;\n\n          if (searchedValue.length > 0) {\n            jump(firstFragRefEl, {\n              offset: -this.fragmentOffset,\n              duration: 250,\n            });\n          }\n        }\n      })\n    );\n\n    // if window size changes, hide the icon detail box.\n    if (isPlatformBrowser(this.platformId)) {\n      this.windowResizeEvent = this._renderer.listen(window, 'resize', () => {\n        this.hideDetail();\n      });\n    }\n\n    this.prepareIconsSets();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    if (this.windowResizeEvent) {\n      this.windowResizeEvent();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.filterIconsOnSearch();\n\n    // @angular/router v4.3.0^ breaks something with the lifecycle.\n    // TODO: find a better way to solve this chocolate error than using setTimeout.\n\n    if (isPlatformBrowser(this.platformId)) {\n      setTimeout(() => {\n        this.initialHeight = this._el.nativeElement.getBoundingClientRect().height;\n      });\n    }\n  }\n\n  /**\n   * Prepare icon sets\n   */\n\n  prepareIconsSets() {\n    // tslint:disable-next-line\n    for (const setName in this.sets) {\n      this.sets[setName].setTitle = setName\n        .split('-')\n        .map(word => {\n          return word.charAt(0).toUpperCase() + word.slice(1);\n        })\n        .join(' ');\n\n      this.sets[setName].matchedIcons = this.sets[setName].searchableIcons;\n      this.sets[setName].fragmentOffset = -this.fragmentOffset;\n    }\n\n    this.sets['core-shapes'].fragmentOffset = -Number.MAX_VALUE;\n  }\n\n  /**\n   * Filter Icons\n   */\n\n  // A number of icons that match with the search value\n  totalVisibleIcons: number;\n\n  // A \"received\" string value that comes when users type in to search for icons\n  searchedValue: string;\n\n  filterIconsOnSearch() {\n    this.subscriptions.push(\n      this._iconsViewService.searchValue.pipe(debounceTime(200)).subscribe((searchedValue: string) => {\n        // if icon detail box is open, close it when searching starts\n        this.hideDetail();\n\n        // on each search input key, we should reset the total number of visible keys\n        // as we add up the visible icons' numbers at the end.\n        this.totalVisibleIcons = 0;\n\n        // this is set here to show what key is searched in the template.\n        this.searchedValue = searchedValue;\n\n        let topSetMatchesFound = '';\n\n        Object.keys(this.sets).map((setName: string) => {\n          this.sets[setName].matchedIcons = this.sets[setName].searchableIcons.filter(icon => {\n            return (\n              icon.name.toLocaleLowerCase().indexOf(searchedValue.toLocaleLowerCase()) > -1 ||\n              this.filterIconsByTags(searchedValue, icon.tags).length > 0\n            );\n          });\n\n          // active fragment should top visible icon set.\n          if (!topSetMatchesFound && this.sets[setName].matchedIcons.length > 0) {\n            topSetMatchesFound = setName;\n            this._activeFragmentService.activeFragment.next(setName);\n          }\n\n          //add the number of visible icons from each sets\n          this.totalVisibleIcons += this.sets[setName].matchedIcons.length;\n        });\n      })\n    );\n\n    // send GA searched icons\n    // debounceTime is 1 second\n    this.subscriptions.push(\n      this._iconsViewService.searchValue.pipe(debounceTime(1000)).subscribe(() => {\n        if (window.trackIconSearch && this.searchedValue) {\n          window.trackIconSearch(this.searchedValue, this.totalVisibleIcons);\n        }\n      })\n    );\n  }\n\n  filterIconsByTags(searchedValue: string, tags: string[]) {\n    return tags.filter(tag => {\n      return tag.toLowerCase().indexOf(searchedValue.toLowerCase()) > -1;\n    });\n  }\n\n  /**\n   * Icon Detail Box\n   */\n\n  showDetailOn: any;\n  showDetailOnIcon: string;\n  showDetailOnIconAliases: string[];\n  showDetailInSet: string;\n  showDetailBoxAfter: any;\n\n  @ViewChildren('visibleIconElRef') visibleIconElRef: QueryList<ElementRef>;\n\n  showDetail(showDetailInSet: string, showDetailOnIcon: string, showDetailOnIconAliases: string[] = []) {\n    if (showDetailInSet === this.showDetailInSet && showDetailOnIcon === this.showDetailOnIcon) {\n      /**\n       * If the same icon clicked again,\n       * hide its detail box to create a toggling behavior.\n       */\n      this.hideDetail();\n      return;\n    }\n\n    this.showDetailInSet = showDetailInSet;\n    this.showDetailOnIcon = showDetailOnIcon;\n    this.showDetailOnIconAliases = showDetailOnIconAliases;\n\n    const pickedIconRowKey = this.showDetailOn.getBoundingClientRect().top;\n\n    const rows = {};\n    this.visibleIconElRef.map((coreIconItem: ElementRef) => {\n      const rowKeyElement = coreIconItem.nativeElement;\n      const rowKey = rowKeyElement.getBoundingClientRect().top;\n      rows[rowKey] = { lastInRow: rowKeyElement };\n    });\n\n    this.showDetailBoxAfter = rows[pickedIconRowKey].lastInRow;\n  }\n\n  hideDetail() {\n    this.showDetailOn = undefined;\n    this.showDetailOnIcon = undefined;\n    this.showDetailBoxAfter = undefined;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../styles/clarity-imports';\n\n.alert {\n  margin: $clr_baselineRem_0_25 0;\n}\n\nh2 {\n  padding: 0 $clr_baselineRem_0_5;\n  margin-top: 0;\n  &.deactivated {\n    color: $clr-color-neutral-500;\n  }\n}\n\n.clr-icon-collection {\n  padding: $clr_baselineRem_1 0;\n  .clr-icon-item {\n    padding: 0 $clr_baselineRem_0_5;\n    clr-icon {\n      margin: 0 $clr_baselineRem_0_5;\n      transform: translate3d(0, 0, 0);\n    }\n    span.icon-shape-name {\n      white-space: nowrap;\n    }\n  }\n}\n\n.icon-detail {\n  position: relative;\n  height: $clr_baselineRem_11;\n  overflow: hidden;\n  will-change: height;\n  transform: translateZ(-1);\n  &:before {\n    content: '';\n    position: absolute;\n    top: $clr_baselineRem_1px;\n    left: $clr_baselineRem_13px;\n    width: calc(100% - #{$clr_baselineRem_1_0833});\n    height: $clr_baselineRem_1;\n    display: block;\n    background-color: $clr-color-neutral-0;\n    z-index: 3;\n    transform: translateZ(0);\n  }\n}\n\n.visible-icon {\n  position: relative;\n  top: $clr_baselineRem_3px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  text-align: left;\n  padding: $clr_baselineRem_0_75 $clr_baselineRem_0_25;\n  background-color: transparent;\n  border: $clr-global-borderwidth solid hsla(0, 0%, 84%, 0);\n  transform: translateZ(0);\n  color: $clr-color-neutral-700;\n  cursor: pointer;\n  z-index: 1;\n\n  &.active {\n    border-top-left-radius: $clr-global-borderradius;\n    border-top-right-radius: $clr-global-borderradius;\n    border-color: hsl(0, 0%, 84%);\n    border-style: solid;\n    border-width: $clr-global-borderwidth;\n    border-bottom-width: 0;\n    border-bottom-color: transparent;\n    background-color: $clr-color-neutral-0;\n    outline: 0 none;\n  }\n\n  &:hover {\n    color: $clr-color-action-600;\n  }\n\n  .icon-shape {\n    flex: 0 0 auto;\n  }\n\n  .icon-shape-name {\n    flex: 1 1 auto;\n    margin-right: $clr_baselineRem_0_5;\n  }\n}\n\n.no-results-found {\n  padding: $clr_baselineRem_0_75 $clr_baselineRem_0_5;\n}\n\n.download-set {\n  margin-left: auto;\n  margin-top: $clr_baselineRem_0_5;\n}\n",
          "styleUrl": "./icons-sets.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "_el",
            "type": "ElementRef"
          },
          {
            "name": "_iconsViewService",
            "type": "IconsViewService"
          },
          {
            "name": "_renderer",
            "type": "Renderer2"
          },
          {
            "name": "_activeFragmentService",
            "type": "ActiveFragmentService"
          },
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 72,
        "jsdoctags": [
          {
            "name": "_el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_iconsViewService",
            "type": "IconsViewService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_renderer",
            "type": "Renderer2",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_activeFragmentService",
            "type": "ActiveFragmentService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "OnDestroy"],
      "templateData":
        "<div class=\"alert alert-warning\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">Starting in Clarity Icons v0.12, some icons have been deprecated. <a href=\"https://vmware.github.io/clarity/news/0.12.0-rc.2\" target=\"_blank\">Click&nbsp;here</a> for the details.</span>\n            </div>\n        </div>\n    </div>\n<section class=\"icons-sets-container\" [style.min-height.px]=\"initialHeight\">\n\n    <fragment-content *ngFor=\"let setName of setNames\" [fragmentLink]=\"setName\" [fragmentOffsetTop]=\"sets[setName].fragmentOffset\">\n\n        <section *ngIf=\"sets[setName].matchedIcons.length>0\">\n\n            <div class=\"clr-row\">\n                <h2>{{sets[setName].setTitle}}</h2>\n            </div>\n\n            <div class=\"clr-row clr-icon-collection\">\n                <ng-container *ngFor=\"let visibleIcon of sets[setName].matchedIcons\">\n                    <div #visibleIconElRef (click)=\"showDetailOn=visibleIconElRef; showDetail(setName, visibleIcon.name, visibleIcon.aliases)\"\n                        class=\"clr-icon-item clr-col-12 clr-col-sm-6 clr-col-md-4\">\n                        <button type=\"button\" class=\"visible-icon\" [class.active]=\"showDetailInSet === setName && showDetailOnIcon === visibleIcon.name\">\n                            <clr-icon size=\"24\" [attr.shape]=\"visibleIcon.name\" class=\"icon-shape\"\n                                      [ngClass]=\"previewClasses\"></clr-icon>\n                            <span class=\"icon-shape-name\">{{visibleIcon.name}}</span>\n                        </button>\n                    </div>\n                    <div class=\"clr-col-lg-12 icon-detail\" *ngIf=\"showDetailBoxAfter===visibleIconElRef\" [@showDetail]=\"showDetailBoxAfter===visibleIconElRef\">\n                        <icon-detail-card [clrIcon]=\"showDetailOnIcon\" [clrIconSet]=\"setName\" [clrIconAliases]=\"showDetailOnIconAliases\"></icon-detail-card>\n                    </div>\n                </ng-container>\n            </div>\n\n        </section>\n\n    </fragment-content>\n\n    <div class=\"no-results-found\" *ngIf=\"totalVisibleIcons===0\">No results found for \"{{searchedValue}}\"</div>\n</section>\n"
    },
    {
      "name": "InputDemo",
      "id": "component-InputDemo-59ce497dba10987051229bd0da06d94b",
      "file": "src/website/src/app/documentation/demos/input/input.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-input-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./input.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleOne",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "exampleThree",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "exampleTwo",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "ngBasic",
          "defaultValue": "NgBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "ngHelpers",
          "defaultValue": "NgHelpers",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "ngLabel",
          "defaultValue": "NgLabel",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "uiBasic",
          "defaultValue": "UiBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "uiError",
          "defaultValue": "UiError",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "uiFull",
          "defaultValue": "UiFull",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nimport * as UiBasic from 'raw-loader!./ui/basic.html';\nimport * as UiFull from 'raw-loader!./ui/full.html';\nimport * as UiError from 'raw-loader!./ui/error.html';\n\nimport * as NgBasic from 'raw-loader!./ng/basic.html';\nimport * as NgLabel from 'raw-loader!./ng/label.html';\nimport * as NgHelpers from 'raw-loader!./ng/helpers.html';\n\n@Component({\n  selector: 'clr-input-demo',\n  templateUrl: './input.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class InputDemo extends ClarityDocComponent {\n  constructor() {\n    super('input');\n  }\n\n  exampleOne = '';\n  exampleTwo = '';\n  exampleThree = '';\n\n  uiBasic: any = UiBasic;\n  uiFull: any = UiFull;\n  uiError: any = UiError;\n\n  ngBasic: any = NgBasic;\n  ngLabel: any = NgLabel;\n  ngHelpers: any = NgHelpers;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 25
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"false\">\n    <article>\n        <h5 class=\"component-summary\" id=\"examples\">\n            Inputs are the most commonly used form control, and Clarity supports both a CSS only and Angular component. You may wish to review the general <a routerLink=\"../../forms\">forms</a> documentation about form controls.\n        </h5>\n\n        <h2 id=\"forms-code-samples\">Angular Input Component</h2>\n\n        <p>If you are using Angular, the recommended approach is to always use the <code class=\"clr-code\">ClrInput</code> directive on your inputs to help manage the form control. By using <code class=\"clr-code\">ClrInput</code>, you'll automatically be able to leverage built in validation, helper text, and layout features in forms.</p>\n\n        <h4>Basic input</h4>\n\n        <p>This is the most basic way to create an input inside of a form. This is only if you don't have a need for a label or validation. You need to add <code class=\"clr-code\">clrInput</code> to your input to wire up the directive. Notice, it is not necessary to add <code class=\"clr-code\">type=\"text\"</code> as it is handled automatically. It will only work if you have the control wired up with either a template driven form or reactive form.</p>\n\n        <p></p>\n\n        <input clrInput placeholder=\"My input\" name=\"input\" [(ngModel)]=\"exampleOne\" />\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngBasic\"></clr-code-snippet>\n\n        <h4>Labels</h4>\n\n        <p>For anything beyond a standalone input field, you'll need to wrap your input with the <code class=\"clr-code\">ClrInputContainer</code> component. This is required to contain all of the logic and validation details for the individual input control.</p>\n\n        <p>Then you can add a <code class=\"clr-code\">label</code> element and it will automatically get laid out correctly in the form.</p>\n\n        <p></p>\n\n        <form clrForm>\n            <clr-input-container>\n                <label>My name</label>\n                <input clrInput placeholder=\"Fill me in, scotty!\" name=\"name\" [(ngModel)]=\"exampleTwo\" />\n            </clr-input-container>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngLabel\"></clr-code-snippet>\n\n        <h4>Helper and error messages</h4>\n\n        <p>The input form control wires up with the validations placed on an input, such as <code class=\"clr-code\">required</code> or even custom built validators in Angular. Under the hood, it looks at the <code class=\"clr-code\">NgControl</code> values to determine the control validity, and display the helper text or error message accordingly.</p>\n\n        <p>Note: the validation only displays an error after the user has left focus on an input. This is for better UX where the user doesn't see an error while they are still typing.</p>\n\n        <p></p>\n\n        <form clrForm>\n            <clr-input-container>\n                <label>Full name</label>\n                <input placeholder=\"Full name\" clrInput [(ngModel)]=\"exampleThree\" name=\"name\" required />\n                <clr-control-helper>Helper text</clr-control-helper>\n                <clr-control-error>This field is required!</clr-control-error>\n            </clr-input-container>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngHelpers\"></clr-code-snippet>\n\n\n\n\n        <h2 id=\"css-component\">CSS Input Component</h2>\n\n        <p>Inputs can be used without Angular, but without some of the automatic interactivity. If you intend to create your own components, here are the basic features you'll need to build out.</p>\n\n        <h4>Basic input</h4>\n\n        <p>It is possible to display the input by simply having the input as a standalone element not inside of a form. This may be useful in simple cases where you don't need a full form and just an inline input.</p>\n\n        <p></p>\n\n        <input type=\"text\" id=\"basic\" placeholder=\"Enter value here\" class=\"clr-input\">\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiBasic\"></clr-code-snippet>\n\n        <h4>Full input display</h4>\n\n        <p>Each form control has a <code class=\"clr-code\">.clr-form-control</code> wrapper, as well as a specific DOM structure necessary to layout the form control as desired. This works with all layout options as well without needing to change the DOM structure in any way.</p>\n\n        <p></p>\n\n        <form class=\"clr-form\">\n            <div class=\"clr-form-control\">\n                <label for=\"basic\" class=\"clr-control-label\">Basic input</label>\n                <div class=\"clr-control-container\">\n                <div class=\"clr-input-wrapper\">\n                    <input type=\"text\" id=\"basic\" placeholder=\"Enter value here\" class=\"clr-input\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                </div>\n                <span class=\"clr-subtext\">Helper Text</span>\n                </div>\n            </div>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiFull\"></clr-code-snippet>\n\n        <h4>Error state</h4>\n\n        <p>To signify an error state, you need to add the <code class=\"clr-code\">.clr-error</code> class to the <code class=\"clr-code\">.clr-control-container</code> element. This will show the <code class=\"clr-code\">.clr-validate-icon</code> and turn the <code class=\"clr-code\">.clr-subtext</code> message to red. If you have helper text that needs to change to error content, you'll have to handle the hiding and showing of that content inside of the <code class=\"clr-code\">.clr-subtext</code> element.</p>\n\n        <p></p>\n\n        <form class=\"clr-form\">\n            <div class=\"clr-form-control clr-row\">\n                <label for=\"example\" class=\"clr-control-label clr-col-12 clr-col-md-2\">Label</label>\n                <div class=\"clr-control-container clr-error clr-col-12 clr-col-md-10\">\n                    <div class=\"clr-input-wrapper\">\n                        <input type=\"text\" id=\"example\" placeholder=\"Example Input\" class=\"clr-input\">\n                        <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    </div>\n                    <span class=\"clr-subtext\">Helper Text</span>\n                </div>\n            </div>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiError\"></clr-code-snippet>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Design Guidelines</h3>\n\n            <div class=\"alert alert-info\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            The UX design guidelines documentation is currently a work in progress, and will be updated when they are ready.\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"accessibility-guidelines\">\n            <h2 id=\"accessibility\">Accessibility</h2>\n\n            <p>\n                For applications that use the <code class=\"clr-code\">ClrInput</code> directive and the associated\n                <code class=\"clr-code\">ClrInputContainer</code> component there is built in support that adds accessible\n                behavior to the control and its form. This behavior includes:\n            </p>\n            <p></p>\n            <ol>\n                <li>\n                    Programmatically associating the correct label <code class=\"clr-code\">for</code>\n                    attribute with the <code class=\"clr-code\">id</code> of the input</li>\n                <li>\n                    Automatic wiring up of the <code class=\"clr-code\">aria-describedby</code> behavior with associated\n                    <code class=\"clr-code\">clr-control-error</code> elements\n                </li>\n                <li>\n                    An <code class=\"clr-code\">aria-live</code> region that can notify screen readers about changes in\n                    the control error state\n                </li>\n                <li>\n                    Adds the label to a general form summary for screen readers when the control is in an error state\n                    after a form submit\n                </li>\n            </ol>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "InverseButtonDemo",
      "id": "component-InverseButtonDemo-b9af9e055ace6b631f46e383f7d655e1",
      "file": "src/website/src/app/documentation/demos/buttons/inverse-button.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-inverse-button",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./inverse-button.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<button class=\"btn btn-inverse\">Inverse</button>\n<button class=\"btn btn-inverse\" disabled>Disabled Inverse</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-inverse-button',\n  templateUrl: './inverse-button.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class InverseButtonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Inverse Button</h4>\n<div class=\"btn-example\">\n    <button type=\"submit\" class=\"btn btn-inverse\">Inverse</button>\n    <button type=\"submit\" class=\"btn btn-inverse\" disabled>Disabled Inverse</button>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "JigglypuffDemo",
      "id": "component-JigglypuffDemo-91595fa7afff1389501f49129006c5f1",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/jigglypuff.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-jigglypuff-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Jiggpuff</h4>\n<p>\n    Jigglypuff's vocal cords can freely adjust the wavelength of its voice.\n    This Pokémon uses this ability to sing at precisely the right wavelength to\n    make its foes most drowsy.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Jiggpuff</h4>\n<p>\n    Jigglypuff's vocal cords can freely adjust the wavelength of its voice.\n    This Pokémon uses this ability to sing at precisely the right wavelength to\n    make its foes most drowsy.\n</p>`;\n\n@Component({\n  selector: 'clr-jigglypuff-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Jiggpuff</h4>\n        <p>\n            Jigglypuff's vocal cords can freely adjust the wavelength of its voice.\n            This Pokémon uses this ability to sing at precisely the right wavelength to\n            make its foes most drowsy.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n    `,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class JigglypuffDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "JustNavsDemo",
      "id": "component-JustNavsDemo-3c56839164af8deca2b3d4f2da80d960",
      "file": "src/website/src/app/documentation/demos/vertical-nav/just-navs/just-navs.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-just-navs-demo",
      "styleUrls": ["../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./just-navs.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "demoLongLabel",
          "defaultValue": "false",
          "line": 16,
          "type": "boolean"
        },
        {
          "name": "demoWithDividers",
          "defaultValue": "false",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "demoWithHeadersAndDividers",
          "defaultValue": "false",
          "line": 15,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'clr-just-navs-demo',\n  templateUrl: './just-navs.html',\n  styleUrls: ['../vertical-nav.demo.scss'],\n})\nexport class JustNavsDemo {\n  @Input() demoWithDividers: boolean = false;\n  @Input() demoWithHeadersAndDividers: boolean = false;\n  @Input() demoLongLabel: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\" style=\"margin-top: 0;\">\n    <div class=\"main-container\" style=\"width: 240px; margin: 12px auto; height: 408px\">\n        <div class=\"content-container\">\n            <clr-vertical-nav *ngIf=\"!(demoWithDividers || demoWithHeadersAndDividers)\">\n                <a clrVerticalNavLink href=\"javascript://\">Snorlax</a>\n                <a clrVerticalNavLink href=\"javascript://\" class=\"active\">Jigglypuff</a>\n                <a clrVerticalNavLink href=\"javascript://\">Ditto</a>\n                <a clrVerticalNavLink href=\"javascript://\" *ngIf=\"!demoLongLabel\">Charizard</a>\n                <a clrVerticalNavLink href=\"javascript://\" *ngIf=\"demoLongLabel\">Ultra Rare Mega Charizard EX (Secret\n                    Rare)</a>\n                <a clrVerticalNavLink href=\"javascript://\">Arcanine</a>\n                <a clrVerticalNavLink href=\"javascript://\">Blastoise</a>\n                <a clrVerticalNavLink href=\"javascript://\">Gyrados</a>\n                <a clrVerticalNavLink href=\"javascript://\">Jolteon</a>\n                <a clrVerticalNavLink href=\"javascript://\">Raichu</a>\n            </clr-vertical-nav>\n            <clr-vertical-nav *ngIf=\"demoWithDividers\">\n                <a clrVerticalNavLink href=\"javascript://\">Snorlax</a>\n                <a clrVerticalNavLink href=\"javascript://\" class=\"active\">Jigglypuff</a>\n                <a clrVerticalNavLink href=\"javascript://\">Ditto</a>\n\n                <div class=\"nav-divider\"></div>\n\n                <a clrVerticalNavLink href=\"javascript://\">Charizard</a>\n                <a clrVerticalNavLink href=\"javascript://\">Arcanine</a>\n\n                <div class=\"nav-divider\"></div>\n\n                <a clrVerticalNavLink href=\"javascript://\">Blastoise</a>\n                <a clrVerticalNavLink href=\"javascript://\">Gyrados</a>\n                <a clrVerticalNavLink href=\"javascript://\">Jolteon</a>\n            </clr-vertical-nav>\n            <clr-vertical-nav *ngIf=\"demoWithHeadersAndDividers\">\n                <label class=\"nav-header\">\n                    Normal\n                </label>\n                <a clrVerticalNavLink href=\"javascript://\">Snorlax</a>\n                <a clrVerticalNavLink href=\"javascript://\" class=\"active\">Jigglypuff</a>\n                <a clrVerticalNavLink href=\"javascript://\">Ditto</a>\n\n                <div class=\"nav-divider\"></div>\n\n                <label class=\"nav-header\">\n                    Fire\n                </label>\n                <a clrVerticalNavLink href=\"javascript://\">Charizard</a>\n                <a clrVerticalNavLink href=\"javascript://\">Arcanine</a>\n            </clr-vertical-nav>\n        </div>\n    </div>\n</div>"
    },
    {
      "name": "LabelsClickableDemo",
      "id": "component-LabelsClickableDemo-4437401aa46f2b3fab2293a0c9d1694b",
      "file": "src/website/src/app/documentation/demos/labels/labels-clickable.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-labels-clickable-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./labels-clickable.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<a href=\"...\" class=\"label label-purple clickable\">\n    Austin\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    New York\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Palo Alto\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    San Francisco\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Seattle\n</a>\n`;\n\n@Component({\n  selector: 'clr-labels-clickable-demo',\n  templateUrl: './labels-clickable.demo.html',\n})\nexport class LabelsClickableDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <a href=\"javascript://\" class=\"label label-purple clickable\">Austin</a>\n    <a href=\"javascript://\" class=\"label label-blue clickable\">New York</a>\n    <a href=\"javascript://\" class=\"label label-orange clickable\">Palo Alto</a>\n    <a href=\"javascript://\" class=\"label label-light-blue clickable\">San Francisco</a>\n    <a href=\"javascript://\" class=\"label clickable\">Seattle</a>\n</div>\n<clr-code-snippet class=\"prism-fix\" [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "LabelsColorOptionsDemo",
      "id": "component-LabelsColorOptionsDemo-b5a64361bb1522d600e267e91527a2df",
      "file": "src/website/src/app/documentation/demos/labels/labels-color-options.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-labels-color-options-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./labels-color-options.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<span class=\"label\">Seattle</span>\n<span class=\"label label-purple\">Austin</span>\n<span class=\"label label-blue\">New York</span>\n<span class=\"label label-orange\">Palo Alto</span>\n<span class=\"label label-light-blue\">San Francisco</span>\n`;\n\n@Component({\n  selector: 'clr-labels-color-options-demo',\n  templateUrl: './labels-color-options.demo.html',\n})\nexport class LabelsColorOptionsDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"bump-down\">\n        <span class=\"label\">Seattle</span>\n        <span class=\"label label-purple\">Austin</span>\n        <span class=\"label label-blue\">New York</span>\n        <span class=\"label label-orange\">Palo Alto</span>\n        <span class=\"label label-light-blue\">San Francisco</span>\n    </div>\n</div>\n<clr-code-snippet class=\"prism-fix\" [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "LabelsDefaultDemo",
      "id": "component-LabelsDefaultDemo-730faa67ff3d5b4b7ba4e7d8f96e68b3",
      "file": "src/website/src/app/documentation/demos/labels/labels-default.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-labels-default-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./labels-default.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<span class=\"label\">Austin</span>\n<span class=\"label\">New York</span>\n<span class=\"label\">Palo Alto</span>\n<span class=\"label\">San Francisco</span>\n<span class=\"label\">Seattle</span>\n`;\n\n@Component({\n  selector: 'clr-labels-default-demo',\n  templateUrl: './labels-default.demo.html',\n})\nexport class LabelsDefaultDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <span class=\"label\">Austin</span>\n    <span class=\"label\">New York</span>\n    <span class=\"label\">Palo Alto</span>\n    <span class=\"label\">San Francisco</span>\n    <span class=\"label\">Seattle</span>\n</div>\n<clr-code-snippet class=\"prism-fix\" [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "LabelsDemo",
      "id": "component-LabelsDemo-d997a1700025c3d19f1b1a7d9a9790a4",
      "file": "src/website/src/app/documentation/demos/labels/labels.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-labels-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./labels.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "hideJames",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "hideJimmy",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-labels-demo',\n  templateUrl: './labels.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class LabelsDemo extends ClarityDocComponent {\n  hideJames: boolean = false;\n  hideJimmy: boolean = false;\n\n  constructor() {\n    super('labels');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 19
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n\n        <h5 class=\"component-summary\" id=\"labels-header\">Labels show concise metadata in a compact format.</h5>\n\n        <div id=\"design-guidelines\">\n            <div class=\"clr-demo-container\">\n                <div class=\"clr-demo-container__content\">\n                    <span class=\"label label-blue\">john@example.com</span>\n                    <span class=\"label label-blue\">james@example.com</span>\n                </div>\n            </div>\n\n            <h3>Style</h3>\n            <p>Labels are visually styled to differentiate them from buttons.</p>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Overall Style</h4>\n                    <p>\n                        The distinctive visual style of labels deliberately deviates from buttons.\n                        This prevents users from confusing labels with buttons and allows labels to\n                        co-exist with other components without competing for\n                        a user's attention with primary and secondary buttons on the screen.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clr-demo-container\">\n                            <span class=\"label label-purple\">Fruit</span>\n                            <span class=\"label label-purple\">Meat</span>\n                            <span class=\"label label-purple\">Drink</span>\n                            <span class=\"label label-purple\">Vegetable</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Color</h4>\n                    <p>\n                        The Clarity color palette and the colors you are using throughout your application\n                        should guide which colors you choose for your labels. We recommend reserving\n                        stoplight colors (red, yellow, and green) to display state or status.\n                    </p>\n                    <p>\n                        If the intent is to use colors as a way to have groups of labels be visually\n                        distinct from one another, keep in mind that there may be accessibility issues\n                        around using color as your sole differentiator.\n                    </p>\n                    <p>\n                        Avoid using too many colors within the same context, displaying too many colors may\n                        distract the user from the core of your application and the information it presents.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <img src=\"assets/images/documentation/labels/labels_color.svg\" alt=\"\">\n                            </div>\n                        </div>\n                    </div>\n                    <p>\n                        Status colors are generally reserved to display state or status.\n                    </p>\n                </div>\n            </div>\n\n            <h3>Typography</h3>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h5>Capitalization</h5>\n                    <p>\n                        To differentiate from buttons, it is recommended that you avoid using all caps for\n                        labels. Using all caps might make the user think the label is a button and conflates\n                        the use case for labels with actions and buttons.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia is-dont-block\">\n                            <div class=\"clr-demo-container\">\n                                <span class=\"label label-purple\">LONDON (LOCATION)</span>\n                                <span class=\"label label-purple\">NABLUS (LOCATION)</span>\n                            </div>\n                            <div class=\"clrweb-DoxMedia-text\">\n                                <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                                <p>\n                                    Use all caps in labels\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h5>Multiline Text</h5>\n                    <p>\n                        Keep labels to one line of concise text. The use case for labels is to showcase\n                        information in a compact format.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia is-dont-block\">\n                            <div class=\"clr-demo-container\">\n                                <span style=\"padding: 15px; text-align: center\" class=\"label label-purple\">LONDON <br>(LOCATION)</span>\n                                <span style=\"padding: 15px; text-align: center\" class=\"label label-purple\">NABLUS <br>(LOCATION)</span>\n                            </div>\n                            <div class=\"clrweb-DoxMedia-text\">\n                                <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                                <p>\n                                    Use multiple lines of text within a single label.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h5>Additional Metadata</h5>\n                    <p>\n                        Describe additional information or metadata in parenthesis if necessary.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia is-do-block\">\n                            <div class=\"clr-demo-container\">\n                                <span class=\"label label-orange\">London (Location)</span>\n                                <span class=\"label label-orange\">Nablus (Location)</span>\n                            </div>\n                            <div class=\"clrweb-DoxMedia-text\">\n                                <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                                <p>\n                                    Use parenthesis for additional metadata displayed in the same label.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Behavior</h3>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h5>Clicking Labels</h5>\n                    <p>\n                        Labels may be clickable. In this case, clicking on a label should perform an action\n                        related to that label. Clicking on a location label used as a tag, for example,\n                        could serve to filter the results in a nearby list by that location. Clicking a\n                        label could also display more information about the metadata\n                        described by that label.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clr-demo-container\">\n                            <a href=\"javascript://\" class=\"label label-purple clickable\">\n                                Chocolate\n                            </a>\n                            <a href=\"javascript://\" class=\"label label-purple clickable\">\n                                Vanilla\n                            </a>\n                            <a href=\"javascript://\" class=\"label label-purple clickable\">\n                                Mixed\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h5>Dismissing Labels</h5>\n                    <p>\n                        A label can be dismissed. Use a close icon at the right-most side of a label to dismiss it.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clr-demo-container\">\n                            <!--<div [style.visibility]=\"(numberOfUnreadAlerts == 0) ? 'hidden' : 'visible' \">-->\n                            <!--COUNTER: {{numberOfUnreadAlerts}}-->\n                            <!--</div>-->\n                            <a\n                                    *ngIf=\"!hideJames\"\n                                    (click)=\"hideJames = true\"\n                                    href=\"javascript://\"\n                                    class=\"label label-blue\">\n                                james@test.com\n                                <clr-icon shape=\"close\"></clr-icon>\n                            </a>\n                            <a\n                                    *ngIf=\"!hideJimmy\"\n                                    (click)=\"hideJimmy = true\"\n                                    href=\"javascript://\"\n                                    class=\"label label-blue\">\n                                jimmy@test.com\n                                <clr-icon shape=\"close\"></clr-icon>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h5>Labels and Badges</h5>\n                    <p>\n                        Labels and badges can be used together to show a count relating to the metadata\n                        displayed in the label.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clr-demo-container\">\n                        <span class=\"label label-light-blue\">\n                            Production\n                            <span class=\"badge badge-light-blue\">12</span>\n                        </span>\n                            <span class=\"label label-light-blue\">\n                            Dev/Test\n                            <span class=\"badge badge-light-blue\">99+</span>\n                        </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxBookmark hidden-sm-down\">\n                            <div class=\"clrweb-DoxBookmark-bookmark\">\n                                <clr-icon shape=\"bookmark\"></clr-icon>\n                            </div>\n                            <p>Documentation for Badges is available <a routerLink=\"../../badges\">here</a>.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n            <p>A label is a visual tag that provides additional information about data in the UI.</p>\n\n            <h6 id=\"labels-not-clickable\">1. Labels (not clickable)</h6>\n\n            <clr-labels-default-demo></clr-labels-default-demo>\n\n            <h6 id=\"color-options\">2. Color Options</h6>\n\n            <clr-labels-color-options-demo></clr-labels-color-options-demo>\n\n            <h6 id=\"clickable-labels\">3. Clickable Labels</h6>\n\n            <clr-labels-clickable-demo></clr-labels-clickable-demo>\n\n            <h6 id=\"status-labels-not-clickable\">4. Status Labels (not clickable)</h6>\n\n            <clr-labels-status-demo></clr-labels-status-demo>\n\n            <h6 id=\"labels-with-badges\">5. Labels with Badges</h6>\n\n            <clr-labels-with-badges-demo></clr-labels-with-badges-demo>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "LabelsStatusDemo",
      "id": "component-LabelsStatusDemo-c08227e552de7edc728dc4c47104d5d3",
      "file": "src/website/src/app/documentation/demos/labels/labels-status.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-labels-status-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./labels-status.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<span class=\"label label-info\">Info</span>\n<span class=\"label label-success\">Success</span>\n<span class=\"label label-warning\">Warning</span>\n<span class=\"label label-danger\">Error</span>\n`;\n\n@Component({\n  selector: 'clr-labels-status-demo',\n  templateUrl: './labels-status.demo.html',\n})\nexport class LabelsStatusDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <span class=\"label label-info\">Info</span>\n    <span class=\"label label-success\">Success</span>\n    <span class=\"label label-warning\">Warning</span>\n    <span class=\"label label-danger\">Error</span>\n</div>\n<clr-code-snippet class=\"prism-fix\" [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "LabelsWithBadgesDemo",
      "id": "component-LabelsWithBadgesDemo-ee1e1e55684d3e005cfac54d42af4324",
      "file": "src/website/src/app/documentation/demos/labels/labels-with-badges.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-labels-with-badges-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./labels-with-badges.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<a href=\"...\" class=\"label label-purple clickable\">\n    Austin\n    <span class=\"badge\">1</span>\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    New York\n    <span class=\"badge\">2</span>\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Palo Alto\n    <span class=\"badge\">3</span>\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    San Francisco\n    <span class=\"badge\">12</span>\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Seattle\n    <span class=\"badge\">15</span>\n</a>\n<a href=\"...\" class=\"label label-purple clickable\">\n    Chicago\n    <span class=\"badge\">55</span>\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    San Jose\n    <span class=\"badge\">66</span>\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Charlotte\n    <span class=\"badge\">88</span>\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    Atlanta\n    <span class=\"badge\">99+</span>\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Philadephia<span class=\"badge\">0</span>\n</a>\n`;\n\n@Component({\n  selector: 'clr-labels-with-badges-demo',\n  templateUrl: './labels-with-badges.demo.html',\n})\nexport class LabelsWithBadgesDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <a href=\"javascript://\" class=\"label label-purple clickable\">Austin<span class=\"badge\">1</span></a>\n    <a href=\"javascript://\" class=\"label label-blue clickable\">New York<span class=\"badge\">2</span></a>\n    <a href=\"javascript://\" class=\"label label-orange clickable\">Palo Alto<span class=\"badge\">3</span></a>\n    <a href=\"javascript://\" class=\"label label-light-blue clickable\">San Francisco<span class=\"badge\">12</span></a>\n    <a href=\"javascript://\" class=\"label clickable\">Seattle<span class=\"badge\">15</span></a>\n    <a href=\"javascript://\" class=\"label label-purple clickable\">Chicago<span class=\"badge\">55</span></a>\n    <a href=\"javascript://\" class=\"label label-blue clickable\">San Jose<span class=\"badge\">66</span></a>\n    <a href=\"javascript://\" class=\"label label-orange clickable\">Charlotte<span class=\"badge\">88</span></a>\n    <a href=\"javascript://\" class=\"label label-light-blue clickable\">Atlanta<span class=\"badge\">99+</span></a>\n    <a href=\"javascript://\" class=\"label clickable\">Philadelphia<span class=\"badge\">0</span></a>\n</div>\n<clr-code-snippet class=\"prism-fix\" [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "LayoutAllDemo",
      "id": "component-LayoutAllDemo-d572ce35c94af3c5ec285fc626e206d7",
      "file": "src/website/src/app/documentation/demos/app-layout/layout-all.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-layout-all-demo",
      "styleUrls": ["./layout.demo.scss"],
      "styles": [],
      "templateUrl": ["./layout-all.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level\">\n        ...\n    </div>\n    <header class=\"header header-6\">\n        ...\n    </header>\n    <nav class=\"subnav\">\n        ...\n    </nav>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            ...\n        </div>\n        <nav class=\"sidenav\">\n            ...\n        </nav>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-layout-all-demo',\n  templateUrl: './layout-all.html',\n  styleUrls: ['./layout.demo.scss'],\n})\nexport class LayoutAllDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .example-aside-section {\n    width: 20%;\n    padding: $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n\n    @media screen and (max-width: map-get($clr-grid-breakpoints, sm)) {\n      display: none;\n    }\n  }\n\n  .example-footer {\n    $example-footer-height: $clr_baselineRem_2_5;\n    height: $example-footer-height;\n    line-height: $example-footer-height;\n    padding: 0 $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n  }\n}\n",
          "styleUrl": "./layout.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <div class=\"alert alert-app-level alert-info\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        App Level Alert\n                    </div>\n                    <div class=\"alert-actions\">\n                        <button class=\"btn btn-sm alert-action\">Action</button>\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <a href=\"#\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cloud\"></clr-icon>\n                </a>\n                <a href=\"javascript://\" class=\"active nav-link nav-icon\">\n                    <clr-icon shape=\"folder\"></clr-icon>\n                </a>\n            </div>\n        </header>\n        <nav class=\"subnav\">\n            <ul class=\"nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"javascript://\">Subnav Link 1</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 2</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 3</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 4</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 5</a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Content Area\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eu odio nisi. Vestibulum dignissim eget massa sit amet feugiat. Quisque auctor mattis quam eu suscipit. Morbi ipsum risus, feugiat vitae sem at, tincidunt elementum magna. Phasellus tristique\n                    posuere dui, ut tempus felis sagittis quis. Integer iaculis ultrices elit, sed venenatis eros. Vivamus interdum semper velit eget gravida. Sed finibus eget lacus sed semper. Suspendisse fringilla, tellus in molestie cursus, sapien\n                    purus volutpat lacus, eget venenatis erat est vitae libero. Aliquam et orci hendrerit, consequat purus non, imperdiet ipsum.\n                </p>\n            </div>\n            <nav class=\"sidenav\">\n                <section class=\"sidenav-content\">\n                    <section class=\"nav-group\">\n                        <input id=\"tabexample2\" type=\"checkbox\">\n                        <label for=\"tabexample2\">Sidenav</label>\n                        <ul class=\"nav-list\">\n                            <li><a class=\"nav-link\">Link 1</a></li>\n                            <li><a class=\"nav-link\">Link 2</a></li>\n                            <li><a class=\"nav-link active\">Link 3</a></li>\n                            <li><a class=\"nav-link\">Link 4</a></li>\n                            <li><a class=\"nav-link\">Link 5</a></li>\n                            <li><a class=\"nav-link\">Link 6</a></li>\n                        </ul>\n                    </section>\n                </section>\n            </nav>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "LayoutNoSidenavDemo",
      "id": "component-LayoutNoSidenavDemo-f00a77e6b8c7e09c48326b98a85a7f59",
      "file": "src/website/src/app/documentation/demos/nav/layout-no-sidenav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-layout-no-sidenav-demo",
      "styleUrls": ["./layout.demo.scss"],
      "styles": [],
      "templateUrl": ["./layout-no-sidenav.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-layout-no-sidenav-demo',\n  templateUrl: './layout-no-sidenav.html',\n  styleUrls: ['./layout.demo.scss'],\n})\nexport class LayoutNoSidenavDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .example-aside-section {\n    width: 20%;\n    padding: $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n\n    @media screen and (max-width: map-get($clr-grid-breakpoints, sm)) {\n      display: none;\n    }\n  }\n\n  .example-footer {\n    $example-footer-height: $clr_baselineRem_2_5;\n    height: $example-footer-height;\n    line-height: $example-footer-height;\n    padding: 0 $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n  }\n}\n",
          "styleUrl": "./layout.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <a href=\"#\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cloud\"></clr-icon>\n                </a>\n                <a href=\"javascript://\" class=\"active nav-link nav-icon\">\n                    <clr-icon shape=\"folder\"></clr-icon>\n                </a>\n            </div>\n        </header>\n        <nav class=\"subnav\">\n            <ul class=\"nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"javascript://\">Subnav Link 1</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 2</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 3</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 4</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 5</a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Content Area\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eu odio nisi. Vestibulum dignissim eget massa sit amet feugiat. Quisque auctor mattis quam eu suscipit. Morbi ipsum risus, feugiat vitae sem at, tincidunt elementum magna. Phasellus tristique\n                    posuere dui, ut tempus felis sagittis quis. Integer iaculis ultrices elit, sed venenatis eros. Vivamus interdum semper velit eget gravida. Sed finibus eget lacus sed semper. Suspendisse fringilla, tellus in molestie cursus, sapien\n                    purus volutpat lacus, eget venenatis erat est vitae libero. Aliquam et orci hendrerit, consequat purus non, imperdiet ipsum.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-nav-code-info-alert></clr-nav-code-info-alert>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;main-container&quot;&gt;\n    &lt;header class=&quot;header header-6&quot;&gt;\n        ...\n    &lt;/header&gt;\n    &lt;nav class=&quot;subnav&quot;&gt;\n        ...\n    &lt;/nav&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;div class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "LayoutNoSubnavDemo",
      "id": "component-LayoutNoSubnavDemo-0bdc44a443b778d9099b3ee086f51bd4",
      "file": "src/website/src/app/documentation/demos/nav/layout-no-subnav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-layout-no-subnav-demo",
      "styleUrls": ["./layout.demo.scss"],
      "styles": [],
      "templateUrl": ["./layout-no-subnav.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-layout-no-subnav-demo',\n  templateUrl: './layout-no-subnav.html',\n  styleUrls: ['./layout.demo.scss'],\n})\nexport class LayoutNoSubnavDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .example-aside-section {\n    width: 20%;\n    padding: $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n\n    @media screen and (max-width: map-get($clr-grid-breakpoints, sm)) {\n      display: none;\n    }\n  }\n\n  .example-footer {\n    $example-footer-height: $clr_baselineRem_2_5;\n    height: $example-footer-height;\n    line-height: $example-footer-height;\n    padding: 0 $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n  }\n}\n",
          "styleUrl": "./layout.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <a href=\"#\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cloud\"></clr-icon>\n                </a>\n                <a href=\"javascript://\" class=\"active nav-link nav-icon\">\n                    <clr-icon shape=\"folder\"></clr-icon>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Content Area\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eu odio nisi. Vestibulum dignissim eget massa sit amet feugiat. Quisque auctor mattis quam eu suscipit. Morbi ipsum risus, feugiat vitae sem at, tincidunt elementum magna. Phasellus tristique\n                    posuere dui, ut tempus felis sagittis quis. Integer iaculis ultrices elit, sed venenatis eros. Vivamus interdum semper velit eget gravida. Sed finibus eget lacus sed semper. Suspendisse fringilla, tellus in molestie cursus, sapien\n                    purus volutpat lacus, eget venenatis erat est vitae libero. Aliquam et orci hendrerit, consequat purus non, imperdiet ipsum.\n                </p>\n            </div>\n            <nav class=\"sidenav\">\n                <section class=\"sidenav-content\">\n                    <section class=\"nav-group\">\n                        <input id=\"tabexample2\" type=\"checkbox\">\n                        <label for=\"tabexample2\">Sidenav</label>\n                        <ul class=\"nav-list\">\n                            <li><a class=\"nav-link\">Link 1</a></li>\n                            <li><a class=\"nav-link\">Link 2</a></li>\n                            <li><a class=\"nav-link active\">Link 3</a></li>\n                            <li><a class=\"nav-link\">Link 4</a></li>\n                            <li><a class=\"nav-link\">Link 5</a></li>\n                            <li><a class=\"nav-link\">Link 6</a></li>\n                        </ul>\n                    </section>\n                </section>\n            </nav>\n        </div>\n    </div>\n</div>\n<clr-nav-code-info-alert></clr-nav-code-info-alert>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;main-container&quot;&gt;\n    &lt;header class=&quot;header header-6&quot;&gt;\n        ...\n    &lt;/header&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;div class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/div&gt;\n        &lt;nav class=&quot;sidenav&quot;&gt;\n            ...\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "LayoutOnlyHeaderDemo",
      "id": "component-LayoutOnlyHeaderDemo-d5bc65fdd3850216f5e87fa54e58c305",
      "file": "src/website/src/app/documentation/demos/nav/layout-only-header.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-layout-only-header-demo",
      "styleUrls": ["./layout.demo.scss"],
      "styles": [],
      "templateUrl": ["./layout-only-header.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-layout-only-header-demo',\n  templateUrl: './layout-only-header.html',\n  styleUrls: ['./layout.demo.scss'],\n})\nexport class LayoutOnlyHeaderDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .example-aside-section {\n    width: 20%;\n    padding: $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n\n    @media screen and (max-width: map-get($clr-grid-breakpoints, sm)) {\n      display: none;\n    }\n  }\n\n  .example-footer {\n    $example-footer-height: $clr_baselineRem_2_5;\n    height: $example-footer-height;\n    line-height: $example-footer-height;\n    padding: 0 $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n  }\n}\n",
          "styleUrl": "./layout.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <a href=\"#\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"header-nav\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cloud\"></clr-icon>\n                </a>\n                <a href=\"javascript://\" class=\"active nav-link nav-icon\">\n                    <clr-icon shape=\"folder\"></clr-icon>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Content Area\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eu odio nisi. Vestibulum dignissim eget massa sit amet feugiat. Quisque auctor mattis quam eu suscipit. Morbi ipsum risus, feugiat vitae sem at, tincidunt elementum magna. Phasellus tristique\n                    posuere dui, ut tempus felis sagittis quis. Integer iaculis ultrices elit, sed venenatis eros. Vivamus interdum semper velit eget gravida. Sed finibus eget lacus sed semper. Suspendisse fringilla, tellus in molestie cursus, sapien\n                    purus volutpat lacus, eget venenatis erat est vitae libero. Aliquam et orci hendrerit, consequat purus non, imperdiet ipsum.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-nav-code-info-alert></clr-nav-code-info-alert>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;main-container&quot;&gt;\n    &lt;header class=&quot;header header-6&quot;&gt;\n        ...\n    &lt;/header&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;div class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "LayoutSidenavPrimaryDemo",
      "id": "component-LayoutSidenavPrimaryDemo-0ff4c1b46d0527467e81d9b2de537cc6",
      "file": "src/website/src/app/documentation/demos/nav/layout-sidenav-primary.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-layout-only-sidenav-primary",
      "styleUrls": ["./layout.demo.scss"],
      "styles": [],
      "templateUrl": ["./layout-sidenav-primary.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-layout-only-sidenav-primary',\n  templateUrl: './layout-sidenav-primary.html',\n  styleUrls: ['./layout.demo.scss'],\n})\nexport class LayoutSidenavPrimaryDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .example-aside-section {\n    width: 20%;\n    padding: $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n\n    @media screen and (max-width: map-get($clr-grid-breakpoints, sm)) {\n      display: none;\n    }\n  }\n\n  .example-footer {\n    $example-footer-height: $clr_baselineRem_2_5;\n    height: $example-footer-height;\n    line-height: $example-footer-height;\n    padding: 0 $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n  }\n}\n",
          "styleUrl": "./layout.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <a href=\"#\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <form class=\"search\">\n                <label for=\"search_input\">\n                    <input id=\"search_input\" type=\"text\" placeholder=\"Search for keywords...\">\n                </label>\n            </form>\n            <div class=\"settings\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Content Area\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eu odio nisi. Vestibulum dignissim eget massa sit amet feugiat. Quisque auctor mattis quam eu suscipit. Morbi ipsum risus, feugiat vitae sem at, tincidunt elementum magna. Phasellus tristique\n                    posuere dui, ut tempus felis sagittis quis. Integer iaculis ultrices elit, sed venenatis eros. Vivamus interdum semper velit eget gravida. Sed finibus eget lacus sed semper. Suspendisse fringilla, tellus in molestie cursus, sapien\n                    purus volutpat lacus, eget venenatis erat est vitae libero. Aliquam et orci hendrerit, consequat purus non, imperdiet ipsum.\n                </p>\n            </div>\n            <nav class=\"sidenav\">\n                <section class=\"sidenav-content\">\n                    <section class=\"nav-group\">\n                        <input id=\"tabexample2\" type=\"checkbox\">\n                        <label for=\"tabexample2\">Sidenav</label>\n                        <ul class=\"nav-list\">\n                            <li><a class=\"nav-link\">Link 1</a></li>\n                            <li><a class=\"nav-link\">Link 2</a></li>\n                            <li><a class=\"nav-link active\">Link 3</a></li>\n                            <li><a class=\"nav-link\">Link 4</a></li>\n                            <li><a class=\"nav-link\">Link 5</a></li>\n                            <li><a class=\"nav-link\">Link 6</a></li>\n                        </ul>\n                    </section>\n                </section>\n            </nav>\n        </div>\n    </div>\n</div>\n<clr-nav-code-info-alert></clr-nav-code-info-alert>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;main-container&quot;&gt;\n    &lt;div class=&quot;alert alert-app-level&quot;&gt;\n        ...\n    &lt;/div&gt;\n    &lt;header class=&quot;header header-6&quot;&gt;\n        ...\n    &lt;/header&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;div class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/div&gt;\n        &lt;nav class=&quot;sidenav&quot;&gt;\n            ...\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "LayoutSubnavPrimaryDemo",
      "id": "component-LayoutSubnavPrimaryDemo-7289aeb9e04c5f1534a6b364aaf5fe9b",
      "file": "src/website/src/app/documentation/demos/nav/layout-subnav-primary.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-layout-only-subnav-primary",
      "styleUrls": ["./layout.demo.scss"],
      "styles": [],
      "templateUrl": ["./layout-subnav-primary.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-layout-only-subnav-primary',\n  templateUrl: './layout-subnav-primary.html',\n  styleUrls: ['./layout.demo.scss'],\n})\nexport class LayoutSubnavPrimaryDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  .example-aside-section {\n    width: 20%;\n    padding: $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n\n    @media screen and (max-width: map-get($clr-grid-breakpoints, sm)) {\n      display: none;\n    }\n  }\n\n  .example-footer {\n    $example-footer-height: $clr_baselineRem_2_5;\n    height: $example-footer-height;\n    line-height: $example-footer-height;\n    padding: 0 $clr_baselineRem_1;\n    border: $clr-global-borderwidth solid;\n  }\n}\n",
          "styleUrl": "./layout.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <a href=\"#\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <form class=\"search\">\n                <label for=\"search_input\">\n                    <input id=\"search_input\" type=\"text\" placeholder=\"Search for keywords...\">\n                </label>\n            </form>\n            <div class=\"settings\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n        <nav class=\"subnav\">\n            <ul class=\"nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"javascript://\">Subnav Link 1</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 2</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 3</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 4</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Subnav Link 5</a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Content Area\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eu odio nisi. Vestibulum dignissim eget massa sit amet feugiat. Quisque auctor mattis quam eu suscipit. Morbi ipsum risus, feugiat vitae sem at, tincidunt elementum magna. Phasellus tristique\n                    posuere dui, ut tempus felis sagittis quis. Integer iaculis ultrices elit, sed venenatis eros. Vivamus interdum semper velit eget gravida. Sed finibus eget lacus sed semper. Suspendisse fringilla, tellus in molestie cursus, sapien\n                    purus volutpat lacus, eget venenatis erat est vitae libero. Aliquam et orci hendrerit, consequat purus non, imperdiet ipsum.\n                </p>\n            </div>\n            <nav class=\"sidenav\">\n                <section class=\"sidenav-content\">\n                    <section class=\"nav-group\">\n                        <input id=\"tabexample2\" type=\"checkbox\">\n                        <label for=\"tabexample2\">Sidenav</label>\n                        <ul class=\"nav-list\">\n                            <li><a class=\"nav-link\">Link 1</a></li>\n                            <li><a class=\"nav-link\">Link 2</a></li>\n                            <li><a class=\"nav-link active\">Link 3</a></li>\n                            <li><a class=\"nav-link\">Link 4</a></li>\n                            <li><a class=\"nav-link\">Link 5</a></li>\n                            <li><a class=\"nav-link\">Link 6</a></li>\n                        </ul>\n                    </section>\n                </section>\n            </nav>\n        </div>\n    </div>\n</div>\n<clr-nav-code-info-alert></clr-nav-code-info-alert>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;main-container&quot;&gt;\n    &lt;div class=&quot;alert alert-app-level&quot;&gt;\n        ...\n    &lt;/div&gt;\n    &lt;header class=&quot;header header-6&quot;&gt;\n        ...\n    &lt;/header&gt;\n    &lt;nav class=&quot;subnav&quot;&gt;\n        ...\n    &lt;/nav&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;div class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/div&gt;\n        &lt;nav class=&quot;sidenav&quot;&gt;\n            ...\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "LazyLoadingNavGroupsVerticalNavDemo",
      "id": "component-LazyLoadingNavGroupsVerticalNavDemo-b7ff40f39aaf8f2ab5fa2bf3d8fdc973",
      "file":
        "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-vertical-nav-lazy-loading-nav-groups-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./lazy-loading-nav-groups.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "demoCollapsible",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 138
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 136
        },
        {
          "name": "routesExample",
          "defaultValue": "ROUTES_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 137
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./normal\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n        Normal\n        <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./fire\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n        Fire\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./electric\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n        Electric\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`;\n\nconst ROUTES_EXAMPLE = `\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal/pidgey\"\n        },\n        {\n            path: \"normal\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"normal/snorlax\",\n            component: SnorlaxDemo\n        },\n        {\n            path: \"normal/pidgey\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"electric\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/pikachu\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/raichu\",\n            component: RaichuDemo\n        },\n        {\n            path: \"fire\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charmander\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charizard\",\n            component: CharizardDemo\n        },\n        {\n            path: \"credit\",\n            component: PokedexDemo\n        }\n    ],\n    ...\n}\n...\n`;\n\n@Component({\n  selector: 'clr-vertical-nav-lazy-loading-nav-groups-demo',\n  templateUrl: './lazy-loading-nav-groups.html',\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class LazyLoadingNavGroupsVerticalNavDemo {\n  htmlExample = HTML_EXAMPLE;\n  routesExample = ROUTES_EXAMPLE;\n  demoCollapsible: boolean = true;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Lazy Loading Navigation Links</h4>\n\n<p>\n    <code class=\"clr-code\">clrIfExpanded</code> structural directive can be used along with\n    <code class=\"clr-code\">clr-vertical-nav-group-children</code> to lazily load links inside of a\n    <code class=\"clr-code\">clr-vertical-nav-group</code>.\n</p>\n\n<div class=\"clr-example\">\n    <div class=\"main-container\" style=\"height: 432px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a routerLink=\"./normal\" hidden aria-hidden=\"true\">\n                    </a>\n                    <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n                    Normal\n                    <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n                        <a clrVerticalNavLink\n                           routerLink=\"./normal/pidgey\"\n                           routerLinkActive=\"active\">\n                            Pidgey\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./normal/snorlax\"\n                           routerLinkActive=\"active\">\n                            Snorlax\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a routerLink=\"./fire\" hidden aria-hidden=\"true\">\n                    </a>\n                    <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n                    Fire\n                    <clr-vertical-nav-group-children *clrIfExpanded>\n                        <a clrVerticalNavLink\n                           routerLink=\"./fire/charmander\"\n                           routerLinkActive=\"active\">\n                            Charmander\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./fire/charizard\"\n                           routerLinkActive=\"active\">\n                            Charizard\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a routerLink=\"./electric\" hidden aria-hidden=\"true\">\n                    </a>\n                    <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n                    Electric\n                    <clr-vertical-nav-group-children *clrIfExpanded>\n                        <a clrVerticalNavLink\n                           routerLink=\"./electric/pikachu\"\n                           routerLinkActive=\"active\">\n                            Pikachu\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./electric/raichu\"\n                           routerLinkActive=\"active\">\n                            Raichu\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n                    <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n                    Credit\n                </a>\n            </clr-vertical-nav>\n            <div class=\"content-area demo-allow-scroll\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n\n<p></p>\n\n<clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n             We recommend that the application\n            <a target=\"_blank\" href=\"https://angular.io/guide/router\">routing</a> be\n            hierarchical.\n        </span>\n    </clr-alert-item>\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            For the nav group highlighting to work with lazy loading, we need to\n            add an empty hidden link with the <code class=\"clr-code\">routerLink</code>\n            pointing to a common URL prefix for the children links\n            as shown below.\n        </span>\n    </clr-alert-item>\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            Please do not add\n            the <code class=\"clr-code\">clrVerticalNavLink</code>\n            directive to the empty link.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n\n<clr-code-snippet [clrCode]=\"htmlExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p></p>\n\n<clr-code-snippet [clrCode]=\"routesExample\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n\n\n\n"
    },
    {
      "name": "LazyLoadingRecursiveTreeDemo",
      "id": "component-LazyLoadingRecursiveTreeDemo-3d3864388ae12c4a004cfa62e6817653",
      "file":
        "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lazy-loading-recursive-tree-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./lazy-loading-recursive-tree.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 115
        },
        {
          "name": "exampleTs",
          "defaultValue": "EXAMPLE_TS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 116
        },
        {
          "name": "folderService",
          "defaultValue":
            "{\n    getFiles: folder => {\n      if (folder === '/') {\n        return of(ROOT);\n      } else {\n        return timer(1000).pipe(map(() => folder.files));\n      }\n    },\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 132
        },
        {
          "name": "getChildren",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 120
        },
        {
          "name": "root$",
          "type": "Observable<File[]>",
          "optional": false,
          "description": "",
          "line": 118
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 128
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit } from '@angular/core';\nimport { Observable, of, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst EXAMPLE_HTML = `\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *clrRecursiveFor=\"let file of root$ | async; getChildren: getChildren\"\n                   [clrExpandable]=\"file.isFolder\">\n        <clr-icon [attr.shape]=\"file.isFolder ? 'folder' : 'file'\"></clr-icon>\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n`;\n\nconst EXAMPLE_TS = `\n@Component({...})\nexport class FileBrowser implements OnInit {\n    constructor(private folderService: FolderService) {}\n\n    root$: Observable<File[]>;\n\n    getChildren = (folder: File) => {\n        if (folder.isFolder) {\n            return this.folderService.getFiles(folder);\n        } else {\n            return null;\n        }\n    };\n\n    ngOnInit(): void {\n        this.root$ = this.folderService.getFiles('/');\n    }\n}\n`;\n\ninterface File {\n  name: string;\n  isFolder: boolean;\n  files: File[];\n}\n\nconst ROOT = [\n  {\n    name: 'src',\n    isFolder: true,\n    files: [\n      {\n        name: 'app',\n        isFolder: true,\n        files: [\n          {\n            name: 'app.component.html',\n            isFolder: false,\n          },\n          {\n            name: 'app.component.ts',\n            isFolder: false,\n          },\n          {\n            name: 'app.module.ts',\n            isFolder: false,\n          },\n          {\n            name: 'app.routing.ts',\n            isFolder: false,\n          },\n        ],\n      },\n      {\n        name: 'environments',\n        isFolder: true,\n        files: [\n          {\n            name: 'environments.prod.ts',\n            isFolder: false,\n          },\n          {\n            name: 'environment.ts',\n            isFolder: false,\n          },\n        ],\n      },\n      {\n        name: 'index.html',\n        isFolder: false,\n      },\n      {\n        name: 'main.ts',\n        isFolder: false,\n      },\n    ],\n  },\n  {\n    name: 'package.json',\n    isFolder: false,\n  },\n  {\n    name: 'tsconfig.json',\n    isFolder: false,\n  },\n];\n\n@Component({\n  selector: 'clr-lazy-loading-recursive-tree-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: './lazy-loading-recursive-tree.html',\n})\nexport class LazyLoadingRecursiveTreeDemo implements OnInit {\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  root$: Observable<File[]>;\n\n  getChildren = (folder: File) => {\n    if (folder.isFolder) {\n      return this.folderService.getFiles(folder);\n    } else {\n      return null;\n    }\n  };\n\n  ngOnInit(): void {\n    this.root$ = this.folderService.getFiles('/');\n  }\n\n  folderService = {\n    getFiles: folder => {\n      if (folder === '/') {\n        return of(ROOT);\n      } else {\n        return timer(1000).pipe(map(() => folder.files));\n      }\n    },\n  };\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *clrRecursiveFor=\"let file of root$ | async; getChildren: getChildren\"\n                   [clrExpandable]=\"file.isFolder\">\n        <clr-icon [attr.shape]=\"file.isFolder ? 'folder' : 'file'\"></clr-icon>\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n\n<clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"exampleTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n"
    },
    {
      "name": "LazyLoadingSelectionTreeDemo",
      "id": "component-LazyLoadingSelectionTreeDemo-7eb92c41d42f86fccd98e5ce00f69d09",
      "file":
        "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lazy-loading-selection-tree-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./lazy-loading-selection-tree.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "exampleTs",
          "defaultValue": "EXAMPLE_TS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "groceries$",
          "type": "Observable<Group[]>",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "groceryService",
          "defaultValue": "GROCERY_SERVICE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 63
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { GROCERY_SERVICE, Group } from './grocery-models';\n\nconst EXAMPLE_HTML = `\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *ngFor=\"let group of groceries$ | async\" [(clrSelected)]=\"group.selected\">\n        {{group.name}}\n        <ng-template clrIfExpanded>\n            <my-grocery-items [group]=\"group\"></my-grocery-items>\n        </ng-template>\n    </clr-tree-node>\n</clr-tree>\n`;\n\nconst EXAMPLE_TS = `\n@Component({\n    selector: \"my-grocery-items\",\n    template: \\`\n        <ng-container [clrLoading]=\"loading\">\n            <clr-tree-node *ngFor=\"let item of items$ | async\" [(clrSelected)]=\"item.selected\">\n                {{item.name}}\n            </clr-tree-node>\n        </ng-container>\n    \\`\n})\nexport class GroceryItemsComponent implements OnInit {\n    constructor(private itemsService: ItemsService) {}\n    \n    @Input() group: Group;\n    items$: Observable<Item[]>;\n    loading = false;\n\n    ngOnInit() {\n        this.loading = true;\n        this.items$ = this.itemsService.getItems(this.group).pipe(tap(() => this.loading = false));\n    }\n}\n`;\n\n@Component({\n  selector: 'clr-lazy-loading-selection-tree-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: './lazy-loading-selection-tree.html',\n})\nexport class LazyLoadingSelectionTreeDemo implements OnInit {\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  groceries$: Observable<Group[]>;\n\n  ngOnInit() {\n    this.groceries$ = this.groceryService.getGroups();\n  }\n\n  groceryService = GROCERY_SERVICE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *ngFor=\"let group of groceries$ | async\" [(clrSelected)]=\"group.selected\">\n        {{group.name}}\n        <ng-template clrIfExpanded>\n            <my-grocery-items [group]=\"group\"></my-grocery-items>\n        </ng-template>\n    </clr-tree-node>\n</clr-tree>\n\n\n<clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"exampleTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n"
    },
    {
      "name": "LazyLoadingTreeDemo",
      "id": "component-LazyLoadingTreeDemo-0d30c427b8b8568db27e2ca5927dc4eb",
      "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lazy-loading-tree-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./lazy-loading-tree.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "exampleTs",
          "defaultValue": "EXAMPLE_TS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "loading",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "locations$",
          "type": "Observable<string[]>",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "locationService",
          "defaultValue":
            "{\n    getLocations: () => timer(1000).pipe(map(() => ['London', 'New York', 'Bangalore'])),\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 57
        }
      ],
      "methodsClass": [
        {
          "name": "fetchLocations",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nconst EXAMPLE_HTML = `\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node [clrLoading]=\"loading\">\n        <clr-icon shape=\"building\"></clr-icon>\n        Office Locations\n        <ng-template clrIfExpanded (clrIfExpandedChange)=\"$event ? fetchLocations() : null\">\n            <clr-tree-node *ngFor=\"let location of locations$ | async\">\n                {{location}}\n            </clr-tree-node>\n        </ng-template>\n    </clr-tree-node>\n</clr-tree>\n`;\n\nconst EXAMPLE_TS = `\n@Component({...})\nexport class OfficeLocations {\n    constructor(private locationService: LocationService) {}\n\n    locations$: Observable<string[]>;\n    loading = false;\n\n    fetchLocations() {\n        this.loading = true;\n        this.locations$ = this.locationService.getLocations().pipe(tap(() => this.loading = false));\n    }\n}\n`;\n\n@Component({\n  selector: 'clr-lazy-loading-tree-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: './lazy-loading-tree.html',\n})\nexport class LazyLoadingTreeDemo {\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  locations$: Observable<string[]>;\n  loading = false;\n\n  fetchLocations() {\n    this.loading = true;\n    this.locations$ = this.locationService.getLocations().pipe(tap(() => (this.loading = false)));\n  }\n\n  locationService = {\n    getLocations: () => timer(1000).pipe(map(() => ['London', 'New York', 'Bangalore'])),\n  };\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node [clrLoading]=\"loading\">\n        <clr-icon shape=\"building\"></clr-icon>\n        Office Locations\n        <ng-template clrIfExpanded (clrIfExpandedChange)=\"$event ? fetchLocations() : null\">\n            <clr-tree-node *ngFor=\"let location of locations$ | async\">\n                {{location}}\n            </clr-tree-node>\n        </ng-template>\n    </clr-tree-node>\n</clr-tree>\n\n<clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"exampleTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n"
    },
    {
      "name": "ListsCompactDemo",
      "id": "component-ListsCompactDemo-cdab9860a9f26c23431ed6adbb5b7996",
      "file": "src/website/src/app/documentation/demos/lists/lists-compact.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lists-compact-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./lists-compact.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<ul class=\"list compact\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>Mollit anim id</li>\n</ul>\n`;\n\n@Component({\n  selector: 'clr-lists-compact-demo',\n  templateUrl: './lists-compact.html',\n})\nexport class ListsCompactDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<ul class=\"list list-spacer compact\">\n    <li>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\n        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>Mollit anim id</li>\n</ul>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ListsDemo",
      "id": "component-ListsDemo-d40ebce28494391130b129dbde3f2cc6",
      "file": "src/website/src/app/documentation/demos/lists/lists.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lists-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./lists.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-lists-demo',\n  templateUrl: './lists.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class ListsDemo extends ClarityDocComponent {\n  constructor() {\n    super('lists');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"true\">\n    <article>\n        <h5 class=\"component-summary\" id=\"clarity-has-three-types-of-lists--unordered-ordered-and-unstyled\">Clarity has\n            three types of lists: unordered, ordered, and unstyled.</h5>\n\n        <div id=\"examples\">\n            <h3 id=\"unordered-lists\">Unordered Lists</h3>\n\n            <clr-lists-ul-demo></clr-lists-ul-demo>\n\n            <h3 id=\"ordered-lists\">Ordered Lists</h3>\n\n            <clr-lists-ol-demo></clr-lists-ol-demo>\n\n            <h3 id=\"unstyled-lists\">Unstyled Lists</h3>\n\n            <clr-lists-unstyled-demo></clr-lists-unstyled-demo>\n\n            <h3 id=\"compact-lists\">Compact Lists</h3>\n\n            <clr-lists-compact-demo></clr-lists-compact-demo>\n\n            <h3 id=\"mixed-styled-and-unstyled-lists\">Mixed Styled and Unstyled Lists</h3>\n\n            <clr-lists-mixed-demo></clr-lists-mixed-demo>\n\n            <h3 id=\"lists-in-cards\">Lists in Cards</h3>\n\n            <clr-lists-in-cards-demo></clr-lists-in-cards-demo>\n        </div>\n    </article>\n</clr-doc-wrapper>"
    },
    {
      "name": "ListsInCardsDemo",
      "id": "component-ListsInCardsDemo-53d6930d6102f99082ecee52bf478dc5",
      "file": "src/website/src/app/documentation/demos/card/lists-in-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lists-in-cards-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./lists-in-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 131
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Ordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ol class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ol class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ol class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                </ol>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unstyled Lists\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </p>\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list-unstyled\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-lists-in-cards-demo',\n  templateUrl: './lists-in-cards.html',\n})\nexport class ListsInCardsDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Unordered Lists\n                </div>\n                <div class=\"card-block\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </div>\n                <div class=\"card-block\">\n                    <ul class=\"list\">\n                        <li>Ullamco Laboris</li>\n                        <li>\n                            Nisi Ut Aliquip\n                            <ul class=\"list\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ul>\n                        </li>\n                        <li>Consequat</li>\n                        <li>Excepteur sint occaecat cupidatat non proident</li>\n                        <li>Enim ad Minim</li>\n                        <li>\n                            Occeaecat\n                            <ul class=\"list-unstyled\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"card-footer\">\n                    <a class=\"btn btn-primary\">Action</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Ordered Lists\n                </div>\n                <div class=\"card-block\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </div>\n                <div class=\"card-block\">\n                    <ol class=\"list\">\n                        <li>Ullamco Laboris</li>\n                        <li>\n                            Nisi Ut Aliquip\n                            <ol class=\"list\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ol>\n                        </li>\n                        <li>Consequat</li>\n                        <li>Excepteur sint occaecat cupidatat non proident</li>\n                        <li>Enim ad Minim</li>\n                        <li>\n                            Occeaecat\n                            <ol class=\"list-unstyled\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ol>\n                        </li>\n                    </ol>\n                </div>\n                <div class=\"card-footer\">\n                    <a class=\"btn btn-primary\">Action</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Unstyled Lists\n                </div>\n                <div class=\"card-block\">\n                    <p class=\"card-text\">\n                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    </p>\n                </div>\n                <div class=\"card-block\">\n                    <ul class=\"list-unstyled\">\n                        <li>Ullamco Laboris</li>\n                        <li>\n                            Nisi Ut Aliquip\n                            <ul class=\"list\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ul>\n                        </li>\n                        <li>Consequat</li>\n                        <li>Excepteur sint occaecat cupidatat non proident</li>\n                        <li>Enim ad Minim</li>\n                        <li>\n                            Occeaecat\n                            <ul class=\"list-unstyled\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"card-footer\">\n                    <a class=\"btn btn-primary\">Action</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "ListsInCardsDemo",
      "id": "component-ListsInCardsDemo-680dbcf9ff550c683cb1630b0ab390c0-1",
      "file": "src/website/src/app/documentation/demos/lists/lists-in-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lists-in-cards-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./lists-in-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 131
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Ordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ol class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ol class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ol class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                </ol>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unstyled Lists\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </p>\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list-unstyled\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-lists-in-cards-demo',\n  templateUrl: './lists-in-cards.html',\n})\nexport class ListsInCardsDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "ListsInCardsDemo-1",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Unordered Lists\n                </div>\n                <div class=\"card-block\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </div>\n                <div class=\"card-block\">\n                    <ul class=\"list\">\n                        <li>Ullamco Laboris</li>\n                        <li>\n                            Nisi Ut Aliquip\n                            <ul class=\"list\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ul>\n                        </li>\n                        <li>Consequat</li>\n                        <li>Excepteur sint occaecat cupidatat non proident</li>\n                        <li>Enim ad Minim</li>\n                        <li>\n                            Occeaecat\n                            <ul class=\"list-unstyled\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"card-footer\">\n                    <a class=\"btn btn-primary\">Action</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Ordered Lists\n                </div>\n                <div class=\"card-block\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </div>\n                <div class=\"card-block\">\n                    <ol class=\"list\">\n                        <li>Ullamco Laboris</li>\n                        <li>\n                            Nisi Ut Aliquip\n                            <ol class=\"list\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ol>\n                        </li>\n                        <li>Consequat</li>\n                        <li>Excepteur sint occaecat cupidatat non proident</li>\n                        <li>Enim ad Minim</li>\n                        <li>\n                            Occeaecat\n                            <ol class=\"list-unstyled\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ol>\n                        </li>\n                    </ol>\n                </div>\n                <div class=\"card-footer\">\n                    <a class=\"btn btn-primary\">Action</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Unstyled Lists\n                </div>\n                <div class=\"card-block\">\n                    <p class=\"card-text\">\n                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                    </p>\n                </div>\n                <div class=\"card-block\">\n                    <ul class=\"list-unstyled\">\n                        <li>Ullamco Laboris</li>\n                        <li>\n                            Nisi Ut Aliquip\n                            <ul class=\"list\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ul>\n                        </li>\n                        <li>Consequat</li>\n                        <li>Excepteur sint occaecat cupidatat non proident</li>\n                        <li>Enim ad Minim</li>\n                        <li>\n                            Occeaecat\n                            <ul class=\"list-unstyled\">\n                                <li>Exercitation</li>\n                                <li>Laboris</li>\n                                <li>Commodo</li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"card-footer\">\n                    <a class=\"btn btn-primary\">Action</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ListsMixedDemo",
      "id": "component-ListsMixedDemo-2e30cbe6d1eb00fc3cdd7e35bbfeca84",
      "file": "src/website/src/app/documentation/demos/lists/lists-mixed.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lists-mixed-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./lists-mixed.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<ul class=\"list-unstyled\">\n    <li>Consectetur adipisicing elit</li>\n    <li>\n        Sed do eiusmod tempor\n        <ul class=\"list\">\n            <li>Dolore magna</li>\n            <li>...</li>\n            <li>\n                Incididunt ut labore\n                <ul class=\"list-unstyled\">\n                    <li>Ad minim veniam</li>\n                    <li>...</li>\n                    <li>Exercitation ullamco</li>\n                    <li>\n                        Laboris nisi ut\n                        <ul class=\"list\">\n                            <li>Aliquip ex ea commodo</li>\n                            <li>Consequat duis</li>\n                            <li>..</li>\n                        </ul>\n                    </li>\n                    <li>In reprehenderit</li>\n                </ul>\n            </li>\n        </ul>\n    </li>\n    <li>In voluptate velit esse cillum dolore</li>\n    <li>Eu fugiat nulla pariatur</li>\n</ul>\n`;\n\n@Component({\n  selector: 'clr-lists-mixed-demo',\n  templateUrl: './lists-mixed.html',\n})\nexport class ListsMixedDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<ul class=\"list-unstyled list-spacer\">\n    <li>Consectetur adipisicing elit</li>\n    <li>\n        Sed do eiusmod tempor\n        <ul class=\"list\">\n            <li>Dolore magna</li>\n            <li>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute\n                irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</li>\n            <li>\n                Incididunt ut labore\n                <ul class=\"list-unstyled\">\n                    <li>Ad minim veniam</li>\n                    <li>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</li>\n                    <li>Exercitation ullamco</li>\n                    <li>\n                        Laboris nisi ut\n                        <ul class=\"list\">\n                            <li>Aliquip ex ea commodo</li>\n                            <li>Consequat duis</li>\n                            <li>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</li>\n                        </ul>\n                    </li>\n                    <li>In reprehenderit</li>\n                </ul>\n            </li>\n        </ul>\n    </li>\n    <li>In voluptate velit esse cillum dolore</li>\n    <li>Eu fugiat nulla pariatur</li>\n</ul>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ListsOlDemo",
      "id": "component-ListsOlDemo-86b38f814bf663e76f2fd0321e80d326",
      "file": "src/website/src/app/documentation/demos/lists/lists-ol.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lists-ol-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./lists-ol.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<ol class=\"list\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>\n        Mollit anim id\n        <ol class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ol>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n</ol>\n`;\n\n@Component({\n  selector: 'clr-lists-ol-demo',\n  templateUrl: './lists-ol.html',\n})\nexport class ListsOlDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<ol class=\"list list-spacer\">\n    <li>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\n        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>\n        Mollit anim id\n        <ol class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ol>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n</ol>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ListsUlDemo",
      "id": "component-ListsUlDemo-23750b40f36d3ad85da4623c6963cc1d",
      "file": "src/website/src/app/documentation/demos/lists/lists-ul.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lists-ul-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./lists-ul.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<ul class=\"list\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>Mollit anim id</li>\n</ul>\n`;\n\n@Component({\n  selector: 'clr-lists-ul-demo',\n  templateUrl: './lists-ul.html',\n})\nexport class ListsUlDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<ul class=\"list list-spacer\">\n    <li>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\n        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>Mollit anim id</li>\n</ul>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ListsUnstyledDemo",
      "id": "component-ListsUnstyledDemo-14058728ba69d6e0d12d5a9d23e85644",
      "file": "src/website/src/app/documentation/demos/lists/lists-unstyled.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-lists-unstyled-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./lists-unstyled.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<ul class=\"list-unstyled\">\n    <li>Id est laborum</li>\n    <li>Dolore eu fugiat</li>\n    <li>Occaecat cupidatat</li>\n    <li>Deserunt mollit anim</li>\n</ul>\n`;\n\n@Component({\n  selector: 'clr-lists-unstyled-demo',\n  templateUrl: './lists-unstyled.html',\n})\nexport class ListsUnstyledDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<ul class=\"list-unstyled list-spacer\">\n    <li>Id est laborum</li>\n    <li>Dolore eu fugiat</li>\n    <li>Occaecat cupidatat</li>\n    <li>Deserunt mollit anim</li>\n</ul>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "LoginDemo",
      "id": "component-LoginDemo-ee7fa0ad83be2c9d9a9dfb3d503005c2",
      "file": "src/website/src/app/documentation/demos/login/login.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-login-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./login.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "expanded",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-login-demo',\n  templateUrl: './login.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class LoginDemo extends ClarityDocComponent {\n  expanded: boolean = false;\n\n  constructor() {\n    super('login');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"the-login-page-is-a-predefined-form-for-applications-that-require-authentication\">The\n            login page is a predefined form for applications that require authentication.</h5>\n\n        <div id=\"code-examples\">\n        <p>Use Clarity’s login form by extending the <code class=\"clr-code\">.login</code>\n            classname on <code class=\"clr-code\">form</code> and wrapping it\n            in a container extending the <code class=\"clr-code\">.login-wrapper</code> class.</p>\n\n        <h6 id=\"title-subtitle-and-trademark\">.title, .subtitle and .trademark</h6>\n\n        <p>Extend the <code class=\"clr-code\">.title</code> and <code class=\"clr-code\">.subtitle</code>\n            class on labels indicating the product title and subtitle. If your product title has the\n            trademark symbol, make sure to wrap the trademark symbol in a <code class=\"clr-code\">span</code>\n            with the <code class=\"clr-code\">.trademark</code> class on it.</p>\n\n        <h6 id=\"username\">.username</h6>\n\n        <p>Extend the <code class=\"clr-code\">.username</code> class on the username input field.</p>\n\n        <h6 id=\"password\">.password</h6>\n\n        <p>Extend the <code class=\"clr-code\">.password</code> class on the password input field.</p>\n\n        <h6 id=\"error-active\">.error, .active</h6>\n\n        <p>This wrapper contains a validation message. Extend the <code class=\"clr-code\">.active</code>\n            class with <code class=\"clr-code\">.error</code> to display the validation message.</p>\n\n        <h4 id=\"example\">Example</h4>\n\n        <clr-login-example-demo></clr-login-example-demo>\n        </div>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>This component provides a complete login experience.</p>\n\n            <p>To customize the login page, remove the elements you don’t need, per your use case.\n                For example, your app may require fewer fields.</p>\n\n            <h4 id=\"validation\">Validation</h4>\n\n            <p>Validation occurs on submit. If the user enters an incorrect user name or password, a\n                validation message appears below the password field.</p>\n\n            <p>For security reasons, Clarity does not call out whether the error occurred in the user\n                name or password field. The validation message text should indicate this situation; for\n                example, “The user name or password is incorrect.”</p>\n\n            <h4 id=\"accessibility\">Accessibility</h4>\n\n            <p>In order to facilitate screen readers, you should still include label elements in the\n                form controls. We provide the <code class=\"clr-code\">clr-sr-only</code> class to add \n                to the label to move it offscreen, which keeps the visual experience as you see above\n                while still helping screen readers understand what the form controls are for.\n            </p>\n\n            <h4 id=\"responsiveness\">Responsiveness</h4>\n\n            <p>The layout adapts to different screen sizes at 768px and 544px.</p>\n        </div>\n    </article>\n</clr-doc-wrapper>"
    },
    {
      "name": "LoginExampleDemo",
      "id": "component-LoginExampleDemo-24c48de342d509dd7e3bcba1f8dc9fa6",
      "file": "src/website/src/app/documentation/demos/login/login-example.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-login-example-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./login-example.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "form",
          "defaultValue": "{\n    type: 'local',\n    username: '',\n    password: '',\n    rememberMe: false,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"login-wrapper\">\n    <form class=\"login\">\n        <section class=\"title\">\n            <h3 class=\"welcome\">Welcome to</h3>\n            Company Product Name\n            <h5 class=\"hint\">Use your Company ID to sign in or create one now</h5>\n        </section>\n        <div class=\"login-group\">\n            <clr-select-container>\n                <label class=\"clr-sr-only\">User Role</label>\n                <select clrSelect name=\"type\" [(ngModel)]=\"form.type\">\n                    <option value=\"local\">Local Users</option>\n                    <option value=\"admin\">Administrator</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label class=\"clr-sr-only\">Username</label>\n                <input type=\"text\" name=\"username\" clrInput placeholder=\"Username\" [(ngModel)]=\"form.username\"/>\n            </clr-input-container>\n            <clr-password-container>\n                <label class=\"clr-sr-only\">Password</label>\n                <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" [(ngModel)]=\"form.password\"/>\n            </clr-password-container>\n            <clr-checkbox-wrapper>\n                <label>Remember me</label>\n                <input type=\"checkbox\" name=\"rememberMe\" clrCheckbox [(ngModel)]=\"form.rememberMe\"/>\n            </clr-checkbox-wrapper>\n            <div class=\"error active\">\n                Invalid user name or password\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">NEXT</button>\n            <a href=\"javascript://\" class=\"signup\">Sign up for a Company ID</a>\n        </div>\n    </form>\n</div>\n`;\n\n@Component({\n  selector: 'clr-login-example-demo',\n  templateUrl: './login-example.demo.html',\n})\nexport class LoginExampleDemo {\n  example = EXAMPLE;\n  form = {\n    type: 'local',\n    username: '',\n    password: '',\n    rememberMe: false,\n  };\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"login-wrapper\">\n        <form class=\"login\">\n            <section class=\"title\">\n                <h3 class=\"welcome\">Welcome to</h3>\n                Company Product Name\n                <h5 class=\"hint\">Use your Company ID to sign in or create one now</h5>\n            </section>\n            <div class=\"login-group\">\n              <clr-select-container>\n                    <label class=\"clr-sr-only\">User Role</label>\n                    <select clrSelect name=\"type\" [(ngModel)]=\"form.type\">\n                      <option value=\"local\">Local Users</option>\n                      <option value=\"admin\">Administrator</option>\n                    </select>\n                  </clr-select-container>\n                  <clr-input-container>\n                    <label class=\"clr-sr-only\">Username</label>\n                    <input type=\"text\" name=\"username\" clrInput placeholder=\"Username\" [(ngModel)]=\"form.username\"/>\n                  </clr-input-container>\n                  <clr-password-container>\n                    <label class=\"clr-sr-only\">Password</label>\n                    <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" [(ngModel)]=\"form.password\"/>\n                  </clr-password-container>\n                  <clr-checkbox-wrapper>\n                    <label>Remember me</label>\n                    <input type=\"checkbox\" name=\"rememberMe\" clrCheckbox [(ngModel)]=\"form.rememberMe\"/>\n                  </clr-checkbox-wrapper>\n                <div class=\"error active\">\n                    Invalid user name or password\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">NEXT</button>\n                <a href=\"javascript://\" class=\"signup\">Sign up for a Company ID</a>\n            </div>\n        </form>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "MixedButtonGroupDemo",
      "id": "component-MixedButtonGroupDemo-c16f90630f4297e94c3b7f0e029a1775",
      "file": "src/website/src/app/documentation/demos/button-group/mixed.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-button-group-mixed-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./mixed.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Favorite</button>\n    <button class=\"btn btn-success\">Add</button>\n    <button class=\"btn btn-danger\">Delete</button>\n</div>\n`;\n\n@Component({\n  selector: 'clr-button-group-mixed-demo',\n  templateUrl: './mixed.html',\n})\nexport class MixedButtonGroupDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"btn-group btn-primary\">\n        <button class=\"btn\">Favorite</button>\n        <button class=\"btn btn-success\">Add</button>\n        <button class=\"btn btn-danger\">Delete</button>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>"
    },
    {
      "name": "ModalAngularNotClosableExampleComponent",
      "id": "component-ModalAngularNotClosableExampleComponent-9ab09df378229e081b4e77f21409418a",
      "file": "src/website/src/app/documentation/demos/modal/modal-angular-not-closable.example.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-angular-not-closable-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-angular-not-closable.example.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "closable",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description":
        "<p>If you don’t want your modal to be closable by clicking on the top-right “x” or on the mask, you can do so\nwith the <code class=\"clr-code\">clrModalClosable</code> input. The default value is\n<code class=\"clr-code\">true</code>. You can still close the modal if one of <em>your</em>\ncomponents modifies the value bound to <code class=\"clr-code\">clrModalOpen</code</p>\n",
      "rawdescription":
        "If you don’t want your modal to be closable by clicking on the top-right “x” or on the mask, you can do so\nwith the <code class=\"clr-code\">clrModalClosable</code> input. The default value is\n<code class=\"clr-code\">true</code>. You can still close the modal if one of <em>your</em>\ncomponents modifies the value bound to <code class=\"clr-code\">clrModalOpen</code",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n/**\n * If you don’t want your modal to be closable by clicking on the top-right “x” or on the mask, you can do so\n * with the <code class=\"clr-code\">clrModalClosable</code> input. The default value is\n * <code class=\"clr-code\">true</code>. You can still close the modal if one of <em>your</em>\n * components modifies the value bound to <code class=\"clr-code\">clrModalOpen</code\n */\n@Component({\n  selector: 'clr-modal-angular-not-closable-demo',\n  templateUrl: './modal-angular-not-closable.example.component.html',\n})\nexport class ModalAngularNotClosableExampleComponent {\n  // Booleans to open each example modal\n  public closable: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<p>\n    <button class=\"btn btn-primary\" (click)=\"closable = true\">Show modal</button>\n</p>\n\n<clr-modal [(clrModalOpen)]=\"closable\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">No \"x\" in the top-right corner</h3>\n    <div class=\"modal-body\">\n        <p>Clicking on the backdrop doesn't do anything.</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"closable = false\">\n            I'm the only way to close the modal!\n        </button>\n    </div>\n</clr-modal>\n"
    },
    {
      "name": "ModalAngularShowExampleComponent",
      "id": "component-ModalAngularShowExampleComponent-48421193cbc8041b37a8fe31f4753f14",
      "file": "src/website/src/app/documentation/demos/modal/modal-angular-show.example.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-angular-show-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-angular-show.example.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "basic",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-modal-angular-show-demo',\n  templateUrl: './modal-angular-show.example.component.html',\n})\nexport class ModalAngularShowExampleComponent {\n  // Booleans to open each example modal\n  public basic: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<p>\n    Try it live:\n    <button class=\"btn btn-primary\" (click)=\"basic = true\">Show modal</button>\n</p>\n<clr-modal [(clrModalOpen)]=\"basic\">\n    <h3 class=\"modal-title\">I have a nice title</h3>\n    <div class=\"modal-body\">\n        <p>But not much to say...</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"basic = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"basic = false\">Ok</button>\n    </div>\n</clr-modal>\n"
    },
    {
      "name": "ModalAngularSizeExampleComponent",
      "id": "component-ModalAngularSizeExampleComponent-a7fbc4a207cf11d98eac6314110dff44",
      "file": "src/website/src/app/documentation/demos/modal/modal-angular-size.example.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-angular-size-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-angular-size.example.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "extraLarge",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [114]
        },
        {
          "name": "large",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [114]
        },
        {
          "name": "small",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description":
        "<p>The Angular component offers the same optional sizes as the static styles through the\n<code class=\"clr-code\">clrModalSize</code> input. The default, empty size is medium.</p>\n",
      "rawdescription":
        "The Angular component offers the same optional sizes as the static styles through the\n<code class=\"clr-code\">clrModalSize</code> input. The default, empty size is medium.",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n/**\n * The Angular component offers the same optional sizes as the static styles through the\n * <code class=\"clr-code\">clrModalSize</code> input. The default, empty size is medium.\n */\n@Component({\n  selector: 'clr-modal-angular-size-demo',\n  templateUrl: './modal-angular-size.example.component.html',\n})\nexport class ModalAngularSizeExampleComponent {\n  // Booleans to open each example modal\n  public small: boolean = false;\n  public large: boolean = false;\n  public extraLarge: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<p>\n    <button class=\"btn btn-primary\" (click)=\"small = true\">Small modal</button>\n    <button class=\"btn btn-primary\" (click)=\"large = true\">Large modal</button>\n    <button class=\"btn btn-primary\" (click)=\"extraLarge = true\">Extra large modal</button>\n</p>\n\n<clr-modal [(clrModalOpen)]=\"small\" [clrModalSize]=\"'sm'\">\n    <h3 class=\"modal-title\">Small modal</h3>\n    <div class=\"modal-body\">I am a small modal.</div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"small = false\">Ok</button>\n    </div>\n</clr-modal>\n\n<clr-modal [(clrModalOpen)]=\"large\" [clrModalSize]=\"'lg'\">\n    <h3 class=\"modal-title\">Large modal</h3>\n    <div class=\"modal-body\">I am a large modal.</div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"large = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"large = false\">Ok</button>\n    </div>\n</clr-modal>\n\n<clr-modal [(clrModalOpen)]=\"extraLarge\" [clrModalSize]=\"'xl'\">\n    <h3 class=\"modal-title\">Extra large modal</h3>\n    <div class=\"modal-body\">I am an extra large modal.</div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"extraLarge = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"extraLarge = false\">Ok</button>\n    </div>\n</clr-modal>\n"
    },
    {
      "name": "ModalAngularStaticBackdropDemo",
      "id": "component-ModalAngularStaticBackdropDemo-456e7c4b645f4936b36e85bb55b4a7e8",
      "file": "src/website/src/app/documentation/demos/modal/modal-angular-static-backdrop.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-angular-static-backdrop-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-angular-static-backdrop.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "static",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description":
        "<p>A static example of a modal with header, body and footer.\nIE fix: When the modal dialog is open, extend the <code class=\"clr-code\">.no-scrolling</code> class on the\n<code class=\"clr-code\">body</code> tag so that the content behind the backdrop does not scroll. Remove the class when\nthe modal dialog is closed.</p>\n",
      "rawdescription":
        "A static example of a modal with header, body and footer.\nIE fix: When the modal dialog is open, extend the <code class=\"clr-code\">.no-scrolling</code> class on the\n<code class=\"clr-code\">body</code> tag so that the content behind the backdrop does not scroll. Remove the class when\nthe modal dialog is closed.",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n/**\n * A static example of a modal with header, body and footer.\n * IE fix: When the modal dialog is open, extend the <code class=\"clr-code\">.no-scrolling</code> class on the\n * <code class=\"clr-code\">body</code> tag so that the content behind the backdrop does not scroll. Remove the class when\n * the modal dialog is closed.\n */\n@Component({\n  selector: 'clr-modal-angular-static-backdrop-demo',\n  templateUrl: './modal-angular-static-backdrop.demo.html',\n})\nexport class ModalAngularStaticBackdropDemo {\n  // Booleans to open each example modal\n  public static: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<p>\n    <button class=\"btn btn-primary\" (click)=\"static = true\">Show modal</button>\n</p>\n\n<clr-modal [(clrModalOpen)]=\"static\" [clrModalStaticBackdrop]=\"false\">\n    <h3 class=\"modal-title\">Static backdrop</h3>\n    <div class=\"modal-body\">\n        <p>Clicking on the backdrop closes the modal.</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"static = false\">Ok</button>\n    </div>\n</clr-modal>\n"
    },
    {
      "name": "ModalAnimationDemo",
      "id": "component-ModalAnimationDemo-506f80838a5809140c9976730f94bee5",
      "file": "src/website/src/app/documentation/demos/modal/modal-animation.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-animation-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-animation.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "animatedExampleIn",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "interval",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nconst EXAMPLE = `\n<div class=\"modal\">\n    <div class=\"modal-dialog fadeDown in\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop fade in\" aria-hidden=\"true\"></div>\n`;\n\n@Component({\n  selector: 'clr-modal-animation-demo',\n  templateUrl: './modal-animation.demo.html',\n})\nexport class ModalAnimationDemo implements OnInit {\n  animatedExampleIn: boolean = false;\n  interval: any;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      // If you want interactivity, go to the Angular component demo. :-P\n      this.interval = setInterval(() => (this.animatedExampleIn = !this.animatedExampleIn), 2000);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        <div class=\"modal static\">\n            <div class=\"modal-dialog fadeDown\" [class.in]=\"animatedExampleIn\" role=\"dialog\" aria-hidden=\"true\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                        </button>\n                        <h3 class=\"modal-title\">I have a nice title</h3>\n                    </div>\n                    <div class=\"modal-body\">\n                        <p>But not much to say...</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                        <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-backdrop fade static\" [class.in]=\"animatedExampleIn\" aria-hidden=\"true\"></div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ModalAnimationDesignDemo",
      "id": "component-ModalAnimationDesignDemo-3b60cf5d21128b5b9e830f10fa750ff9",
      "file": "src/website/src/app/documentation/demos/modal/modal-animation-design.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-animation-design-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-animation-design.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "animatedExampleIn",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "interval",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-modal-animation-design-demo',\n  templateUrl: './modal-animation-design.demo.html',\n})\nexport class ModalAnimationDesignDemo implements OnInit {\n  animatedExampleIn: boolean = false;\n  interval: any;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      // If you want interactivity, go to the Angular component demo. :-P\n      this.interval = setInterval(() => (this.animatedExampleIn = !this.animatedExampleIn), 2000);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 15,
        "jsdoctags": [
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\" style=\"background: #eee\">\n    <div class=\"backdrop-example-container\">\n        <div class=\"modal static\">\n            <div class=\"modal-dialog fadeDown\" [class.in]=\"animatedExampleIn\" role=\"dialog\" aria-hidden=\"true\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                        </button>\n                        <h3 class=\"modal-title\">Delete datastore</h3>\n                    </div>\n                    <div class=\"modal-body\">\n                        <p>Are you sure you want to delete <b>datastore743</b>? This action is permanent and cannot be recovered.</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                        <button class=\"btn btn-warning\" type=\"button\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal-backdrop fade static\" [class.in]=\"animatedExampleIn\" aria-hidden=\"true\"></div>\n    </div>\n</div>\n"
    },
    {
      "name": "ModalBackdropDemo",
      "id": "component-ModalBackdropDemo-ab3729fb08badf54c30f8e140927cefd",
      "file": "src/website/src/app/documentation/demos/modal/modal-backdrop.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-backdrop-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-backdrop.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`;\n\n@Component({\n  selector: 'clr-modal-backdrop-demo',\n  templateUrl: './modal-backdrop.demo.html',\n})\nexport class ModalBackdropDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse ullamcorper nec ex in volutpat. Maecenas consectetur, dui quis accumsan pellentesque, dui sem ultricies nulla, sed auctor magna diam vel neque. Nullam id est vel purus volutpat accumsan\n        non quis enim. Curabitur non turpis eu nunc faucibus venenatis quis ut neque. Integer in mattis tortor, eu sollicitudin sapien. Vestibulum convallis et quam vitae auctor. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus\n        mus. Nam sagittis facilisis sapien, a malesuada purus. Donec vel dui sit amet orci semper accumsan sit amet non enim. Nulla sit amet commodo justo, ut pellentesque mauris. Pellentesque sollicitudin vestibulum ante eleifend pharetra. Nullam dignissim\n        risus eget feugiat scelerisque. Nullam vehicula porta ex ac hendrerit. Phasellus laoreet felis et lacinia tincidunt. Nullam mattis sit amet est a maximus.\n        <br/>\n        <button class=\"btn btn-primary\">Ut dolor ipsum</button>\n\n        <div class=\"modal-backdrop static\" aria-hidden=\"true\"></div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ModalDemo",
      "id": "component-ModalDemo-cf694ed7f6061c9105cead224a8577e9",
      "file": "src/website/src/app/documentation/demos/modal/modal.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "documentationEntry",
          "type": "DocumentationEntry",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "expanded",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        },
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\nimport {ActivatedRoute, Data} from \"@angular/router\";\nimport {DocumentationEntry} from \"@vcd/ui-doc-lib\";\n\n@Component({\n  selector: 'clr-modal-demo',\n  templateUrl: './modal.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class ModalDemo extends ClarityDocComponent {\n  expanded: boolean = false;\n\n  documentationEntry: DocumentationEntry;\n\n  constructor(private route: ActivatedRoute) {\n    super('modals');\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((data: Data) => {\n      this.documentationEntry = data.documentationEntry;\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n\n        <h5 class=\"component-summary\" id=\"modalsComponentSummary\">\n          <vcd-overview-viewer [component]=\"documentationEntry?.component\"> </vcd-overview-viewer>\n        </h5>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"style\">Style</h3>\n\n            <clr-modal-style-design-demo></clr-modal-style-design-demo>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Title</h6>\n                            <p>\n                                The title <b>summarizes the purpose</b> of the modal. In a confirmation modal, use a\n                                question in your title and make sure the action is clearly called out in the buttons.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Content</h6>\n                            <p>\n                                The content may differ between different types of modals. <b>Be concise and\n                                provide a clear explanation</b> of the task or information a user should focus on.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Buttons</h6>\n                            <p>\n                                Buttons should include clear and direct action for the user to take. Buttons are\n                                right-aligned based on the <b>Z Pattern</b>. Read more about it in <a\n                                routerLink=\"../../buttons\">Button Placement</a>.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"sizes\">Sizes</h3>\n\n            <p>\n                There are multiple sizes for modals. The Clarity modal defaults to medium but different\n                sizes could be used based on the content and screen sizes you are planning to support.\n                Always remember to test responsiveness as you design and use modals.\n            </p>\n\n            <clr-modal-size-design-demo class=\"modal-size-design-demo\"></clr-modal-size-design-demo>\n\n            <h3 id=\"overlay\">Overlay</h3>\n\n            <p>\n                The background overlay is dark with opacity to provide the feeling of a third dimensional\n                layer. This also eliminates distraction and helps the user focus on the modal content.\n            </p>\n\n            <h3>Animation</h3>\n\n            <p>\n                The background overlay animates once a modal is launched to grab a user’s attention and\n                retain their focus.\n            </p>\n\n            <clr-modal-animation-design-demo></clr-modal-animation-design-demo>\n\n\n            <h3>Behavior</h3>\n\n            <p>\n                Modals are used in different scenarios. Most notably: alerting the user, confirmation dialogs, and\n                task-oriented workflows.\n            </p>\n\n            <h6>Focus</h6>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <p>\n                        Modals are disruptive. Only use modals when you need the user’s <b>full attention</b>\n                        for the period of time the modal is displayed.\n                    </p>\n                    <h6>Dismissing modals</h6>\n                    <p>\n                        A user needs to <b>actively</b> dismiss a modal. A modal should <b>not</b> disappear on its own.\n                        Taking any of the actions to either cancel or proceed should eventually dismiss the modal.\n                    </p>\n                </div>\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <div class=\"clrweb-DoxMedia is-figure\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 297px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img class=\"clrweb-Img\" src=\"assets/images/documentation/modals/dismissing.png\"\n                                    alt=\"Different ways modals can be dismissed\"/>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                There are multiple ways to dismiss a modal but a user needs to <b>intentionally</b> make\n                                that choice.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"alert alert-warning\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            Clarity Modals are not dismissed when clicking on the background overlay. This prevents losing information or data. An option to override this is available.\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <h6>Stacking modals</h6>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <p>\n                        Modals shouldn’t launch other modals. Stacking modals makes it hard to dismiss them\n                        and confuses the user on their levels of importance.\n                    </p>\n                    <p>If you see a need to stack modals, you should:</p>\n                    <ul class=\"list\">\n                        <li>Seek alternatives to the second modal such as inline expansion within the first one.</li>\n                        <li>Seek alternatives to the use of modals in that scenario and explore alternatives\n                            such as inline task completion.\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 297px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img class=\"clrweb-Img\" src=\"assets/images/documentation/modals/stacking.png\"\n                                    alt=\"Don't stack modals on top of each other\"/>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Stack multiple modals on top of each other.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <h6>Scrolling</h6>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <p>\n                        Scrolling makes it hard for a user to go through the content of your modal or complete the task\n                        assigned. Use scrolling only when absolutely needed.\n                    </p>\n                </div>\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <p>If your modals scroll, make sure:</p>\n                    <ul class=\"list\">\n                        <li>You’re using the right modal size based on your content and supported screen sizes.</li>\n                        <li>Consider alternative components to using modal if the content is too long or\n                            too complex within a modal.\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <p>A static example of a modal with header, body and footer:</p>\n\n            <div class=\"alert alert-warning bump-down\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                        </div>\n                            <span class=\"alert-text\">\n                                IE fix: When the modal dialog is open, extend the\n                                <code class=\"clr-code\">.no-scrolling</code> class on the\n                                <code class=\"clr-code\">body</code> tag so that the content behind the\n                                backdrop does not scroll.\n                                Remove the class when the modal dialog is closed.\n                            </span>\n                    </div>\n                </div>\n            </div>\n\n            <clr-modal-static-demo></clr-modal-static-demo>\n\n            <h3>Sizes</h3>\n\n            <p>\n                In addition to the default, medium size, Clarity modals come in two optional sizes:\n                large and small. To use an optional size, add <code class=\"clr-code\">modal-sm</code>\n                or <code class=\"clr-code\">modal-lg</code> class to your modal-dialog.\n            </p>\n\n            <clr-modal-sizes-demo></clr-modal-sizes-demo>\n\n            <h3 id=\"modal-backdrop\">Modal Backdrop</h3>\n\n            <p>Here is an example of a backdrop to use behind your modal, when you display it over a page:</p>\n\n            <clr-modal-backdrop-demo></clr-modal-backdrop-demo>\n\n            <h3 id=\"animation\">Animation</h3>\n\n            <p>Modals and backdrops support fading animations. Clarity recommends using <code\n                class=\"clr-code\">fadeDown</code> on the <code class=\"clr-code\">modal-dialog</code>\n                and <code class=\"clr-code\">fade</code> on the <code class=\"clr-code\">modal-backdrop</code>.\n                These animations hide the modal and backdrop by default. Adding or removing the <code\n                class=\"clr-code\">in</code> class animates the modal or backdrop in or out,\n                respectively.</p>\n\n            <clr-modal-animation-demo></clr-modal-animation-demo>\n\n            <h2 id=\"angular-component\">Angular Component</h2>\n\n            <h3 id=\"summary-of-options\">Summary of Options</h3>\n\n            <vcd-api-viewer [component]=\"documentationEntry?.component\"> </vcd-api-viewer>\n\n            <h4>Examples</h4>\n\n            <vcd-example-viewer\n              *ngFor=\"let exampleDescriptor of documentationEntry?.examples\"\n              [exampleEntry]=\"exampleDescriptor\"\n            >\n            </vcd-example-viewer>\n\n            <h3 id=\"api-reference\">API Reference</h3>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Method</th>\n                    <th class=\"hidden-xs-down\">Arguments</th>\n                    <th class=\"hidden-xs-down\">Return Value</th>\n                    <th class=\"left\">Description</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">open()</td>\n                    <td class=\"hidden-xs-down\">N/A</td>\n                    <td class=\"hidden-xs-down\">N/A</td>\n                    <td class=\"left\">Manually opens the modal.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">close()</td>\n                    <td class=\"hidden-xs-down\">N/A</td>\n                    <td class=\"hidden-xs-down\">N/A</td>\n                    <td class=\"left\">\n                        Manually closes the modal if <code class=\"clr-code\">clrModalClosable</code> is not set to <code\n                        class=\"clr-code\">false</code>.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "ModalSizeDesignDemo",
      "id": "component-ModalSizeDesignDemo-5f146f22b4f522c6834ef60151fe4fb9",
      "file": "src/website/src/app/documentation/demos/modal/modal-size-design.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-size-design-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-size-design.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "extraLarge",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [114]
        },
        {
          "name": "large",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [114]
        },
        {
          "name": "medium",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [114]
        },
        {
          "name": "small",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-modal-size-design-demo',\n  templateUrl: './modal-size-design.demo.html',\n})\nexport class ModalSizeDesignDemo {\n  // Booleans to open each example modal\n  public small: boolean = false;\n  public medium: boolean = false;\n  public large: boolean = false;\n  public extraLarge: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-sm-3\">\n        <div class=\"clrweb-DoxMedia is-horizontal\">\n            <div class=\"clrweb-DoxMedia-block is-colorblock\">\n                <div class=\"clrweb-DoxMedia-img\">\n                    S\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n                <h6>Small Modal</h6>\n                <div>Width: 288px</div>\n                <button type=\"button\" class=\"btn btn-sm btn-link no-margin\" (click)=\"small = true\">Launch</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"clr-col-12 clr-col-sm-3\">\n        <div class=\"clrweb-DoxMedia is-horizontal\">\n            <div class=\"clrweb-DoxMedia-block is-colorblock\">\n                <div class=\"clrweb-DoxMedia-img\">\n                    M\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n                <h6>Medium Modal</h6>\n                <div>Width: 576px</div>\n                <button type=\"button\" class=\"btn btn-sm btn-link no-margin\" (click)=\"medium = true\">Launch</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"clr-col-12 clr-col-sm-3\">\n        <div class=\"clrweb-DoxMedia is-horizontal\">\n            <div class=\"clrweb-DoxMedia-block is-colorblock\">\n                <div class=\"clrweb-DoxMedia-img\">\n                    L\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n                <h6>Large Modal</h6>\n                <div>Width: 864px</div>\n                <button type=\"button\" class=\"btn btn-sm btn-link no-margin\" (click)=\"large = true\">Launch</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"clr-col-12 clr-col-sm-3\">\n        <div class=\"clrweb-DoxMedia is-horizontal\">\n            <div class=\"clrweb-DoxMedia-block is-colorblock\">\n                <div class=\"clrweb-DoxMedia-img\">\n                    XL\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n                <h6>X-Large Modal</h6>\n                <div>Width: 1152px</div>\n                <button type=\"button\" class=\"btn btn-sm btn-link no-margin\" (click)=\"extraLarge = true\">Launch</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-modal [(clrModalOpen)]=\"small\" [clrModalSize]=\"'sm'\">\n    <h3 class=\"modal-title\">Small modal</h3>\n    <div class=\"modal-body\">I am a small modal.</div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"small = false\">Ok</button>\n    </div>\n</clr-modal>\n\n<clr-modal [(clrModalOpen)]=\"medium\" [clrModalSize]=\"'md'\">\n    <h3 class=\"modal-title\">Medium modal</h3>\n    <div class=\"modal-body\">I am a medium modal. I am the default size.</div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"medium = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"medium = false\">Ok</button>\n    </div>\n</clr-modal>\n\n<clr-modal [(clrModalOpen)]=\"large\" [clrModalSize]=\"'lg'\">\n    <h3 class=\"modal-title\">Large modal</h3>\n    <div class=\"modal-body\">I am a large modal.</div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"large = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"large = false\">Ok</button>\n    </div>\n</clr-modal>\n\n<clr-modal [(clrModalOpen)]=\"extraLarge\" [clrModalSize]=\"'xl'\">\n    <h3 class=\"modal-title\">Extra large modal</h3>\n    <div class=\"modal-body\">I am an extra large modal.</div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"extraLarge = false\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"extraLarge = false\">Ok</button>\n    </div>\n</clr-modal>\n"
    },
    {
      "name": "ModalSizesDemo",
      "id": "component-ModalSizesDemo-62de06c285b6217747ba0e6a1601e633",
      "file": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-sizes-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-sizes.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "example1",
          "defaultValue": "EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-sm\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`;\n\nconst EXAMPLE_1 = `\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-lg\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`;\n\nconst EXAMPLE_2 = `\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-xl\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`;\n\n@Component({\n  selector: 'clr-modal-sizes-demo',\n  templateUrl: './modal-sizes.demo.html',\n})\nexport class ModalSizesDemo {\n  example = EXAMPLE;\n  example1 = EXAMPLE_1;\n  example2 = EXAMPLE_2;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>1. .modal-sm</h6>\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        <div class=\"modal static\">\n            <div class=\"modal-dialog modal-sm\" role=\"dialog\" aria-hidden=\"true\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                        </button>\n                        <h3 class=\"modal-title\">Small modal</h3>\n                    </div>\n                    <div class=\"modal-body\">\n                        I am a small modal.\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-backdrop static\" aria-hidden=\"true\"></div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n\n\n<h6>2. .modal-lg</h6>\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        <div class=\"modal static\">\n            <div class=\"modal-dialog modal-lg\" role=\"dialog\" aria-hidden=\"true\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                        </button>\n                        <h3 class=\"modal-title\">Large modal</h3>\n                    </div>\n                    <div class=\"modal-body\">\n                        I am a large modal.\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                        <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-backdrop static\" aria-hidden=\"true\"></div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n\n<h6>3. .modal-xl</h6>\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        <div class=\"modal static\">\n            <div class=\"modal-dialog modal-xl\" role=\"dialog\" aria-hidden=\"true\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                        </button>\n                        <h3 class=\"modal-title\">Extra large modal</h3>\n                    </div>\n                    <div class=\"modal-body\">\n                        I am an extra large modal.\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                        <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-backdrop static\" aria-hidden=\"true\"></div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n"
    },
    {
      "name": "ModalStaticDemo",
      "id": "component-ModalStaticDemo-3af10347d8965f89f6460afc0eef4d1e",
      "file": "src/website/src/app/documentation/demos/modal/modal-static.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-static-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-static.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"modal\">\n    <div class=\"modal-dialog\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n                <h3 class=\"modal-title\">I have a nice title</h3>\n            </div>\n            <div class=\"modal-body\">\n                <p>But not much to say...</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`;\n\n@Component({\n  selector: 'clr-modal-static-demo',\n  templateUrl: './modal-static.demo.html',\n})\nexport class ModalStaticDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        <div class=\"modal static\">\n            <div class=\"modal-dialog\" role=\"dialog\" aria-hidden=\"true\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                        </button>\n                        <h3 class=\"modal-title\">I have a nice title</h3>\n                    </div>\n                    <div class=\"modal-body\">\n                        <p>But not much to say...</p>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                        <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"modal-backdrop static\" aria-hidden=\"true\"></div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "ModalStyleDesignDemo",
      "id": "component-ModalStyleDesignDemo-b44ac77862c8c96867c731b3b684d44b",
      "file": "src/website/src/app/documentation/demos/modal/modal-style-design.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{ provide: ÇlrFocusTrapTracker, useClass: DisableFocusTrap }"
        }
      ],
      "selector": "clr-modal-style-design-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./modal-style-design.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "basic",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ÇlrFocusTrapTracker } from '@clr/angular';\nimport { DisableFocusTrap } from '../../utils/disable-focus-trap';\n\n@Component({\n  selector: 'clr-modal-style-design-demo',\n  templateUrl: './modal-style-design.demo.html',\n  host: {\n    '[class.in-place-takeover]': 'true',\n  },\n  providers: [{ provide: ÇlrFocusTrapTracker, useClass: DisableFocusTrap }],\n})\nexport class ModalStyleDesignDemo {\n  public basic: boolean = true;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        <div *ngIf=\"!basic\" style=\"margin: 0 auto; text-align: center\">\n            <button class=\"btn btn-outline btn-inverse\" (click)=\"basic = true\">Show modal</button>\n        </div>\n        <clr-modal [(clrModalOpen)]=\"basic\" [clrModalStaticBackdrop]=\"true\">\n            <h3 class=\"modal-title\">Add datastore to host</h3>\n            <div class=\"modal-body\">\n                <p>Select a host where you want your datastore to be added.</p>\n\n                <form clrForm clrLayout=\"horizontal\">\n                  <clr-select-container>\n                    <label>Host</label>\n                    <select clrSelect>\n                      <option>10.11.12.13</option>\n                      <option>14.15.16.17</option>\n                      <option>18.19.20.21</option>\n                      <option>22.23.24.25</option>\n                    </select>\n                  </clr-select-container>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-outline\" type=\"button\" (click)=\"basic = false\">Cancel</button>\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"basic = false\">Add</button>\n            </div>\n        </clr-modal>\n    </div>\n</div>\n"
    },
    {
      "name": "NavCodeInfoAlert",
      "id": "component-NavCodeInfoAlert-4707f77708127e7838dc0843e557113a",
      "file": "src/website/src/app/documentation/demos/nav/nav-code-info-alert.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-nav-code-info-alert",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./nav-code-info-alert.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-nav-code-info-alert',\n  templateUrl: './nav-code-info-alert.html',\n})\nexport class NavCodeInfoAlert {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<clr-alert>\n    <div class=\"alert-item\">\n        <span class=\"alert-text\">\n            For code examples on the specific navigation components (header, subnav, sidenav)\n            see <a routerLink=\"../../header\">header</a> documentation.\n        </span>\n    </div>\n</clr-alert>"
    },
    {
      "name": "NavGroupsDemo",
      "id": "component-NavGroupsDemo-cabe008d4551fb4076f43a30215e02be",
      "file": "src/website/src/app/documentation/demos/vertical-nav/nav-groups/nav-groups.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-vertical-nav-groups-demo",
      "styleUrls": ["../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./nav-groups.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "demoCollapsible",
          "defaultValue": "false",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "demoExpandedGroup",
          "defaultValue": "false",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "demoHideIcons",
          "defaultValue": "false",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "demoLongLabel",
          "defaultValue": "false",
          "line": 19,
          "type": "boolean"
        },
        {
          "name": "demoMixedNav",
          "defaultValue": "false",
          "line": 15,
          "type": "boolean"
        },
        {
          "name": "demoMixedNavWithIcons",
          "defaultValue": "false",
          "line": 16,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'clr-vertical-nav-groups-demo',\n  templateUrl: './nav-groups.html',\n  styleUrls: ['../vertical-nav.demo.scss'],\n})\nexport class NavGroupsDemo {\n  @Input() demoHideIcons: boolean = false;\n  @Input() demoMixedNav: boolean = false;\n  @Input() demoMixedNavWithIcons: boolean = false;\n  @Input() demoExpandedGroup: boolean = false;\n  @Input() demoCollapsible: boolean = false;\n  @Input() demoLongLabel: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\" style=\"margin-top: 0\">\n    <div class=\"main-container\" style=\"width: 240px; margin: 12px auto; height: 408px\">\n        <div class=\"content-container\">\n            <clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n                <clr-vertical-nav-group>\n                    <clr-icon shape=\"user\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Normal\n                    <clr-vertical-nav-group-children>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Pidgey\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Rattata\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Spearow\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group class=\"active\" [clrVerticalNavGroupExpanded]=\"demoExpandedGroup\">\n                    <clr-icon shape=\"flame\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Fire\n                    <clr-vertical-nav-group-children>\n                        <a href=\"javascript://\" clrVerticalNavLink class=\"active\">\n                            Charmander\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Charmeleon\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink *ngIf=\"!demoLongLabel\">\n                            Charizard\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink *ngIf=\"demoLongLabel\">\n                            Ultra Rare Mega Charizard (Secret Rare)\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <a href=\"javascript://\" clrVerticalNavLink *ngIf=\"demoMixedNav\">\n                    Ice\n                </a>\n                <a href=\"javascript://\" clrVerticalNavLink *ngIf=\"demoMixedNavWithIcons\">\n                    <clr-icon shape=\"block\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Ice\n                </a>\n                <clr-vertical-nav-group>\n                    <clr-icon shape=\"download-cloud\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Water\n                    <clr-vertical-nav-group-children>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Blastoise\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Squirtle\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Wartortle\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group>\n                    <clr-icon shape=\"bolt\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Electric\n                    <clr-vertical-nav-group-children>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Magnemite\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Pikachu\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Raichu\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <a href=\"javascript://\" clrVerticalNavLink *ngIf=\"demoMixedNav\">\n                    Poison\n                </a>\n                <a href=\"javascript://\" clrVerticalNavLink *ngIf=\"demoMixedNavWithIcons\">\n                    <clr-icon shape=\"sad-face\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Poison\n                </a>\n                <clr-vertical-nav-group *ngIf=\"!demoLongLabel\">\n                    <clr-icon shape=\"bug\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Grass\n                    <clr-vertical-nav-group-children>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Bulbasaur\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Ivysaur\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Venusaur\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group *ngIf=\"demoLongLabel\">\n                    <clr-icon shape=\"bug\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Grass, Fighting, Dragon, Steel, Psychic\n                    <clr-vertical-nav-group-children>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Bulbasaur\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Ivysaur\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Venusaur\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group>\n                    <clr-icon shape=\"block\" clrVerticalNavIcon *ngIf=\"!demoHideIcons\"></clr-icon>\n                    Ice\n                    <clr-vertical-nav-group-children>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Articuno\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Dewgong\n                        </a>\n                        <a href=\"javascript://\" clrVerticalNavLink>\n                            Jynx\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n            </clr-vertical-nav>\n        </div>\n    </div>\n</div>"
    },
    {
      "name": "NavGroupsParentLinksVerticalNavDemo",
      "id": "component-NavGroupsParentLinksVerticalNavDemo-1d33877aefd34c6e477b1c9d94b1bbb6",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-vertical-nav-nav-groups-parent-links-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./nav-groups.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "demoCollapsible",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 146
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 144
        },
        {
          "name": "routesExample",
          "defaultValue": "ROUTES_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 145
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"collapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./normal\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n            Normal\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./fire\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n            Fire\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./electric\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n            Electric\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`;\n\nconst ROUTES_EXAMPLE = `\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal\"\n        },\n        {\n            path: \"normal\",\n            component: NormalPokemon\n        },\n        {\n            path: \"normal/snorlax\",\n            component: Snorlax\n        },\n        {\n            path: \"normal/pidgey\",\n            component: Pidgey\n        },\n        {\n            path: \"electric\",\n            component: ElectricPokemon\n        },\n        {\n            path: \"electric/pikachu\",\n            component: Pikachu\n        },\n        {\n            path: \"electric/raichu\",\n            component: Raichu\n        },\n        {\n            path: \"fire\",\n            component: FirePokemon\n        },\n        {\n            path: \"fire/charmander\",\n            component: Charmander\n        },\n        {\n            path: \"fire/charizard\",\n            component: Charizard\n        },\n        {\n            path: \"credit\",\n            component: Pokedex\n        }\n    ],\n}\n...\n`;\n\n@Component({\n  selector: 'clr-vertical-nav-nav-groups-parent-links-demo',\n  templateUrl: './nav-groups.html',\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class NavGroupsParentLinksVerticalNavDemo {\n  htmlExample = HTML_EXAMPLE;\n  routesExample = ROUTES_EXAMPLE;\n  demoCollapsible: boolean = true;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Nav Groups (with parent link)</h4>\n\n<p>\n    The <code class=\"clr-code\">clr-vertical-nav-group</code> component should be to create\n    nav groups. The links inside of a nav group should be wrapped inside of a\n    <code class=\"clr-code\">clr-vertical-nav-group-children</code> component.\n</p>\n\n<h5>Mixed Navigation</h5>\n\n<p>\n    Navigation Links can also be added directly inside of the\n    <code class=\"clr-code\">clr-vertical-nav</code> without creating a\n    <code class=\"clr-code\">clr-vertical-nav-group</code>\n    to create a mixed navigation.\n</p>\n\n<h5>Lazy Loading Navigation Links</h5>\n\n<p>\n    <code class=\"clr-code\">clrIfExpanded</code> structural directive can be used along with\n    <code class=\"clr-code\">clr-vertical-nav-group-children</code> to lazily load links inside of a\n    <code class=\"clr-code\">clr-vertical-nav-group</code>.\n</p>\n\n<div class=\"clr-example\">\n    <div class=\"main-container\" style=\"height: 432px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a clrVerticalNavLink\n                       routerLink=\"./normal\"\n                       routerLinkActive=\"active\"\n                       [routerLinkActiveOptions]=\"{exact:true}\">\n                        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n                        Normal\n                    </a>\n                    <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n                        <a clrVerticalNavLink\n                           routerLink=\"./normal/pidgey\"\n                           routerLinkActive=\"active\">\n                            Pidgey\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./normal/snorlax\"\n                           routerLinkActive=\"active\">\n                            Snorlax\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a clrVerticalNavLink\n                       routerLink=\"./fire\"\n                       routerLinkActive=\"active\"\n                       [routerLinkActiveOptions]=\"{exact:true}\">\n                        <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n                        Fire\n                    </a>\n                    <clr-vertical-nav-group-children *clrIfExpanded>\n                        <a clrVerticalNavLink\n                           routerLink=\"./fire/charmander\"\n                           routerLinkActive=\"active\">\n                            Charmander\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./fire/charizard\"\n                           routerLinkActive=\"active\">\n                            Charizard\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a clrVerticalNavLink\n                       routerLink=\"./electric\"\n                       routerLinkActive=\"active\"\n                       [routerLinkActiveOptions]=\"{exact:true}\">\n                        <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n                        Electric\n                    </a>\n                    <clr-vertical-nav-group-children *clrIfExpanded>\n                        <a clrVerticalNavLink\n                           routerLink=\"./electric/pikachu\"\n                           routerLinkActive=\"active\">\n                            Pikachu\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./electric/raichu\"\n                           routerLinkActive=\"active\">\n                            Raichu\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n                    <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n                    Credit\n                </a>\n            </clr-vertical-nav>\n            <div class=\"content-area demo-allow-scroll\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p></p>\n\n<clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            For the nav group highlighting to work, the application\n            <a target=\"_blank\" href=\"https://angular.io/guide/router\">routing</a>\n            should be hierarchical. Please refer to the example\n            below.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n\n<clr-code-snippet [clrCode]=\"routesExample\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n\n\n\n"
    },
    {
      "name": "NavigationDemo",
      "id": "component-NavigationDemo-d1448c55bd67bdda551c31cb0165707a",
      "file": "src/website/src/app/documentation/demos/nav/navigation.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-navigation-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./navigation.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "expanded",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-navigation-demo',\n  templateUrl: './navigation.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class NavigationDemo extends ClarityDocComponent {\n  expanded: boolean = false;\n\n  constructor() {\n    super('navigation');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"a-sound-navigation-layout-offers-a-high-degree-of-discoverability-and-feedback-letting-users-know-where-they-are-at-all-times-and-ensuring-they-can-easily-get-to-where-they-want-to-go\">\n            A sound navigation layout offers a high degree of discoverability and feedback, letting users know where\n            they are at all times and ensuring they can easily get to where they want to go.</h5>\n\n        <div id=\"code-examples\">\n            <p>Clarity has three navigation components: header, subnav, and sidenav. Following are\n                the possible combinations of navigation.</p>\n\n            <h6 id=\"header-as-primary-navigation-and-subnav-as-secondary-navigation\">1. Header as primary\n                navigation and subnav as secondary navigation</h6>\n\n            <clr-layout-no-sidenav-demo></clr-layout-no-sidenav-demo>\n\n            <h6 id=\"header-as-primary-navigation-and-sidenav-as-secondary-navigation\">2. Header as primary\n                navigation and sidenav as secondary navigation</h6>\n            <clr-layout-no-subnav-demo></clr-layout-no-subnav-demo>\n\n            <h6 id=\"header-as-primary-navigation\">3. Header as primary navigation</h6>\n            <clr-layout-only-header-demo></clr-layout-only-header-demo>\n\n            <h6 id=\"sidenav-as-primary-navigation\">4. Sidenav as primary navigation</h6>\n            <clr-layout-only-sidenav-primary></clr-layout-only-sidenav-primary>\n\n            <h6 id=\"subnav-as-primary-navigation-and-sidenav-as-secondary-navigation\">5. Subnav as primary\n                navigation and sidenav as secondary navigation</h6>\n            <clr-layout-only-subnav-primary></clr-layout-only-subnav-primary>\n\n            <p>\n                <a id=\"responsive_navigation\"></a>\n            </p>\n\n            <h3 id=\"responsive-navigation\">Responsive Navigation</h3>\n\n            <p>Clarity provides three levels of navigation represented by the following classnames:</p>\n\n            <ul class=\"list cozy-sm\">\n                <li><code class=\"clr-code\">.header-nav</code> in the application <a routerLink=\"../../header\">header</a>.\n                </li>\n                <li><code class=\"clr-code\">.subnav</code> immediately below the header.</li>\n                <li><code class=\"clr-code\">.sidenav</code> inside the content container. See <a\n                    routerLink=\"../../sidenav\">sidenav</a>.\n                </li>\n            </ul>\n\n            <p>\n                Clarity supports responsive navigation as follows:\n            </p>\n            <ul class=\"list cozy-sm\">\n                <li>\n                    Up to two levels of navigation can be made responsive.\n                </li>\n                <li>\n                    Responsiveness is triggered below the <code class=\"clr-code\">768px</code> breakpoint by\n                    adding the <code class=\"clr-code\">clr-nav-level</code> input to the navigation level.\n                </li>\n                <li>\n                    A <code class=\"clr-code\">clr-nav-level</code> value of <code class=\"clr-code\">1</code>\n                    is for primary navigation and <code class=\"clr-code\">2</code> is for secondary navigation.\n                </li>\n                <li>\n                    On small screens:\n                    <ul class=\"list cozy-sm\">\n                        <li>\n                            The hamburger icon appears on the left of the header and triggers the primary navigation\n                        </li>\n                        <li>\n                            The overflow icon appears on the right and triggers the secondary navigation\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n\n            <div class=\"alert alert-info cozy\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            Although three levels of navigation make sense on large screens, this number of levels\n                            becomes hard to navigate on smaller screens. Clarity recommends that applications for\n                            tablets and phones are not exact replicas of the desktop versions, but rather a different,\n                            simplified experience.\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <p><strong>Note:</strong> Responsive navigation requires you to use the following Angular\n                components to build the layout of your application:</p>\n\n            <ul class=\"list\">\n                <li><code class=\"clr-code\">clr-main-container</code></li>\n                <li><code class=\"clr-code\">clr-header</code></li>\n            </ul>\n\n            <h4 id=\"examples\">Examples</h4>\n\n            <h6>1. Header navigation as primary and sidenav as secondary</h6>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12\">\n                    <h6>Large screens</h6>\n                    <img class=\"img-fluid cozy-sm\"\n                        src=\"assets/images/documentation/navigation/header_sidenav_large.png?1481774401150832000\"/>\n                </div>\n                <div class=\"clr-col-12 clr-col-sm-8 clr-col-md-6\">\n                    <h6>Header navigation on small screens</h6>\n                    <img class=\"img-fluid cozy-sm\"\n                        src=\"assets/images/documentation/navigation/navLevel1.gif?1481774401150832000\"/>\n                </div>\n                <div class=\"clr-col-12 clr-col-sm-8 clr-col-md-6\">\n                    <h6>Sidenav on small screens</h6>\n                    <img class=\"img-fluid cozy-sm\"\n                        src=\"assets/images/documentation/navigation/navLevel2.gif?1481774401150832000\"/>\n                </div>\n            </div>\n\n            <clr-responsive-nav-header-sidenav-demo></clr-responsive-nav-header-sidenav-demo>\n\n            <h6>2. Subnav as primary and sidenav as secondary</h6>\n\n            <clr-responsive-nav-subnav-sidenav-demo></clr-responsive-nav-subnav-sidenav-demo>\n        </div>\n\n        <div id=\"design-guidelines\">\n        <h3 id=\"guidelines\">Designing Navigation</h3>\n\n        <p>When establishing your navigation model, consider:</p>\n\n        <ul class=\"list\">\n            <li>The key use cases of your app</li>\n            <li>The proper hierarchy and what belongs in the primary navigation versus what goes in the secondary or\n                lower levels of navigation\n            </li>\n            <li>Whether to orient the navigation horizontally, vertically, or both</li>\n            <li>Whether responsiveness needs to be part of your platform strategy</li>\n        </ul>\n\n        <!-- ### Navigation Components\n\n      Clarity has three navigation components: header, subnav, and sidenav.  These components:\n\n      {: .list}\n      - Are independent of one another and can be used alone or in combination. This gives you flexibility in designing your navigation schema.\n      - Support a consistent visual hierarchy between levels of navigation.\n      - Adapt to changes in screen size according to predefined breakpoints and grid alignment. This responsiveness helps your app scale from small to large screens.\n      -->\n\n        <h3 id=\"using-the-navigation-patterns\">Using the Navigation Patterns</h3>\n\n        <h4 id=\"header\">Header</h4>\n\n        <div class=\"clr-row\">\n            <div class=\"clr-col-12 clr-col-md-5\">\n                <img src=\"assets/images/documentation/app-layout/Header.png?1481774401150832000\" alt=\"Header\"/>\n            </div>\n            <div class=\"clr-col-12 clr-col-md-7\">\n                <div>The <a routerLink=\"../../header\">header</a> is for primary navigation. Benefits of this\n                    navigation pattern are:\n                </div>\n                <ul class=\"list\">\n                    <li>Users often look for navigation in the header.</li>\n                    <li>Top-level navigation is kept simple–the recommended number of links is 2 to 4.</li>\n                    <li>Navigation does not take real estate away from the content area.</li>\n                </ul>\n                <p>\n                    Conversely, the header supports other items (search and setting) and the navigation links might\n                    become crowded.\n                </p>\n            </div>\n        </div>\n\n        <h4 id=\"subnav\">Subnav</h4>\n\n        <div class=\"clr-row\">\n            <div class=\"clr-col-12 clr-col-md-5\">\n                <img src=\"assets/images/documentation/app-layout/subnav.png?1481774401150832000\" alt=\"Subnav\"/>\n            </div>\n            <div class=\"clr-col-12 clr-col-md-7\">\n                <div>\n                    Use the <a routerLink=\"../../header\">subnav</a> for primary navigation when you need the\n                    sidebar for secondary navigation and any of the following apply:\n                </div>\n                <ul class=\"list\">\n                    <li>You have more links than can fit in the header.</li>\n                    <li>The text of your links is too long for the header.</li>\n                    <li>You want to limit the header to search and settings.</li>\n                </ul>\n            </div>\n        </div>\n\n        <h4 id=\"sidenav\">Sidenav</h4>\n\n        <div class=\"clr-row\">\n            <div class=\"clr-col-12 clr-col-md-5\">\n                <img src=\"assets/images/documentation/app-layout/sidenav.png?1481774401150832000\" alt=\"Sidenav\"/>\n            </div>\n            <div class=\"clr-col-12 clr-col-md-7\">\n                <div>\n                    Benefits of the <a routerLink=\"../../sidenav\">sidenav</a> are that it:\n                </div>\n                <ul class=\"list\">\n                    <li>Is a familiar navigation pattern for users.</li>\n                    <li>Accommodates a large number of links, becoming vertically scrollable when content exceeds the\n                        view port.\n                    </li>\n                    <li>Supports progressive disclosure of a hierarchy.</li>\n                    <li>Supports categorization of links.</li>\n                </ul>\n                <p>\n                    Conversely, the sidenav takes real estate away from the content area. Also, on mobile, the hierarchy\n                    within the sidenav should be kept to a minimum.\n                </p>\n            </div>\n        </div>\n\n        <h3 id=\"combining-navigation-patterns\">Combining Navigation Patterns</h3>\n\n        <h4>Header and sidenav</h4>\n        <div class=\"clr-row cozy-sm\">\n            <div class=\"clr-col-12 clr-col-md-5\">\n                <img src=\"assets/images/documentation/app-layout/header_sidenav.png?1481774401150832000\"\n                     alt=\"Header &amp; Sidenav\"/>\n            </div>\n            <div class=\"clr-col-12 clr-col-md-7\">\n                <div>\n                    A common pattern for two levels of navigation. The primary navigation is in the header, secondary in\n                    the sidenav.\n                </div>\n            </div>\n        </div>\n\n        <h4>Header and subnav</h4>\n        <div class=\"clr-row cozy-sm\">\n            <div class=\"clr-col-12 clr-col-md-5\">\n                <img src=\"assets/images/documentation/app-layout/header_subnav.png?1481774401150832000\"\n                     alt=\"Header &amp; Subnav\"/>\n            </div>\n            <div class=\"clr-col-12 clr-col-md-7\">\n                <div>\n                    Because both patterns are horizontal, use this combination only when the secondary navigation does\n                    not warrant the space taken up by the sidenav.\n                </div>\n            </div>\n        </div>\n\n        <h4>Subnav and sidenav</h4>\n        <div class=\"clr-row cozy-sm\">\n            <div class=\"clr-col-12 clr-col-md-5\">\n                <img src=\"assets/images/documentation/app-layout/subnav_sidenav.png?1481774401150832000\"\n                     alt=\"Subnav &amp; Sidenav\"/>\n            </div>\n            <div class=\"clr-col-12 clr-col-md-7\">\n                <div>\n                    Use the subnav for primary navigation when the links do not fit in the header.\n                </div>\n            </div>\n        </div>\n\n        <h4>Header, subnav and sidenav</h4>\n        <div class=\"clr-row cozy-sm\">\n            <div class=\"clr-col-12 clr-col-md-5\">\n                <img src=\"assets/images/documentation/app-layout/header_subnav_sidenav.png?1481774401150832000\"\n                     alt=\"Header, Subnav &amp; Sidenav\"/>\n            </div>\n            <div class=\"clr-col-12 clr-col-md-7\">\n                <div>\n                    This schema will not result in a clear visual hierarchy because of the adjacent horizontal patterns.\n                    An alternative is to use the header and sidenav and then provide further navigation in the content\n                    area by using tabs.\n                </div>\n            </div>\n        </div>\n\n        <h3 class=\"cozy\" id=\"navigation_layouts\">Responsive Navigation Layouts</h3>\n\n        <p>Responsiveness is supported for the primary and secondary levels of navigation. If your app has more than two\n            levels of navigation, you’ll need to build a custom solution. At three levels, the navigation becomes\n            increasingly nested and too complex\n            for Clarity to provide a single responsive solution.</p>\n\n        <p>For layouts 768px or under:</p>\n\n        <ul class=\"list\">\n            <li>Primary navigation targets move to a hamburger menu on the left.</li>\n            <li>Secondary navigation targets move to an overflow menu on the right.</li>\n        </ul>\n\n        <div class=\"clr-row cozy-sm\">\n            <div class=\"clr-col-12\">\n                <img src=\"assets/images/documentation/app-layout/header_small.png?1481774401150832000\" class=\"img-fluid\"\n                     alt=\"Header on Small Screens\"/>\n            </div>\n        </div>\n\n        <p>When the user clicks the menu icon, a temporary side panel opens with the navigation targets. Content is not\n            accessible while the panel is open.</p>\n\n        <div class=\"clr-row\">\n            <div class=\"clr-col-12 clr-col-md-6 cozy-sm\">\n                <img src=\"assets/images/documentation/app-layout/header_nav_level_2.png?1481774401150832000\"\n                     class=\"img-fluid\" alt=\"Header Triggers Pressed\"/>\n            </div>\n            <div class=\"clr-col-12 clr-col-md-6 cozy-sm\">\n                <img src=\"assets/images/documentation/app-layout/header_nav_level_1.png?1481774401150832000\"\n                     class=\"img-fluid\" alt=\"Header Triggers Pressed\"/>\n            </div>\n        </div>\n        </div>\n    </article>\n\n</clr-doc-wrapper>\n"
    },
    {
      "name": "NavsDemo",
      "id": "component-NavsDemo-cac0cf60925cbd5665f5bb8ed76d7bcb",
      "file": "src/website/src/app/documentation/demos/nav/navs.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-nav-demo-navs",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./navs.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-nav-demo-navs',\n  templateUrl: './navs.demo.html',\n})\nexport class NavsDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h3>Nav Tabs</h3>\n\n<div>\n    Clarity navigation style can be applied by extending the <code class=\"clr-code\">.nav</code> class. By default the navigation takes up 100% width of the parent container. A navigation link is marked active by adding the <code class=\"clr-code\">.active</code>    class on it.\n</div>\n\n<div class=\"clr-example\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a href=\"javascript://\" class=\"nav-link active\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n            <a href=\"javascript://\" class=\"nav-link\">Management</a>\n        </li>\n        <li class=\"nav-item\">\n            <a href=\"javascript://\" class=\"nav-link\">Cloud</a>\n        </li>\n        <li class=\"nav-item\">\n            <a href=\"javascript://\" class=\"nav-link\">Tenants</a>\n        </li>\n    </ul>\n</div>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;ul class=\"nav\"&gt;\n    &lt;li class=\"nav-item\"&gt;\n        &lt;a class=\"nav-link active\" href=\"javascript://\"&gt;Dashboard&lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=\"nav-item\"&gt;\n        &lt;a class=\"nav-link\" href=\"javascript://\"&gt;Management&lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=\"nav-item\"&gt;\n        &lt;a class=\"nav-link\" href=\"javascript://\"&gt;Cloud&lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=\"nav-item\"&gt;\n        &lt;a class=\"nav-link\" href=\"javascript://\"&gt;Tenants&lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n"
    },
    {
      "name": "NewLayoutAlertComponent",
      "id": "component-NewLayoutAlertComponent-6b565fcc00c7e1ce0e5e931ac86846ab",
      "file": "src/website/src/app/documentation/utils/new-layout-alert.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-web-new-layout-alert",
      "styleUrls": [],
      "styles": [],
      "template":
        "<div class=\"alert alert-info\">\n    <div class=\"alert-item\">\n        <span class=\"alert-text\">\n            This is a test of our new documentation layout. We streamlined the content\n            and moved the design and usage guidelines to the top. Please give us feedback on\n            <a href=\"https://twitter.com/VMwareClarity\" target=\"_blank\">twitter</a>\n            and\n            <a href=\"https://github.com/vmware/clarity\" target=\"_blank\">github</a>\n            to let us know what you think!\n        </span>\n    </div>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-web-new-layout-alert',\n  template: `\n    <div class=\"alert alert-info\">\n        <div class=\"alert-item\">\n            <span class=\"alert-text\">\n                This is a test of our new documentation layout. We streamlined the content \n                and moved the design and usage guidelines to the top. Please give us feedback on \n                <a href=\"https://twitter.com/VMwareClarity\" target=\"_blank\">twitter</a>\n                and\n                <a href=\"https://github.com/vmware/clarity\" target=\"_blank\">github</a>\n                to let us know what you think!\n            </span>\n        </div>\n    </div>\n  `,\n})\nexport class NewLayoutAlertComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "NewsComponent",
      "id": "component-NewsComponent-2faf280a5b877cca9e6cbcdaa8718b3a",
      "file": "src/website/src/app/news/news.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "news",
      "styleUrls": ["./news.component.scss"],
      "styles": [],
      "template": "Some news here",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_hasGitHub",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 55,
          "modifierKind": [112]
        },
        {
          "name": "_hasIcons",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [112]
        },
        {
          "name": "_subscriptions",
          "defaultValue": "[]",
          "type": "Subscription[]",
          "optional": false,
          "description": "",
          "line": 43,
          "modifierKind": [112]
        },
        {
          "name": "breakingChanges",
          "type": "QueryList<BreakingChange>",
          "optional": false,
          "description": "",
          "line": 28,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "BreakingChange"
            }
          ]
        },
        {
          "name": "bugFixes",
          "type": "QueryList<BugFix>",
          "optional": false,
          "description": "",
          "line": 29,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "BugFix"
            }
          ]
        },
        {
          "name": "commit",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "current",
          "defaultValue": "RELEASES.current",
          "type": "",
          "optional": false,
          "description": "",
          "line": 67
        },
        {
          "name": "currentTemplate",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "hasDarkTheme",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "nbBreakingChanges",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "nbBugFixes",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "nbNewComponents",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "newComponents",
          "type": "QueryList<NewComponent>",
          "optional": false,
          "description": "",
          "line": 30,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "NewComponent"
            }
          ]
        },
        {
          "name": "newPackageFormat",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "releaseDate",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "releaseNumber",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "releaseTemplates",
          "type": "QueryList<Release>",
          "optional": false,
          "description": "",
          "line": 27,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "Release"
            }
          ]
        },
        {
          "name": "sketchVersion",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "versions",
          "defaultValue": "VERSIONS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 68
        }
      ],
      "methodsClass": [
        {
          "name": "newPackages",
          "args": [
            {
              "name": "a",
              "type": ""
            },
            {
              "name": "b",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 119,
          "jsdoctags": [
            {
              "name": "a",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "b",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 137
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 149
        },
        {
          "name": "orderVersions",
          "args": [
            {
              "name": "a",
              "type": ""
            },
            {
              "name": "b",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 97,
          "jsdoctags": [
            {
              "name": "a",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "b",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "resetCounts",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 105
        },
        {
          "name": "setInfo",
          "args": [
            {
              "name": "releaseNo",
              "type": "string"
            },
            {
              "name": "releaseInfo",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 123,
          "jsdoctags": [
            {
              "name": "releaseNo",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "releaseInfo",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setTemplate",
          "args": [
            {
              "name": "releaseNo",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 111,
          "jsdoctags": [
            {
              "name": "releaseNo",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { AfterViewInit, Component, OnDestroy, QueryList, TemplateRef, ViewChildren } from '@angular/core';\nimport { compareReleases, VERSIONS } from './release-page/release-organizer';\nimport { Release } from './release/release.directive';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BreakingChange } from './counters/breaking-change.directive';\nimport { BugFix } from './counters/bug-fix.directive';\nimport { NewComponent } from './counters/new-component.directive';\nimport { Subscription } from 'rxjs';\n\nimport * as RELEASES from '../../releases/release-list.json';\n\n@Component({\n  selector: 'news',\n  // templateUrl: '../../releases/final-template/auto-generated-news.component.html',\n  template: 'Some news here',\n  styleUrls: ['./news.component.scss'],\n  host: {\n    '[class.content-container]': 'true',\n  },\n})\nexport class NewsComponent implements OnDestroy, AfterViewInit {\n  @ViewChildren(Release) releaseTemplates: QueryList<Release>;\n  @ViewChildren(BreakingChange) breakingChanges: QueryList<BreakingChange>;\n  @ViewChildren(BugFix) bugFixes: QueryList<BugFix>;\n  @ViewChildren(NewComponent) newComponents: QueryList<NewComponent>;\n\n  nbBreakingChanges: number;\n  nbBugFixes: number;\n  nbNewComponents: number;\n  newPackageFormat = false;\n  hasDarkTheme = false;\n\n  releaseNumber: string;\n  releaseDate: string;\n  sketchVersion: string;\n  commit: string;\n\n  private _subscriptions: Subscription[] = [];\n\n  private _hasIcons: boolean = false;\n\n  get hasIcons(): boolean {\n    return this._hasIcons;\n  }\n\n  set hasIcons(value: boolean) {\n    this._hasIcons = value;\n  }\n\n  private _hasGitHub: boolean = false;\n\n  get hasGitHub(): boolean {\n    return this._hasGitHub;\n  }\n\n  set hasGitHub(value: boolean) {\n    this._hasGitHub = value;\n  }\n\n  currentTemplate: TemplateRef<any>;\n\n  current = RELEASES.current;\n  versions = VERSIONS;\n\n  get releaseArr(): Release[] {\n    if (this.releaseTemplates) {\n      return this.releaseTemplates.toArray();\n    } else {\n      return [];\n    }\n  }\n\n  constructor(private router: Router) {\n    this._subscriptions.push(\n      this.router.events.subscribe((change: any) => {\n        if (change instanceof NavigationEnd) {\n          const url: string[] = change.url.split('/');\n          const urlLength: number = url.length;\n          this.resetCounts();\n          setTimeout(() => {\n            if (urlLength > 0 && url[urlLength - 1] !== 'news') {\n              this.setTemplate(url[urlLength - 1]);\n            } else if (url[urlLength - 1] === 'news') {\n              this.setTemplate(this.current);\n            }\n          }, 0);\n        }\n      })\n    );\n  }\n\n  orderVersions(a, b) {\n    if (parseFloat(b.key.substring(1)) > 1) {\n      return parseFloat(b.key.substring(1)) - parseFloat(a.key.substring(1));\n    } else {\n      return parseFloat(b.key.substring(3)) - parseFloat(a.key.substring(3));\n    }\n  }\n\n  resetCounts(): void {\n    this.nbBreakingChanges = 0;\n    this.nbNewComponents = 0;\n    this.nbBugFixes = 0;\n  }\n\n  setTemplate(releaseNo: string): void {\n    const tempArr: Release[] = this.releaseArr.filter(release => release.clrRelease === releaseNo);\n    if (tempArr.length > 0) {\n      this.currentTemplate = tempArr[0].templateRef;\n      this.setInfo(releaseNo, RELEASES.all[releaseNo]);\n    }\n  }\n\n  newPackages(a, b) {\n    return compareReleases(this.releaseNumber, '0.11.0');\n  }\n\n  setInfo(releaseNo: string, releaseInfo: any): void {\n    this.releaseNumber = releaseNo;\n    this.releaseDate = releaseInfo.date;\n    this.sketchVersion = releaseInfo.sketch;\n    this.commit = releaseInfo.commit;\n    this.hasIcons = compareReleases('0.5.4', releaseNo) >= 0;\n    this.hasDarkTheme = compareReleases('0.11.0', releaseNo) >= 0;\n    this.hasGitHub = compareReleases('0.6.0', releaseNo) >= 0;\n    this.nbBreakingChanges = this.breakingChanges ? this.breakingChanges.length : 0;\n    this.nbBugFixes = this.bugFixes ? this.bugFixes.length : 0;\n    this.nbNewComponents = this.newComponents ? this.newComponents.length : 0;\n    this.newPackageFormat = compareReleases('0.11.0-beta', releaseNo) >= 0;\n  }\n\n  ngAfterViewInit() {\n    this._subscriptions.push(\n      this.bugFixes.changes.subscribe(() => {\n        setTimeout(() => {\n          this.nbBreakingChanges = this.breakingChanges ? this.breakingChanges.length : 0;\n          this.nbBugFixes = this.bugFixes ? this.bugFixes.length : 0;\n          this.nbNewComponents = this.newComponents ? this.newComponents.length : 0;\n        }, 0);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import './../../styles/variables';\n@import './../../styles/mixins';\n@import '../../styles/clarity-imports';\n\n.content-area > section {\n  max-width: $clrweb-content-maxwidth;\n\n  &:first-child {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  h2:first-of-type {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\nul.list {\n  margin-top: $clr_baselineRem_4px;\n  margin-left: 1.3em;\n}\n\nul.whats-new-highlights {\n  margin-top: $clr_baselineRem_0_5;\n\n  h6 + p {\n    margin-top: 0;\n  }\n\n  & > li {\n    margin-top: $clr_baselineRem_1;\n\n    &:first-child {\n      margin-top: 0;\n\n      & > h6 {\n        margin-top: 0;\n      }\n    }\n\n    & > h6 {\n      font-weight: normal;\n      font-size: $clr_baselineRem_0_75;\n      margin-top: $clr_baselineRem_2;\n      color: $clr-color-neutral-1000;\n      margin-bottom: $clr_baselineRem_4px;\n    }\n  }\n}\n\n.page-whats-new {\n  h2 {\n    margin-top: $clr_baselineRem_1_5;\n  }\n\n  h4 {\n    margin-top: $clr_baselineRem_1;\n  }\n\n  h2 + h4 {\n    margin-top: $clr_baselineRem_0_25;\n  }\n}\n\n%block-title-styles {\n  margin-top: 0;\n  font-size: $clr_baselineRem_0_5;\n  line-height: normal;\n  font-weight: 600;\n}\n\n%block-content-styles {\n  margin-top: 0;\n  font-size: $clr_baselineRem_0_75;\n  line-height: 1.2em;\n}\n\n.whats-new-summary {\n  margin-right: 0;\n  margin-top: $clr_baselineRem_0_5;\n  padding-bottom: $clr_baselineRem_0_25;\n  padding-top: $clr_baselineRem_0_5;\n  position: static;\n\n  .summary-blocks {\n    &::before,\n    &::after {\n      display: table;\n      clear: both;\n      content: '';\n    }\n  }\n\n  .summary-block {\n    float: left;\n    margin-right: $clr_baselineRem_0_75;\n  }\n\n  .summary-block-title {\n    @extend %block-title-styles;\n  }\n\n  .summary-block-details {\n    @extend %block-content-styles;\n    & > .count {\n      font-weight: 600;\n    }\n  }\n\n  .whats-new-mediablock {\n    width: $clr_baselineRem_8;\n    margin-bottom: 0;\n    display: inline-flex;\n\n    .icon {\n      height: $clr_baselineRem_2;\n      width: $clr_baselineRem_2;\n    }\n\n    .description {\n      margin-top: 0;\n      margin-left: $clr_baselineRem_0_25;\n\n      & > .title {\n        @extend %block-title-styles;\n      }\n\n      & > p.title + p {\n        @extend %block-content-styles;\n        font-size: $clr_baselineRem_0_5;\n        width: $clr_baselineRem_5;\n      }\n    }\n  }\n}\n\n.breaking-change-alert {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.nobr {\n  white-space: nowrap;\n}\n\nhr {\n  color: $clr-color-neutral-300;\n  border: 0 none;\n  border-bottom: $clr-global-borderwidth solid $clr-color-neutral-300;\n}\n\n@mixin responsiveWhatsNewMediaBlocks {\n  .whats-new-summary {\n    .whats-new-mediablock {\n      width: 100%;\n      margin-bottom: 0;\n      margin-left: 0;\n      padding: $clr_baselineRem_0_25 $clr_baselineRem_0_5;\n    }\n  }\n}\n\n@media (min-width: 992px) and (max-width: 1032px) {\n  @include responsiveWhatsNewMediaBlocks;\n}\n\n@media (max-width: 790px) {\n  @include responsiveWhatsNewMediaBlocks;\n}\n\n@media (max-width: 464px) {\n  .whats-new-summary {\n    .summary-block {\n      float: none;\n      padding: $clr_baselineRem_0_25 0;\n      margin: 0 $clr_baselineRem_0_25;\n    }\n  }\n}\n",
          "styleUrl": "./news.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "router",
            "type": "Router"
          }
        ],
        "line": 76,
        "jsdoctags": [
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnDestroy", "AfterViewInit"],
      "accessors": {
        "hasIcons": {
          "name": "hasIcons",
          "setSignature": {
            "name": "hasIcons",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 51,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "hasIcons",
            "type": "boolean",
            "returnType": "boolean",
            "line": 47
          }
        },
        "hasGitHub": {
          "name": "hasGitHub",
          "setSignature": {
            "name": "hasGitHub",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 61,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "hasGitHub",
            "type": "boolean",
            "returnType": "boolean",
            "line": 57
          }
        },
        "releaseArr": {
          "name": "releaseArr",
          "getSignature": {
            "name": "releaseArr",
            "type": "[]",
            "returnType": "Release[]",
            "line": 70
          }
        }
      }
    },
    {
      "name": "NoLazyLoadingVerticalNavDemo",
      "id": "component-NoLazyLoadingVerticalNavDemo-45a649087a0774d6be3c375e2e6758c8",
      "file":
        "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-vertical-nav-no-lazy-loading-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./no-lazy-loading.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "demoCollapsible",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 146
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 144
        },
        {
          "name": "routesExample",
          "defaultValue": "ROUTES_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 145
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"collapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./normal\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n            Normal\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./fire\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n            Fire\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./electric\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n            Electric\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`;\n\nconst ROUTES_EXAMPLE = `\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal\"\n        },\n        {\n            path: \"normal\",\n            component: NormalPokemon\n        },\n        {\n            path: \"snorlax\",\n            component: Snorlax\n        },\n        {\n            path: \"pidgey\",\n            component: Pidgey\n        },\n        {\n            path: \"electric\",\n            component: ElectricPokemon\n        },\n        {\n            path: \"pikachu\",\n            component: Pikachu\n        },\n        {\n            path: \"raichu\",\n            component: Raichu\n        },\n        {\n            path: \"fire\",\n            component: FirePokemon\n        },\n        {\n            path: \"charmander\",\n            component: Charmander\n        },\n        {\n            path: \"charizard\",\n            component: Charizard\n        },\n        {\n            path: \"credit\",\n            component: Pokedex\n        }\n    ],\n}\n...\n`;\n\n@Component({\n  selector: 'clr-vertical-nav-no-lazy-loading-demo',\n  templateUrl: './no-lazy-loading.html',\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class NoLazyLoadingVerticalNavDemo {\n  htmlExample = HTML_EXAMPLE;\n  routesExample = ROUTES_EXAMPLE;\n  demoCollapsible: boolean = true;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Unstructured Routes (Nav Groups with parent links)</h4>\n\n<p>\n    If your application routing isn't hierarchical as shown\n    <a target=\"_blank\" href=\"documentation/vertical-nav/nav-groups\">here</a>,\n    we recommend that you use the Nav Groups\n    without lazily loading the Nav Links.\n</p>\n\n<div class=\"clr-example\">\n    <div class=\"main-container\" style=\"height: 432px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a clrVerticalNavLink\n                       routerLink=\"./normal\"\n                       routerLinkActive=\"active\"\n                       [routerLinkActiveOptions]=\"{exact:true}\">\n                        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n                        Normal\n                    </a>\n                    <clr-vertical-nav-group-children>\n                        <a clrVerticalNavLink\n                           routerLink=\"./pidgey\"\n                           routerLinkActive=\"active\">\n                            Pidgey\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./snorlax\"\n                           routerLinkActive=\"active\">\n                            Snorlax\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a clrVerticalNavLink\n                       routerLink=\"./fire\"\n                       routerLinkActive=\"active\"\n                       [routerLinkActiveOptions]=\"{exact:true}\">\n                        <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n                        Fire\n                    </a>\n                    <clr-vertical-nav-group-children>\n                        <a clrVerticalNavLink\n                           routerLink=\"./charmander\"\n                           routerLinkActive=\"active\">\n                            Charmander\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./charizard\"\n                           routerLinkActive=\"active\">\n                            Charizard\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <a clrVerticalNavLink\n                       routerLink=\"./electric\"\n                       routerLinkActive=\"active\"\n                       [routerLinkActiveOptions]=\"{exact:true}\">\n                        <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n                        Electric\n                    </a>\n                    <clr-vertical-nav-group-children>\n                        <a clrVerticalNavLink\n                           routerLink=\"./pikachu\"\n                           routerLinkActive=\"active\">\n                            Pikachu\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./raichu\"\n                           routerLinkActive=\"active\">\n                            Raichu\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n                    <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n                    Credit\n                </a>\n            </clr-vertical-nav>\n            <div class=\"content-area demo-allow-scroll\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<clr-code-snippet [clrCode]=\"routesExample\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n\n\n"
    },
    {
      "name": "NormalPokemonDemo",
      "id": "component-NormalPokemonDemo-100851fe2961b1a0c6c02b133d5a4273",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/normal.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-normal-pokemon-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Normal</h4>\n<p>\n    The Normal type is the most basic type of Pokémon.\n    They are very common and appear from the very first route you visit.\n    Most Normal Pokémon are single type, but there is a large contingent having a second type of Flying.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Normal</h4>\n<p>\n    The Normal type is the most basic type of Pokémon. \n    They are very common and appear from the very first route you visit. \n    Most Normal Pokémon are single type, but there is a large contingent having a second type of Flying.\n</p>\n`;\n@Component({\n  selector: 'clr-normal-pokemon-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Normal</h4>\n        <p>\n            The Normal type is the most basic type of Pokémon. \n            They are very common and appear from the very first route you visit. \n            Most Normal Pokémon are single type, but there is a large contingent having a second type of Flying.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n`,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class NormalPokemonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "OldListsInCardsDemo",
      "id": "component-OldListsInCardsDemo-6b0fb32547607b365dfa817fd41d05e3",
      "file": "src/website/src/app/documentation/demos/lists/old-lists-in-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-old-lists-in-cards-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./old-lists-in-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-old-lists-in-cards-demo',\n  templateUrl: './old-lists-in-cards.html',\n})\nexport class OldListsInCardsDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example nomargin\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card card-block\">\n                <div class=\"card-title\">\n                    Unordered Lists\n                </div>\n                <div class=\"card-divider\"></div>\n                <div class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </div>\n                <div class=\"card-divider\"></div>\n                <ul class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n                <div class=\"card-divider\"></div>\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card card-block\">\n                <div class=\"card-title\">\n                    Ordered Lists\n                </div>\n                <div class=\"card-divider\"></div>\n                <div class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </div>\n                <div class=\"card-divider\"></div>\n                <ol class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ol class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ol class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                </ol>\n                <div class=\"card-divider\"></div>\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n        <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n            <div class=\"card card-block\">\n                <h3 class=\"card-title\">Unstyled Lists</h3>\n                <div class=\"card-divider\"></div>\n                <p class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </p>\n                <div class=\"card-divider\"></div>\n                <ul class=\"list-unstyled\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n                <div class=\"card-divider\"></div>\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;clr-row&quot;&gt;\n    &lt;div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\"&gt;\n        &lt;div class=&quot;card card-block&quot;&gt;\n            &lt;div class=&quot;card-title&quot;&gt;\n                Unordered Lists\n            &lt;/div&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;div class=&quot;card-text&quot;&gt;\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            &lt;/div&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;ul class=&quot;list&quot;&gt;\n                &lt;li&gt;Ullamco Laboris&lt;/li&gt;\n                &lt;li&gt;\n                    Nisi Ut Aliquip\n                    &lt;ul class=&quot;list&quot;&gt;\n                        &lt;li&gt;Exercitation&lt;/li&gt;\n                        &lt;li&gt;Laboris&lt;/li&gt;\n                        &lt;li&gt;Commodo&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n                &lt;li&gt;Consequat&lt;/li&gt;\n                &lt;li&gt;Excepteur sint occaecat cupidatat non proident&lt;/li&gt;\n                &lt;li&gt;Enim ad Minim&lt;/li&gt;\n                &lt;li&gt;\n                    Occeaecat\n                    &lt;ul class=&quot;list-unstyled&quot;&gt;\n                        &lt;li&gt;Exercitation&lt;/li&gt;\n                        &lt;li&gt;Laboris&lt;/li&gt;\n                        &lt;li&gt;Commodo&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;a class=&quot;btn btn-primary&quot;&gt;Action&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\"&gt;\n        &lt;div class=&quot;card card-block&quot;&gt;\n            &lt;div class=&quot;card-title&quot;&gt;\n                Ordered Lists\n            &lt;/div&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;div class=&quot;card-text&quot;&gt;\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            &lt;/div&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;ol class=&quot;list&quot;&gt;\n                &lt;li&gt;Ullamco Laboris&lt;/li&gt;\n                &lt;li&gt;\n                    Nisi Ut Aliquip\n                    &lt;ol class=&quot;list&quot;&gt;\n                        &lt;li&gt;Exercitation&lt;/li&gt;\n                        &lt;li&gt;Laboris&lt;/li&gt;\n                        &lt;li&gt;Commodo&lt;/li&gt;\n                    &lt;/ol&gt;\n                &lt;/li&gt;\n                &lt;li&gt;Consequat&lt;/li&gt;\n                &lt;li&gt;Excepteur sint occaecat cupidatat non proident&lt;/li&gt;\n                &lt;li&gt;Enim ad Minim&lt;/li&gt;\n                &lt;li&gt;\n                    Occeaecat\n                    &lt;ol class=&quot;list-unstyled&quot;&gt;\n                        &lt;li&gt;Exercitation&lt;/li&gt;\n                        &lt;li&gt;Laboris&lt;/li&gt;\n                        &lt;li&gt;Commodo&lt;/li&gt;\n                    &lt;/ol&gt;\n                &lt;/li&gt;\n            &lt;/ol&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;a class=&quot;btn btn-primary&quot;&gt;Action&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\"&gt;\n        &lt;div class=&quot;card card-block&quot;&gt;\n            &lt;h3 class=&quot;card-title&quot;&gt;Unstyled Lists&lt;/h3&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;p class=&quot;card-text&quot;&gt;\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n            &lt;/p&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;ul class=&quot;list-unstyled&quot;&gt;\n                &lt;li&gt;Ullamco Laboris&lt;/li&gt;\n                &lt;li&gt;\n                    Nisi Ut Aliquip\n                    &lt;ul class=&quot;list&quot;&gt;\n                        &lt;li&gt;Exercitation&lt;/li&gt;\n                        &lt;li&gt;Laboris&lt;/li&gt;\n                        &lt;li&gt;Commodo&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n                &lt;li&gt;Consequat&lt;/li&gt;\n                &lt;li&gt;Excepteur sint occaecat cupidatat non proident&lt;/li&gt;\n                &lt;li&gt;Enim ad Minim&lt;/li&gt;\n                &lt;li&gt;\n                    Occeaecat\n                    &lt;ul class=&quot;list-unstyled&quot;&gt;\n                        &lt;li&gt;Exercitation&lt;/li&gt;\n                        &lt;li&gt;Laboris&lt;/li&gt;\n                        &lt;li&gt;Commodo&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;div class=&quot;card-divider&quot;&gt;&lt;/div&gt;\n            &lt;a class=&quot;btn btn-primary&quot;&gt;Action&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "OldProgressBarCardsDemo",
      "id": "component-OldProgressBarCardsDemo-7f3f846eac3643db5cb9b9b88f6bb9d8",
      "file": "src/website/src/app/documentation/demos/progress-bars/old-progress-bar-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-old-progress-bar-cards-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./old-progress-bar-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-old-progress-bar-cards-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './old-progress-bar-cards.html',\n})\nexport class OldProgressBarCardsDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Progress Bar in Cards</h4>\n<div class=\"clr-row force-fit\">\n    <div class=\"card clr-col-12 clr-col-sm-4\" style=\"margin-right:1.25rem\">\n        <div class=\"card-block\">\n            <h4 class=\"card-title\">Card title</h4>\n            <p class=\"card-text\">Here is a progress bar at the very top of a card, above the header.</p>\n        </div>\n        <div class=\"card-block\">\n            <div class=\"progress top\">\n                <progress value=\"33\" max=\"100\"></progress>\n            </div>\n            <a href=\"javascript://\" class=\"card-link\">Click</a>\n        </div>\n    </div>\n    <div class=\"card clr-col-12 clr-col-sm-4\">\n        <div class=\"card-block\">\n            <h4 class=\"card-title\">Card title</h4>\n            <p class=\"card-text\">Here is a progress bar at the top of a card's footer.</p>\n        </div>\n        <div class=\"card-block\">\n            <div class=\"progress\">\n                <progress value=\"77\" max=\"100\"></progress>\n            </div>\n            <a href=\"javascript://\" class=\"card-link\">Click</a>\n        </div>\n    </div>\n</div>\n\n<h4>Static Progress Bars in Cards</h4>\n<div class=\"clr-row force-fit\">\n    <div class=\"card clr-col-12 clr-col-sm-4\" style=\"margin-right:1.25rem\">\n        <div class=\"card-block\">\n            <h4 class=\"card-title\">Card title</h4>\n            <p class=\"card-text\">Here is a progress bar at the very top of a card, above the header.</p>\n        </div>\n        <div class=\"card-block\">\n            <div class=\"progress-static top\">\n                <div class=\"progress-meter\" data-value=\"33\"></div>\n            </div>\n            <a href=\"javascript://\" class=\"card-link\">Click</a>\n        </div>\n    </div>\n    <div class=\"card clr-col-12 clr-col-sm-4\">\n        <div class=\"card-block\">\n            <h4 class=\"card-title\">Card title</h4>\n            <p class=\"card-text\">Here is a progress bar at the top of a card's footer, above the buttons.</p>\n        </div>\n        <div class=\"card-block\">\n            <div class=\"progress-static\">\n                <div class=\"progress-meter\" data-value=\"77\"></div>\n            </div>\n            <a href=\"javascript://\" class=\"card-link\">Click</a>\n        </div>\n    </div>\n</div>\n\n<h4>Inline Progress Bars</h4>\n<div class=\"clr-row force-fit\">\n    <div class=\"card clr-col-12 clr-col-sm-6\">\n        <div class=\"card-block\">\n            <h4 class=\"card-title\">Card title</h4>\n            <p class=\"card-text\">Here is a progress bar at the very top of a card.</p>\n            <div class=\"progress-block\">\n                <label>Label</label>\n                <div class=\"progress-static\">\n                    <div class=\"progress-meter\" data-value=\"25\"></div>\n                </div>\n            </div>\n            <div class=\"progress-block\">\n                <label>Longer Label</label>\n                <div class=\"progress-static\">\n                    <div class=\"progress-meter\" data-value=\"44\"></div>\n                </div>\n            </div>\n            <div class=\"progress-block\">\n                <label>Really, Really, Really Long Label</label>\n                <div class=\"progress-static\">\n                    <div class=\"progress-meter\" data-value=\"65\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-block\">\n            <div class=\"progress-static top\">\n                <div class=\"progress-meter\" data-value=\"33\"></div>\n            </div>\n            <a href=\"javascript://\" class=\"card-link\">Click</a>\n        </div>\n    </div>\n</div>\n"
    },
    {
      "name": "PageNotFoundComponent",
      "id": "component-PageNotFoundComponent-b221abbe087394153073897b778d2621",
      "file": "src/website/src/app/page-not-found/page-not-found.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "page-not-found",
      "styleUrls": ["page-not-found.component.scss"],
      "styles": [],
      "templateUrl": ["page-not-found.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'page-not-found',\n  templateUrl: 'page-not-found.component.html',\n  styleUrls: ['page-not-found.component.scss'],\n  host: {\n    '[class.content-container]': 'true',\n  },\n})\nexport class PageNotFoundComponent {\n  constructor() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../styles/clarity-imports';\n\n.clrweb-error-block {\n  margin: 0 auto;\n  text-align: center;\n  padding-top: $clr_baselineRem_1;\n}\n\n.clrweb-error-block .logo-block img {\n  width: 100%;\n  max-width: $clr_baselineRem_15_833;\n  text-align: center;\n  height: $clr_baselineRem_11_9167;\n  opacity: 0.28;\n}\n\n.clrweb-error-block p.error-code {\n  font-size: $clr_baselineRem_2_5;\n  font-weight: 200;\n  line-height: 1em;\n  opacity: 0.5;\n  margin-top: 0;\n}\n",
          "styleUrl": "page-not-found.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 16
      },
      "templateData":
        "<div class=\"clrweb-error-block\">\n    <div class=\"logo-block\">\n        <img src=\"assets/images/clarity-logo.svg\" />\n    </div>\n    <p class=\"error-code\">404</p>\n    <p class=\"error-blurb\">We couldn't find the page you requested.</p>\n</div>"
    },
    {
      "name": "PasswordDemo",
      "id": "component-PasswordDemo-3f55a39980fb012cc5a2a06f978ab6dd",
      "file": "src/website/src/app/documentation/demos/password/password.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./password.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleOne",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "exampleThree",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "exampleTwo",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "ngBasic",
          "defaultValue": "NgBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "ngHelpers",
          "defaultValue": "NgHelpers",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "ngLabel",
          "defaultValue": "NgLabel",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "uiBasic",
          "defaultValue": "UiBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "uiError",
          "defaultValue": "UiError",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "uiFull",
          "defaultValue": "UiFull",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nimport * as UiBasic from 'raw-loader!./ui/basic.html';\nimport * as UiFull from 'raw-loader!./ui/full.html';\nimport * as UiError from 'raw-loader!./ui/error.html';\n\nimport * as NgBasic from 'raw-loader!./ng/basic.html';\nimport * as NgLabel from 'raw-loader!./ng/label.html';\nimport * as NgHelpers from 'raw-loader!./ng/helpers.html';\n\n@Component({\n  templateUrl: './password.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class PasswordDemo extends ClarityDocComponent {\n  constructor() {\n    super('password');\n  }\n\n  exampleOne = '';\n  exampleTwo = '';\n  exampleThree = '';\n\n  uiBasic: any = UiBasic;\n  uiFull: any = UiFull;\n  uiError: any = UiError;\n\n  ngBasic: any = NgBasic;\n  ngLabel: any = NgLabel;\n  ngHelpers: any = NgHelpers;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 24
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"false\">\n    <article>\n        <h5 class=\"component-summary\" id=\"examples\">\n            Password fields are a specialized input field with the ability to toggle between the masked field or to view the password in plain text. Clarity supports both a CSS only and Angular component. You may wish to review the general <a routerLink=\"../../forms\">forms</a> documentation about form controls.\n        </h5>\n\n        <h2 id=\"forms-code-samples\">Angular Password Component</h2>\n\n        <p>If you are using Angular, the recommended approach is to always use the <code class=\"clr-code\">ClrPassword</code> directive on your inputs to help manage the form control. By using <code class=\"clr-code\">ClrPassword</code>, you'll automatically be able to leverage built in validation, helper text, and layout features in forms.</p>\n\n        <p>The traditional HTML password input only shows the password field format, where the text is hidden from the user and shows dots in places of characters for security. This component also provides a toggle icon to allow users to view the text they've typed into the field, which has become a common design pattern for usability. If you don't need or want this feature, then you may prefer to use the CSS version described below.</p>\n\n        <h4>Basic password</h4>\n\n        <p>This is the default way to define a password field if you don't have a need for a label or validation. You need to add <code class=\"clr-code\">clrPassword</code> to your input to wire up the directive. Notice, it is not necessary to add <code class=\"clr-code\">type=\"password\"</code> as it is handled automatically. It will only work if you have the control wired up with either a template driven form or reactive form. You must wrap the input inside  the <code class=\"clr-code\">ClrPasswordContainer</code> element.</p>\n\n        <p></p>\n\n        <clr-password-container>\n            <input clrPassword placeholder=\"Password\" name=\"password\" [(ngModel)]=\"exampleOne\" />\n        </clr-password-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngBasic\"></clr-code-snippet>\n\n        <h4>Labels</h4>\n\n        <p>Adding a label is simple, as you just add the label inside of the <code class=\"clr-code\">ClrPasswordContainer</code> component. It will automatically get laid out correctly in the form.</p>\n\n        <p></p>\n\n        <form clrForm>\n            <clr-password-container>\n                <label>Password</label>\n                <input clrPassword placeholder=\"Password please!\" name=\"password\" [(ngModel)]=\"exampleTwo\" />\n            </clr-password-container>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngLabel\"></clr-code-snippet>\n\n        <h4>Helper and error messages</h4>\n\n        <p>The password form control wires up with the validations placed on an password control, such as <code class=\"clr-code\">required</code> or even custom built validators in Angular. Under the hood, it looks at the <code class=\"clr-code\">NgControl</code> values to determine the control validity, and display the helper text or error message accordingly.</p>\n\n        <p>Note: the validation only displays an error after the user has left focus on an input. This is for better UX where the user doesn't see an error while they are still typing.</p>\n\n        <p></p>\n\n        <form clrForm>\n            <clr-password-container>\n                <label>Password</label>\n                <input placeholder=\"Password\" clrPassword [(ngModel)]=\"exampleThree\" name=\"password\" required minlength=\"8\" />\n                <clr-control-helper>Must contain at least 8 characters with at least one of them a special character like !@#$%^&*)</clr-control-helper>\n                <clr-control-error *clrIfError=\"'required'\">This field is required!</clr-control-error>\n                <clr-control-error *clrIfError=\"'minlength'\">It must be at least 8 characters!</clr-control-error>\n            </clr-password-container>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngHelpers\"></clr-code-snippet>\n\n\n\n\n        <h2 id=\"css-component\">CSS Password Component</h2>\n\n        <p>Password inputs can be used without Angular, but without some of the automatic interactivity. If you intend to create your own components, here are the basic features you'll need to build out.</p>\n\n        <h4>Basic password</h4>\n\n        <p>It is possible to display the password input by simply having the input as a standalone element not inside of a form. This may be useful in simple cases where you don't need a full form and just an inline input.</p>\n\n        <p></p>\n\n        <input type=\"password\" id=\"basic\" placeholder=\"Password please!\" class=\"clr-input\">\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiBasic\"></clr-code-snippet>\n\n        <h4>Full password display</h4>\n\n        <p>Each form control has a <code class=\"clr-code\">.clr-form-control</code> wrapper, as well as a specific DOM structure necessary to layout the form control as desired. This works with all layout options as well without needing to change the DOM structure in any way.</p>\n\n        <p></p>\n\n        <form class=\"clr-form\">\n            <div class=\"clr-form-control\">\n                <label for=\"full\" class=\"clr-control-label\">Full password</label>\n                <div class=\"clr-control-container\">\n                <div class=\"clr-input-wrapper\">\n                    <input type=\"password\" id=\"full\" placeholder=\"Password please!\" class=\"clr-input\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                </div>\n                <span class=\"clr-subtext\">Helper Text</span>\n                </div>\n            </div>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiFull\"></clr-code-snippet>\n\n        <h4>Error state</h4>\n\n        <p>To signify an error state, you need to add the <code class=\"clr-code\">.clr-error</code> class to the <code class=\"clr-code\">.clr-control-container</code> element. This will show the <code class=\"clr-code\">.clr-validate-icon</code> and turn the <code class=\"clr-code\">.clr-subtext</code> message to red. If you have helper text that needs to change to error content, you'll have to handle the hiding and showing of that content inside of the <code class=\"clr-code\">.clr-subtext</code> element.</p>\n\n        <p></p>\n\n        <form class=\"clr-form clr-form-compact\">\n            <div class=\"clr-form-control clr-row\">\n                <label for=\"error\" class=\"clr-control-label clr-col-12 clr-col-md-2\">Password</label>\n                <div class=\"clr-control-container clr-col-12 clr-col-md-10\">\n                    <div class=\"clr-input-wrapper\">\n                        <input type=\"password\" id=\"error\" placeholder=\"Password please!\" class=\"clr-input\">\n                        <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    </div>\n                    <span class=\"clr-subtext\">Helper Text</span>\n                </div>\n            </div>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiError\"></clr-code-snippet>\n\n\n\n\n        <div>\n            <h3 id=\"guidelines\">Design Guidelines</h3>\n\n            <div class=\"alert alert-info\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            The UX design guidelines documentation is currently a work in progress, and will be updated when they are ready.\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"accessibility-guidelines\">\n            <h2 id=\"accessibility\">Accessibility</h2>\n\n            <p>\n                For applications that use the <code class=\"clr-code\">ClrPassword</code> directive and the associated\n                <code class=\"clr-code\">ClrPasswordContainer</code> component there is built in support that adds accessible\n                behavior to the control and its form. This behavior includes:\n            </p>\n            <p></p>\n            <ol>\n                <li>\n                    Programmatically associating the correct label <code class=\"clr-code\">for</code>\n                    attribute with the <code class=\"clr-code\">id</code> of the input</li>\n                <li>\n                    Automatic wiring up of the <code class=\"clr-code\">aria-describedby</code> behavior with associated\n                    <code class=\"clr-code\">clr-control-error</code> elements\n                </li>\n                <li>\n                    An <code class=\"clr-code\">aria-live</code> region that can notify screen readers about changes in\n                    the control error state\n                </li>\n                <li>\n                    Adds the label to a general form summary for screen readers when the control is in an error state\n                    after a form submit\n                </li>\n            </ol>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "PidgeyDemo",
      "id": "component-PidgeyDemo-48542b90048381d235b394d6b0de7e4f",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pidgey.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-pidgey-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Pidgey</h4>\n<p>\n    Pidgey has an extremely sharp sense of direction.\n    It is capable of unerringly returning home to its nest,\n    however far it may be removed from its familiar surroundings.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Pidgey</h4>\n<p>\n    Pidgey has an extremely sharp sense of direction. \n    It is capable of unerringly returning home to its nest, \n    however far it may be removed from its familiar surroundings.\n</p>`;\n\n@Component({\n  selector: 'clr-pidgey-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Pidgey</h4>\n        <p>\n            Pidgey has an extremely sharp sense of direction. \n            It is capable of unerringly returning home to its nest, \n            however far it may be removed from its familiar surroundings.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n    `,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class PidgeyDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "PikachuDemo",
      "id": "component-PikachuDemo-7ae52ed35130af98a2c0fcdb774f5075",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pikachu.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-pikachu-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Pikachu</h4>\n<p>\n    Whenever Pikachu comes across something new, it blasts it with a jolt of electricity.\n    If you come across a blackened berry, it's evidence that\n    this Pokémon mistook the intensity of its charge.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Pikachu</h4>\n<p>\n    Whenever Pikachu comes across something new, it blasts it with a jolt of electricity.\n    If you come across a blackened berry, it's evidence that\n    this Pokémon mistook the intensity of its charge.\n</p>`;\n\n@Component({\n  selector: 'clr-pikachu-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Pikachu</h4>\n        <p>\n            Whenever Pikachu comes across something new, it blasts it with a jolt of electricity.\n            If you come across a blackened berry, it's evidence that\n            this Pokémon mistook the intensity of its charge.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n    `,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class PikachuDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "PoisonPokemonDemo",
      "id": "component-PoisonPokemonDemo-05a1be6c90129ba22bb467976c63f8d7",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/poison.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-poison-pokemon-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Poison</h4>\n<p>\n    The Poison type is regarded as one of the weakest offensively.\n    Prior to Pokémon X/Y it was super-effective only against Grass\n    (many of which are dual Poison so neutralizes the effect). It now has an\n    extra advantage against the new Fairy type. In the first generation it was\n    also super-effective against Bug but this was changed. It fares a little better\n    defensively but its best advantage is through status moves like Toxic.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Poison</h4>\n<p>\n    The Poison type is regarded as one of the weakest offensively. \n    Prior to Pokémon X/Y it was super-effective only against Grass \n    (many of which are dual Poison so neutralizes the effect). It now has an \n    extra advantage against the new Fairy type. In the first generation it was \n    also super-effective against Bug but this was changed. It fares a little better \n    defensively but its best advantage is through status moves like Toxic.\n</p>\n`;\n@Component({\n  selector: 'clr-poison-pokemon-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Poison</h4>\n        <p>\n            The Poison type is regarded as one of the weakest offensively. \n            Prior to Pokémon X/Y it was super-effective only against Grass \n            (many of which are dual Poison so neutralizes the effect). It now has an \n            extra advantage against the new Fairy type. In the first generation it was \n            also super-effective against Bug but this was changed. It fares a little better \n            defensively but its best advantage is through status moves like Toxic.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n`,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class PoisonPokemonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "PokedexDemo",
      "id": "component-PokedexDemo-70243768d4c7c2b583c915654beb0c81",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokedex.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-pokedex-credit-demo",
      "styleUrls": [],
      "styles": [],
      "template":
        "<b clrFocusOnViewInit>Credit: </b>\n<a target=\"_blank\" href=\"https://www.pokemon.com/us/pokedex/\">Pokédex</a>\n and\n<a target=\"_blank\" href=\"https://pokemondb.net\">PokémonDB</a>\n\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<b clrFocusOnViewInit>Credit: </b>\n<a target=\"_blank\" href=\"https://www.pokemon.com/us/pokedex/\">Pokédex</a> and \n<a target=\"_blank\" href=\"https://pokemondb.net\">PokémonDB</a>`;\n\n@Component({\n  selector: 'clr-pokedex-credit-demo',\n  template: `\n        <b clrFocusOnViewInit>Credit: </b>\n        <a target=\"_blank\" href=\"https://www.pokemon.com/us/pokedex/\">Pokédex</a>\n         and \n        <a target=\"_blank\" href=\"https://pokemondb.net\">PokémonDB</a>\n\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n        \n    `,\n})\nexport class PokedexDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "PokemonDemo",
      "id": "component-PokemonDemo-ca6f0a60870b804866273e42940d2076",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokemon.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-pokemon-credit-demo",
      "styleUrls": [],
      "styles": [],
      "template":
        "<b clrFocusOnViewInit>Credit: </b>\n<a target=\"_blank\" href=\"https://www.pokemon.com/us/\">Pokémon</a>\n\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<b clrFocusOnViewInit>Credit: </b>\n<a target=\"_blank\" href=\"https://www.pokemon.com/us/\">Pokémon</a>`;\n\n@Component({\n  selector: 'clr-pokemon-credit-demo',\n  template: `\n        <b clrFocusOnViewInit>Credit: </b>\n        <a target=\"_blank\" href=\"https://www.pokemon.com/us/\">Pokémon</a>\n\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n    `,\n})\nexport class PokemonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "PrimaryButtonDemo",
      "id": "component-PrimaryButtonDemo-5ea9227f6b82dc5cacc2bf0442365f85",
      "file": "src/website/src/app/documentation/demos/buttons/primary-button.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-primary-button",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./primary-button.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<button class=\"btn btn-primary\">Primary</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-primary-button',\n  templateUrl: './primary-button.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class PrimaryButtonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Primary Button</h4>\n<button class=\"btn btn-primary\">Primary</button>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "ProgressBarAnimationsDemo",
      "id": "component-ProgressBarAnimationsDemo-90c091c4aeef8b6b9c69bdd1e387030c",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-animations.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-animations-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-animations.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "examples",
          "type": "ProgBarExample[]",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ProgBarExample } from './progbar-example';\n\n@Component({\n  selector: 'clr-progress-bar-animations-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-animations.html',\n})\nexport class ProgressBarAnimationsDemo {\n  examples: ProgBarExample[];\n\n  constructor() {\n    this.examples = [\n      new ProgBarExample('progress-fade', 'Fade Out'),\n      new ProgBarExample('flash progress-fade', 'Flash Then Fade'),\n    ];\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 15
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div *ngFor=\"let example of examples\" class=\"progbar-examples\">\n    <h4>{{example.title}}</h4>\n    <div [ngClass]=\"example.cssClassnames()\">\n        <progress value=\"{{example.value}}\" max=\"100\" [attr.data-displayval]=\"example.value + '%'\"></progress>\n        <span *ngIf=\"example.isLabeled\">{{example.value}}%</span>\n    </div>\n    <p><button class=\"btn btn-outline\" (click)=\"example.start()\">Show</button></p>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;h4&gt;Fade Out&lt;/h4&gt;\n&lt;div class=&quot;progress progress-fade&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Flash Then Fade&lt;/h4&gt;\n&lt;div class=&quot;progress flash progress-fade&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Flash Red, No Fade&lt;/h4&gt;\n&lt;div class=&quot;progress flash-danger&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Labeled With Success Flash And Fade&lt;/h4&gt;\n&lt;div class=&quot;progress flash progress-fade labeled&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarCardsDemo",
      "id": "component-ProgressBarCardsDemo-0fbf6d82a978a0d8a4b12cefde9aec23",
      "file": "src/website/src/app/documentation/demos/card/progress-bar-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-cards-demo",
      "styleUrls": ["../progress-bars/progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"progress top\">\n                    <progress value=\"...\" max=\"100\"></progress>\n                </div>\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">...</p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">...</p>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"progress\">\n                    <progress value=\"...\" max=\"100\"></progress>\n                </div>\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-progress-bar-cards-demo',\n  styleUrls: ['../progress-bars/progress-bars.demo.scss'],\n  templateUrl: './progress-bar-cards.html',\n})\nexport class ProgressBarCardsDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "../progress-bars/progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-sm-4\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <div class=\"progress top\">\n                        <progress value=\"33\" max=\"100\"></progress>\n                    </div>\n                    <h4 class=\"card-title\">Card title</h4>\n                    <p class=\"card-text\">Here is a progress bar at the very top of a card, above the header.</p>\n                </div>\n                <div class=\"card-footer\">\n                    <a href=\"javascript://\" class=\"card-link\">Click</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-12 clr-col-sm-4\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h4 class=\"card-title\">Card title</h4>\n                    <p class=\"card-text\">Here is a progress bar at the top of a card's footer, above the buttons.</p>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"progress\">\n                        <progress value=\"77\" max=\"100\"></progress>\n                    </div>\n                    <a href=\"javascript://\" class=\"card-link\">Click</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "ProgressBarCardsDemo",
      "id": "component-ProgressBarCardsDemo-dfdb86803077032fa265c3c8e50e4086-1",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-cards-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-progress-bar-cards-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-cards.html',\n})\nexport class ProgressBarCardsDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "ProgressBarCardsDemo-1",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-sm-4\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <div class=\"progress top\">\n                        <progress value=\"33\" max=\"100\"></progress>\n                    </div>\n                    <h4 class=\"card-title\">Card title</h4>\n                    <p class=\"card-text\">Here is a progress bar at the very top of a card, above the header.</p>\n                </div>\n                <div class=\"card-footer\">\n                    <a href=\"javascript://\" class=\"card-link\">Click</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-12 clr-col-sm-4\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h4 class=\"card-title\">Card title</h4>\n                    <p class=\"card-text\">Here is a progress bar at the top of a card's footer, above the buttons.</p>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"progress\">\n                        <progress value=\"77\" max=\"100\"></progress>\n                    </div>\n                    <a href=\"javascript://\" class=\"card-link\">Click</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;clr-row&quot;&gt;\n    &lt;div class=&quot;clr-col-12 clr-col-sm-4&quot;&gt;\n        &lt;div class=&quot;card&quot;&gt;\n            &lt;div class=&quot;card-block&quot;&gt;\n                &lt;div class=&quot;progress top&quot;&gt;\n                    &lt;progress value=&quot;...&quot; max=&quot;100&quot;&gt;&lt;/progress&gt;\n                &lt;/div&gt;\n                &lt;h4 class=&quot;card-title&quot;&gt;Card title&lt;/h4&gt;\n                &lt;p class=&quot;card-text&quot;&gt;...&lt;/p&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;card-footer&quot;&gt;\n                &lt;a href=&quot;...&quot; class=&quot;card-link&quot;&gt;Click&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;clr-col-12 clr-col-sm-4&quot;&gt;\n        &lt;div class=&quot;card&quot;&gt;\n            &lt;div class=&quot;card-block&quot;&gt;\n                &lt;h4 class=&quot;card-title&quot;&gt;Card title&lt;/h4&gt;\n                &lt;p class=&quot;card-text&quot;&gt;...&lt;/p&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;card-footer&quot;&gt;\n                &lt;div class=&quot;progress&quot;&gt;\n                    &lt;progress value=&quot;...&quot; max=&quot;100&quot;&gt;&lt;/progress&gt;\n                &lt;/div&gt;\n                &lt;a href=&quot;...&quot; class=&quot;card-link&quot;&gt;Click&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarColorsDemo",
      "id": "component-ProgressBarColorsDemo-27a9b802420471df6c2dd44e8c5880ff",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-colors.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-colors-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-colors.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "colorTypes",
          "type": "ProgBarExample[]",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "showDangerMessage",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ProgBarExample } from './progbar-example';\n\n@Component({\n  selector: 'clr-progress-bar-colors-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-colors.html',\n})\nexport class ProgressBarColorsDemo {\n  colorTypes: ProgBarExample[];\n  showDangerMessage = false;\n\n  constructor() {\n    this.colorTypes = [\n      new ProgBarExample('', 'Normal'),\n      new ProgBarExample('user', 'User color'),\n      new ProgBarExample('flash-danger', 'Danger/Warning'),\n    ];\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 16
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div *ngFor=\"let type of colorTypes\" class=\"progbar-examples\">\n    <h4>{{type.title}}</h4>\n    <div [ngClass]=\"type.cssClassnames()\">\n        <progress value=\"{{type.value}}\" max=\"100\" [attr.data-displayval]=\"type.value + '%'\"></progress>\n        {{ type.label }}\n    </div>\n    <div style=\"min-height: 1rem\">\n        <ng-container *ngIf=\"type.label === 'flash-danger' && type.isFinished()\">\n            <span class=\"danger-text\">\n                <clr-icon shape=\"exclamation-circle\" size=\"24\"></clr-icon>\n                Connection to database timed out.\n                <a href=\"javascript://\" class=\"btn btn-link\" (click)=\"type.start()\">Try again</a>\n            </span>\n        </ng-container>\n    </div>\n    <p><button class=\"btn btn-outline\" (click)=\"type.start()\">Show</button></p>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;h4&gt;Normal&lt;/h4&gt;\n&lt;div class=&quot;progress&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Success&lt;/h4&gt;\n&lt;div class=&quot;progress user&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Danger/Warning&lt;/h4&gt;\n&lt;div class=&quot;progress danger&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n    &lt;span class=\"danger-text\"&gt;\n        &lt;clr-icon size=\"24\" shape=\"exclamation-circle\"&gt;;&lt;/clr-icon>\n        Connection to database timed out. &gt;\n        &lt;a&gt;Try again&lt;/a&gt;\n    &lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarComponentDemo",
      "id": "component-ProgressBarComponentDemo-445ec5f38952f3e9c945772215808e3b",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-component-demos",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-component.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "example3",
          "defaultValue": "EXAMPLE3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "example4",
          "defaultValue": "EXAMPLE4",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "props",
          "defaultValue":
            "[\n    {\n      name: '[id]',\n      type: 'String',\n      defaultValue: 'Random ID',\n      description: 'HTML ID to bind label to progress bar',\n    },\n    {\n      name: '[clrValue]',\n      type: 'Number',\n      defaultValue: '0',\n      description:\n        'This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and max',\n    },\n    {\n      name: '[clrMax]',\n      type: 'Number',\n      defaultValue: '100',\n      description:\n        'This attribute describes how much work the task indicated by the progress element requires. The max attribute, if present, must have a value greater than zero and be a valid floating point number. The default value is 100',\n    },\n    {\n      name: '[clrDisplayval]',\n      type: 'String',\n      defaultValue: 'Empty string',\n      description: 'Overwrite the default value representation.',\n    },\n    {\n      name: '[clrPolite]',\n      type: 'Boolean',\n      defaultValue: 'true',\n      description: 'Change the default aria-live value to polite',\n    },\n    {\n      name: '[clrAssertive]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Change the default aria-live value to assertive',\n    },\n    {\n      name: '[clrOff]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Change the default aria-live value to off. No aria-live event will be trigger',\n    },\n    {\n      name: '[clrLabeled]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Display progress value or displayval',\n    },\n    {\n      name: '[clrLoop]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Add looping animation',\n    },\n    {\n      name: '[clrFade]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Flash animation',\n    },\n    {\n      name: '[clrFlashDanger]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Flash in danger animation',\n    },\n    {\n      name: '[clrSuccess]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Add success style',\n    },\n    {\n      name: '[clrDanger]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Add danger style',\n    },\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 32
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `<clr-progress-bar clrValue=\"40\" clrMax=\"100\"></clr-progress-bar>`;\nconst EXAMPLE1 = `<clr-progress-bar clrValue=\"65\" clrSuccess clrLabeled></clr-progress-bar>`;\nconst EXAMPLE2 = `\n<div class=\"progress-block\">\n  <label for=\"demoProgressBar\">Text on the left</label>\n  <clr-progress-bar id=\"demoProgressBar\" clrValue=\"85\"></clr-progress-bar>\n  <span>Text on the right</span>\n</div>\n`;\nconst EXAMPLE3 = `<clr-progress-bar clrValue=\"75\" clrLoop></clr-progress-bar>`;\nconst EXAMPLE4 = `<clr-progress-bar clrValue=\"65\" clrLabeled clrDisplayval=\"65$\"></clr-progress-bar>`;\n\n@Component({\n  selector: 'clr-progress-bar-component-demos',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-component.demo.html',\n})\nexport class ProgressBarComponentDemo {\n  example = EXAMPLE;\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n  example3 = EXAMPLE3;\n  example4 = EXAMPLE4;\n\n  props = [\n    {\n      name: '[id]',\n      type: 'String',\n      defaultValue: 'Random ID',\n      description: 'HTML ID to bind label to progress bar',\n    },\n    {\n      name: '[clrValue]',\n      type: 'Number',\n      defaultValue: '0',\n      description:\n        'This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and max',\n    },\n    {\n      name: '[clrMax]',\n      type: 'Number',\n      defaultValue: '100',\n      description:\n        'This attribute describes how much work the task indicated by the progress element requires. The max attribute, if present, must have a value greater than zero and be a valid floating point number. The default value is 100',\n    },\n    {\n      name: '[clrDisplayval]',\n      type: 'String',\n      defaultValue: 'Empty string',\n      description: 'Overwrite the default value representation.',\n    },\n    {\n      name: '[clrPolite]',\n      type: 'Boolean',\n      defaultValue: 'true',\n      description: 'Change the default aria-live value to polite',\n    },\n    {\n      name: '[clrAssertive]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Change the default aria-live value to assertive',\n    },\n    {\n      name: '[clrOff]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Change the default aria-live value to off. No aria-live event will be trigger',\n    },\n    {\n      name: '[clrLabeled]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Display progress value or displayval',\n    },\n    {\n      name: '[clrLoop]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Add looping animation',\n    },\n    {\n      name: '[clrFade]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Flash animation',\n    },\n    {\n      name: '[clrFlashDanger]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Flash in danger animation',\n    },\n    {\n      name: '[clrSuccess]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Add success style',\n    },\n    {\n      name: '[clrDanger]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Add danger style',\n    },\n  ];\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"progbar-examples\">\n  <p>\n    Clarity also has a component <code class=\"clr-code\">clrProgressBar</code>. That will add accessibility support for\n    screen readers.\n  </p>\n\n  <h4>API</h4>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th class=\"left\">Input/Output</th>\n        <th class=\"left hidden-xs-down\">Type</th>\n        <th class=\"left hidden-xs-down\">Default</th>\n        <th class=\"left\">Effect</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let prop of props\">\n        <td class=\"left\">\n          <b>{{ prop.name }}</b>\n        </td>\n        <td class=\"left hidden-xs-down\">{{ prop.type }}</td>\n        <td class=\"left hidden-xs-down\">{{ prop.defaultValue }}</td>\n        <td class=\"left\">{{ prop.description }}</td>\n      </tr>\n    </tbody>\n  </table>\n\n  <h4>Examples</h4>\n  <clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n  <clr-progress-bar clrValue=\"40\" clrMax=\"50\"></clr-progress-bar>\n\n  <br />\n\n  <clr-code-snippet [clrCode]=\"example3\"></clr-code-snippet>\n  <clr-progress-bar clrValue=\"75\" clrLoop></clr-progress-bar>\n\n  <br />\n\n  <clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n  <clr-progress-bar clrValue=\"65\" clrSuccess clrLabeled></clr-progress-bar>\n\n  <br />\n\n  <clr-code-snippet [clrCode]=\"example4\"></clr-code-snippet>\n  <clr-progress-bar clrValue=\"65\" clrLabeled clrDisplayval=\"65$\"></clr-progress-bar>\n\n  <br />\n\n  <clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n  <div class=\"progress-block\">\n    <label for=\"demoProgressBar\">Text on the left</label>\n    <clr-progress-bar id=\"demoProgressBar\" clrValue=\"85\"></clr-progress-bar>\n    <span>Text on the right</span>\n  </div>\n</div>\n"
    },
    {
      "name": "ProgressBarExamplesDemo",
      "id": "component-ProgressBarExamplesDemo-59eb06155080b1946b30d35c085c833c",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-examples.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-examples-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-examples.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "examples",
          "type": "ProgBarExample[]",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ProgBarExample } from './progbar-example';\n\n@Component({\n  selector: 'clr-progress-bar-examples-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-examples.html',\n})\nexport class ProgressBarExamplesDemo {\n  examples: ProgBarExample[];\n\n  constructor() {\n    this.examples = [\n      new ProgBarExample(),\n      new ProgBarExample('labeled', 'Labeled', true),\n      new ProgBarExample('progress-fade', 'Fade Out'),\n    ];\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 15
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div *ngFor=\"let example of examples\" class=\"progbar-examples\">\n    <h4>{{example.title}}</h4>\n    <div [ngClass]=\"example.cssClassnames()\">\n        <progress value=\"{{example.value}}\" max=\"100\" [attr.data-displayval]=\"example.value + '%'\"></progress>\n        <span *ngIf=\"example.isLabeled\">{{example.value}}%</span>\n    </div>\n    <p><button class=\"btn btn-outline\" (click)=\"example.start()\">Show</button></p>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;h4&gt;Progress Bar&lt;/h4&gt;\n&lt;div class=&quot;progress demo&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Labeled&lt;/h4&gt;\n&lt;div class=&quot;progress labeled&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n    &lt;span&gt;&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Fade Out&lt;/h4&gt;\n&lt;div class=&quot;progress progress-fade&quot;&gt;\n    &lt;progress max=&quot;100&quot; value=&quot;0&quot; data-displayval=&quot;0%&quot;&gt;&lt;/progress&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarInlineCardsDemo",
      "id": "component-ProgressBarInlineCardsDemo-093ae5e0b57f3749d13333b5f3c9dea1",
      "file": "src/website/src/app/documentation/demos/card/progress-bar-inline-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-inline-cards-demo",
      "styleUrls": ["../progress-bars/progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-inline-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMLPE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "value1",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "value2",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "value3",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 55
        }
      ],
      "methodsClass": [
        {
          "name": "getNewValue",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 57
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68
        },
        {
          "name": "setNewValues",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 62
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit } from '@angular/core';\n\nconst HTML_EXAMLPE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-sm-6\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">Here is a progress bar at the very top of a card.</p>\n                <div class=\"progress-block\">\n                    <label>Label</label>\n                    <div class=\"progress-static\">\n                        <div class=\"progress-meter\" data-value=\"...\"></div>\n                    </div>\n                </div>\n                <div class=\"progress-block\">\n                    <label>Longer Label</label>\n                    <div class=\"progress-static\">\n                        <div class=\"progress-meter\" data-value=\"...\"></div>\n                    </div>\n                </div>\n                <div class=\"progress-block\">\n                    <label>Really, Really, Really Long Label</label>\n                    <div class=\"progress success\">\n                        <progress value=\"...\" max=\"100\" data-displayval=\"...%\"></progress>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"progress-static top\">\n                    <div class=\"progress-meter\" data-value=\"...\"></div>\n                </div>\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-progress-bar-inline-cards-demo',\n  styleUrls: ['../progress-bars/progress-bars.demo.scss'],\n  templateUrl: './progress-bar-inline-cards.html',\n})\nexport class ProgressBarInlineCardsDemo implements OnInit {\n  htmlExample = HTML_EXAMLPE;\n\n  value1: number = 0;\n  value2: number = 0;\n  value3: number = 0;\n\n  getNewValue(): number {\n    const random: number = Math.floor(Math.random() * 98) + 1;\n    return parseInt(random + '', 10);\n  }\n\n  setNewValues(): void {\n    this.value1 = this.getNewValue();\n    this.value2 = this.getNewValue();\n    this.value3 = this.getNewValue();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.setNewValues();\n    }, 500);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "../progress-bars/progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-sm-6\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h4 class=\"card-title\">Card title</h4>\n                    <p class=\"card-text\">Here is a progress bar at the very top of a card.</p>\n                    <div class=\"progress-block\">\n                        <label>Label</label>\n                        <div class=\"progress-static\">\n                            <div class=\"progress-meter\" [attr.data-value]=\"value1\"></div>\n                        </div>\n                    </div>\n                    <div class=\"progress-block\">\n                        <label>Longer Label</label>\n                        <div class=\"progress-static\">\n                            <div class=\"progress-meter\" [attr.data-value]=\"value2\"></div>\n                        </div>\n                    </div>\n                    <div class=\"progress-block\">\n                        <label>Really, Really, Really Long Label</label>\n                        <div class=\"progress success\">\n                            <progress value=\"{{value3}}\" max=\"100\" [attr.data-displayval]=\"value3 + '%'\"></progress>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"progress-static top\">\n                        <div class=\"progress-meter\" data-value=\"33\"></div>\n                    </div>\n                    <a href=\"javascript://\" class=\"card-link\">Click</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "ProgressBarInlineCardsDemo",
      "id": "component-ProgressBarInlineCardsDemo-c65a183126353b3820f076a536fa53ee-1",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-inline-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-inline-cards-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-inline-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "value1",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "value2",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "value3",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "getNewValue",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 18
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29
        },
        {
          "name": "setNewValues",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'clr-progress-bar-inline-cards-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-inline-cards.html',\n})\nexport class ProgressBarInlineCardsDemo implements OnInit {\n  value1: number = 0;\n  value2: number = 0;\n  value3: number = 0;\n\n  getNewValue(): number {\n    const random: number = Math.floor(Math.random() * 98) + 1;\n    return parseInt(random + '', 10);\n  }\n\n  setNewValues(): void {\n    this.value1 = this.getNewValue();\n    this.value2 = this.getNewValue();\n    this.value3 = this.getNewValue();\n  }\n\n  ngOnInit(): void {\n    this.setNewValues();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "ProgressBarInlineCardsDemo-1",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-sm-6\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h4 class=\"card-title\">Card title</h4>\n                    <p class=\"card-text\">Here is a progress bar at the very top of a card.</p>\n                    <div class=\"progress-block\">\n                        <label>Label</label>\n                        <div class=\"progress-static\">\n                            <div class=\"progress-meter\" [attr.data-value]=\"value1\"></div>\n                        </div>\n                    </div>\n                    <div class=\"progress-block\">\n                        <label>Longer Label</label>\n                        <div class=\"progress-static\">\n                            <div class=\"progress-meter\" [attr.data-value]=\"value2\"></div>\n                        </div>\n                    </div>\n                    <div class=\"progress-block\">\n                        <label>Really, Really, Really Long Label</label>\n                        <div class=\"progress success\">\n                            <progress value=\"{{value3}}\" max=\"100\" [attr.data-displayval]=\"value3 + '%'\"></progress>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"progress-static top\">\n                        <div class=\"progress-meter\" data-value=\"33\"></div>\n                    </div>\n                    <a href=\"javascript://\" class=\"card-link\">Click</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;clr-row&quot;&gt;\n    &lt;div class=&quot;clr-col-12 clr-col-sm-6&quot;&gt;\n        &lt;div class=&quot;card&quot;&gt;\n            &lt;div class=&quot;card-block&quot;&gt;\n                &lt;h4 class=&quot;card-title&quot;&gt;Card title&lt;/h4&gt;\n                &lt;p class=&quot;card-text&quot;&gt;Here is a progress bar at the very top of a card.&lt;/p&gt;\n                &lt;div class=&quot;progress-block&quot;&gt;\n                    &lt;label&gt;Label&lt;/label&gt;\n                    &lt;div class=&quot;progress-static&quot;&gt;\n                        &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot;&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div class=&quot;progress-block&quot;&gt;\n                    &lt;label&gt;Longer Label&lt;/label&gt;\n                    &lt;div class=&quot;progress-static&quot;&gt;\n                        &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot;&gt;&lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div class=&quot;progress-block&quot;&gt;\n                    &lt;label&gt;Really, Really, Really Long Label&lt;/label&gt;\n                    &lt;div class=&quot;progress success&quot;&gt;\n                        &lt;progress value=&quot;...&quot; max=&quot;100&quot; data-displayval=&quot;...%&quot;&gt;&lt;/progress&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;card-footer&quot;&gt;\n                &lt;div class=&quot;progress-static top&quot;&gt;\n                    &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;\n                &lt;a href=&quot;...&quot; class=&quot;card-link&quot;&gt;Click&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarInlineDemo",
      "id": "component-ProgressBarInlineDemo-9dd2b047bcbf4d12725bf8c81bc27c62",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-inline.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-inline-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-inline.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "inlineProgress",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "inlineProgressTimerId",
          "defaultValue": "-1",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "inlineStaticProgbarValue",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "staticDangerValue",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "staticLabeledProgbarValue",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "staticSuccessValue",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [
        {
          "name": "getNewValue",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 22
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63
        },
        {
          "name": "runProgressBar",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45
        },
        {
          "name": "setNewValues",
          "args": [
            {
              "name": "disableBar",
              "type": "boolean",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "jsdoctags": [
            {
              "name": "disableBar",
              "type": "boolean",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "stopProgressBar",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'clr-progress-bar-inline-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-inline.html',\n})\nexport class ProgressBarInlineDemo implements OnInit, OnDestroy {\n  inlineProgress: number = 0;\n  inlineProgressTimerId: any = -1;\n\n  inlineStaticProgbarValue: number = 0;\n  staticDangerValue: number = 0;\n  staticSuccessValue: number = 0;\n  staticLabeledProgbarValue: number = 0;\n\n  getNewValue(): number {\n    const random: number = Math.floor(Math.random() * 98) + 1;\n    return parseInt(random + '', 10);\n  }\n\n  setNewValues(disableBar?: boolean): void {\n    this.inlineStaticProgbarValue = this.getNewValue();\n    this.staticLabeledProgbarValue = this.getNewValue();\n    this.staticDangerValue = this.getNewValue();\n    this.staticSuccessValue = this.getNewValue();\n    if (!disableBar) {\n      this.runProgressBar();\n    }\n  }\n\n  stopProgressBar(): void {\n    if (this.inlineProgressTimerId > -1) {\n      clearInterval(this.inlineProgressTimerId);\n      this.inlineProgressTimerId = -1;\n      this.inlineProgress = 0;\n    }\n  }\n\n  runProgressBar(): void {\n    this.stopProgressBar();\n    this.inlineProgressTimerId = setInterval(() => {\n      const oldProgressValue: number = this.inlineProgress;\n      let increment: number = Math.floor(Math.random() * 15) + 1;\n      increment = parseInt(increment + '', 10);\n      let newProgressValue: number = oldProgressValue + increment;\n\n      newProgressValue = newProgressValue > 99 ? 100 : newProgressValue;\n\n      this.inlineProgress = newProgressValue;\n\n      if (newProgressValue > 99) {\n        this.stopProgressBar();\n      }\n    }, 300);\n  }\n\n  ngOnInit(): void {\n    this.setNewValues(true);\n  }\n\n  ngOnDestroy(): void {\n    this.stopProgressBar();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit", "OnDestroy"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"progbar-examples\">\n    <h4>Inline Progress Bar</h4>\n    <div class=\"progress-block\">\n        <label>Simple Layout</label>\n        <div class=\"progress\">\n            <progress value=\"{{inlineProgress}}\" max=\"100\" [attr.data-displayval]=\"inlineProgress + '%'\"></progress>\n        </div>\n        <span>More text</span>\n    </div>\n\n    <div class=\"progress-block\">\n        <label>Complex Layout</label>\n        <div class=\"progress-group\">\n            <div class=\"clr-row\">\n                <div class=\"clr-col-6\">Left</div>\n                <div class=\"clr-col-6 text-right\">Right</div>\n            </div>\n            <div class=\"progress-static\">\n                <div class=\"progress-meter\" [attr.data-value]=\"inlineStaticProgbarValue\" [attr.data-displayval]=\"inlineStaticProgbarValue + '%'\"></div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-6\">Left</div>\n                <div class=\"clr-col-6 text-right\">Right</div>\n            </div>\n        </div>\n        <span>More text</span>\n    </div>\n\n    <h4>Labeled, Static Progress Bar</h4>\n    <div class=\"progress-block\">\n        <label>Complex Layout</label>\n        <div class=\"progress-group\">\n            <div class=\"clr-row\">\n                <div class=\"clr-col-6\">Left</div>\n                <div class=\"clr-col-6 text-right\">Right</div>\n            </div>\n            <div class=\"progress-static labeled danger\">\n                <div class=\"progress-meter\" [attr.data-value]=\"staticLabeledProgbarValue\" [attr.data-displayval]=\"staticLabeledProgbarValue + '%'\"></div>\n                <span>{{staticLabeledProgbarValue}}%</span>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-6\">Left</div>\n                <div class=\"clr-col-6 text-right\">Right</div>\n            </div>\n        </div>\n    </div>\n\n    <h4>Stacked Progress Bars</h4>\n    <div class=\"progress-block\">\n        <label>Stacked Layout</label>\n        <div class=\"progress-group\">\n            <div class=\"progress-static labeled danger\">\n                <div class=\"progress-meter\" [attr.data-value]=\"staticDangerValue\" [attr.data-displayval]=\"staticDangerValue + '%'\"></div>\n                <span>{{staticDangerValue}}%</span>\n            </div>\n            <div class=\"progress-static labeled\">\n                <div class=\"progress-meter\" [attr.data-value]=\"staticLabeledProgbarValue\" [attr.data-displayval]=\"staticLabeledProgbarValue + '%'\"></div>\n                <span>{{staticLabeledProgbarValue}}%</span>\n            </div>\n            <div class=\"progress-static labeled success\">\n                <div class=\"progress-meter\" [attr.data-value]=\"staticSuccessValue\" [attr.data-displayval]=\"staticSuccessValue + '%'\"></div>\n                <span>{{staticSuccessValue}}%</span>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"progress-block\">\n        <label>Stacked (but resized) Layout</label>\n        <div class=\"progress-group\" style=\"font-size: 1px\">\n            <div class=\"progress-static danger\">\n                <div class=\"progress-meter\" [attr.data-value]=\"staticDangerValue\" [attr.data-displayval]=\"staticDangerValue + '%'\"></div>\n                <span>{{staticDangerValue}}%</span>\n            </div>\n            <div class=\"progress-static\">\n                <div class=\"progress-meter\" [attr.data-value]=\"staticLabeledProgbarValue\" [attr.data-displayval]=\"staticLabeledProgbarValue + '%'\"></div>\n                <span>{{staticLabeledProgbarValue}}%</span>\n            </div>\n            <div class=\"progress-static success\">\n                <div class=\"progress-meter\" [attr.data-value]=\"staticSuccessValue\" [attr.data-displayval]=\"staticSuccessValue + '%'\"></div>\n                <span>{{staticSuccessValue}}%</span>\n            </div>\n        </div>\n    </div>\n\n    <p><button class=\"btn btn-outline\" (click)=\"setNewValues()\">Load New Values</button></p>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;h4&gt;Inline Progress Bar&lt;/h4&gt;\n&lt;div class=&quot;progress-block&quot;&gt;\n    &lt;label&gt;Simple Layout&lt;/label&gt;\n    &lt;div class=&quot;progress&quot;&gt;\n        &lt;progress value=&quot;...&quot; max=&quot;100&quot; data-displayval=&quot;...%&quot;&gt;&lt;/progress&gt;\n    &lt;/div&gt;\n    &lt;span&gt;More text&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;div class=&quot;progress-block&quot;&gt;\n    &lt;label&gt;Complex Layout&lt;/label&gt;\n    &lt;div class=&quot;progress-group&quot;&gt;\n        &lt;div class=&quot;clr-row&quot;&gt;\n            &lt;div class=&quot;clr-col-6&quot;&gt;Left&lt;/div&gt;\n            &lt;div class=&quot;clr-col-6 text-right&quot;&gt;Right&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;progress-static&quot;&gt;\n            &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot; data-displayval=&quot;...%&quot;&gt;&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;clr-row&quot;&gt;\n            &lt;div class=&quot;clr-col-6&quot;&gt;Left&lt;/div&gt;\n            &lt;div class=&quot;clr-col-6 text-right&quot;&gt;Right&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;span&gt;More text&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Labeled, Static Progress Bar&lt;/h4&gt;\n&lt;div class=&quot;progress-block&quot;&gt;\n    &lt;label&gt;Complex Layout&lt;/label&gt;\n    &lt;div class=&quot;progress-group&quot;&gt;\n        &lt;div class=&quot;clr-row&quot;&gt;\n            &lt;div class=&quot;clr-col-6&quot;&gt;Left&lt;/div&gt;\n            &lt;div class=&quot;clr-col-6 text-right&quot;&gt;Right&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;progress-static labeled danger&quot;&gt;\n            &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot; data-displayval=&quot;...%&quot;&gt;&lt;/div&gt;\n            &lt;span&gt;...%&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;clr-row&quot;&gt;\n            &lt;div class=&quot;clr-col-6&quot;&gt;Left&lt;/div&gt;\n            &lt;div class=&quot;clr-col-6 text-right&quot;&gt;Right&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Stacked Progress Bars&lt;/h4&gt;\n&lt;div class=&quot;progress-block&quot;&gt;\n    &lt;label&gt;Stacked Layout&lt;/label&gt;\n    &lt;div class=&quot;progress-group&quot;&gt;\n        &lt;div class=&quot;progress-static labeled danger&quot;&gt;\n            &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot; data-displayval=&quot;...%&quot;&gt;&lt;/div&gt;\n            &lt;span&gt;...%&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;progress-static labeled&quot;&gt;\n            &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot; data-displayval=&quot;...%&quot;&gt;&lt;/div&gt;\n            &lt;span&gt;...%&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;progress-static labeled success&quot;&gt;\n            &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot; data-displayval=&quot;...%&quot;&gt;&lt;/div&gt;\n            &lt;span&gt;...%&lt;/span&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div class=&quot;progress-block&quot;&gt;\n    &lt;label&gt;Stacked (but resized) Layout&lt;/label&gt;\n    &lt;div class=&quot;progress-group&quot; style=&quot;font-size: 1px&quot;&gt;\n        &lt;div class=&quot;progress-static danger&quot;&gt;\n            &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot; data-displayval=&quot;...%&quot;&gt;&lt;/div&gt;\n            &lt;span&gt;...%&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;progress-static&quot;&gt;\n            &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot; data-displayval=&quot;...%&quot;&gt;&lt;/div&gt;\n            &lt;span&gt;...%&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;progress-static success&quot;&gt;\n            &lt;div class=&quot;progress-meter&quot; data-value=&quot;...&quot; data-displayval=&quot;...%&quot;&gt;&lt;/div&gt;\n            &lt;span&gt;...%&lt;/span&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarLoopDemo",
      "id": "component-ProgressBarLoopDemo-57c3a6970c83537410f12fe327c538a3",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-loop.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-loop-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-loop.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-progress-bar-loop-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-loop.html',\n})\nexport class ProgressBarLoopDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"progbar-examples\">\n    <h4>Indeterminate/Looping</h4>\n    <div class=\"progress loop\"><progress></progress></div>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;progress loop&quot;&gt;&lt;progress&gt;&lt;/progress&gt;&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarsDemo",
      "id": "component-ProgressBarsDemo-289b59c1c12356aab1816cd18311bb6b",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bars.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bars-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./progress-bars.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "optionalPercentageLabel",
          "defaultValue": "OPTIONAL_PERCENTAGE_LABEL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nexport const OPTIONAL_PERCENTAGE_LABEL = `\n<!-- Visual Presentation -->\n<div aria-hidden=\"true\"\n  <div>Container 1 loading Progress </div>\n  <progress  max=\"100\" value=\"65\" data-displayval=\"65%\"></progress>\n</div>\n\n<!-- Screen Reader Presentation -->\n<!-- Screen reader users will be interrupted and hear \"Container 1 Loading Progress is 65%\" when the progress bar appears -->\n<!-- Screen reader users will also be able to read this text with the screen reader's cursor --> \n<span  aria-live=\"polite\">\n  <span class=\"clr-sr-only\">\n    Container 1 Loading Progress is\n  </span>\n  65%\n</span>\n`;\n\n@Component({\n  selector: 'clr-progress-bars-demo',\n  templateUrl: './progress-bars.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class ProgressBarsDemo extends ClarityDocComponent {\n  newLayout = true;\n  optionalPercentageLabel = OPTIONAL_PERCENTAGE_LABEL;\n  constructor() {\n    super('progress');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 37
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"a-progress-bar-is-a-linear-indicator-for-providing-feedback-about-an-ongoing-user-initiated-process\">A\n            progress bar is a linear indicator for providing feedback about an ongoing, user-initiated process.</h5>\n\n        <div id=\"design-guidelines\">\n            <h2 id=\"guidelines\">Design Guidelines</h2>\n            <h3>Usage</h3>\n\n            <p>Clarity has two types of progress bars:</p>\n\n            <ul class=\"list\">\n                <li>A determinate progress bar, which shows process completion to a specific maximum goal. Use this\n                    when the process has a known duration. This could be a file download or upload. Or, a series of\n                    configuration steps that happen during an initialization process.\n                </li>\n                <li>An indeterminate progress bar, which animates continuously until the process is\n                    complete. Use this progress bar for a process when there is no estimate of\n                    the end time. It indicates that work is occurring without indicating a scope for completion or\n                    implying an estimate for how long it will take.\n                </li>\n            </ul>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <clr-progress-bar-story-demo></clr-progress-bar-story-demo>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"placement\">Placement</h3>\n\n            <p>Progress bars are designed for use in the <a routerLink=\"../../app-layout\">main content area</a>, <a\n                routerLink=\"../../header\">header</a>, <a routerLink=\"../../cards\">cards</a>,\n                and <a routerLink=\"../../modals\">modals</a>. The size of the progress bar adjusts to its\n                container and indicates which process is being monitored through placement of the progress bar in the\n                container.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                <div class=\"clrweb-DoxMedia\">\n                    <div class=\"clrweb-DoxMedia-block\">\n                        <div class=\"main-container\" style=\"width: 100%; height: 25vh;\">\n                            <header class=\"header header-6\" style=\"height: 2rem\">\n                              <div class=\"branding\" style=\"width: 4rem; min-width: 4rem;\">\n                                Header\n                              </div>\n                            </header>\n                            <div class=\"content-container\">\n                                <div class=\"content-area\">\n                                    <div class=\"progress top\">\n                                        <progress value=\"50\" max=\"100\"></progress>\n                                    </div>\n                                </div>\n                                <nav class=\"sidenav\" style=\"width: 4rem; min-width: 4rem\">\n                                    Sidenav\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"main-container\" style=\"width: 100%; height: 25vh;\">\n                                <header class=\"header header-6\" style=\"height: 2rem\">\n                                    <div class=\"branding\" style=\"width: 4rem; min-width: 4rem;\">\n                                        Header\n                                    </div>\n                                    <div class=\"header-actions\" style=\"justify-content: flex-start; padding-right: 0.5rem;\">\n                                        <div class=\"progress top\" style=\"align-self: center\">\n                                            <progress value=\"50\" max=\"100\"></progress>\n                                        </div>\n                                    </div>\n                                </header>\n                                <div class=\"content-container\">\n                                    <div class=\"content-area\">\n                                        Content area\n                                    </div>\n                                    <nav class=\"sidenav\" style=\"width: 4rem; min-width: 4rem\">\n                                        Sidenav.\n                                    </nav>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 237px\">\n                            <div class=\"card\">\n                                <div class=\"card-block\">\n                                    <div class=\"progress top\">\n                                        <progress value=\"50\" max=\"100\"></progress>\n                                    </div>\n                                    <h4 class=\"card-title\">Card title</h4>\n                                    <p class=\"card-text\">Card text</p>\n                                </div>\n                                <div class=\"card-footer\">\n                                    <a href=\"...\" class=\"card-link\">Click</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Card top</h6>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 237px\">\n                            <div class=\"card\">\n                                <div class=\"card-block\">\n                                    <h4 class=\"card-title\">Card title</h4>\n                                    <p class=\"card-text\">Card text</p>\n                                </div>\n                                <div class=\"card-footer\">\n                                    <div class=\"progress\">\n                                        <progress value=\"50\" max=\"100\"></progress>\n                                    </div>\n                                    <a href=\"...\" class=\"card-link\">Click</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Card footer</h6>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 237px\">\n                            <div class=\"card\">\n                                <div class=\"card-block\">\n                                    <h4 class=\"card-title\">Card title</h4>\n                                    <p class=\"card-text\">Card text</p>\n                                    <div class=\"progress-block\">\n                                        <label>Block</label>\n                                        <div class=\"progress-static\">\n                                            <div class=\"progress-meter\" data-value=\"50\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"card-footer\">\n                                    <a href=\"...\" class=\"card-link\">Click</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Card block</h6>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"messaging\">Messaging</h3>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"background-color: #ddd\">\n                            <div class=\"progress labeled\">\n                              <progress value=\"50\" max=\"100\"></progress>\n                              <span>50%</span>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Determinate Progress Bar</h6>\n                            <ul class=\"list-unstyled\">\n                              <li>Shows progress to a specific maximum goal</li>\n                              <li>Has an optional label that shows percentage completion</li>\n                              <li>Keep messaging minimal</li>\n                              <li>Use specific messaging: Process starting, Process finished, etc</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"background-color: #ddd\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                              <div class=\"progress-group\">\n                                <div class=\"clr-row\">\n                                  <div class=\"clr-col text-left\">Processing step 3 of 4</div>\n                                </div>\n                                <div class=\"progress loop\"><progress></progress></div>\n                              </div>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Indeterminate</h6>\n                            <ul class=\"list-unstyled\">\n                              <li>Uses specific messaging: E.g \"Loading update 3 of 7\"</li>\n                              <li>Will animate continuously until complete</li>\n                              <li>Has no estmated end time</li>\n                              <li>Indicates work is occuring</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <p>Clarity places the label on the right of the progress bar because the bar fills from left to right.</p>\n\n            <h3 id=\"progress-bar-versus-spinner\">Progress Bar Versus Spinner</h3>\n\n            <p>Clarity also has a circular progress indicator, called a <a\n                routerLink=\"../../spinners\">spinner</a>, which serves the same use case as\n                an indeterminate progress bar. Using a spinner or an indeterminate progress bar is\n                a matter of available space and activation point. In many cases, spinners are best\n                because they occupy less space.</p>\n        </div>\n\n        <div id=\"accessibility\">\n            <h2>Accessibility</h2>\n\n            <p>When adding a progress bar, keep the following in mind when adding a label to make it accessible:</p>\n\n            <ul>\n                <li>A label should always be included with a progress bar</li>\n                <li>Use aria-labelledby along with an id in order to tie the label and the progress bar together</li>\n                <li>Never use color as the only affordance that indicates the nature or meaning of the progress bar</li>\n                <li>Use an explicit text label that conveys the nature or meaning of the progress bar for sight impaired\n                    users</li>\n                <li>Labels should be added above or below the progress bar</li>\n                <li>An optional <code class=\"clr-code\">percentage</code> label can be included after the progress bar as\n                    needed</li>\n                <li>While explicit text labels are preferred, an <code class=\"clr-code\">accessible icon</code> is acceptable when vertical text\n                    labels are deemed inappropriate</li>\n            </ul>\n\n            <p>\n                <strong>Note:</strong> When the optional percentage label is used it must be associated with the\n                progress bar it is describing. This can be accomplished by using the <code class=\"clr-code\">id</code>\n                of the percentage label with the <code clr-code=\"clr-code\">aria-describedby</code> attribute on the progress\n                bar. The following form demonstrates an accessible progress implementation that meets both visual and\n                screen reader consumption needs.\n            </p>\n\n            <clr-code-snippet [clrCode]=\"optionalPercentageLabel\"></clr-code-snippet>\n\n            <h3>Label examples</h3>\n            <p>An explicit label accurately describes the operation for which the progress/status is being updated by\n                the progressbar</p>\n            <p></p>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Generic Labels</h6>\n                            <ul>\n                                <li>Progress</li>\n                                <li>Starting</li>\n                                <li>Stopping</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Explicit Labels</h6>\n                            <ul>\n                                <li>Adding VM</li>\n                                <li>Uploading image</li>\n                                <li>Downloading data</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Deprecations</h3>\n            <clr-alert [clrAlertType]=\"'warning'\" [clrAlertClosable]=\"false\">\n                <clr-alert-item>\n              <span class=\"alert-text\">\n                  Several variations of progress bar have been found to be inaccessible and are now deprecated. They\n                  will be removed in Clarity v4.0.\n              </span>\n                </clr-alert-item>\n            </clr-alert>\n\n            The following variations of progress-bar are not accessible to screen reader users or visually impaired users because they rely on recognition of the color to convey meaning or status.\n            <ul>\n                <li>\n                    <strong>Flash</strong>\n                </li>\n                <li>\n                    <strong>flash-danger</strong>\n                </li>\n                <li>\n                    <strong>danger</strong>\n                </li>\n                <li>\n                    <strong>warning</strong>\n                </li>\n                <li>\n                    <strong>success</strong>\n                </li>\n            </ul>\n        </div>\n\n        <div id=\"code-examples\">\n            <h2 id=\"examples\">Code & Examples</h2>\n            <p>Progress bars consist of an HTML5 progress element inside the block-level element with the <code\n                class=\"clr-code\">.progress</code> classname. The block-level container is necessary due to cross-browser\n                constraints with styling HTML5 progress elements.\n                As browsers improve, the intent is for this container to go away.</p>\n\n            <clr-progress-bar-component-demos></clr-progress-bar-component-demos>\n\n            <clr-progress-bar-examples-demo class=\"clrweb-progress-demo\"></clr-progress-bar-examples-demo>\n\n            <h3 id=\"indeterminate-looping-progress-bars\">Indeterminate (Looping) Progress Bars</h3>\n\n            <p>When the amount of time a task will take is not known, use an indeterminate (or looping)\n                progress bar. These progress bars feature a recurring animation that continues until the\n                task is complete and the progress bar is no longer needed.</p>\n\n            <clr-progress-bar-loop-demo class=\"clrweb-progress-demo\"></clr-progress-bar-loop-demo>\n\n            <h3 id=\"color\">Color</h3>\n\n            <p>The default color of the fill bar is Action Blue. You may change the color as required by visual design.</p>\n            <p>\n                Using color to convey additional information e.g. Green to indicate Success is not recommended. Sight impaired users may not read the additional meaning without additional information such as a text label or icon.\n                The recommendation if such status information is needed in the context of a progress bar, is to communicate this with a notification or text label.\n            </p>\n\n            <clr-progress-bar-colors-demo class=\"clrweb-progress-demo\"></clr-progress-bar-colors-demo>\n\n            <h3 id=\"animation\">Animation</h3>\n\n            <p>Progress bars have options for animation.</p>\n\n            <ul class=\"list\">\n                <li>Use fade animation when you want the progress bar to disappear with a fade.</li>\n                <li>Use flash animation to draw the user’s attention when the process has completed.</li>\n            </ul>\n\n            <clr-progress-bar-animations-demo class=\"clrweb-progress-demo\"></clr-progress-bar-animations-demo>\n\n            <h3 id=\"variations\">Variations</h3>\n            <p>The animation, color, and type of a progress bar can be changed by adding or removing CSS\n                classes from the following list of class names.</p>\n\n            <ul class=\"list\">\n                <li><strong>labeled:</strong> A progress container with the <code class=\"clr-code\">labeled</code>\n                    classname will show the percent complete as a numerical percentage to the far right of\n                    the progress bar. Note that this requires a <code class=\"clr-code\">&lt;span&gt;</code>\n                    element be placed within the container after the <code class=\"clr-code\">&lt;progress&gt;</code>.\n                    You will also need to update the contents of the span programmatically.\n                </li>\n                <li><strong>progress-fade:</strong> A progress container with the <code\n                    class=\"clr-code\">progress-fade</code> classname will fade out after it reaches 100%.\n                </li>\n                <li>\n                    <strong>flash:</strong>\n                    A progress container with the <code class=\"clr-code\">flash</code>\n                    classname will have the bar color change to green after it reaches 100%. This can be\n                    combined with the <code class=\"clr-code\">progress-fade</code> classname to have the\n                    bar change color to green and then fade out.\n                    <clr-alert [clrAlertClosable]=\"false\" [clrAlertType]=\"'warning'\" [clrAlertSizeSmall]=\"true\">\n                        <clr-alert-item>\n                            <span class=\"alert-text\">\n                               This has been deprecated in Clarity v3.0 and will be removed in v4.0\n                            </span>\n                        </clr-alert-item>\n                    </clr-alert>\n                </li>\n                <li>\n                    <strong>flash-danger:</strong>\n                    A progress container with the <code\n                    class=\"clr-code\">flash-danger</code> classname will have the bar color change to\n                    red after it reaches 100%. This classname can also be combined with the <code\n                    class=\"clr-code\">progress-fade</code> classname.\n                    <clr-alert [clrAlertClosable]=\"false\" [clrAlertType]=\"'warning'\" [clrAlertSizeSmall]=\"true\">\n                        <clr-alert-item>\n                            <span class=\"alert-text\">\n                               This has been deprecated in Clarity v2.0 and will be removed in v4.0\n                            </span>\n                        </clr-alert-item>\n                    </clr-alert>\n                </li>\n                <li><strong>loop:</strong> A progress container with the <code class=\"clr-code\">loop</code>\n                    classname will show a progress bar that loops across infinitely. This is the style\n                    for our indeterminate progress bar.\n                </li>\n                <li>\n                    <strong>danger:</strong>\n                    A progress container with the <code class=\"clr-code\">danger</code>\n                    classname will show up as red.\n                    <clr-alert [clrAlertClosable]=\"false\" [clrAlertType]=\"'warning'\" [clrAlertSizeSmall]=\"true\">\n                        <clr-alert-item>\n                            <span class=\"alert-text\">\n                               This has been deprecated in Clarity v2.0 and will be removed in v4.0\n                            </span>\n                        </clr-alert-item>\n                    </clr-alert>\n                </li>\n                <li>\n                    <strong>warning:</strong>\n                    A progress container with the <code class=\"clr-code\">warning</code>\n                    classname will also show up as red.\n                    <clr-alert [clrAlertClosable]=\"false\" [clrAlertType]=\"'warning'\" [clrAlertSizeSmall]=\"true\">\n                        <clr-alert-item>\n                            <span class=\"alert-text\">\n                               This has been deprecated in Clarity v2.0 and will be removed in v4.0\n                            </span>\n                        </clr-alert-item>\n                    </clr-alert>\n                </li>\n                <li>\n                    <strong>success:</strong>\n                    A progress container with the <code class=\"clr-code\">success</code>\n                    classname will show up as green.\n                    <clr-alert [clrAlertClosable]=\"false\" [clrAlertType]=\"'warning'\" [clrAlertSizeSmall]=\"true\">\n                        <clr-alert-item>\n                            <span class=\"alert-text\">\n                               This has been deprecated in Clarity v2.0 and will be removed in v4.0\n                            </span>\n                        </clr-alert-item>\n                    </clr-alert>\n                </li>\n            </ul>\n\n            <h3 id=\"progress-bar-in-cards\">Progress Bar in Cards</h3>\n\n            <clr-progress-bar-cards-demo class=\"clrweb-progress-demo\"></clr-progress-bar-cards-demo>\n\n            <h3 id=\"static-progress-bar-in-cards\">Static Progress Bar in Cards</h3>\n\n            <clr-progress-bar-static-cards-demo class=\"clrweb-progress-demo\"></clr-progress-bar-static-cards-demo>\n\n            <h3 id=\"progress-bar-in-sidebar-navigation\">Progress Bar in Sidebar Navigation</h3>\n\n            <clr-progress-bar-sidenav-demo class=\"clrweb-progress-demo\"></clr-progress-bar-sidenav-demo>\n\n            <h3 id=\"static-progress-bars\">Static Progress Bars</h3>\n\n            <p>Some applications use progress bars inside other widgets that re-render repeatedly in the DOM. While\n                this is not a pattern that Clarity promotes, we have implemented a “static” progress bar to assist in\n                these uses.</p>\n\n            <p>A normal progress bar will animate from its starting point to the defined ending point. When widgets that\n                contain progress bars are re-rendered in the DOM, this results in Clarity’s progress bars continually\n                growing from zero to the defined value.</p>\n\n            <p>A static progress bar just shows the defined value. It does not animate and lend itself to\n                these sorts of DOM refreshes.</p>\n\n            <p>Because there was no way to turn off the animation in IE/Edge’s implementation of the HTML5\n                progress element, there is a related, though separate, component for static progress bars.</p>\n\n            <clr-progress-bar-static-demo class=\"clrweb-progress-demo\"></clr-progress-bar-static-demo>\n\n            <ul class=\"list\">\n                <li>Instead of a <code>.progress</code> container <code>div</code>, the static progress bar\n                    has a <code>.progress-static</code> container <code>div</code>.\n                </li>\n                <li>Instead of a <code>progress</code> element inside the container, there is a\n                    <code>div&lt;/codeAtom&gt; with the class of <code>.progress-meter</code> applied to it.</code>\n                </li>\n                <li>A <code>div</code> cannot have a value attribute, so the <code>.progress-meter</code> element\n                    has <code>data-value</code> attribute. The completion value must be dynamically inserted in the\n                    <code>data-value</code> attribute.\n                </li>\n                <li>The <code>data-value</code> attribute must contain an integer between 0 and 100.</li>\n            </ul>\n\n            <h3 id=\"progress-bar-blocks-and-groups\">Progress Bar Blocks and Groups</h3>\n\n            <p>Progress bar blocks allow for <code class=\"clr-code\">label</code> and <code class=\"clr-code\">span</code>\n                elements to be placed alongside the <code class=\"clr-code\">.progress</code> and <code\n                    class=\"clr-code\">.progress-static</code> element. The progress bar block is a wrapper element\n                with the <code class=\"clr-code\">.progress-block</code> classname applied to it.</p>\n\n            <p>Progress bar groups allow for vertical stacking of elements above and below the progress bar.\n                To create a progress bar group, wrap the <code class=\"clr-code\">.progress</code> and <code\n                    class=\"clr-code\">.progress-static</code> element with a <code\n                    class=\"clr-code\">.progress-group</code> element.</p>\n\n            <clr-progress-bar-inline-demo class=\"clrweb-progress-demo\"></clr-progress-bar-inline-demo>\n\n            <p>Progress bar blocks are also available for use inside of Clarity cards.</p>\n\n            <clr-progress-bar-inline-cards-demo class=\"clrweb-progress-demo\"></clr-progress-bar-inline-cards-demo>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "ProgressBarSidenavDemo",
      "id": "component-ProgressBarSidenavDemo-02b23ece2bcfababcd1a25d777d87731",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-sidenav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-sidenav-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-sidenav.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-progress-bar-sidenav-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-sidenav.html',\n})\nexport class ProgressBarSidenavDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<ul class=\"sidenav list-unstyled clr-col-2\">\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"javascript://\">Link</a>\n        <div class=\"progress loop\"><progress></progress></div>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"javascript://\">Link</a>\n    </li>\n    <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"javascript://\">Another link</a>\n    </li>\n</ul>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;ul class=&quot;sidenav&quot;&gt;\n    &lt;li class=&quot;nav-item&quot;&gt;\n        &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;\n        &lt;div class=&quot;progress loop&quot;&gt;&lt;progress&gt;&lt;/progress&gt;&lt;/div&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;nav-item&quot;&gt;\n        &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Link&lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;nav-item&quot;&gt;\n        &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Another link&lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarStaticCardsDemo",
      "id": "component-ProgressBarStaticCardsDemo-82d98073057aaca24cc5de828c89eb14",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-static-cards.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-static-cards-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-static-cards.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-progress-bar-static-cards-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-static-cards.html',\n})\nexport class ProgressBarStaticCardsDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-sm-4\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h4 class=\"card-title\">Card title</h4>\n                    <p class=\"card-text\">Here is a progress bar at the very top of a card, above the header.</p>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"progress-static top\">\n                        <div class=\"progress-meter\" data-value=\"33\"></div>\n                    </div>\n                    <a href=\"javascript://\" class=\"card-link\">Click</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"clr-col-12 clr-col-sm-4\">\n            <div class=\"card\">\n                <div class=\"card-block\">\n                    <h4 class=\"card-title\">Card title</h4>\n                    <p class=\"card-text\">Here is a progress bar at the top of a card's footer, above the buttons.</p>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"progress-static\">\n                        <div class=\"progress-meter\" data-value=\"77\"></div>\n                    </div>\n                    <a href=\"javascript://\" class=\"card-link\">Click</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;clr-row&quot;&gt;\n&lt;div class=&quot;clr-col-12 clr-col-sm-4&quot;&gt;\n        &lt;div class=&quot;card&quot;&gt;\n            &lt;div class=&quot;card-block&quot;&gt;\n                &lt;h4 class=&quot;card-title&quot;&gt;Card title&lt;/h4&gt;\n                &lt;p class=&quot;card-text&quot;&gt;...&lt;/p&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;card-footer&quot;&gt;\n                &lt;div class=&quot;progress-static top&quot;&gt;\n                    &lt;div class=&quot;progress-meter&quot; data-value=&quot;33&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;\n                &lt;a href=&quot;...&quot; class=&quot;card-link&quot;&gt;Click&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;clr-col-12 clr-col-sm-4&quot;&gt;\n        &lt;div class=&quot;card&quot;&gt;\n            &lt;div class=&quot;card-block&quot;&gt;\n                &lt;h4 class=&quot;card-title&quot;&gt;Card title&lt;/h4&gt;\n                &lt;p class=&quot;card-text&quot;&gt;...&lt;/p&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;card-footer&quot;&gt;\n                &lt;div class=&quot;progress-static&quot;&gt;\n                    &lt;div class=&quot;progress-meter&quot; data-value=&quot;77&quot;&gt;&lt;/div&gt;\n                &lt;/div&gt;\n                &lt;a href=&quot;...&quot; class=&quot;card-link&quot;&gt;Click&lt;/a&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarStaticDemo",
      "id": "component-ProgressBarStaticDemo-b16b59d7e502b80a7599247cb0b0fa70",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-static.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-static-demo",
      "styleUrls": ["progress-bars.demo.scss"],
      "styles": [],
      "templateUrl": ["./progress-bar-static.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "staticDangerValue",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "staticLabeledProgbarValue",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "staticProgbarValue",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "staticSuccessValue",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "getNewValue",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 19
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31
        },
        {
          "name": "setNewValues",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'clr-progress-bar-static-demo',\n  styleUrls: ['progress-bars.demo.scss'],\n  templateUrl: './progress-bar-static.html',\n})\nexport class ProgressBarStaticDemo implements OnInit {\n  staticProgbarValue: number = 0;\n  staticDangerValue: number = 0;\n  staticSuccessValue: number = 0;\n  staticLabeledProgbarValue: number = 0;\n\n  getNewValue(): number {\n    const random: number = Math.floor(Math.random() * 98) + 1;\n    return parseInt(random + '', 10);\n  }\n\n  setNewValues(): void {\n    this.staticProgbarValue = this.getNewValue();\n    this.staticLabeledProgbarValue = this.getNewValue();\n    this.staticDangerValue = this.getNewValue();\n    this.staticSuccessValue = this.getNewValue();\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.setNewValues();\n    }, 800);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n@import '../../../../styles/clarity-imports';\n\n.progress-bars-demo {\n  .nav-item {\n    padding: $clr_baselineRem_0_4 0 $clr_baselineRem_0_6;\n  }\n\n  .progbar-examples {\n    margin-bottom: $clr_baselineRem_1_5;\n  }\n}\n\n.progbar-examples {\n  .progress-block {\n    margin-top: $clr_baselineRem_1;\n  }\n}\n\n.danger-text {\n  color: $clr-progress-danger-color;\n  font-weight: 500;\n\n  a {\n    color: $clr-progress-danger-color !important;\n    text-decoration: underline;\n  }\n}\n",
          "styleUrl": "progress-bars.demo.scss"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"progbar-examples\">\n    <h4>Static Progress Bar</h4>\n    <div class=\"progress-static\">\n        <div class=\"progress-meter\" [attr.data-value]=\"staticProgbarValue\" [attr.data-displayval]=\"staticProgbarValue + '%'\"></div>\n    </div>\n\n    <h4>Labeled, Static Progress Bar</h4>\n    <div class=\"progress-static labeled\">\n        <div class=\"progress-meter\" [attr.data-value]=\"staticLabeledProgbarValue\" [attr.data-displayval]=\"staticLabeledProgbarValue + '%'\"></div>\n        <span>{{staticLabeledProgbarValue}}%</span>\n    </div>\n\n    <h4>Red Static Progress Bar</h4>\n    <div class=\"progress-static danger\">\n        <div class=\"progress-meter\" [attr.data-value]=\"staticDangerValue\"></div>\n    </div>\n\n    <h4>Green Static Progress Bar</h4>\n    <div class=\"progress-static success\">\n        <div class=\"progress-meter\" [attr.data-value]=\"staticSuccessValue\"></div>\n    </div>\n    <p><button class=\"btn btn-outline\" (click)=\"setNewValues()\">Load New Values</button></p>\n</div>\n\n<pre><code clr-code-highlight=\"language-html\">\n&lt;h4&gt;Static Progress Bar&lt;/h4&gt;\n&lt;div class=&quot;progress-static&quot;&gt;\n    &lt;div class=&quot;progress-meter&quot; data-value=&quot;16&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Labeled, Static Progress Bar&lt;/h4&gt;\n&lt;div class=&quot;progress-static labeled&quot;&gt;\n    &lt;div class=&quot;progress-meter&quot; data-value=&quot;87&quot; data-displayval=&quot;87%&quot;&gt;&lt;/div&gt;\n    &lt;span&gt;87%&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Red Static Progress Bar&lt;/h4&gt;\n&lt;div class=&quot;progress-static danger&quot;&gt;\n    &lt;div class=&quot;progress-meter&quot; data-value=&quot;8&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;h4&gt;Green Static Progress Bar&lt;/h4&gt;\n&lt;div class=&quot;progress-static success&quot;&gt;\n    &lt;div class=&quot;progress-meter&quot; data-value=&quot;80&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "ProgressBarStoryDemo",
      "id": "component-ProgressBarStoryDemo-28ad2d84faf0bed786969bb84bcf7e65",
      "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-story.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-progress-bar-story-demo",
      "styleUrls": [],
      "styles": [],
      "template":
        "<p style=\"margin-top: 0\"><strong>{{storyProgressBar.title}}</strong></p>\n<div class=\"story-message\" style=\"margin-bottom: 0.5rem\">\n  <p *ngIf=\"storyProgressBar.value <= 25\">\n    <clr-icon shape=\"cog\" size=\"24\"></clr-icon> Configuring the system <clr-icon shape=\"ellipsis-horizontal\" size=\"24\"></clr-icon>\n  </p>\n  <p *ngIf=\"storyProgressBar.value > 25 && storyProgressBar.value <= 50\">\n    <clr-icon shape=\"install\" size=\"24\"></clr-icon> Installing the system <clr-icon shape=\"ellipsis-horizontal\" size=\"24\"></clr-icon>\n  </p>\n  <p *ngIf=\"storyProgressBar.value > 50 && storyProgressBar.value <= 75\">\n    <clr-icon shape=\"download-cloud\" size=\"24\"></clr-icon> Updating the system <clr-icon shape=\"ellipsis-horizontal\" size=\"24\"></clr-icon>\n  </p>\n  <p *ngIf=\"storyProgressBar.value > 75 && storyProgressBar.value < 100\">\n    <clr-icon shape=\"step-forward-2\" size=\"24\"></clr-icon> Starting the system <clr-icon shape=\"ellipsis-horizontal\" size=\"24\"></clr-icon>\n  </p>\n  <p *ngIf=\"storyProgressBar.value == 100\">\n    <clr-icon shape=\"success-standard\" size=\"24\"></clr-icon> The process is done. The system is ready.\n  </p>\n</div>\n<div [ngClass]=\"storyProgressBar.cssClassnames()\">\n  <progress value=\"{{storyProgressBar.value}}\" max=\"100\" [attr.data-displayval]=\"storyProgressBar.value + '%'\"></progress>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "storyProgressBar",
          "type": "ProgBarExample",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "storyTime",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        },
        {
          "name": "tellStoryAgain",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 56
        }
      ],
      "hostBindings": [
        {
          "name": "style.width.%",
          "defaultValue": "100",
          "line": 47
        }
      ],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, HostBinding } from '@angular/core';\nimport { ProgBarExample } from './progbar-example';\nimport { timer } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'clr-progress-bar-story-demo',\n  template: `\n    <p style=\"margin-top: 0\"><strong>{{storyProgressBar.title}}</strong></p>\n    <div class=\"story-message\" style=\"margin-bottom: 0.5rem\">\n      <p *ngIf=\"storyProgressBar.value <= 25\">\n        <clr-icon shape=\"cog\" size=\"24\"></clr-icon> Configuring the system <clr-icon shape=\"ellipsis-horizontal\" size=\"24\"></clr-icon>\n      </p>\n      <p *ngIf=\"storyProgressBar.value > 25 && storyProgressBar.value <= 50\">\n        <clr-icon shape=\"install\" size=\"24\"></clr-icon> Installing the system <clr-icon shape=\"ellipsis-horizontal\" size=\"24\"></clr-icon>\n      </p>\n      <p *ngIf=\"storyProgressBar.value > 50 && storyProgressBar.value <= 75\">\n        <clr-icon shape=\"download-cloud\" size=\"24\"></clr-icon> Updating the system <clr-icon shape=\"ellipsis-horizontal\" size=\"24\"></clr-icon>\n      </p>\n      <p *ngIf=\"storyProgressBar.value > 75 && storyProgressBar.value < 100\">\n        <clr-icon shape=\"step-forward-2\" size=\"24\"></clr-icon> Starting the system <clr-icon shape=\"ellipsis-horizontal\" size=\"24\"></clr-icon>\n      </p>\n      <p *ngIf=\"storyProgressBar.value == 100\">\n        <clr-icon shape=\"success-standard\" size=\"24\"></clr-icon> The process is done. The system is ready.\n      </p>\n    </div>\n    <div [ngClass]=\"storyProgressBar.cssClassnames()\">\n      <progress value=\"{{storyProgressBar.value}}\" max=\"100\" [attr.data-displayval]=\"storyProgressBar.value + '%'\"></progress>\n    </div>\n  `,\n})\nexport class ProgressBarStoryDemo {\n  storyProgressBar: ProgBarExample;\n  storyTime;\n\n  constructor() {\n    this.storyProgressBar = new ProgBarExample('', 'Progress example');\n    this.storyTime = timer(7500, 7500).pipe(take(10));\n  }\n\n  @HostBinding('style.width.%') width = 100;\n\n  ngOnInit() {\n    this.storyProgressBar.start();\n    this.storyTime.subscribe(() => {\n      this.tellStoryAgain();\n    });\n  }\n\n  tellStoryAgain() {\n    if (this.storyProgressBar.isFinished()) {\n      this.storyProgressBar.start();\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 40
      }
    },
    {
      "name": "ProjectPokemonDemo",
      "id": "component-ProjectPokemonDemo-3644b034f7a20c5ab872edfdd14a9c05",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/project-pokemon/project-pokemon.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-project-pokemon-demo",
      "styleUrls": [],
      "styles": [],
      "template": "Welcome to Project Pokemon!",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-project-pokemon-demo',\n  template: `Welcome to Project Pokemon!`,\n})\nexport class ProjectPokemonDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "RadioDemo",
      "id": "component-RadioDemo-ab10f2df7185dd677403414ab309d088",
      "file": "src/website/src/app/documentation/demos/radio/radio.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./radio.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleOne",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "exampleThree",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "exampleTwo",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "ngBasic",
          "defaultValue": "NgBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "ngDisabled",
          "defaultValue": "NgDisabled",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "ngHelpers",
          "defaultValue": "NgHelpers",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 45
        },
        {
          "name": "ngInline",
          "defaultValue": "NgInline",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "ngLabel",
          "defaultValue": "NgLabel",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "uiBasic",
          "defaultValue": "UiBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "uiDisabled",
          "defaultValue": "UiDisabled",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "uiError",
          "defaultValue": "UiError",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "uiFull",
          "defaultValue": "UiFull",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "uiInline",
          "defaultValue": "UiInline",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nimport * as UiBasic from 'raw-loader!./ui/basic.html';\nimport * as UiFull from 'raw-loader!./ui/full.html';\nimport * as UiError from 'raw-loader!./ui/error.html';\nimport * as UiInline from 'raw-loader!./ui/inline.html';\nimport * as UiDisabled from 'raw-loader!./ui/disabled.html';\n\nimport * as NgBasic from 'raw-loader!./ng/basic.html';\nimport * as NgLabel from 'raw-loader!./ng/label.html';\nimport * as NgHelpers from 'raw-loader!./ng/helpers.html';\nimport * as NgInline from 'raw-loader!./ng/inline.html';\nimport * as NgDisabled from 'raw-loader!./ng/disabled.html';\n\n@Component({\n  templateUrl: './radio.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class RadioDemo extends ClarityDocComponent {\n  constructor() {\n    super('radio');\n  }\n\n  exampleOne = '';\n  exampleTwo = '';\n  exampleThree = '';\n\n  uiBasic: any = UiBasic;\n  uiFull: any = UiFull;\n  uiError: any = UiError;\n  uiInline: any = UiInline;\n  uiDisabled: any = UiDisabled;\n\n  ngBasic: any = NgBasic;\n  ngLabel: any = NgLabel;\n  ngHelpers: any = NgHelpers;\n  ngInline: any = NgInline;\n  ngDisabled: any = NgDisabled;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 28
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"summary\">\n            Using radio buttons, users can select one option from a group of options.\n        </h5>\n\n        <h2 id=\"forms-code-samples\">Angular Radio Component</h2>\n\n        <p>If you are using Angular, the recommended approach is to always use the <code class=\"clr-code\">ClrRadio</code>\n            directive on your radio buttons to help manage the form control. By using <code class=\"clr-code\">ClrRadio</code>,\n            you'll automatically be able to leverage built in validation, helper text, and layout features in forms.</p>\n\n        <h4>Basic radio button</h4>\n\n        <p>While it is possible to create a radio button without a label, the cases are rare. However, it is possible\n            by just adding <code class=\"clr-code\">clrRadio</code> to your radio button to wire up the\n            directive. Notice, it is necessary to add <code class=\"clr-code\">type=\"radio\"</code>.</p>\n\n        <p></p>\n\n        <input type=\"radio\" clrRadio />\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngBasic\"></clr-code-snippet>\n\n        <h4>Labels</h4>\n\n        <p>For anything beyond a standalone radio button, you'll need to wrap your radios with the <code class=\"clr-code\">ClrRadioWrapper</code>\n            component when you include a label. This manages the label and display of the radio button for you.\n        </p>\n\n        <p></p>\n\n        <clr-radio-wrapper>\n            <input type=\"radio\" clrRadio name=\"test2\" value=\"option1\" />\n            <label>Option 1</label>\n        </clr-radio-wrapper>\n        <clr-radio-wrapper>\n            <input type=\"radio\" clrRadio name=\"test2\" value=\"option2\" />\n            <label>Option 2</label>\n        </clr-radio-wrapper>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngLabel\"></clr-code-snippet>\n\n        <h4>Helper and error messages</h4>\n\n        <p>To leverage helper and validation messages, you'll need to wrap all of the radios inside of a <code class=\"clr-code\">ClrRadioContainer</code>\n            component. The radio button container tracks the the validations placed on a radio button, such as <code\n                class=\"clr-code\">required</code>\n            or even custom built validators in Angular. Under the hood, it looks at the <code class=\"clr-code\">NgControl</code>\n            values to determine the control validity, and display the helper text or error message accordingly.</p>\n\n        <p>Note: the validation in this example only displays an error after you focus and leave focus without\n            selecting a value. The easiest way to do this is to highlight the text in this paragraph, and hit tab a few\n            times to change the focus.</p>\n\n        <p></p>\n\n        <clr-radio-container>\n            <label>Full radio example</label>\n            <clr-radio-wrapper>\n                <input type=\"radio\" clrRadio name=\"test3\" required value=\"option1\" [(ngModel)]=\"exampleOne\" />\n                <label>Option 1</label>\n            </clr-radio-wrapper>\n            <clr-radio-wrapper>\n                <input type=\"radio\" clrRadio name=\"test3\" required value=\"option2\" [(ngModel)]=\"exampleOne\" />\n                <label>Option 2</label>\n            </clr-radio-wrapper>\n            <clr-control-helper>Helper text</clr-control-helper>\n            <clr-control-error>This field is required!</clr-control-error>\n        </clr-radio-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngHelpers\"></clr-code-snippet>\n\n        <h4>Inline radios</h4>\n\n        <p>Radio buttons can be placed inline by default by adding the <code class=\"clr-code\">clrInline</code> directive\n            to your radio container elements. The radio buttons will wrap if there is not enough space.</p>\n\n        <p></p>\n\n        <clr-radio-container clrInline>\n            <label>Inline radio example</label>\n            <clr-radio-wrapper>\n                <input type=\"radio\" clrRadio name=\"test4\" required value=\"option1\" [(ngModel)]=\"exampleTwo\" />\n                <label>Option 1</label>\n            </clr-radio-wrapper>\n            <clr-radio-wrapper>\n                <input type=\"radio\" clrRadio name=\"test4\" required value=\"option2\" [(ngModel)]=\"exampleTwo\" />\n                <label>Option 2</label>\n            </clr-radio-wrapper>\n            <clr-control-helper>Helper text</clr-control-helper>\n            <clr-control-error>This field is required!</clr-control-error>\n        </clr-radio-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngInline\"></clr-code-snippet>\n\n        <h4>Disabled radio</h4>\n\n        <p>A radio can be disabled by simply putting the <code class=\"clr-code\">disabled</code> attribute on the\n          radio input. This does require the radio to be inside of a radio container. Also, for groups of\n          radios you have to put the disabled attribute on the last radio and cannot disable individual ones,\n          as Angular doesn't have support to disable individual radios in a group.</p>\n\n        <p></p>\n\n        <clr-radio-container>\n          <label>Disabled radio example</label>\n          <clr-radio-wrapper>\n            <input type=\"radio\" clrRadio name=\"test5\" value=\"option1\" [(ngModel)]=\"exampleThree\" disabled />\n            <label>Option 1</label>\n          </clr-radio-wrapper>\n          <clr-radio-wrapper>\n            <input type=\"radio\" clrRadio name=\"test5\" value=\"option2\" [(ngModel)]=\"exampleThree\" disabled />\n            <label>Option 2</label>\n          </clr-radio-wrapper>\n          <clr-control-helper>Helper text</clr-control-helper>\n        </clr-radio-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngDisabled\"></clr-code-snippet>\n\n\n\n\n        <h2 id=\"css-component\">CSS Radio Component</h2>\n\n        <p>Radio buttons can be used without Angular, but without some of the automatic interactivity. If you intend to\n            create\n            your own components, here are the basic features you'll need to build out.</p>\n\n        <h4>Basic radio button</h4>\n\n        <p>This is the minimal markup needed to style the radio button control by wrapping it with the an element with\n            the\n            <code class=\"clr-code\">clr-radio-wrapper</code> class. You must then put the input first, then the label\n            like you see below (the CSS selectors are specific about this ordering). You'll want to tie the input and\n            label together by providing an id for the label to connect. Ensure you add the <code class=\"clr-code\">clr-radio</code>\n            class to the radio button as well.</p>\n\n        <p></p>\n\n        <div class=\"clr-radio-wrapper\">\n            <input type=\"radio\" id=\"radio0\" name=\"radio-basic\" value=\"option1\" class=\"clr-radio\">\n            <label for=\"radio0\">My choice</label>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiBasic\"></clr-code-snippet>\n\n        <h4>Full input display</h4>\n\n        <p>Each form control has a <code class=\"clr-code\">.clr-form-control</code> wrapper, as well as a specific DOM\n            structure necessary to layout the form control as desired. This works with all layout options as well\n            without needing to change the DOM structure in any way.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control\">\n            <label class=\"clr-control-label\">Full radio example</label>\n            <div class=\"clr-control-container\">\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio1\" name=\"radio-full\" value=\"option1\" class=\"clr-radio\">\n                    <label for=\"radio1\" class=\"clr-control-label\">option 1</label>\n                </div>\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio2\" name=\"radio-full\" value=\"option2\" class=\"clr-radio\">\n                    <label for=\"radio2\" class=\"clr-control-label\">option 2</label>\n                </div>\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio3\" name=\"radio-full\" value=\"option3\" class=\"clr-radio\">\n                    <label for=\"radio3\" class=\"clr-control-label\">option 3</label>\n                </div>\n                <div class=\"clr-subtext-wrapper\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    <span class=\"clr-subtext\">Helper Text</span>\n                </div>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiFull\"></clr-code-snippet>\n\n        <h4>Error state</h4>\n\n        <p>To signify an error state, you need to add the <code class=\"clr-code\">.clr-error</code> class to the <code\n                class=\"clr-code\">.clr-control-container</code> element. This will show the <code class=\"clr-code\">.clr-validate-icon</code>\n            and turn the <code class=\"clr-code\">.clr-subtext</code> message to red. If you have helper text that needs\n            to change to error content, you'll have to handle the hiding and showing of that content inside of the\n            <code class=\"clr-code\">.clr-subtext</code> element.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control\">\n            <label class=\"clr-control-label\">Error radio</label>\n            <div class=\"clr-control-container clr-error\">\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio4\" name=\"radio-error\" value=\"option1\" class=\"clr-radio\">\n                    <label for=\"radio4\" class=\"clr-control-label\">option 1</label>\n                </div>\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio5\" name=\"radio-error\" value=\"option2\" class=\"clr-radio\">\n                    <label for=\"radio5\" class=\"clr-control-label\">option 2</label>\n                </div>\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio6\" name=\"radio-error\" value=\"option3\" class=\"clr-radio\">\n                    <label for=\"radio6\" class=\"clr-control-label\">option 3</label>\n                </div>\n                <div class=\"clr-subtext-wrapper\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    <span class=\"clr-subtext\">Error message</span>\n                </div>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiError\"></clr-code-snippet>\n\n        <h4>Inline radio</h4>\n\n        <p>Radio buttons can be placed inline by default by adding the <code class=\"clr-code\">clr-control-inline</code> directive\n            to your radio container. The radio buttons will wrap if there is not enough space.</p>\n\n        <p>The subtext content, the icon and subtext messages, also must be wrapped in a <code class=\"clr-code\">clr-subtext-wrapper</code>\n        element so it can properly layout in all layout variations. If you omit this, the validation icon and text may appear in the wrong place.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control\">\n            <label class=\"clr-control-label\">Inline radio example</label>\n            <div class=\"clr-control-container clr-control-inline\">\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio7\" name=\"radio-error-inline\" value=\"option1\" class=\"clr-radio\">\n                    <label for=\"radio7\" class=\"clr-control-label\">option 1</label>\n                </div>\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio8\" name=\"radio-error-inline\" value=\"option2\" class=\"clr-radio\">\n                    <label for=\"radio8\" class=\"clr-control-label\">option 2</label>\n                </div>\n                <div class=\"clr-radio-wrapper\">\n                    <input type=\"radio\" id=\"radio9\" name=\"radio-error-inline\" value=\"option3\" class=\"clr-radio\">\n                    <label for=\"radio9\" class=\"clr-control-label\">option 3</label>\n                </div>\n                <div class=\"clr-subtext-wrapper\">\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    <span class=\"clr-subtext\">Helper text</span>\n                </div>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiInline\"></clr-code-snippet>\n\n        <h4>Disabled radios</h4>\n\n        <p>In order to disable buttons, you'll add the <code class=\"clr-code\">disabled</code> attribute on the radio and\n          putting the <code class=\"clr-code\">clr-form-control-disabled</code> class onto the form control wrapper. This\n          helps setup the correct styling for the labels and other aspects of the form control when it is disabled.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control clr-form-control-disabled\">\n          <label class=\"clr-control-label\">Disabled radio example</label>\n          <div class=\"clr-control-container\">\n            <div class=\"radio\">\n              <input type=\"radio\" id=\"radio10\" name=\"radio-error\" value=\"option1\" class=\"clr-radio\" disabled>\n              <label for=\"radio10\" class=\"clr-control-label\">option 1</label>\n            </div>\n            <div class=\"clr-radio-wrapper\">\n              <input type=\"radio\" id=\"radio11\" name=\"radio-error\" value=\"option2\" class=\"clr-radio\" disabled>\n              <label for=\"radio11\" class=\"clr-control-label\">option 2</label>\n            </div>\n            <div class=\"clr-radio-wrapper\">\n              <input type=\"radio\" id=\"radio12\" name=\"radio-error\" value=\"option3\" class=\"clr-radio\" disabled>\n              <label for=\"radio12\" class=\"clr-control-label\">option 3</label>\n            </div>\n            <div class=\"clr-subtext-wrapper\">\n              <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n              <span class=\"clr-subtext\">Helper text</span>\n            </div>\n          </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiDisabled\"></clr-code-snippet>\n\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>Use radio buttons when you want users to see all available options and the list of\n                options is small. For mutually exclusive options, consider a <a routerLink=\"../../checkboxes\">checkbox</a>\n                or <a routerLink=\"../../toggle-switches\">toggle switch</a>.</p>\n\n            <ul class=\"list\">\n                <li>Radio buttons are best for six or fewer options.</li>\n                <li>For more than six options, consider a <a routerLink=\"../../select-boxes\">select box</a>, which\n                    prompts users to disclose the options.\n                </li>\n            </ul>\n        </div>\n\n        <div id=\"accessibility-guidelines\">\n            <h2 id=\"accessability\">Accessibility</h2>\n\n            <p>\n                For applications that use the <code class=\"clr-code\">ClrRadio</code> directive and the associated\n                <code class=\"clr-code\">ClrRadioContainer</code> and <code class=\"clr-code\">ClrRadioWrapper</code>\n                components there is built in support that adds accessible behavior to the control and its form.\n                This behavior includes:\n            </p>\n            <p></p>\n            <ol>\n                <li>\n                    Programmatically associating the correct label <code class=\"clr-code\">for</code>\n                    attribute with the <code class=\"clr-code\">id</code> of the input</li>\n                <li>\n                    Automatic wiring up of the <code class=\"clr-code\">aria-describedby</code> behavior with associated\n                    <code class=\"clr-code\">clr-control-error</code> elements\n                </li>\n                <li>\n                    An <code class=\"clr-code\">aria-live</code> region that can notify screen readers about changes in\n                    the control error state\n                </li>\n                <li>\n                    Adds the label to a general form summary for screen readers when the control is in an error state\n                    after a form submit\n                </li>\n            </ol>\n        </div>\n\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "RaichuDemo",
      "id": "component-RaichuDemo-03443506d01f6e32c448ecf183348360",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/raichu.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-raichu-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Raichu</h4>\n<p>\n    If the electrical sacs become excessively charged,\n    Raichu plants its tail in the ground and discharges.\n    Scorched patches of ground will be found near this Pokémon's nest.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Raichu</h4>\n<p>\n    If the electrical sacs become excessively charged,\n    Raichu plants its tail in the ground and discharges.\n    Scorched patches of ground will be found near this Pokémon's nest.\n</p>\n`;\n\n@Component({\n  selector: 'clr-raichu-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Raichu</h4>\n        <p>\n            If the electrical sacs become excessively charged,\n            Raichu plants its tail in the ground and discharges.\n            Scorched patches of ground will be found near this Pokémon's nest.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n    `,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class RaichuDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "RangeBasicDemo",
      "id": "component-RangeBasicDemo-60a2bf5e059ef1a0acb51b39f5fc7829",
      "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-range-basic-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./range-basic.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "basicExample",
          "defaultValue": "basicExample",
          "type": "",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "disabled",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 68
        },
        {
          "name": "disabledExample",
          "defaultValue": "disabledExample",
          "type": "",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "fullExample",
          "defaultValue": "fullExample",
          "type": "",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "input",
          "defaultValue": "{\n    one: 31,\n    two: 36,\n    three: 92,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "rangeChangeHTML",
          "defaultValue": "rangeChangeHTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "rangeChangeTS",
          "defaultValue": "rangeChangeTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 67
        }
      ],
      "methodsClass": [
        {
          "name": "rangeChange",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst basicExample = `\n<form clrForm>\n    <clr-range-container>\n        <input type=\"range\" clrRange name=\"two\" [(ngModel)]=\"input.one\" />\n    </clr-range-container>\n</form>\n`;\nconst fullExample = `\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Full example</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.two\" name=\"three\" />\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`;\nconst disabledExample = `\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Disabled</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.three\" name=\"four\" [disabled]=\"disabled\" />\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`;\n\nconst rangeChangeHTML = `\n  <form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Value change example</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.two\" name=\"three\" (change)=\"rangeChange($event)\"/>\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`;\n\nconst rangeChangeTS = `\n@Component({\n  selector: 'range-change',\n  templateUrl: './range-change.html',\n})\nexport class RangeBasicDemo {\n  rangeInput = 36;\n\n  rangeChange(event) {\n    console.log(event.target.value);\n  }\n}\n`;\n\n@Component({\n  selector: 'clr-range-basic-demo',\n  templateUrl: './range-basic.demo.html',\n})\nexport class RangeBasicDemo {\n  basicExample = basicExample;\n  fullExample = fullExample;\n  disabledExample = disabledExample;\n  rangeChangeHTML = rangeChangeHTML;\n  rangeChangeTS = rangeChangeTS;\n  disabled = true;\n  input = {\n    one: 31,\n    two: 36,\n    three: 92,\n  };\n\n  rangeChange(event) {\n    console.log(event.target.value);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Basic</h4>\n<form clrForm>\n    <clr-range-container>\n        <input type=\"range\" clrRange name=\"two\" [(ngModel)]=\"input.one\" />\n    </clr-range-container>\n</form>\n<clr-code-snippet [clrCode]=\"basicExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n\n<h4>Full Example</h4>\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Full example</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.two\" name=\"three\" />\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n<clr-code-snippet [clrCode]=\"fullExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<h4>Disabled</h4>\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Disabled</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.three\" name=\"four\" [disabled]=\"disabled\" />\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n<clr-code-snippet [clrCode]=\"disabledExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<h4>Value Changes</h4>\n<p>\n    Applications may need to be aware of the current slider value. They can use the standard Angular\n    <code class=\"clr-code\">(change)</code> output to handle changes to the slider value.\n</p>\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Value change example</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.two\" name=\"three\" (change)=\"rangeChange($event)\"/>\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>Tab1</button>\n        <clr-tab-content *clrIfActive>\n            <clr-code-snippet [clrCode]=\"rangeChangeHTML\" clrLanguage=\"html\"></clr-code-snippet>\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>Tab2</button>\n        <clr-tab-content *clrIfActive>\n            <clr-code-snippet [clrCode]=\"rangeChangeTS\" clrLanguage=\"typescript\"></clr-code-snippet>\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n"
    },
    {
      "name": "RangeDemo",
      "id": "component-RangeDemo-9014df0c9562d2901aa703f40e79d1c3",
      "file": "src/website/src/app/documentation/demos/range/range.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-range-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./range.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-range-demo',\n  templateUrl: './range.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class RangeDemo extends ClarityDocComponent {\n  constructor() {\n    super('range');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"true\">\n    <article>\n        <h5 class=\"component-summary\" id=\"alerts_header\">\n            The HTML5 range input element is used when a user can choose between a min and a max value but the precise\n            value chosed is not considered important.\n        </h5>\n\n        <div id=\"design-guidelines\">\n            <h3>Design Guidelines</h3>\n\n            <p>\n                The range input control allows the user to chose a value when they don’t care (or know) what the\n                specific number value chosen is. This is an imprecise input control that should only be used when the\n                exact value is not important for the user to know.  Range controls work well when the users is more\n                concerned with percent sidtance between the min and the max.\n            </p>\n\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <p>The Range input uses standard HTML5 attributes and can be used with Clarity forms.</p>\n            <p>Progress can be shown as a value of the percentage of the range with the\n                <code class=\"clr-code\">clrRangeHasProgress</code> input.\n            </p>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Attribute</th>\n                    <th class=\"left clr-hidden-xs-down\">Value / Type</th>\n                    <th class=\"left clr-hidden-xs-down\">Default</th>\n                    <th class=\"left\">Description</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>min</b>\n                        <div class=\"clr-hidden-sm-up\">Type: string that converts to a floating point number</div>\n                        <div class=\"clr-hidden-sm-up\">Default: 0</div>\n                    </td>\n                    <td class=\"left clr-hidden-xs-down\">Type: string that converts to a floating point number</td>\n                    <td class=\"left clr-hidden-xs-down\">0</td>\n                    <td class=\"left\">\n                        Sets the minimum value of the range.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>max</b>\n                        <div class=\"clr-hidden-sm-up\">Type: number</div>\n                        <div class=\"clr-hidden-sm-up\">Default: 100</div>\n                    </td>\n                    <td class=\"left clr-hidden-xs-down\">Type: number</td>\n                    <td class=\"left clr-hidden-xs-down\">100</td>\n                    <td class=\"left\">\n                        Sets the minimum value of the range.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>step</b>\n                        <div class=\"clr-hidden-sm-up\">Type: number</div>\n                        <div class=\"clr-hidden-sm-up\">Default: 100</div>\n                    </td>\n                    <td class=\"left clr-hidden-xs-down\">Type: number</td>\n                    <td class=\"left clr-hidden-xs-down\">1</td>\n                    <td class=\"left\">\n                        Specifies the granularity that the value must adhere to.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>value</b>\n                        <div class=\"clr-hidden-sm-up\">Type: number</div>\n                        <div class=\"clr-hidden-sm-up\">Default: the value of the min attribute</div>\n                    </td>\n                    <td class=\"left clr-hidden-xs-down\">Type: number</td>\n                    <td class=\"left clr-hidden-xs-down\">Default: the value of the min attribute</td>\n                    <td class=\"left\">\n                        The string representation of the selected number.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrRangeHasProgress]</b>\n                        <div class=\"clr-hidden-sm-up\">Type: boolean</div>\n                        <div class=\"clr-hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"left clr-hidden-xs-down\">Type: boolean</td>\n                    <td class=\"left clr-hidden-xs-down\">Default: false</td>\n                    <td class=\"left\">\n                        When true, shows the percentage of the range below the current value as a colored line.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <clr-range-basic-demo></clr-range-basic-demo>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "RealButtonDemo",
      "id": "component-RealButtonDemo-76e92d9e57770a4ad55746ce2ec868f8",
      "file": "src/website/src/app/documentation/demos/buttons/real-button.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-real-button",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./real-button.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample1",
          "defaultValue": "HTML_EXAMPLE_1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "htmlExample2",
          "defaultValue": "HTML_EXAMPLE_2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "htmlExample3",
          "defaultValue": "HTML_EXAMPLE_3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE_1 = `\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn btn-danger\" disabled>Disabled</button>\n`;\n\nconst HTML_EXAMPLE_2 = `\n<button class=\"btn btn-outline\">Regular</button>\n<button class=\"btn btn-success-outline\">Success-Outline</button>\n<button class=\"btn btn-info-outline\">Info</button>\n<button class=\"btn btn-warning-outline\">Warning</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n<button class=\"btn btn-outline\" disabled>Disabled</button>\n`;\n\nconst HTML_EXAMPLE_3 = `\n<button class=\"btn btn-link\">Regular</button>\n<button class=\"btn btn-link\" disabled>Disabled</button>\n<button class=\"btn btn-sm btn-link\">Regular</button>\n<button class=\"btn btn-sm btn-link\" disabled>Disabled</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-real-button',\n  templateUrl: './real-button.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class RealButtonDemo {\n  htmlExample1 = HTML_EXAMPLE_1;\n  htmlExample2 = HTML_EXAMPLE_2;\n  htmlExample3 = HTML_EXAMPLE_3;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Solid Buttons</h4>\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn btn-danger\" disabled>Disabled</button>\n<clr-code-snippet [clrCode]=\"htmlExample1\"></clr-code-snippet>\n\n<h4>Outline Buttons</h4>\n<button class=\"btn btn-outline\">Regular</button>\n<button class=\"btn btn-success-outline\">Success-Outline</button>\n<button class=\"btn btn-info-outline\">Info</button>\n<button class=\"btn btn-warning-outline\">Warning</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n<button class=\"btn btn-outline\" disabled>Disabled</button>\n<clr-code-snippet [clrCode]=\"htmlExample2\"></clr-code-snippet>\n\n<h4>Flat Buttons</h4>\n<button class=\"btn btn-link\">Regular</button>\n<button class=\"btn btn-link\" disabled>Disabled</button>\n<button class=\"btn btn-sm btn-link\">Regular</button>\n<button class=\"btn btn-sm btn-link\" disabled>Disabled</button>\n<clr-code-snippet [clrCode]=\"htmlExample3\"></clr-code-snippet>\n"
    },
    {
      "name": "RecursiveTreeDemo",
      "id": "component-RecursiveTreeDemo-7ef7393b3b4eb53a2925c16e74ab361d",
      "file": "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-recursive-tree-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["recursive-tree.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 92
        },
        {
          "name": "exampleTs",
          "defaultValue": "EXAMPLE_TS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 93
        },
        {
          "name": "getChildren",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 157
        },
        {
          "name": "root",
          "defaultValue":
            "[\n    {\n      name: 'src',\n      selected: ClrSelectedState.INDETERMINATE,\n      files: [\n        {\n          name: 'app',\n          selected: ClrSelectedState.INDETERMINATE,\n          files: [\n            {\n              name: 'app.component.html',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n            {\n              name: 'app.component.ts',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n            {\n              name: 'app.module.ts',\n              selected: ClrSelectedState.SELECTED,\n            },\n            {\n              name: 'app.routing.ts',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n          ],\n        },\n        {\n          name: 'environments',\n          selected: ClrSelectedState.UNSELECTED,\n          files: [\n            {\n              name: 'environments.prod.ts',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n            {\n              name: 'environment.ts',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n          ],\n        },\n        {\n          name: 'index.html',\n          selected: ClrSelectedState.SELECTED,\n        },\n        {\n          name: 'main.ts',\n          selected: ClrSelectedState.SELECTED,\n        },\n      ],\n    },\n    {\n      name: 'package.json',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'tsconfig.json',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 95
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClrSelectedState } from '@clr/angular';\n\nconst EXAMPLE_HTML = `\n<clr-tree>\n    <clr-tree-node *clrRecursiveFor=\"let file of root; getChildren: getChildren\"\n                   [(clrSelected)]=\"file.selected\">\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n`;\n\nconst EXAMPLE_TS = `\nexport class RecursiveSelection {\n    root = [\n        {\n            name: \"src\",\n            selected: ClrSelectedState.INDETERMINATE,\n            files: [\n                {\n                    name: \"app\",\n                    selected: ClrSelectedState.INDETERMINATE,\n                    files: [\n                        {\n                            name: \"app.component.html\",\n                            selected: ClrSelectedState.UNSELECTED\n                        },\n                        {\n                            name: \"app.component.ts\",\n                            selected: ClrSelectedState.UNSELECTED\n                        },\n                        {\n                            name: \"app.module.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        },\n                        {\n                            name: \"app.routing.ts\",\n                            selected: ClrSelectedState.UNSELECTED\n                        }\n                    ]\n                },\n                {\n                    name: \"environments\",\n                    selected: ClrSelectedState.SELECTED,\n                    files: [\n                        {\n                            name: \"environments.prod.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        },\n                        {\n                            name: \"environment.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        }\n                    ]\n                },\n                {\n                    name: \"index.html\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"main.ts\",\n                    selected: ClrSelectedState.UNSELECTED,\n                }\n            ]\n        },\n        {\n            name: \"package.json\",\n            selected: ClrSelectedState.UNSELECTED\n        },\n        {\n            name: \"tsconfig.json\",\n            selected: ClrSelectedState.UNSELECTED\n        }\n    ];\n\n    getChildren = (folder) => folder.files;\n}\n`;\n\n@Component({\n  selector: 'clr-recursive-tree-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: 'recursive-tree.html',\n})\nexport class RecursiveTreeDemo {\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  root = [\n    {\n      name: 'src',\n      selected: ClrSelectedState.INDETERMINATE,\n      files: [\n        {\n          name: 'app',\n          selected: ClrSelectedState.INDETERMINATE,\n          files: [\n            {\n              name: 'app.component.html',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n            {\n              name: 'app.component.ts',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n            {\n              name: 'app.module.ts',\n              selected: ClrSelectedState.SELECTED,\n            },\n            {\n              name: 'app.routing.ts',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n          ],\n        },\n        {\n          name: 'environments',\n          selected: ClrSelectedState.UNSELECTED,\n          files: [\n            {\n              name: 'environments.prod.ts',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n            {\n              name: 'environment.ts',\n              selected: ClrSelectedState.UNSELECTED,\n            },\n          ],\n        },\n        {\n          name: 'index.html',\n          selected: ClrSelectedState.SELECTED,\n        },\n        {\n          name: 'main.ts',\n          selected: ClrSelectedState.SELECTED,\n        },\n      ],\n    },\n    {\n      name: 'package.json',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'tsconfig.json',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n  ];\n\n  // TODO: update the docs to mention the ClrGetChildrenFunction<T> type once we add it\n  getChildren = folder => folder.files;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<clr-tree>\n    <clr-tree-node *clrRecursiveFor=\"let file of root; getChildren: getChildren\"\n                   [(clrSelected)]=\"file.selected\"\n                   [clrExpanded]=\"true\">\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n\n<clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"exampleTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n"
    },
    {
      "name": "ResponsiveNav1Demo",
      "id": "component-ResponsiveNav1Demo-a784918482fb9b9d453338b2d6f69dbf",
      "file": "src/website/src/app/documentation/demos/nav/responsive-nav1.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-responsive-nav-header-sidenav-demo",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "template":
        "    <pre><code clr-code-highlight=\"language-html\" ngNonBindable>\n&lt;clr-main-container&gt;\n    &lt;clr-header&gt;\n        ...\n        &lt;div class=&quot;header-nav&quot; [clr-nav-level]=&quot;1&quot;&gt;\n            ...\n        &lt;/div&gt;\n        ...\n    &lt;/clr-header&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;main class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/main&gt;\n        &lt;nav class=&quot;sidenav&quot; [clr-nav-level]=&quot;2&quot;&gt;\n            ...\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/clr-main-container&gt;\n</code></pre>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-responsive-nav-header-sidenav-demo',\n  template: `\n    <pre><code clr-code-highlight=\"language-html\" ngNonBindable>\n&lt;clr-main-container&gt;\n    &lt;clr-header&gt;\n        ...\n        &lt;div class=&quot;header-nav&quot; [clr-nav-level]=&quot;1&quot;&gt;\n            ...\n        &lt;/div&gt;\n        ...\n    &lt;/clr-header&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;main class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/main&gt;\n        &lt;nav class=&quot;sidenav&quot; [clr-nav-level]=&quot;2&quot;&gt;\n            ...\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/clr-main-container&gt;\n</code></pre>\n    `,\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class ResponsiveNav1Demo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "ResponsiveNav2Demo",
      "id": "component-ResponsiveNav2Demo-e2b31692d1b51db4d1d8d2276dba34e0",
      "file": "src/website/src/app/documentation/demos/nav/responsive-nav2.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-responsive-nav-subnav-sidenav-demo",
      "styleUrls": ["./headers.demo.scss"],
      "styles": [],
      "template":
        "    <pre><code clr-code-highlight=\"language-html\" ngNonBindable>\n&lt;clr-main-container&gt;\n    &lt;clr-header&gt;\n        ...\n    &lt;/clr-header&gt;\n    &lt;nav class=&quot;subnav&quot; [clr-nav-level]=&quot;1&quot;&gt;\n        ...\n    &lt;/nav&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;main class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/main&gt;\n        &lt;nav class=&quot;sidenav&quot; [clr-nav-level]=&quot;2&quot;&gt;\n            ...\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/clr-main-container&gt;\n</code></pre>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-responsive-nav-subnav-sidenav-demo',\n  template: `\n    <pre><code clr-code-highlight=\"language-html\" ngNonBindable>\n&lt;clr-main-container&gt;\n    &lt;clr-header&gt;\n        ...\n    &lt;/clr-header&gt;\n    &lt;nav class=&quot;subnav&quot; [clr-nav-level]=&quot;1&quot;&gt;\n        ...\n    &lt;/nav&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;main class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/main&gt;\n        &lt;nav class=&quot;sidenav&quot; [clr-nav-level]=&quot;2&quot;&gt;\n            ...\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/clr-main-container&gt;\n</code></pre>\n    `,\n  styleUrls: ['./headers.demo.scss'],\n})\nexport class ResponsiveNav2Demo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  header {\n    &.space-below {\n      margin-bottom: $clr_baselineRem_1;\n    }\n  }\n}\n",
          "styleUrl": "./headers.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "SecondaryButtonDemo",
      "id": "component-SecondaryButtonDemo-d9ebdd741ce57f9ec49f57aaa87180a3",
      "file": "src/website/src/app/documentation/demos/buttons/secondary-button.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-secondary-button",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./secondary-button.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<button class=\"btn\">Secondary</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-secondary-button',\n  templateUrl: './secondary-button.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class SecondaryButtonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Secondary Button</h4>\n<button class=\"btn\">Secondary</button>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "SelectDemo",
      "id": "component-SelectDemo-567b84d4221d6fb1e40ebfcb3339babd",
      "file": "src/website/src/app/documentation/demos/select/select.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./select.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleOne",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "exampleThree",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "exampleTwo",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "ngBasic",
          "defaultValue": "NgBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "ngHelpers",
          "defaultValue": "NgHelpers",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "ngLabel",
          "defaultValue": "NgLabel",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "uiBasic",
          "defaultValue": "UiBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "uiError",
          "defaultValue": "UiError",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "uiFull",
          "defaultValue": "UiFull",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nimport * as UiBasic from 'raw-loader!./ui/basic.html';\nimport * as UiFull from 'raw-loader!./ui/full.html';\nimport * as UiError from 'raw-loader!./ui/error.html';\n\nimport * as NgBasic from 'raw-loader!./ng/basic.html';\nimport * as NgLabel from 'raw-loader!./ng/label.html';\nimport * as NgHelpers from 'raw-loader!./ng/helpers.html';\n\n@Component({\n  templateUrl: './select.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class SelectDemo extends ClarityDocComponent {\n  constructor() {\n    super('select');\n  }\n\n  exampleOne = '';\n  exampleTwo = '';\n  exampleThree = '';\n\n  uiBasic: any = UiBasic;\n  uiFull: any = UiFull;\n  uiError: any = UiError;\n\n  ngBasic: any = NgBasic;\n  ngLabel: any = NgLabel;\n  ngHelpers: any = NgHelpers;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 24
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"summary\">\n            With a select box, users can select one item from a list of values. The selected item is visible when the\n            select box is closed.\n        </h5>\n\n        <h2 id=\"forms-code-samples\">Angular Select Component</h2>\n\n        <p>If you are using Angular, the recommended approach is to always use the <code class=\"clr-code\">ClrSelect</code>\n            directive on your selects to help manage the form control. By using <code class=\"clr-code\">ClrSelect</code>,\n            you'll automatically be able to leverage built in validation, helper text, and layout features in forms.</p>\n\n        <h4>Basic select</h4>\n\n        <p>This is the standard way to define a select box inside of a form, without the use of a\n            label or validation. You need to add <code class=\"clr-code\">clrSelect</code> to your select to wire up the\n            directive.</p>\n\n        <p></p>\n\n        <select clrSelect name=\"exampleOne\" [(ngModel)]=\"exampleOne\">\n            <option value=\"one\">One</option>\n            <option value=\"two\">Two</option>\n            <option value=\"three\">Three</option>\n        </select>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngBasic\"></clr-code-snippet>\n\n        <h4>Labels</h4>\n\n        <p>For anything beyond a standalone select control, you'll need to wrap your select with the <code class=\"clr-code\">ClrSelectContainer</code>\n            component. This is required to contain all of the logic and validation details for the individual select\n            control.</p>\n\n        <p>Then you can add a <code class=\"clr-code\">label</code> element and it will automatically get laid out\n            correctly in the form.</p>\n\n        <p></p>\n\n        <clr-select-container>\n            <label>I've got some options</label>\n            <select clrSelect name=\"exampleTwo\" [(ngModel)]=\"exampleTwo\">\n                <option value=\"one\">One</option>\n                <option value=\"two\">Two</option>\n                <option value=\"three\">Three</option>\n            </select>\n        </clr-select-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngLabel\"></clr-code-snippet>\n\n        <h4>Helper and error messages</h4>\n\n        <p>The select form control wires up with the validations placed on an select, such as <code class=\"clr-code\">required</code>\n            or even custom built validators in Angular. Under the hood, it looks at the <code class=\"clr-code\">NgControl</code>\n            values to determine the control validity, and display the helper text or error message accordingly.</p>\n\n        <p>Note: the validation in this example only displays an error after you focus and leave focus without\n            selecting a value. The easiest way to do this is to highlight the text in this paragraph, and hit tab a few\n            times to change the focus.</p>\n\n        <p></p>\n\n        <clr-select-container>\n            <label>I've got some options</label>\n            <select clrSelect name=\"options\" [(ngModel)]=\"exampleThree\" required>\n                <option value=\"one\">One</option>\n                <option value=\"two\">Two</option>\n                <option value=\"three\">Three</option>\n            </select>\n            <clr-control-helper>You have these choices</clr-control-helper>\n            <clr-control-error>You must select something!</clr-control-error>\n        </clr-select-container>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngHelpers\"></clr-code-snippet>\n\n\n\n\n        <h2 id=\"css-component\">CSS Select Component</h2>\n\n        <p>Selects can be used without Angular, but without some of the automatic interactivity. If you intend to\n            create your own components, here are the basic features you'll need to build out.</p>\n\n        <h4>Basic select</h4>\n\n        <p>This is the minimal markup needed to style the select control by wrapping it with the an element with the\n            <code class=\"clr-code\">clr-select-wrapper</code> class. Ensure you add the <code class=\"clr-code\">clr-select</code>\n            class to the select as well.</p>\n\n        <p></p>\n\n        <div class=\"clr-select-wrapper\">\n            <select id=\"select-basic\" class=\"clr-select\">\n                <option value=\"1\">One</option>\n                <option value=\"2\">Two</option>\n                <option value=\"3\">Three</option>\n            </select>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiBasic\"></clr-code-snippet>\n\n        <h4>Full select display</h4>\n\n        <p>Each form control has a <code class=\"clr-code\">.clr-form-control</code> wrapper, as well as a specific DOM\n            structure necessary to layout the form control as desired. This works with all layout options as well\n            without needing to change the DOM structure in any way.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control\">\n            <label for=\"select-full\" class=\"clr-control-label\">Basic select</label>\n            <div class=\"clr-control-container\">\n                <div class=\"clr-select-wrapper\">\n                    <select id=\"select-full\" class=\"clr-select\">\n                        <option value=\"1\">One</option>\n                        <option value=\"2\">Two</option>\n                        <option value=\"3\">Three</option>\n                    </select>\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                </div>\n                <span class=\"clr-subtext\">Helper Text</span>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiFull\"></clr-code-snippet>\n\n        <h4>Error state</h4>\n\n        <p>To signify an error state, you need to add the <code class=\"clr-code\">.clr-error</code> class to the <code\n                class=\"clr-code\">.clr-control-container</code> element. This will show the <code class=\"clr-code\">.clr-validate-icon</code>\n            and turn the <code class=\"clr-code\">.clr-subtext</code> message to red. If you have helper text that needs\n            to change to error content, you'll have to handle the hiding and showing of that content inside of the\n            <code class=\"clr-code\">.clr-subtext</code> element.</p>\n\n        <p></p>\n\n        <div class=\"clr-form-control\">\n            <label for=\"select-error\" class=\"clr-control-label\">Basic select</label>\n            <div class=\"clr-control-container clr-error\">\n                <div class=\"clr-select-wrapper\">\n                    <select id=\"select-error\" class=\"clr-select\">\n                        <option value=\"1\">One</option>\n                        <option value=\"2\">Two</option>\n                        <option value=\"3\">Three</option>\n                    </select>\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                </div>\n                <span class=\"clr-subtext\">Error message</span>\n            </div>\n        </div>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiError\"></clr-code-snippet>\n\n\n\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>Use a select box for a list of items that a user does not need to see all the time.</p>\n\n            <p>A common strategy is to combine an input field with a select box so that a user can enter\n                a value and qualify it with a menu item. For example, the user might enter a number in an\n                input field and select the units from the select box.</p>\n\n            <p>Don’t confuse a select box with a <a routerLink=\"../../dropdowns\">dropdown menu</a>.\n                Select boxes are for setting options and work best in forms. Dropdowns are for presenting\n                actions and most appropriate in a header.</p>\n\n            <h4 id=\"number-of-list-items\">Number of List Items</h4>\n\n            <p>Typically, a select box contains between 3 and 12 items. For fewer than 3 items or to\n                present choices that are always visible, consider a <a routerLink=\"../../radios\">radio button</a>.</p>\n\n            <h4 id=\"label\">Label</h4>\n\n            <p>A select box requires a brief introductory label that describes the items in the menu.\n                Use sentence-style capitalization for both the label and the menu items.</p>\n        </div>\n\n        <div id=\"accessibility-guidelines\">\n            <h2 id=\"accessibility\">Accessibility</h2>\n\n            <p>\n                For applications that use the <code class=\"clr-code\">ClrSelect</code> directive and the associated\n                <code class=\"clr-code\">ClrSelectContainer</code> component there is built in support that adds accessible\n                behavior to the control and its form. This behavior includes:\n            </p>\n            <p></p>\n            <ol>\n                <li>\n                    Programmatically associating the correct label <code class=\"clr-code\">for</code>\n                    attribute with the <code class=\"clr-code\">id</code> of the input</li>\n                <li>\n                    Automatic wiring up of the <code class=\"clr-code\">aria-describedby</code> behavior with associated\n                    <code class=\"clr-code\">clr-control-error</code> elements\n                </li>\n                <li>\n                    An <code class=\"clr-code\">aria-live</code> region that can notify screen readers about changes in\n                    the control error state\n                </li>\n                <li>\n                    Adds the label to a general form summary for screen readers when the control is in an error state\n                    after a form submit\n                </li>\n            </ol>\n        </div>\n\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "SelectionTreeDemo",
      "id": "component-SelectionTreeDemo-dc66ac12ed4ad0344758a233d47e9caa",
      "file": "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-selection-tree-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["selection-tree.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 74
        },
        {
          "name": "exampleTs",
          "defaultValue": "EXAMPLE_TS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 75
        },
        {
          "name": "groceries",
          "defaultValue":
            "[\n    {\n      name: 'Dairy',\n      selected: ClrSelectedState.INDETERMINATE,\n      items: [\n        {\n          name: 'Milk',\n          selected: ClrSelectedState.UNSELECTED,\n        },\n        {\n          name: 'Cheese',\n          selected: ClrSelectedState.SELECTED,\n        },\n      ],\n    },\n    {\n      name: 'Vegetables',\n      selected: ClrSelectedState.UNSELECTED,\n      items: [\n        {\n          name: 'Carrots',\n          selected: ClrSelectedState.UNSELECTED,\n        },\n        {\n          name: 'Potatoes',\n          selected: ClrSelectedState.UNSELECTED,\n        },\n        {\n          name: 'Beans',\n          selected: ClrSelectedState.UNSELECTED,\n        },\n      ],\n    },\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 77
        }
      ],
      "methodsClass": [
        {
          "name": "selectVegetables",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 112
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClrSelectedState } from '@clr/angular';\n\nconst EXAMPLE_HTML = `\n<clr-tree>\n    <clr-tree-node *ngFor=\"let group of groceries\"\n                   [(clrSelected)]=\"group.selected\"\n                   [clrExpanded]=\"true\">\n        {{group.name}}\n        <clr-tree-node *ngFor=\"let item of group.items\" [(clrSelected)]=\"item.selected\">\n            {{item.name}}\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>\n\n<button class=\"btn btn-sm\" type=\"button\" (click)=\"selectVegetables()\">Select all vegetables</button>\n`;\n\nconst EXAMPLE_TS = `\nexport class GroceryList {\n    groceries = [\n        {\n            name: \"Dairy\",\n            selected: ClrSelectedState.INDETERMINATE,\n            items: [\n                {\n                    name: \"Milk\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Cheese\",\n                    selected: ClrSelectedState.SELECTED,\n                }\n            ]\n        },\n        {\n            name: \"Vegetables\",\n            selected: ClrSelectedState.UNSELECTED,\n            items: [\n                {\n                    name: \"Carrots\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Potatoes\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Beans\",\n                    selected: ClrSelectedState.UNSELECTED,\n                }\n            ]\n        }\n    ];\n\n    selectVegetables() {\n        this.groceries[1].selected = ClrSelectedState.SELECTED;\n    }\n}\n`;\n\n@Component({\n  selector: 'clr-selection-tree-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: 'selection-tree.html',\n})\nexport class SelectionTreeDemo {\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  groceries = [\n    {\n      name: 'Dairy',\n      selected: ClrSelectedState.INDETERMINATE,\n      items: [\n        {\n          name: 'Milk',\n          selected: ClrSelectedState.UNSELECTED,\n        },\n        {\n          name: 'Cheese',\n          selected: ClrSelectedState.SELECTED,\n        },\n      ],\n    },\n    {\n      name: 'Vegetables',\n      selected: ClrSelectedState.UNSELECTED,\n      items: [\n        {\n          name: 'Carrots',\n          selected: ClrSelectedState.UNSELECTED,\n        },\n        {\n          name: 'Potatoes',\n          selected: ClrSelectedState.UNSELECTED,\n        },\n        {\n          name: 'Beans',\n          selected: ClrSelectedState.UNSELECTED,\n        },\n      ],\n    },\n  ];\n\n  selectVegetables() {\n    this.groceries[1].selected = ClrSelectedState.SELECTED;\n  }\n\n  get displayGroceries() {\n    const replacer = (key, value) => {\n      if (key === 'selected') {\n        return ClrSelectedState[value];\n      }\n      return value;\n    };\n    return JSON.stringify(this.groceries, replacer, 2);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "accessors": {
        "displayGroceries": {
          "name": "displayGroceries",
          "getSignature": {
            "name": "displayGroceries",
            "type": "",
            "returnType": "",
            "line": 116
          }
        }
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-md-4\">\n        <clr-tree>\n            <clr-tree-node *ngFor=\"let group of groceries\"\n                           [(clrSelected)]=\"group.selected\"\n                           [clrExpanded]=\"true\">\n                {{group.name}}\n                <clr-tree-node *ngFor=\"let item of group.items\" [(clrSelected)]=\"item.selected\">\n                    {{item.name}}\n                </clr-tree-node>\n            </clr-tree-node>\n        </clr-tree>\n\n        <button class=\"btn btn-sm\" type=\"button\" (click)=\"selectVegetables()\">Select all vegetables</button>\n    </div>\n    <div class=\"clr-col-12 clr-col-md-8\">\n        <pre class=\"example-display-json\">{{displayGroceries}}</pre>\n    </div>\n</div>\n\n\n<clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"exampleTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n"
    },
    {
      "name": "SidenavDemo",
      "id": "component-SidenavDemo-aea28642731277fc5e31bfe7562a6ffe",
      "file": "src/website/src/app/documentation/demos/nav/sidenav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-nav-demo-sidenav",
      "styleUrls": ["./sidenav.demo.scss"],
      "styles": [],
      "templateUrl": ["./sidenav.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-nav-demo-sidenav',\n  styleUrls: ['./sidenav.demo.scss'],\n  templateUrl: './sidenav.demo.html',\n})\nexport class SidenavDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.main-container {\n  padding-top: 0;\n  height: $clr_baselineRem_20;\n}\n",
          "styleUrl": "./sidenav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempora eligendi quos unde id optio culpa, illo perspiciatis laboriosam explicabo in voluptate incidunt est beatae rerum quisquam accusantium corporis reiciendis delectus!\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Animi nisi ad, minus fuga neque voluptatibus quidem libero ducimus quas ipsa eveniet explicabo voluptates sunt error! Eligendi a, animi consequatur odit.\n                </p>\n            </div>\n            <nav class=\"sidenav\">\n                <section class=\"sidenav-content\">\n                    <a href=\"javascript://\" class=\"nav-link active\">\n                        Nav Element 1\n                    </a>\n                    <a href=\"javascript://\" class=\"nav-link\">\n                        Nav Element 2\n                    </a>\n                    <section class=\"nav-group collapsible\">\n                        <input id=\"tabexample1\" type=\"checkbox\">\n                        <label for=\"tabexample1\">Collapsible Nav Element</label>\n                        <ul class=\"nav-list\">\n                            <li><a class=\"nav-link\">Link 1</a></li>\n                            <li><a class=\"nav-link\">Link 2</a></li>\n                        </ul>\n                    </section>\n                    <section class=\"nav-group\">\n                        <input id=\"tabexample2\" type=\"checkbox\">\n                        <label for=\"tabexample2\">Default Nav Element</label>\n                        <ul class=\"nav-list\">\n                            <li><a class=\"nav-link\">Link 1</a></li>\n                            <li><a class=\"nav-link\">Link 2</a></li>\n                            <li><a class=\"nav-link active\">Link 3</a></li>\n                            <li><a class=\"nav-link\">Link 4</a></li>\n                            <li><a class=\"nav-link\">Link 5</a></li>\n                            <li><a class=\"nav-link\">Link 6</a></li>\n                        </ul>\n                    </section>\n                </section>\n            </nav>\n        </div>\n    </div>\n</div>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;div class=&quot;main-container&quot;&gt;\n    &lt;header class=&quot;header header-6&quot;&gt;\n        ...\n    &lt;/header&gt;\n    &lt;div class=&quot;content-container&quot;&gt;\n        &lt;div class=&quot;content-area&quot;&gt;\n            ...\n        &lt;/div&gt;\n        &lt;nav class=&quot;sidenav&quot;&gt;\n            &lt;section class=&quot;sidenav-content&quot;&gt;\n                &lt;a href=&quot;...&quot; class=&quot;nav-link active&quot;&gt;\n                    Nav Element 1\n                &lt;/a&gt;\n                &lt;a href=&quot;...&quot; class=&quot;nav-link&quot;&gt;\n                    Nav Element 2\n                &lt;/a&gt;\n                &lt;section class=&quot;nav-group collapsible&quot;&gt;\n                    &lt;input id=&quot;tabexample1&quot; type=&quot;checkbox&quot;&gt;\n                    &lt;label for=&quot;tabexample1&quot;&gt;Collapsible Nav Element&lt;/label&gt;\n                    &lt;ul class=&quot;nav-list&quot;&gt;\n                        &lt;li&gt;&lt;a class=&quot;nav-link&quot;&gt;Link 1&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a class=&quot;nav-link&quot;&gt;Link 2&lt;/a&gt;&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/section&gt;\n                &lt;section class=&quot;nav-group&quot;&gt;\n                    &lt;input id=&quot;tabexample2&quot; type=&quot;checkbox&quot;&gt;\n                    &lt;label for=&quot;tabexample2&quot;&gt;Default Nav Element&lt;/label&gt;\n                    &lt;ul class=&quot;nav-list&quot;&gt;\n                        &lt;li&gt;&lt;a class=&quot;nav-link&quot;&gt;Link 1&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a class=&quot;nav-link&quot;&gt;Link 2&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a class=&quot;nav-link active&quot;&gt;Link 3&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a class=&quot;nav-link&quot;&gt;Link 4&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a class=&quot;nav-link&quot;&gt;Link 5&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a class=&quot;nav-link&quot;&gt;Link 6&lt;/a&gt;&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/section&gt;\n            &lt;/section&gt;\n        &lt;/nav&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n"
    },
    {
      "name": "SidenavDemo",
      "id": "component-SidenavDemo-dc0dce83d64cf5460195161d13b65eb3-1",
      "file": "src/website/src/app/documentation/demos/sidenav/sidenav.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-sidenav-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./sidenav.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-sidenav-demo',\n  templateUrl: './sidenav.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class SidenavDemo extends ClarityDocComponent {\n  constructor() {\n    super('sidenav');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "SidenavDemo-1",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"the-sidenav-is-a-left-aligned-navigational-component\">The sidenav is a\n            left-aligned navigational component.</h5>\n\n        <div id=\"code-examples\">\n            <p>Clarity’s sidenav is placed inside the <code class=\"clr-code\">.main-container</code> class\n                and appears after the <code class=\"clr-code\">.content-area</code>.</p>\n\n            <h6 id=\"sidenav-content\">.sidenav-content</h6>\n\n            <p>This is a wrapper intended to contain one or more <code class=\"clr-code\">.nav-group</code> groups.</p>\n\n            <h6 id=\"nav-group\">.nav-group</h6>\n\n            <p>A <code class=\"clr-code\">.nav-group</code> consists of a checkbox and label followed by a <code\n                class=\"clr-code\">.nav-list</code>. The order of the markup is important to achieve the collapsible\n                effect on the nav-groups.</p>\n\n            <h6 id=\"collapsible\">.collapsible</h6>\n\n            <p>A <code class=\"clr-code\">.nav-group</code> inside a sidenav becomes collapsible by adding a <code\n                class=\"clr-code\">.collapsible</code> class.</p>\n\n            <h6 id=\"nav-list\">.nav-list</h6>\n\n            <p>A <code class=\"clr-code\">.nav-list</code> is a list of navigation links. Each navigation link\n                extends the <code class=\"clr-code\">.nav-link</code> class. An active <code\n                class=\"clr-code\">.nav-link</code> is assigned\n                the <code class=\"clr-code\">.active</code> class.</p>\n\n            <clr-nav-demo-sidenav></clr-nav-demo-sidenav>\n        </div>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n            <p>The sidenav is a familiar navigation pattern for users. The sidenav can fit as many navigation links as\n                needed, scrolling when the content exceeds the viewport. Use the sidenav:</p>\n\n            <ul class=\"list\">\n                <li>For links secondary to the links in the header or subnav</li>\n                <li>For a navigation schema with a deep hierarchy</li>\n                <li>When the header and subnav cannot accommodate the required links</li>\n            </ul>\n\n            <p>The sidenav works best in desktop applications.</p>\n\n            <h4 id=\"grouping-links\">Grouping Links</h4>\n            <p>If you group link names under a heading, don’t make the heading a link.</p>\n\n            <h4 id=\"using-icons\">Using Icons</h4>\n            <p>Include icons when you want to provide a more appealing visual look than just text.</p>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "SidenavExample",
      "id": "component-SidenavExample-5f8b75e91382229d28c7be94a0cef194",
      "file": "src/website/src/app/documentation/demos/sidenav/sidenav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-nav-demo-sidenav",
      "styleUrls": ["./sidenav.demo.scss"],
      "styles": [],
      "templateUrl": ["./sidenav.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"main-container\">\n    <header class=\"header header-6\">\n        ...\n    </header>\n    <div class=\"content-container\">\n        <nav class=\"sidenav\">\n            <section class=\"sidenav-content\">\n                <a href=\"...\" class=\"nav-link active\">\n                    Nav Element 1\n                </a>\n                <a href=\"...\" class=\"nav-link\">\n                    Nav Element 2\n                </a>\n                <section class=\"nav-group collapsible\">\n                    <input id=\"tabexample1\" type=\"checkbox\">\n                    <label for=\"tabexample1\">Collapsible Nav Element</label>\n                    <ul class=\"nav-list\">\n                        <li><a class=\"nav-link\">Link 1</a></li>\n                        <li><a class=\"nav-link\">Link 2</a></li>\n                    </ul>\n                </section>\n                <section class=\"nav-group\">\n                    <input id=\"tabexample2\" type=\"checkbox\">\n                    <label for=\"tabexample2\">Default Nav Element</label>\n                    <ul class=\"nav-list\">\n                        <li><a class=\"nav-link\">Link 1</a></li>\n                        <li><a class=\"nav-link\">Link 2</a></li>\n                        <li><a class=\"nav-link active\">Link 3</a></li>\n                        <li><a class=\"nav-link\">Link 4</a></li>\n                        <li><a class=\"nav-link\">Link 5</a></li>\n                        <li><a class=\"nav-link\">Link 6</a></li>\n                    </ul>\n                </section>\n            </section>\n        </nav>\n        <div class=\"content-area\">\n            ...\n        </div>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-nav-demo-sidenav',\n  styleUrls: ['./sidenav.demo.scss'],\n  templateUrl: './sidenav.html',\n})\nexport class SidenavExample {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.main-container {\n  padding-top: 0;\n  height: $clr_baselineRem_20;\n}\n",
          "styleUrl": "./sidenav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header header-6\">\n            <div class=\"branding\">\n                <span class=\"title\">Header</span>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <nav class=\"sidenav\">\n                <section class=\"sidenav-content\">\n                    <a href=\"javascript://\" class=\"nav-link active\">\n                        Nav Element 1\n                    </a>\n                    <a href=\"javascript://\" class=\"nav-link\">\n                        Nav Element 2\n                    </a>\n                    <section class=\"nav-group collapsible\">\n                        <input id=\"tabexample1\" type=\"checkbox\">\n                        <label for=\"tabexample1\">Collapsible Nav Element</label>\n                        <ul class=\"nav-list\">\n                            <li><a href=\"javascript://\" class=\"nav-link\">Link 1</a></li>\n                            <li><a href=\"javascript://\" class=\"nav-link\">Link 2</a></li>\n                        </ul>\n                    </section>\n                    <section class=\"nav-group\">\n                        <input id=\"tabexample2\" type=\"checkbox\">\n                        <label for=\"tabexample2\">Default Nav Element</label>\n                        <ul class=\"nav-list\">\n                            <li><a href=\"javascript://\" class=\"nav-link\">Link 1</a></li>\n                            <li><a href=\"javascript://\" class=\"nav-link\">Link 2</a></li>\n                            <li><a href=\"javascript://\" class=\"nav-link active\">Link 3</a></li>\n                            <li><a href=\"javascript://\" class=\"nav-link\">Link 4</a></li>\n                            <li><a href=\"javascript://\" class=\"nav-link\">Link 5</a></li>\n                            <li><a href=\"javascript://\" class=\"nav-link\">Link 6</a></li>\n                        </ul>\n                    </section>\n                </section>\n            </nav>\n            <div class=\"content-area\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempora eligendi quos unde id optio culpa, illo perspiciatis laboriosam explicabo in voluptate incidunt est beatae rerum quisquam accusantium corporis reiciendis delectus!\n                </p>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Animi nisi ad, minus fuga neque voluptatibus quidem libero ducimus quas ipsa eveniet explicabo voluptates sunt error! Eligendi a, animi consequatur odit.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "SignpostDemo",
      "id": "component-SignpostDemo-00a561be373012d951a638009b7e42ae",
      "file": "src/website/src/app/documentation/demos/signposts/signpost.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tooltips-demo",
      "styleUrls": ["./signpost.demo.scss"],
      "styles": [],
      "templateUrl": ["./signpost.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-signpost>\n    <clr-signpost-content *clrIfOpen>\n        <h3>Default Signpost</h3>\n        <p>Position: <code class=\"clr-code\">right-middle</code></p>\n    </clr-signpost-content>\n</clr-signpost>\n    `",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "openState",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-tooltips-demo',\n  templateUrl: './signpost.demo.html',\n  styleUrls: ['./signpost.demo.scss'],\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class SignpostDemo extends ClarityDocComponent {\n  constructor() {\n    super('signposts');\n  }\n\n  openState: boolean = false;\n\n  html: string = `\n<clr-signpost>\n    <clr-signpost-content *clrIfOpen>\n        <h3>Default Signpost</h3>\n        <p>Position: <code class=\"clr-code\">right-middle</code></p>\n    </clr-signpost-content>\n</clr-signpost>\n    `;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.signpost-default {\n  display: flex;\n  padding: $clr_baselineRem_1;\n}\n\n.signpost-positions {\n  display: flex;\n  padding: $clr_baselineRem_1;\n\n  .description {\n    flex: 1 1;\n  }\n\n  .demo {\n    flex: 1 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    //width: 100%;\n  }\n}\n\n.signpost-triggers-wrapper {\n  width: 100%;\n}\n\n.signpost-trigger-demo {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: $clr_baselineRem_1;\n  width: 100%;\n  border: $clr-global-borderwidth darkred;\n\n  .signpost-item {\n    flex: 1 0 $clr_baselineRem_200px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: $clr_baselineRem_1;\n  }\n}\n",
          "styleUrl": "./signpost.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"a-signpost-description\">The signpost is a convenient, lightweight way to show\n            contextual help of information without taking the user out of the current context.</h5>\n\n        <div id=\"design-guidelines\">\n            <h3>Examples</h3>\n            <div class=\"clrweb-DoxMedia\">\n                <div class=\"clrweb-DoxMedia-block\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/signposts/basic-and-pie-chart.svg\"\n                        alt=\"basic and pie chart\"/>\n                    </div>\n                </div>\n            </div>\n            <h3>Description</h3>\n            <p>A signpost displays contextual help or information in a popover dialog. Like a tooltip, it has an\n                arrow/pointer that extends out to the trigger element, but the dialog is larger to fit more content.\n                Signposts are designed to show a relatively small amount of content which may include: a title, images,\n                text links of image links. A vertical scrollbar (browser default) may be used if the content exceeds the\n                maximum height of the dialog.</p>\n            <h5 style=\"margin: 24px 0 12px;\">Size</h5>\n            <ul class=\"list\">\n                <li>Min-width 216px; Min-height 84px</li>\n                <li>Max-width 360px; Max-height 504px</li>\n            </ul>\n            <h3>Usage</h3>\n            <p style=\"margin-bottom: 12px;\">Signposts should be used when you want to show a small\n                amount of contextual help of information without taking the user out of the current\n                context. Use sparingly as a supplemental element and not as a primary method of adding detail.</p>\n            <ul class=\"list\">\n                <li>When the amount of content won't fit in a tooltip</li>\n                <li>When you want to include a header, image or text/image links in the content</li>\n                <li>When the information presented needs to stay in view at length (Unlike tooltips, signposts stay in\n                    view until the user interacts with another element)\n                </li>\n            </ul>\n            <h3>Interaction</h3>\n            <p>Clicking the icon triggers the signpost. It remains visible until the user clicks the close\n                icon or clicks anywhere outside of the dialog to dismiss it. To keep the interface uncluttered,\n                only one signpost is displayed at a time. When a dialog is visible, clicking an icon to open\n                another one automatically dismisses the previous dialog.</p>\n            <div class=\"clrweb-DoxMedia\">\n                <div class=\"clrweb-DoxMedia-block\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/signposts/states.svg\" alt=\"\"/>\n                    </div>\n                </div>\n            </div>\n            <h3>Trigger icon and dialog positioning</h3>\n            <div class=\"clrweb-DoxMedia\">\n                <div class=\"clrweb-DoxMedia-block\">\n                    <div class=\"clrweb-DoxMedia-img\">\n                        <img src=\"assets/images/documentation/signposts/positioning.svg\" alt=\"\"/>\n                    </div>\n                </div>\n                <div class=\"clrweb-DoxMedia-text\">\n                    <p style=\"margin-top: 12px;\">Default position for the dialog is 6px to the right of the\n                        trigger icon.</p>\n                </div>\n            </div>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-sm-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <!-- Note: the image already has gray border w/ jagged bottom edge in it -->\n                        <img src=\"assets/images/documentation/signposts/inline-alignment.svg\"\n                            alt=\"Signposts inline alignment\" class=\"clrweb-Img\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p style=\"margin-top: 12px;\">\n                                Default position for the dialog is 6px from the end of the text\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-sm-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <!-- Note: the image already has gray border w/ jagged bottom edge in it -->\n                        <img src=\"assets/images/documentation/signposts/column-alignment.svg\"\n                            alt=\"Signpost in column alignment\" class=\"clrweb-Img\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p style=\"margin-top: 12px;\">\n                                In tables, the icons may be aligned in a column\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <h4 style=\"margin-bottom: 12px;\">Recommendations</h4>\n            <ul class=\"list\">\n                <li>The popover should not be so large that it dominates the screen</li>\n                <li>Make sure that the popover doesn't obstruct other important information on the screen</li>\n                <li>With the exception of text/image links, don't insert any actionable components, such as\n                    buttons, in the dialog\n                </li>\n                <li>Don't rely on signposts as a primary method of displaying additional information - i.e.\n                    as a way to save space on a page\n                </li>\n                <li>\n                    Use sparingly as a device to add immediate, relevant information\n                </li>\n            </ul>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <p>\n                The signpost component uses the <code class=\"clr-code\">*clrIfOpen</code> structural directive\n                (detailed documentation coming soon) on the signpost content\n                to indicate clearly that said content is only present in the DOM when open. We heavily recommend using\n                it for many reasons: better performance, making the intent clear in your own templates,\n                and following a more natural lifecycle for any directives or components inside of the signpost.\n            </p>\n            <p>\n                If for some reason this behavior was not the one you wanted, for instance if you want screenreaders to\n                read the signpost inline as opposed to when the user activates the trigger,\n                we also support the signpost content without a\n                <code class=\"clr-code\">*clrIfOpen</code> directive on it. It will be created eagerly when the signpost\n                itself initializes, and will not be destroyed or recreated until the signpost itself is. Please make\n                sure you know exactly why you are omitting this directive if you end up doing so.\n            </p>\n\n            <p>The default signpost is shown to the right of the trigger icon with the content centered\n                vertically in the middle of the trigger. It opens with a click action. Once open its\n                contents can be interacted with. The Signpost is closed when clicking on the\n                <clr-icon shape=\"close\"></clr-icon>\n                icon or by clicking anywhere outside the <code class=\"clr-code\">clr-signpost-content</code> element.\n            </p>\n            <div class=\"signpost-default\">\n                <clr-signpost>\n                    <clr-signpost-content *clrIfOpen>\n                        <h3 style=\"margin-top: 0\">Default Signpost</h3>\n                        <p>Position: <code class=\"clr-code\">right-middle</code></p>\n                    </clr-signpost-content>\n                </clr-signpost>\n            </div>\n\n            <clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n\n            <clr-signpost-paragraph-demo></clr-signpost-paragraph-demo>\n\n            <!-- A signpost popover in a form grid/no-grid is being affected by overflow issues.-->\n            <!--<h3 id=\"signposts-in-forms\">Signposts in forms</h3>-->\n            <!--<clr-signpost-form-demo></clr-signpost-form-demo>-->\n\n            <h3 id=\"signposts-positions\">Signpost positions</h3>\n            <p>\n                There are twelve signpost positions to help place the popover in an appropriate position\n                when shown. You control the position and direction by declaring a position that orients\n                your that Signpost content as you see fit. On a <code class=\"clr-code\">clr-signpost-content</code>\n                component add the input <code class=\"clr-code\">[clrPosition]=\"'position'\"</code> where\n                position is one of the following:\n            </p>\n            <ul class=\"list\">\n                <li><code class=\"clr-code\">top-X: </code> the arrow will point down and the popover\n                    will be above the trigger in the X position where X = left, middle or right\n                </li>\n                <li><code class=\"clr-code\">bottom-X: </code> the arrow will point up and the\n                    popover will be below the trigger in the X position where X = left, middle or right\n                </li>\n                <li><code class=\"clr-code\">left-X: </code> the arrow will point right and the\n                    popover will be left of the trigger in the X position where X = top, middle or bottom\n                </li>\n                <li><code class=\"clr-code\">right-X: </code> the arrow will point left and the\n                    popover will be right of the trigger in the X position where X = top, middle or bottom\n                </li>\n            </ul>\n            <clr-signpost-positions-demo></clr-signpost-positions-demo>\n\n            <h3 id=\"custom-triggers\">Custom Triggers</h3>\n            <p>We provide a default trigger but you can add one yourself. The signpost component\n                provides the <code class=\"clr-code\">clrSignpostTrigger</code> attribute directive that\n                can be added to the <code class=\"clr-code\">clr-signpost-content</code> child. To control the\n                position of your signpost, add <code class=\"clr-code\">[clrPosition]=\"position\"</code> so that\n                it knows how the Signpost should point.</p>\n\n            <clr-signpost-triggers-demo></clr-signpost-triggers-demo>\n\n            <h2>Summary of Options</h2>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n\n                    <td class=\"left\">\n                        <b>[clrPosition]</b>\n                        <div class=\"hidden-sm-up\">Type: string</div>\n                        <div class=\"hidden-sm-up\">Default: right-middle</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">string</td>\n                    <td class=\"hidden-xs-down\">right-middle</td>\n                    <td class=\"left\">\n                        Set the position of the <code class=\"clr-code\">clr-signpost-content</code> popover:\n                        anchorPoint & popoverPosition. For example: \"right-middle\" (ANCHOR-POSITION) will anchor\n                        the clr-signpost-content popover and point to the icons middle on the right side. And,\n                        the popover itself will be positioned to the right of the trigger icon\n                        with the icon in the vertical middle of the popover.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>clrSignpostTrigger</b>\n                        <div class=\"hidden-sm-up\">Type: SignpostTriggerDirective</div>\n                        <div class=\"hidden-sm-up\">Default: n/a</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">SignpostTriggerDirective</td>\n                    <td class=\"hidden-xs-down\">n/a</td>\n                    <td class=\"left\">\n                        The SignpostTriggerDirective is placed on the outer-most container element\n                        for a custom trigger. It overrides the default Signpost trigger with custom content.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "SignpostParagraphDemo",
      "id": "component-SignpostParagraphDemo-3169560a0796ec99ea00b8efc03fa40b",
      "file": "src/website/src/app/documentation/demos/signposts/signpost-paragraph.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-signpost-paragraph-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./signpost-paragraph.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport {Component} from \"@angular/core\";\n\n@Component({\n    ...\n})\n\nexport class MyClass {\n    // Use *clrIfOpen directive to manage hide/show with the openState property.\n    public openState: boolean = false;\n}\n    `",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<p>Signposts should be used when you want to show a small amount of contextual help\n    of information without taking the user out of the current context.\n     Use sparingly as a supplemental element and not as a primary method of adding detail.\n    <clr-signpost>\n        <clr-signpost-content *clrIfOpen=\"openState\">\n            <h3 style=\"margin-top: 0\">Inline signpost</h3>\n            <p>Position: <code class=\"clr-code\">right-middle</code></p>\n        </clr-signpost-content>\n    </clr-signpost>\n</p>\n    `",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "openState",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-signpost-paragraph-demo',\n  templateUrl: './signpost-paragraph.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class SignpostParagraphDemo extends ClarityDocComponent {\n  constructor() {\n    super('signposts');\n  }\n\n  openState: boolean = false;\n\n  code: string = `\nimport {Component} from \"@angular/core\";\n\n@Component({\n    ...\n})\n\nexport class MyClass {\n    // Use *clrIfOpen directive to manage hide/show with the openState property.\n    public openState: boolean = false;\n}\n    `;\n  html: string = `\n<p>Signposts should be used when you want to show a small amount of contextual help\n    of information without taking the user out of the current context.\n     Use sparingly as a supplemental element and not as a primary method of adding detail.\n    <clr-signpost>\n        <clr-signpost-content *clrIfOpen=\"openState\">\n            <h3 style=\"margin-top: 0\">Inline signpost</h3>\n            <p>Position: <code class=\"clr-code\">right-middle</code></p>\n        </clr-signpost-content>\n    </clr-signpost>\n</p>\n    `;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<div>\n    <p>Signposts should be used when you want to show a small amount of contextual help\n        of information without taking the user out of the current context. Use sparingly as a supplemental element and\n        not as a primary method of adding detail.\n        <clr-signpost>\n            <clr-signpost-content *clrIfOpen=\"openState\">\n                <h3 style=\"margin-top: 0\">Inline signpost</h3>\n                <p>Position: <code class=\"clr-code\">right-middle</code></p>\n            </clr-signpost-content>\n        </clr-signpost>\n    </p>\n\n    <clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n    <clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n</div>\n"
    },
    {
      "name": "SignpostPositionsDemo",
      "id": "component-SignpostPositionsDemo-2d33fb6d3b056b125deeb21acbffdb1a",
      "file": "src/website/src/app/documentation/demos/signposts/signpost-positions.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-signpost-positions-demo",
      "styleUrls": ["./signpost.demo.scss"],
      "styles": [],
      "templateUrl": ["./signpost-positions.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\n@Component({\n    ...\n})\nexport class MyClass {\n    positions: string[] = [ \"top-left\", \"top-middle\", \"top-right\",\n                            \"right-top\", \"right-middle\", \"right-bottom\",\n                            \"bottom-left\", \"bottom-middle\", \"bottom-right\",\n                            \"left-top\", \"left-middle\", \"left-bottom\" ];\n    position: string = \"right-middle\";\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-select-container>\n  <label>Select a position:</label>\n  <select clrSelect name=\"position\" [(ngModel)]=\"position\">\n    <option *ngFor=\"let position of positions\" [ngValue]=\"position\">{{ position }}</option>\n  </select>\n</clr-select-container>\n<clr-signpost>\n  <clr-signpost-content [clrPosition]=\"position\" *clrIfOpen>\n    <h3 style=\"margin-top: 0\">Position</h3>\n    <p><code class=\"clr-code\">{{ position }}</code></p>\n  </clr-signpost-content>\n</clr-signpost>\n    `",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "position",
          "defaultValue": "'right-middle'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "positions",
          "defaultValue":
            "[\n    'top-left',\n    'top-middle',\n    'top-right',\n    'right-top',\n    'right-middle',\n    'right-bottom',\n    'bottom-left',\n    'bottom-middle',\n    'bottom-right',\n    'left-top',\n    'left-middle',\n    'left-bottom',\n  ]",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-signpost-positions-demo',\n  templateUrl: './signpost-positions.demo.html',\n  styleUrls: ['./signpost.demo.scss'],\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class SignpostPositionsDemo extends ClarityDocComponent {\n  constructor() {\n    super('signposts');\n  }\n\n  positions: string[] = [\n    'top-left',\n    'top-middle',\n    'top-right',\n    'right-top',\n    'right-middle',\n    'right-bottom',\n    'bottom-left',\n    'bottom-middle',\n    'bottom-right',\n    'left-top',\n    'left-middle',\n    'left-bottom',\n  ];\n  position: string = 'right-middle';\n  html: string = `\n<clr-select-container>\n  <label>Select a position:</label>\n  <select clrSelect name=\"position\" [(ngModel)]=\"position\">\n    <option *ngFor=\"let position of positions\" [ngValue]=\"position\">{{ position }}</option>\n  </select>\n</clr-select-container>\n<clr-signpost>\n  <clr-signpost-content [clrPosition]=\"position\" *clrIfOpen>\n    <h3 style=\"margin-top: 0\">Position</h3>\n    <p><code class=\"clr-code\">{{ position }}</code></p>\n  </clr-signpost-content>\n</clr-signpost>\n    `;\n  code: string = `\n@Component({\n    ...\n})\nexport class MyClass {\n    positions: string[] = [ \"top-left\", \"top-middle\", \"top-right\",\n                            \"right-top\", \"right-middle\", \"right-bottom\",\n                            \"bottom-left\", \"bottom-middle\", \"bottom-right\",\n                            \"left-top\", \"left-middle\", \"left-bottom\" ];\n    position: string = \"right-middle\";\n}\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.signpost-default {\n  display: flex;\n  padding: $clr_baselineRem_1;\n}\n\n.signpost-positions {\n  display: flex;\n  padding: $clr_baselineRem_1;\n\n  .description {\n    flex: 1 1;\n  }\n\n  .demo {\n    flex: 1 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    //width: 100%;\n  }\n}\n\n.signpost-triggers-wrapper {\n  width: 100%;\n}\n\n.signpost-trigger-demo {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: $clr_baselineRem_1;\n  width: 100%;\n  border: $clr-global-borderwidth darkred;\n\n  .signpost-item {\n    flex: 1 0 $clr_baselineRem_200px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: $clr_baselineRem_1;\n  }\n}\n",
          "styleUrl": "./signpost.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<div>\n    <div class=\"signpost-positions\">\n        <div class=\"description\">\n          <clr-select-container>\n            <label>Select a position:</label>\n            <select clrSelect name=\"position\" [(ngModel)]=\"position\">\n              <option *ngFor=\"let position of positions\" [ngValue]=\"position\">{{ position }}</option>\n            </select>\n          </clr-select-container>\n        </div>\n        <div class=\"demo\">\n            <clr-signpost>\n                <clr-signpost-content *clrIfOpen [clrPosition]=\"position\">\n                    <h3 style=\"margin-top: 0\">Position</h3>\n                    <p>\n                        <code class=\"clr-code\">{{ position }}</code>\n                    </p>\n                </clr-signpost-content>\n            </clr-signpost>\n        </div>\n    </div>\n    <clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n    <clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n</div>\n\n"
    },
    {
      "name": "SignpostTriggersDemo",
      "id": "component-SignpostTriggersDemo-eb65f99c1e536fd8a32a934e7e8d59a8",
      "file": "src/website/src/app/documentation/demos/signposts/signpost-triggers.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-signpost-triggers-demo",
      "styleUrls": ["./signpost.demo.scss"],
      "styles": [],
      "templateUrl": ["./signpost-triggers.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "html",
          "defaultValue":
            "`\n<div class=\"signpost-triggers-wrapper\">\n    <div class=\"signpost-trigger-demo\">\n        <div class=\"signpost-item\">\n            <h6>Clarity Icon</h6>\n            <clr-signpost>\n                <clr-icon shape=\"avatar\" \n                          class=\"is-solid has-badge-info\" \n                          clrSignpostTrigger>\n                </clr-icon>\n                <clr-signpost-content [clrPosition]=\"'bottom-middle'\" *clrIfOpen>\n                    Lorem ipsum...\n                </clr-signpost-content>\n            </clr-signpost>\n        </div>\n        <div class=\"signpost-item\">\n            <h6>Button Link</h6>\n            <div class=\"trigger-item\">\n                <clr-signpost>\n                    <button class=\"btn btn-link\" \n                            clrSignpostTrigger>\n                                Button Link Trigger\n                    </button>\n                    <clr-signpost-content [clrPosition]=\"'top-middle'\" *clrIfOpen>\n                        Lorem ipsum...\n                    </clr-signpost-content>\n                </clr-signpost>\n            </div>\n        </div>\n        <div class=\"signpost-item\">\n            <h6>Button Link w/ Clarity Icon</h6>\n            <div class=\"trigger-item\">\n                <clr-signpost>\n                    <button class=\"btn btn-link\" \n                            clrSignpostTrigger>\n                                Button Link \n                                <clr-icon shape=\"help-info\"></clr-icon>\n                    </button>\n                    <clr-signpost-content [clrPosition]=\"'bottom-middle'\" *clrIfOpen>\n                        Lorem ipsum...\n                    </clr-signpost-content>\n                </clr-signpost>\n            </div>\n        </div>\n    </div>\n</div>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-signpost-triggers-demo',\n  templateUrl: './signpost-triggers.demo.html',\n  styleUrls: ['./signpost.demo.scss'],\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class SignpostTriggersDemo extends ClarityDocComponent {\n  constructor() {\n    super('signposts');\n  }\n\n  html: string = `\n<div class=\"signpost-triggers-wrapper\">\n    <div class=\"signpost-trigger-demo\">\n        <div class=\"signpost-item\">\n            <h6>Clarity Icon</h6>\n            <clr-signpost>\n                <clr-icon shape=\"avatar\" \n                          class=\"is-solid has-badge-info\" \n                          clrSignpostTrigger>\n                </clr-icon>\n                <clr-signpost-content [clrPosition]=\"'bottom-middle'\" *clrIfOpen>\n                    Lorem ipsum...\n                </clr-signpost-content>\n            </clr-signpost>\n        </div>\n        <div class=\"signpost-item\">\n            <h6>Button Link</h6>\n            <div class=\"trigger-item\">\n                <clr-signpost>\n                    <button class=\"btn btn-link\" \n                            clrSignpostTrigger>\n                                Button Link Trigger\n                    </button>\n                    <clr-signpost-content [clrPosition]=\"'top-middle'\" *clrIfOpen>\n                        Lorem ipsum...\n                    </clr-signpost-content>\n                </clr-signpost>\n            </div>\n        </div>\n        <div class=\"signpost-item\">\n            <h6>Button Link w/ Clarity Icon</h6>\n            <div class=\"trigger-item\">\n                <clr-signpost>\n                    <button class=\"btn btn-link\" \n                            clrSignpostTrigger>\n                                Button Link \n                                <clr-icon shape=\"help-info\"></clr-icon>\n                    </button>\n                    <clr-signpost-content [clrPosition]=\"'bottom-middle'\" *clrIfOpen>\n                        Lorem ipsum...\n                    </clr-signpost-content>\n                </clr-signpost>\n            </div>\n        </div>\n    </div>\n</div>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.signpost-default {\n  display: flex;\n  padding: $clr_baselineRem_1;\n}\n\n.signpost-positions {\n  display: flex;\n  padding: $clr_baselineRem_1;\n\n  .description {\n    flex: 1 1;\n  }\n\n  .demo {\n    flex: 1 1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    //width: 100%;\n  }\n}\n\n.signpost-triggers-wrapper {\n  width: 100%;\n}\n\n.signpost-trigger-demo {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: $clr_baselineRem_1;\n  width: 100%;\n  border: $clr-global-borderwidth darkred;\n\n  .signpost-item {\n    flex: 1 0 $clr_baselineRem_200px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: $clr_baselineRem_1;\n  }\n}\n",
          "styleUrl": "./signpost.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<div class=\"signpost-triggers-wrapper\">\n    <div class=\"signpost-trigger-demo\">\n        <div class=\"signpost-item\">\n            <h6>Clarity Icon</h6>\n            <clr-signpost>\n                <clr-icon shape=\"avatar\"\n                          class=\"is-solid has-badge-info\"\n                          clrSignpostTrigger>\n                </clr-icon>\n                <clr-signpost-content *clrIfOpen [clrPosition]=\"'bottom-middle'\">\n                    Lorem ipsum...\n                </clr-signpost-content>\n            </clr-signpost>\n        </div>\n        <div class=\"signpost-item\">\n            <h6>Button Link</h6>\n            <div class=\"trigger-item\">\n                <clr-signpost>\n                    <button class=\"btn btn-link\"\n                            clrSignpostTrigger>\n                        Button Link Trigger\n                    </button>\n                    <clr-signpost-content *clrIfOpen [clrPosition]=\"'top-middle'\">\n                        Lorem ipsum...\n                    </clr-signpost-content>\n                </clr-signpost>\n            </div>\n        </div>\n        <div class=\"signpost-item\">\n            <h6>Button Link w/ Clarity Icon</h6>\n            <div class=\"trigger-item\">\n                <clr-signpost>\n                    <button class=\"btn btn-link\"\n                            clrSignpostTrigger>\n                        Button Link\n                        <clr-icon shape=\"help-info\"></clr-icon>\n                    </button>\n                    <clr-signpost-content *clrIfOpen [clrPosition]=\"'bottom-middle'\">\n                        Lorem ipsum...\n                    </clr-signpost-content>\n                </clr-signpost>\n            </div>\n        </div>\n    </div>\n    <clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n</div>\n"
    },
    {
      "name": "SkipLinkComponent",
      "id": "component-SkipLinkComponent-1c8291a6d4bd6c81dfca870aeb700d8e",
      "file": "src/website/src/app/utils/skip-link.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-skip-link",
      "styleUrls": ["./skip-link.component.scss"],
      "styles": [],
      "template":
        "<button\n  class=\"btn btn-warning btn-sm clr-docs-skip-link\"\n  [class.clr-sr-only]=\"hideSkipLink\"\n  (click)=\"skipToContent()\"\n  (focus)=\"hideSkipLink = false\"\n  (blur)=\"hideSkipLink = true\">\n  Skip to content\n</button>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "focusElement",
          "line": 23,
          "type": "HTMLElement"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "hideSkipLink",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [
        {
          "name": "skipToContent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-skip-link',\n  styleUrls: ['./skip-link.component.scss'],\n  template: `\n    <button\n      class=\"btn btn-warning btn-sm clr-docs-skip-link\"\n      [class.clr-sr-only]=\"hideSkipLink\"\n      (click)=\"skipToContent()\"\n      (focus)=\"hideSkipLink = false\"\n      (blur)=\"hideSkipLink = true\">\n      Skip to content\n    </button>\n  `,\n})\nexport class SkipLinkComponent {\n  @Input() focusElement: HTMLElement;\n  hideSkipLink = true;\n\n  skipToContent() {\n    this.focusElement.focus();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../styles/clarity-imports';\n\n.clr-docs-skip-link {\n  display: block;\n  height: $clr_baselineRem_1;\n  width: $clr_baselineRem_7_5;\n  position: absolute;\n  top: $clr_baselineRem_1_75;\n  left: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./skip-link.component.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "SmallSelectionTreeDemo",
      "id": "component-SmallSelectionTreeDemo-f63a67ffdcea6ee724786013320cab16",
      "file": "src/website/src/app/documentation/demos/tree-view/small-selection-tree/small-selection-tree.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-small-selection-tree-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["small-selection-tree.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "permissions",
          "defaultValue":
            "[\n    {\n      type: 'Authenticated Users',\n      expanded: true,\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: false,\n        },\n      ],\n    },\n    {\n      type: 'Owners',\n      expanded: true,\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: true,\n        },\n      ],\n    },\n    {\n      type: 'Public',\n      expanded: true,\n      rights: [\n        {\n          name: 'Read',\n          enable: false,\n        },\n        {\n          name: 'Modify',\n          enable: true,\n        },\n      ],\n    },\n  ]",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-small-selection-tree-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: 'small-selection-tree.html',\n})\nexport class SmallSelectionTreeDemo {\n  permissions: any = [\n    {\n      type: 'Authenticated Users',\n      expanded: true,\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: false,\n        },\n      ],\n    },\n    {\n      type: 'Owners',\n      expanded: true,\n      rights: [\n        {\n          name: 'Read',\n          enable: true,\n        },\n        {\n          name: 'Modify',\n          enable: true,\n        },\n      ],\n    },\n    {\n      type: 'Public',\n      expanded: true,\n      rights: [\n        {\n          name: 'Read',\n          enable: false,\n        },\n        {\n          name: 'Modify',\n          enable: true,\n        },\n      ],\n    },\n  ];\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<clr-tree>\n    <clr-tree-node [clrExpanded]=\"true\">\n        Permissions\n        <clr-tree-node\n                *ngFor=\"let permission of permissions\"\n                [(clrExpanded)]=\"permission.expanded\">\n            {{permission.type}}\n            <clr-tree-node *ngFor=\"let right of permission.rights\" [(clrSelected)]=\"right.enable\">\n                {{right.name}}\n            </clr-tree-node>\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>"
    },
    {
      "name": "SnorlaxDemo",
      "id": "component-SnorlaxDemo-f50206b432627198c8a57680ef1b4c02",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/snorlax.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-snorlax-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "template":
        "<h4 clrFocusOnViewInit class=\"demo-title\">Snorlax</h4>\n<p>\n    Snorlax's typical day consists of nothing more than eating and sleeping.\n    It is such a docile Pokémon that there are children who use its expansive belly as a place to play.\n</p>\n<p>\n  <em>The template preview of the router component:</em>\n</p>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<h4 clrFocusOnViewInit>Snorlax</h4>\n<p>\n    Snorlax's typical day consists of nothing more than eating and sleeping.\n    It is such a docile Pokémon that there are children who use its expansive belly as a place to play.\n</p>`;\n\n@Component({\n  selector: 'clr-snorlax-demo',\n  template: `\n        <h4 clrFocusOnViewInit class=\"demo-title\">Snorlax</h4>\n        <p>\n            Snorlax's typical day consists of nothing more than eating and sleeping.\n            It is such a docile Pokémon that there are children who use its expansive belly as a place to play.\n        </p>\n        <p>\n          <em>The template preview of the router component:</em>\n        </p>\n        <clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n    `,\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class SnorlaxDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": ""
    },
    {
      "name": "SpinnerComponentDemo",
      "id": "component-SpinnerComponentDemo-b677428cd4476d6ff79e0acd1b181ddc",
      "file": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-spinner-component",
      "styleUrls": ["./spinner.demo.scss"],
      "styles": [],
      "templateUrl": ["./spinner-component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "downloadingFile",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 78
        },
        {
          "name": "downloadinInvoice",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 79
        },
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "fetchingUserInformation",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 77
        },
        {
          "name": "props",
          "defaultValue":
            "[\n    {\n      name: '[clrInline]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Create an inline spinner',\n    },\n    {\n      name: '[clrInverse]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Create spinner for dark background',\n    },\n    {\n      name: '[clrSmall]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Make the spinner small 18x18 pixels',\n    },\n    {\n      name: '[clrMedium]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Medium spinners 36x36 pixels',\n    },\n    {\n      name: '[clrAssertive]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Set aria-live to \"assertive\", default is \"polite\"',\n    },\n    {\n      name: '[clrOff]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Set aria-live to \"off\", no event will be broadcasted to screen readers',\n    },\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [
        {
          "name": "toggleProgressBar",
          "args": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 81,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "name",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<clr-spinner *ngIf=\"fetchingUserInformation\">Loading data</clr-spinner>\n`;\n\nconst EXAMPLE1 = `\n<div *ngIf=\"downloadingFile\">\n  <clr-spinner clrInline>\n    Downloading\n  </clr-spinner>\n  <span>\n      Downloading\n  </span>\n</div>\n`;\n\nconst EXAMPLE2 = `\n<clr-spinner *ngIf=\"downloadinInvoice\" clrMedium clrAssertive>Downloading</clr-spinner>\n`;\n\n@Component({\n  selector: 'clr-spinner-component',\n  templateUrl: './spinner-component.html',\n  styleUrls: ['./spinner.demo.scss'],\n})\nexport class SpinnerComponentDemo {\n  example = EXAMPLE;\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n\n  props = [\n    {\n      name: '[clrInline]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Create an inline spinner',\n    },\n    {\n      name: '[clrInverse]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Create spinner for dark background',\n    },\n    {\n      name: '[clrSmall]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Make the spinner small 18x18 pixels',\n    },\n    {\n      name: '[clrMedium]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Medium spinners 36x36 pixels',\n    },\n    {\n      name: '[clrAssertive]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Set aria-live to \"assertive\", default is \"polite\"',\n    },\n    {\n      name: '[clrOff]',\n      type: 'Boolean',\n      defaultValue: 'false',\n      description: 'Set aria-live to \"off\", no event will be broadcasted to screen readers',\n    },\n  ];\n\n  // Triggers\n  fetchingUserInformation: boolean = false;\n  downloadingFile: boolean = false;\n  downloadinInvoice: boolean = false;\n\n  public toggleProgressBar(name: string) {\n    return (this[name] = !this[name]);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.example-dark {\n    background: $clr-color-neutral-900;\n  }\n}\n\nul {\n  font-weight: 600;\n\n  span {\n    font-weight: 200;\n  }\n}\n",
          "styleUrl": "./spinner.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h3 id=\"guidelines\">Spinner Component</h3>\n<p>\n  Clarity provides a component to help with displaying a spinner for loading purposes. This component also helps with\n  accessibility needs to announce loading tasks to a screen reader user.\n</p>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th class=\"left\">Input/Output</th>\n      <th class=\"left hidden-xs-down\">Type</th>\n      <th class=\"left hidden-xs-down\">Default</th>\n      <th class=\"left\">Effect</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let prop of props\">\n      <td class=\"left\">\n        <b>{{ prop.name }}</b>\n      </td>\n      <td class=\"left hidden-xs-down\">{{ prop.type }}</td>\n      <td class=\"left hidden-xs-down\">{{ prop.defaultValue }}</td>\n      <td class=\"left\">{{ prop.description }}</td>\n    </tr>\n    \n  </tbody>\n</table>\n\n<h5>Examples:</h5>\n\n<div class=\"clr-example squeeze\">\n  <button\n    *ngIf=\"!fetchingUserInformation\"\n    (click)=\"toggleProgressBar('fetchingUserInformation')\"\n    class=\"btn btn-primary\"\n  >\n    Fetch user information\n  </button>\n  <clr-spinner *ngIf=\"fetchingUserInformation\">Loading data</clr-spinner>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n\n<h5>Modify</h5>\n<p>\n  Add modifier like <code class=\"clr-code\">inline</code> or <code class=\"clr-code\">inverse</code>. If you need to make\n  change on the size you could add <code class=\"clr-code\">small</code> or <code class=\"clr-code\">medium</code>, the\n  default size is auto set to <code class=\"clr-code\">large</code>.\n</p>\n\n<div class=\"clr-example squeeze\">\n  <button *ngIf=\"!downloadingFile\" (click)=\"toggleProgressBar('downloadingFile')\" class=\"btn btn-primary\">\n    Download file\n  </button>\n\n  <div *ngIf=\"downloadingFile\">\n    <clr-spinner clrInline>Downloading</clr-spinner>\n    <span> Downloading</span>\n  </div>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n\n<h5>Accessibility live region</h5>\n<p>\n  By default the component will set <code class=\"clr-code\">aria-live='polite'</code>. If you need to change it you need\n  to pass <code class=\"clr-code\">assertive</code> or <code class=\"clr-code\">off</code> to disable the live announcement.\n</p>\n<p>\n  To prevent unwanted announcement, use <code class=\"clr-code\">*ngIf</code> to add or remove it from the DOM. By default\n  the component will be created with <code class=\"clr-code\">aria-live='polite'</code>\n  if not set otherwise. This will trigger the screen reader to announce the event in the next possible moment.\n</p>\n<div class=\"clr-example squeeze\">\n  <button *ngIf=\"!downloadinInvoice\" (click)=\"toggleProgressBar('downloadinInvoice')\" class=\"btn btn-primary\">\n    Download Invoice\n  </button>\n  <clr-spinner *ngIf=\"downloadinInvoice\" clrMedium clrAssertive>Downloading</clr-spinner>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n"
    },
    {
      "name": "SpinnerDemo",
      "id": "component-SpinnerDemo-bb5242005c17c81ebd53b66fc6162bf3",
      "file": "src/website/src/app/documentation/demos/spinners/spinner.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-spinner-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./spinner.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-spinner-demo',\n  templateUrl: './spinner.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class SpinnerDemo extends ClarityDocComponent {\n  constructor() {\n    super('spinners');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"a-spinner-is-visual-indicator-of-an-ongoing-user-initiated-process\">A spinner\n            is visual indicator of an ongoing, user-initiated process.</h5>\n\n        <div id=\"code-examples\">\n            <p>Clarity has two types of spinners:</p>\n\n            <ul class=\"list\">\n                <li>\n                    <strong>Page Spinners:</strong> For tracking the progress of an operation related\n                    to an entire page.\n                </li>\n                <li>\n                    <strong>Inline Spinners:</strong> For tracking the progress of an operation related\n                    to a specific component.\n                </li>\n            </ul>\n\n            <h6 id=\"spinner\">.spinner</h6>\n\n            <p>Use the <code class=\"clr-code\">.spinner</code> to create a page spinner.</p>\n\n            <h6 id=\"spinner-inline\">.spinner-inline</h6>\n\n            <p>Extend the <code class=\"clr-code\">.spinner-inline</code> class with <code\n                class=\"clr-code\">.spinner</code> to create an inline spinner.</p>\n\n            <h6 id=\"spinner-inverse\">.spinner-inverse</h6>\n\n            <p>Extend the <code class=\"clr-code\">.spinner-inverse</code> class with <code\n                class=\"clr-code\">.spinner</code> to create a spinner for dark backgrounds.</p>\n\n            <h3 id=\"examples\">Examples</h3>\n\n            <clr-spinner-types></clr-spinner-types>\n\n            <h3 id=\"spinner-sizes\">Spinner Sizes</h3>\n\n            <p>Clarity spinners can be displayed in three sizes:</p>\n\n            <ul class=\"list\">\n                <li>\n                    <strong>Small:</strong> This is the required sizing for inline spinners (see above).\n                    It measures 18x18 pixels.\n                </li>\n                <li><strong>Medium:</strong> Medium spinners measure 36x36 pixels.</li>\n                <li><strong>Large:</strong> This is the default size for page spinners (see above).</li>\n            </ul>\n\n            <h6 id=\"spinner-sizes-classnames\">Spinner sizes classnames</h6>\n\n            <p>The classnames used to size spinners are: <code class=\"clr-code\">.spinner-sm</code>, <code\n                class=\"clr-code\">.spinner-md</code>, and <code class=\"clr-code\">.spinner-lg</code>. Note\n                that using the <code class=\"clr-code\">.spinner-inline</code> class will force a spinner\n                to the small size and that <code class=\"clr-code\">.spinner-lg</code> is the default\n                sizing of page spinners.</p>\n\n            <h3 id=\"examples-1\">Examples</h3>\n\n            <clr-spinner-sizes></clr-spinner-sizes>\n        </div>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>Use the three sizes of spinners as follows:</p>\n\n            <table class=\"table\">\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>Large</b>\n                        <div class=\"hidden-sm-up nowrap\">72px &times; 72px</div>\n                    </td>\n                    <td class=\"left hidden-xs-down nowrap\">72px &times; 72px</td>\n                    <td class=\"left\">\n                        Use to track the progress of an operation related to a page. For example, in\n                        the login form, a large spinner replaces the form fields while the data is\n                        being authenticated.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>Medium</b>\n                        <div class=\"hidden-sm-up nowrap\">36px &times; 36px</div>\n                    </td>\n                    <td class=\"left hidden-xs-down nowrap\">36px &times; 36px</td>\n                    <td class=\"left\">Use when content is being loaded, for example, in a table or datagrid.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>Small</b>\n                        <div class=\"hidden-sm-up\">18px &times; 18px</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">18px &times; 18px</td>\n                    <td class=\"left\">Use in constrained spaces, such as in an input field or next to a\n                        button. The spinner animates and the field or button is disabled until the\n                        action is complete.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h4 id=\"placement\">Placement</h4>\n\n            <p>Place the spinner where you want to focus users’ attention when the process completes.</p>\n\n            <h4 id=\"label\">Label</h4>\n\n            <p>Optionally, provide a brief description of the process, for example, “Loading …”</p>\n\n            <h4 id=\"spinners-versus-progress-bars\">Spinners Versus Progress Bars</h4>\n\n            <p>Clarity provides a linear, indeterminate <a routerLink=\"../../progress\">progress\n                bar</a> that serves the same use cases as a spinner. Using a spinner or an indeterminate\n                progress bar is a matter of spacing, visual consistency, and the object the user selected\n                to begin the process.</p>\n\n            <clr-spinner-component></clr-spinner-component>\n\n\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "SpinnerSizesDemo",
      "id": "component-SpinnerSizesDemo-091f126d1c981d6a7464cfed64b4cc10",
      "file": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-spinner-sizes",
      "styleUrls": ["./spinner.demo.scss"],
      "styles": [],
      "templateUrl": ["./spinner-sizes.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<span class=\"spinner spinner-sm\">\n    Loading...\n</span>\n`;\n\nconst EXAMPLE1 = `\n<span class=\"spinner spinner-md\">\n    Loading...\n</span>\n`;\n\nconst EXAMPLE2 = `\n<span class=\"spinner spinner-lg\">\n    Loading...\n</span>\n`;\n\n@Component({\n  selector: 'clr-spinner-sizes',\n  templateUrl: './spinner-sizes.html',\n  styleUrls: ['./spinner.demo.scss'],\n})\nexport class SpinnerSizesDemo {\n  example = EXAMPLE;\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.example-dark {\n    background: $clr-color-neutral-900;\n  }\n}\n\nul {\n  font-weight: 600;\n\n  span {\n    font-weight: 200;\n  }\n}\n",
          "styleUrl": "./spinner.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h5>Small</h5>\n<div class=\"clr-example squeeze\">\n    <span class=\"spinner spinner-sm\">\n        Loading...\n    </span>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n\n<h5>Medium</h5>\n<div class=\"clr-example squeeze\">\n    <span class=\"spinner spinner-md\">\n        Loading...\n    </span>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n\n<h5>Large (default)</h5>\n<div class=\"clr-example squeeze\">\n    <div class=\"spinner spinner-lg\">\n        Loading...\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n"
    },
    {
      "name": "SpinnerTypesDemo",
      "id": "component-SpinnerTypesDemo-8ccc6042b396a9ba3a991c87160ec8ac",
      "file": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-spinner-types",
      "styleUrls": ["./spinner.demo.scss"],
      "styles": [],
      "templateUrl": ["./spinner-types.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<span class=\"spinner\">\n    Loading...\n</span>\n`;\n\nconst EXAMPLE1 = `\n<span class=\"spinner spinner-inline\">\n    Loading...\n</span>\n<span>\n    Loading...\n</span>\n`;\n\nconst EXAMPLE2 = `\n<span class=\"spinner spinner-inverse\">\n    Loading...\n</span>\n`;\n\n@Component({\n  selector: 'clr-spinner-types',\n  templateUrl: './spinner-types.html',\n  styleUrls: ['./spinner.demo.scss'],\n})\nexport class SpinnerTypesDemo {\n  example = EXAMPLE;\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.clr-example {\n  text-align: center;\n\n  &.example-dark {\n    background: $clr-color-neutral-900;\n  }\n}\n\nul {\n  font-weight: 600;\n\n  span {\n    font-weight: 200;\n  }\n}\n",
          "styleUrl": "./spinner.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h5>Page Spinners</h5>\n<div class=\"clr-example squeeze\">\n    <div class=\"spinner\">\n        Loading...\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n\n<h5>Inline Spinners</h5>\n<div class=\"clr-example squeeze\">\n    <span class=\"spinner spinner-inline\">\n        Loading...\n    </span>\n    <span>\n        Loading...\n    </span>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n\n<h5>Spinners on a dark background</h5>\n<div class=\"clr-example squeeze example-dark\">\n    <span class=\"spinner spinner-inverse\">\n        Loading...\n    </span>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n"
    },
    {
      "name": "StackViewAngularBasicDemo",
      "id": "component-StackViewAngularBasicDemo-d90cc951e34409a0331f38f2b9a1a26a",
      "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-basic.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-stack-view-angular-basic-demo",
      "styleUrls": ["./stack-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./stack-view-angular-basic.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "blocks",
          "defaultValue":
            "[\n    { title: 'Label 1', content: 'Content 1' },\n    {\n      title: 'Label 2',\n      content: 'Content 2',\n      children: [\n        { title: 'Sub-label 1', content: 'Sub-content 1' },\n        { title: 'Sub-label 2', content: 'Sub-content 2' },\n        { title: 'Sub-label 3', content: 'Sub-content 3' },\n      ],\n    },\n    { title: 'Label 3', content: 'Content 3' },\n  ]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        },
        {
          "name": "children",
          "defaultValue": "[]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 30,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        },
        {
          "name": "editModal",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "fetchChildren",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { StackViewNgDemo } from './stack-view-ng-demo';\n\nconst EXAMPLE = `\n<clr-stack-view>\n    <clr-stack-header>Angular stack view</clr-stack-header>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"1\">\n        <clr-stack-label>Label 1</clr-stack-label>\n        <clr-stack-content>Content 1</clr-stack-content>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"2\">\n        <clr-stack-label>Label 2</clr-stack-label>\n        <clr-stack-content>Content 2</clr-stack-content>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"1\">\n            <clr-stack-label>Sub-label 1</clr-stack-label>\n            <clr-stack-content>Sub-content 1</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"2\">\n            <clr-stack-label>Sub-label 2</clr-stack-label>\n            <clr-stack-content>Sub-content 2</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"3\">\n            <clr-stack-label>Sub-label 3</clr-stack-label>\n            <clr-stack-content>Sub-content 3</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"3\">\n        <clr-stack-label>Label 3</clr-stack-label>\n        <clr-stack-content>Content 3</clr-stack-content>\n        <clr-stack-block>\n            <clr-stack-label>Sub-label 4</clr-stack-label>\n            <clr-stack-content>Sub-content 4</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block>\n            <clr-stack-label>Sub-label 5</clr-stack-label>\n            <clr-stack-content>Sub-content 5</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n</clr-stack-view>\n`;\n\n@Component({\n  selector: 'clr-stack-view-angular-basic-demo',\n  templateUrl: './stack-view-angular-basic.html',\n  styleUrls: ['./stack-view.demo.scss'],\n})\nexport class StackViewAngularBasicDemo extends StackViewNgDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n.clr-example {\n  .stack-header {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./stack-view.demo.scss"
        }
      ],
      "stylesData": "",
      "extends": "StackViewNgDemo",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <clr-stack-view>\n        <clr-stack-header>Angular stack view</clr-stack-header>\n\n        <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"1\">\n            <clr-stack-label>Label 1</clr-stack-label>\n            <clr-stack-content>Content 1</clr-stack-content>\n        </clr-stack-block>\n\n        <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"2\">\n            <clr-stack-label>Label 2</clr-stack-label>\n            <clr-stack-content>Content 2</clr-stack-content>\n            <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"1\">\n                <clr-stack-label>Sub-label 1</clr-stack-label>\n                <clr-stack-content>Sub-content 1</clr-stack-content>\n            </clr-stack-block>\n            <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"2\">\n                <clr-stack-label>Sub-label 2</clr-stack-label>\n                <clr-stack-content>Sub-content 2</clr-stack-content>\n            </clr-stack-block>\n            <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"3\">\n                <clr-stack-label>Sub-label 3</clr-stack-label>\n                <clr-stack-content>Sub-content 3</clr-stack-content>\n            </clr-stack-block>\n        </clr-stack-block>\n\n        <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"3\">\n            <clr-stack-label>Label 3</clr-stack-label>\n            <clr-stack-content>Content 3</clr-stack-content>\n            <clr-stack-block>\n                <clr-stack-label>Sub-label 4</clr-stack-label>\n                <clr-stack-content>Sub-content 4</clr-stack-content>\n            </clr-stack-block>\n            <clr-stack-block>\n                <clr-stack-label>Sub-label 5</clr-stack-label>\n                <clr-stack-content>Sub-content 5</clr-stack-content>\n            </clr-stack-block>\n        </clr-stack-block>\n    </clr-stack-view>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "StackViewAngularLazyloadDemo",
      "id": "component-StackViewAngularLazyloadDemo-37208b6f294ea9bbd706f9b6bd577a49",
      "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-lazyload.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-stack-view-angular-lazyload-demo",
      "styleUrls": ["./stack-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./stack-view-angular-lazyload.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "lazyBlock",
          "type": "ClrStackBlock",
          "optional": false,
          "description": "",
          "line": 59,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'lazyBlock', {static: true}"
            }
          ]
        },
        {
          "name": "blocks",
          "defaultValue":
            "[\n    { title: 'Label 1', content: 'Content 1' },\n    {\n      title: 'Label 2',\n      content: 'Content 2',\n      children: [\n        { title: 'Sub-label 1', content: 'Sub-content 1' },\n        { title: 'Sub-label 2', content: 'Sub-content 2' },\n        { title: 'Sub-label 3', content: 'Sub-content 3' },\n      ],\n    },\n    { title: 'Label 3', content: 'Content 3' },\n  ]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        },
        {
          "name": "children",
          "defaultValue": "[]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 30,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        },
        {
          "name": "editModal",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "resetChildren",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61
        },
        {
          "name": "fetchChildren",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { StackViewNgDemo } from './stack-view-ng-demo';\nimport { ClrStackBlock } from '@clr/angular';\n\nconst EXAMPLE = `\n<clr-stack-view>\n    <clr-stack-header>\n        Lazily loaded children\n        <button class=\"stack-action btn btn-sm btn-link\" (click)=\"resetChildren()\" type=\"button\">Reset</button>\n    </clr-stack-header>\n\n    <clr-stack-block\n      #lazyBlock\n      [clrSbExpandable]=\"true\"\n      (clrSbExpandedChange)=\"fetchChildren()\"\n      [clrStackViewLevel]=\"1\"\n      [clrStackViewSetsize]=\"2\"\n      [clrStackViewPosinset]=\"1\"\n      >\n        <clr-stack-label>Label 1</clr-stack-label>\n        <clr-stack-content>Content 1</clr-stack-content>\n\n        <clr-stack-block *ngIf=\"children.length == 0\" [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"0\" [clrStackViewPosinset]=\"1\">\n            <clr-spinner clrAssertive clrInline>\n              Loading...\n            </clr-spinner>\n        </clr-stack-block>\n\n        <clr-stack-block\n          *ngFor=\"let child of children; let i = index\"\n          [clrStackViewLevel]=\"2\"\n          [clrStackViewSetsize]=\"children.length\"\n          [clrStackViewPosinset]=\"i + 1\"\n          >\n            <clr-stack-label>{{child.title}}</clr-stack-label>\n            <clr-stack-content>{{child.content}}</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"2\" [clrStackViewPosinset]=\"2\">\n        <clr-stack-label>Label 2</clr-stack-label>\n        <clr-stack-content>Content 2</clr-stack-content>\n    </clr-stack-block>\n</clr-stack-view>\n`;\n\n@Component({\n  selector: 'clr-stack-view-angular-lazyload-demo',\n  templateUrl: './stack-view-angular-lazyload.html',\n  styleUrls: ['./stack-view.demo.scss'],\n})\nexport class StackViewAngularLazyloadDemo extends StackViewNgDemo {\n  @ViewChild('lazyBlock', { static: true })\n  lazyBlock: ClrStackBlock;\n\n  resetChildren(): void {\n    this.lazyBlock.expanded = false;\n    this.children = [];\n  }\n\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n.clr-example {\n  .stack-header {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./stack-view.demo.scss"
        }
      ],
      "stylesData": "",
      "extends": "StackViewNgDemo",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <clr-stack-view>\n        <clr-stack-header>\n            Lazily loaded children\n            <button class=\"stack-action btn btn-sm btn-link\" (click)=\"resetChildren()\" type=\"button\">Reset</button>\n        </clr-stack-header>\n\n        <clr-stack-block\n            #lazyBlock\n            [clrSbExpandable]=\"true\"\n            (clrSbExpandedChange)=\"fetchChildren()\"\n            [clrStackViewLevel]=\"1\"\n            [clrStackViewSetsize]=\"2\"\n            [clrStackViewPosinset]=\"1\"\n            >\n            <clr-stack-label>Label 1</clr-stack-label>\n            <clr-stack-content>Content 1</clr-stack-content>\n\n            <clr-stack-block *ngIf=\"children.length == 0\" [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"0\" [clrStackViewPosinset]=\"1\">\n                <clr-spinner clrAssertive clrInline>\n                  Loading...\n                </clr-spinner>\n            </clr-stack-block>\n\n            <clr-stack-block\n                *ngFor=\"let child of children; let i = index\"\n                [clrStackViewLevel]=\"2\"\n                [clrStackViewSetsize]=\"children.length\"\n                [clrStackViewPosinset]=\"i + 1\"\n                >\n                <clr-stack-label>{{child.title}}</clr-stack-label>\n                <clr-stack-content>{{child.content}}</clr-stack-content>\n            </clr-stack-block>\n        </clr-stack-block>\n\n        <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"2\" [clrStackViewPosinset]=\"2\">\n            <clr-stack-label>Label 2</clr-stack-label>\n            <clr-stack-content>Content 2</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-view>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "StackViewAngularModalEditDemo",
      "id": "component-StackViewAngularModalEditDemo-b257ae0e7a61aa594e704b29f3371f0e",
      "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-modal-edit.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-stack-view-angular-modal-edit-demo",
      "styleUrls": ["./stack-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./stack-view-angular-modal-edit.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 83
        },
        {
          "name": "blocks",
          "defaultValue":
            "[\n    { title: 'Label 1', content: 'Content 1' },\n    {\n      title: 'Label 2',\n      content: 'Content 2',\n      children: [\n        { title: 'Sub-label 1', content: 'Sub-content 1' },\n        { title: 'Sub-label 2', content: 'Sub-content 2' },\n        { title: 'Sub-label 3', content: 'Sub-content 3' },\n      ],\n    },\n    { title: 'Label 3', content: 'Content 3' },\n  ]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        },
        {
          "name": "children",
          "defaultValue": "[]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 30,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        },
        {
          "name": "editModal",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "fetchChildren",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32,
          "inheritance": {
            "file": "StackViewNgDemo"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { StackViewNgDemo } from './stack-view-ng-demo';\n\nconst EXAMPLE = `\n<clr-stack-view>\n    <clr-stack-header>\n        Modal editor\n        <button\n            class=\"stack-action btn btn-sm btn-link\"\n            (click)=\"editModal = true\"\n            type=\"button\">Edit</button>\n    </clr-stack-header>\n\n    <clr-stack-block\n        *ngFor=\"let block of blocks; let i = index\"\n        [clrStackViewLevel]=\"1\"\n        [clrStackViewSetsize]=\"blocks.length\"\n        [clrStackViewPosinset]=\"i\"\n        >\n        <clr-stack-label>{{block.title}}</clr-stack-label>\n        <clr-stack-content>{{block.content}}</clr-stack-content>\n\n        <clr-stack-block\n            *ngFor=\"let child of block.children; let j = index\"\n            [clrStackViewLevel]=\"2\"\n            [clrStackViewSetsize]=\"block.children.length\"\n            [clrStackViewPosinset]=\"j\"\n            >\n            <clr-stack-label>{{child.title}}</clr-stack-label>\n            <clr-stack-content>{{child.content}}</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n</clr-stack-view>\n\n<clr-modal [(clrModalOpen)]=\"editModal\">\n    <h3 class=\"modal-title\">Edit mode</h3>\n    <div class=\"modal-body\">\n        <clr-stack-view>\n            <clr-stack-block\n                *ngFor=\"let block of blocks; let blockIndex = index\"\n                [clrSbNotifyChange]=\"block.content!=='Content '+ (blockIndex)\"\n                [clrStackViewLevel]=\"1\"\n                [clrStackViewSetsize]=\"blocks.length\"\n                [clrStackViewPosinset]=\"blockIndex + 1\"\n                >\n                <clr-stack-label>{{block.title}}</clr-stack-label>\n                <clr-stack-content>\n                    <input type=\"text\" [(ngModel)]=\"block.content\" class=\"clr-input\"/>\n                </clr-stack-content>\n\n                <clr-stack-block\n                    *ngFor=\"let child of block.children; let blockChildIndex = index\"\n                    [clrSbNotifyChange]=\"child.content!=='Sub-content '+ (blockChildIndex)\"\n                    [clrStackViewLevel]=\"2\"\n                    [clrStackViewSetsize]=\"block.children.length\"\n                    [clrStackViewPosinset]=\"blockChildIndex + 1\"\n                    >\n                    <clr-stack-label>{{child.title}}</clr-stack-label>\n                    <clr-stack-content>\n                        <input type=\"text\" [(ngModel)]=\"child.content\" class=\"clr-input\"/>\n                    </clr-stack-content>\n                </clr-stack-block>\n            </clr-stack-block>\n        </clr-stack-view>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"editModal = false\">Done</button>\n    </div>\n</clr-modal>\n`;\n\n@Component({\n  selector: 'clr-stack-view-angular-modal-edit-demo',\n  templateUrl: './stack-view-angular-modal-edit.html',\n  styleUrls: ['./stack-view.demo.scss'],\n})\nexport class StackViewAngularModalEditDemo extends StackViewNgDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n.clr-example {\n  .stack-header {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./stack-view.demo.scss"
        }
      ],
      "stylesData": "",
      "extends": "StackViewNgDemo",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <clr-stack-view>\n        <clr-stack-header>\n            Modal editor\n            <button class=\"stack-action btn btn-sm btn-link\" (click)=\"editModal = true\" type=\"button\">Edit</button>\n        </clr-stack-header>\n\n        <clr-stack-block\n            *ngFor=\"let block of blocks; let i = index\"\n            [clrStackViewLevel]=\"1\"\n            [clrStackViewSetsize]=\"blocks.length\"\n            [clrStackViewPosinset]=\"i\"\n            >\n            <clr-stack-label>{{block.title}}</clr-stack-label>\n            <clr-stack-content>{{block.content}}</clr-stack-content>\n\n            <clr-stack-block\n                *ngFor=\"let child of block.children; let j = index\"\n                [clrStackViewLevel]=\"2\"\n                [clrStackViewSetsize]=\"block.children.length\"\n                [clrStackViewPosinset]=\"j\"\n                >\n                <clr-stack-label>{{child.title}}</clr-stack-label>\n                <clr-stack-content>{{child.content}}</clr-stack-content>\n            </clr-stack-block>\n        </clr-stack-block>\n    </clr-stack-view>\n\n    <clr-modal [(clrModalOpen)]=\"editModal\">\n        <h3 class=\"modal-title\">Edit mode</h3>\n        <div class=\"modal-body\">\n            <clr-stack-view>\n                <clr-stack-block\n                    *ngFor=\"let block of blocks; let blockIndex = index\"\n                    [clrSbNotifyChange]=\"block.content!=='Content '+ (blockIndex)\"\n                    [clrStackViewLevel]=\"1\"\n                    [clrStackViewSetsize]=\"blocks.length\"\n                    [clrStackViewPosinset]=\"blockIndex + 1\"\n                    >\n                    <clr-stack-label>{{block.title}}</clr-stack-label>\n                    <clr-stack-content>\n                        <input type=\"text\" clrStackInput [(ngModel)]=\"block.content\" />\n                    </clr-stack-content>\n\n                    <clr-stack-block\n                        *ngFor=\"let child of block.children; let blockChildIndex = index\"\n                        [clrSbNotifyChange]=\"child.content!=='Sub-content '+ (blockChildIndex)\"\n                        [clrStackViewLevel]=\"2\"\n                        [clrStackViewSetsize]=\"block.children.length\"\n                        [clrStackViewPosinset]=\"blockChildIndex + 1\"\n                        >\n                        <clr-stack-label>{{child.title}}</clr-stack-label>\n                        <clr-stack-content>\n                            <input type=\"text\" clrStackInput [(ngModel)]=\"child.content\" />\n                        </clr-stack-content>\n                    </clr-stack-block>\n                </clr-stack-block>\n            </clr-stack-view>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"editModal = false\">Done</button>\n        </div>\n    </clr-modal>\n</div>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "StackViewDemo",
      "id": "component-StackViewDemo-299a55ff5c2d682cd25b2348d64448b6",
      "file": "src/website/src/app/documentation/demos/stack-view/stack-view.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-stack-view-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./stack-view.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-stack-view-demo',\n  templateUrl: './stack-view.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class StackViewDemo extends ClarityDocComponent {\n  constructor() {\n    super('stack-view');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"a-stack-view-displays-keyvalue-pairs-which-users-can-expand-to-show-more-detail\">A stack view displays\n            key/value pairs, which users can expand to show more detail.</h5>\n\n        <div id=\"code-examples\">\n            <h3 id=\"html-and-styles\">HTML and Styles</h3>\n\n            <div class=\"alert alert-warning\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            We do not recommend using Stack View as a static component since the DOM structure\n                            is architected to enable the Stack View's Javascript behavior and animation handling.\n                            If you cannot use the Angular component, these are the elements and\n                            classes you will need to use to benefit from Clarity's styles, without the animations.\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n            <clr-stack-view-static-demo class=\"clrweb-stackview-demo\"></clr-stack-view-static-demo>\n\n            <h3 id=\"basic-stack-view-component\">Basic Stack View Component</h3>\n\n            <clr-stack-view-angular-basic-demo class=\"clrweb-stackview-demo\"></clr-stack-view-angular-basic-demo>\n\n            <h3 id=\"stack-view-with-editing-in-a-modal\">Stack View With Editing in a Modal</h3>\n\n            <clr-stack-view-angular-modal-edit-demo\n            class=\"clrweb-stackview-demo\"></clr-stack-view-angular-modal-edit-demo>\n\n            <h3 id=\"lazy-loading-of-children\">Lazy Loading of Children</h3>\n\n            <p>This example shows how to leverage the various inputs and outputs provided by\n                <code class=\"clr-code\">&lt;clr-stack-block&gt;</code> to make blocks expandable even\n                though their children are loaded on demand from the server.</p>\n\n            <clr-stack-view-angular-lazyload-demo class=\"clrweb-stackview-demo\"></clr-stack-view-angular-lazyload-demo>\n\n            <h6 id=\"options-for-ltclr-stack-blockgt\">Options for &lt;clr-stack-block&gt;</h6>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"left hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrSbExpandable]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">\n                            Default:<br/> true if <code class=\"clr-code\">&lt;clr-stack-block&gt;</code>\n                            children are detected\n                        </div>\n                    </td>\n                    <td class=\"hidden-xs-down\">true, false</td>\n                    <td class=\"left hidden-xs-down\">\n                        true if and only if\n                        <code class=\"clr-code\">&lt;clr-stack-block&gt;</code> children are detected\n                    </td>\n                    <td class=\"left\">\n                        Makes the stack block expandable, even if it doesn’t contain any nested\n                        <code class=\"clr-code\">&lt;clr-stack-block&gt;</code>\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrSbExpanded]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">true, false</td>\n                    <td class=\"left hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Two-way binding on the state of the block: expanded or collapsed. Has no effect\n                        if the block is not expandable.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrSbNotifyChange]</b>\n                        <div class=\"hidden-sm-up\">Type: Boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">true, false</td>\n                    <td class=\"left hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Shows an updated indicator on the stack block, when set to true.\n                    </td>\n                </tr>\n\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrStackViewLevel]</b>\n                        <div class=\"hidden-sm-up\">Type: Number</div>\n                        <div class=\"hidden-sm-up\">Default: None</div>\n                    </td>\n                    <td class=\"hidden-xs-down\"></td>\n                    <td class=\"left hidden-xs-down\">None</td>\n                    <td class=\"left\">\n                        <a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-level\" target=\"_blank\">aria-level</a>\n                        Defines the hierarchical level of an element within a structure.\n                    </td>\n                </tr>\n\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrStackViewSetsize]</b>\n                        <div class=\"hidden-sm-up\">Type: Number</div>\n                        <div class=\"hidden-sm-up\">Default: None</div>\n                    </td>\n                    <td class=\"hidden-xs-down\"></td>\n                    <td class=\"left hidden-xs-down\">None</td>\n                    <td class=\"left\">\n                        <a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-setsize\" target=\"_blank\">aria-setsize</a>\n                        Defines the number of items in the current set of listitems.\n                    </td>\n                </tr>\n\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrStackViewPosinset]</b>\n                        <div class=\"hidden-sm-up\">Type: Number</div>\n                        <div class=\"hidden-sm-up\">Default: None</div>\n                    </td>\n                    <td class=\"hidden-xs-down\"></td>\n                    <td class=\"left hidden-xs-down\">None</td>\n                    <td class=\"left\">\n                        <a href=\"https://www.w3.org/TR/wai-aria-1.1/#aria-posinset\" target=\"_blank\">aria-posinset</a>\n                        Defines an element's number or position in the current set of listitems.\n                    </td>\n                </tr>\n\n                </tbody>\n            </table>\n        </div>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>Stack views are designed for use in the main content area and modals. Use a stack view\n                when you want to:</p>\n\n            <ul class=\"list\">\n                <li>Display related key/value pairs, for example, an object’s settings.</li>\n                <li>Progressively disclose data. This is useful when the set of key/value pairs is large\n                    or you want to enable users to reveal more complex or less frequently used data\n                    as necessary.\n                </li>\n            </ul>\n\n            <h4 id=\"enabling-value-editing\">Enabling Value Editing</h4>\n\n            <p>In this pattern, the component includes an Edit button on the top right, which on click opens\n                an editable stack view in a modal. This design prevents users from accidentally altering a\n                value in the main content area. Common editing controls include input fields, select boxes,\n                checkboxes, and radio buttons.</p>\n\n            <h4 id=\"labels\">Labels</h4>\n\n            <ul class=\"list\">\n                <li>Provide terse labels that let users know what is under the label. Try to keep the\n                    label to one line.\n                </li>\n                <li>Use noun phrases, sentence-style capitalization, and no ending punctuation.</li>\n                <li>Avoid using icons.</li>\n            </ul>\n\n            <h4 id=\"highlights-and-horizontal-lines\">Highlights and Horizontal lines</h4>\n\n            <p>The stack view highlight color (#DDDDDD) differs from the usual Clarity highlight color\n                to make it more distinct. Expanded sections have a lighter background color to make it\n                easier to understand the hierarchy.</p>\n\n            <p>Horizontal lines in the stack editor are for readability–they help users quickly discern\n                the relationship between columns.</p>\n\n            <h4 id=\"accessibility\">Accessibility</h4>\n            <p>\n                To provide better accessibility to the StackView some attributes have to be set manualy to\n                <code class=\"clr-code\">.stack-block-label</code> element in the static form or use one of the provided\n                inputs to <code class=\"clr-code\">ClrStackBlock</code>.\n            </p>\n\n        </div>\n    </article>\n</clr-doc-wrapper>"
    },
    {
      "name": "StackViewStaticDemo",
      "id": "component-StackViewStaticDemo-a77658f9ed18148194f08251ca928ae0",
      "file": "src/website/src/app/documentation/demos/stack-view/stack-view-static.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-stack-view-static-demo",
      "styleUrls": ["./stack-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./stack-view-static.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<h4 class=\"stack-header\">\n    <span class=\"stack-title\">Static stack view</span>\n    <span class=\"stack-actions\">\n        <button class=\"stack-action btn btn-sm btn-link\" type=\"button\">Edit</button>\n    </span>\n</h4>\n<dl class=\"stack-view\">\n    <div class=\"stack-block\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"1\" aria-setsize=\"3\">Label 1</dt>\n        <dd class=\"stack-block-content\">Content 1</dd>\n    </div>\n    <div class=\"stack-block stack-block-expandable stack-block-expanded\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"2\" aria-setsize=\"3\">Label 2</dt>\n        <dd class=\"stack-block-content\">Content 2</dd>\n        <div class=\"stack-children\">\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"1\" aria-setsize=\"3\">Sub-label 1</dt>\n                <dd class=\"stack-block-content\">Sub-content 1</dd>\n            </div>\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"2\" aria-setsize=\"3\">Sub-label 2</dt>\n                <dd class=\"stack-block-content\">Sub-content 2</dd>\n            </div>\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"3\" aria-setsize=\"3\">Sub-label 3</dt>\n                <dd class=\"stack-block-content\">Sub-content 3</dd>\n            </div>\n        </div>\n    </div>\n    <div class=\"stack-block stack-block-expandable\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"3\" aria-setsize=\"3\">Label 3</dt>\n        <dd class=\"stack-block-content\">Content 3</dd>\n        <div class=\"stack-children\"></div>\n    </div>\n</dl>\n`;\n\n@Component({\n  selector: 'clr-stack-view-static-demo',\n  templateUrl: './stack-view-static.html',\n  styleUrls: ['./stack-view.demo.scss'],\n})\nexport class StackViewStaticDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n.clr-example {\n  .stack-header {\n    margin-top: 0;\n  }\n}\n",
          "styleUrl": "./stack-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <h4 class=\"stack-header\">\n        <span class=\"stack-title\">Static stack view</span>\n        <span class=\"stack-actions\">\n            <button class=\"stack-action btn btn-sm btn-link\" type=\"button\">Edit</button>\n        </span>\n    </h4>\n    <dl class=\"stack-view\">\n        <div class=\"stack-block\">\n            <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"1\" aria-setsize=\"3\">Label 1</dt>\n            <dd class=\"stack-block-content\">Content 1</dd>\n        </div>\n        <div class=\"stack-block stack-block-expandable stack-block-expanded\">\n            <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"2\" aria-setsize=\"3\">Label 2</dt>\n            <dd class=\"stack-block-content\">Content 2</dd>\n            <div class=\"stack-children\">\n                <div class=\"stack-block\">\n                    <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"1\" aria-setsize=\"3\">Sub-label 1</dt>\n                    <dd class=\"stack-block-content\">Sub-content 1</dd>\n                </div>\n                <div class=\"stack-block\">\n                    <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"2\" aria-setsize=\"3\">Sub-label 2</dt>\n                    <dd class=\"stack-block-content\">Sub-content 2</dd>\n                </div>\n                <div class=\"stack-block\">\n                    <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"3\" aria-setsize=\"3\">Sub-label 3</dt>\n                    <dd class=\"stack-block-content\">Sub-content 3</dd>\n                </div>\n            </div>\n        </div>\n        <div class=\"stack-block stack-block-expandable\">\n            <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"3\" aria-setsize=\"3\">Label 3</dt>\n            <dd class=\"stack-block-content\">Content 3</dd>\n            <div class=\"stack-children\"></div>\n        </div>\n    </dl>\n</div>\n\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "StatusDotComponent",
      "id": "component-StatusDotComponent-c69cfe4e4aed9173ba9757539f69af46",
      "file": "src/website/src/app/documentation/component-status/status-dot.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "status-dot",
      "styleUrls": [],
      "styles": [],
      "template":
        "<img src=\"assets/images/documentation/status/{{image}}.svg\" title=\"{{message}}\" alt=\"{{message}}\">\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "status",
          "line": 19,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "image",
          "defaultValue": "'na'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "message",
          "defaultValue": "'Not applicable'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'status-dot',\n  template: `\n    <img src=\"assets/images/documentation/status/{{image}}.svg\" title=\"{{message}}\" alt=\"{{message}}\">\n  `,\n})\nexport class StatusDotComponent {\n  image = 'na';\n  message = 'Not applicable';\n\n  @Input()\n  set status(value: number) {\n    if (value === 20) {\n      this.image = 'done';\n      this.message = 'Work completed';\n    } else if (value === 10) {\n      this.image = 'in-progress';\n      this.message = 'Work in progress';\n    } else if (value === 5) {\n      this.image = 'in-queue';\n      this.message = 'Work planned but not in progress';\n    } else {\n      this.image = 'na';\n      this.message = 'Not applicable';\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "status": {
          "name": "status",
          "setSignature": {
            "name": "status",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "number"
              }
            ],
            "returnType": "void",
            "line": 19,
            "jsdoctags": [
              {
                "name": "value",
                "type": "number",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "StepperDemo",
      "id": "component-StepperDemo-6d5849c9da8d80893da4458c3c3f3580",
      "file": "src/website/src/app/documentation/demos/stepper/stepper.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-stepper-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./stepper.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-stepper-demo',\n  templateUrl: './stepper.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class StepperDemo extends ClarityDocComponent {\n  constructor() {\n    super('stepper');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n  <article>\n    <h5 class=\"component-summary\" id=\"stepper-header\">\n      A stepper structures multi-step processes into 2 or more expanding panels that break up complex workflows.\n    </h5>\n\n    <div id=\"design-guidelines\">\n      <h3>Design Guidelines</h3>\n      <clr-design-stepper-demo></clr-design-stepper-demo>\n    </div>\n\n    <div id=\"code-examples\">\n      <h3 id=\"examples\">Code &amp; Examples</h3>\n      <p>\n        The Stepper is an extension of the base Accordion component. The stepper requires use of the Angular Forms API.\n        Using the Forms API allows the stepper to easily reflect the form state of each step in the stepper template.\n      </p>\n\n      <p>\n        Leverage our <code>*clrIfExpanded</code> structural directive on the <code>clr-stepper-panel</code> to only\n        instantiate children when they are displayed.\n      </p>\n\n      <clr-angular-stepper-reactive-demo></clr-angular-stepper-reactive-demo>\n      <clr-angular-stepper-template-demo></clr-angular-stepper-template-demo>\n      <clr-angular-stepper-api-demo></clr-angular-stepper-api-demo>\n    </div>\n  </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "SubNavDemo",
      "id": "component-SubNavDemo-88473c4096dd3b26c105025eb79d26e2",
      "file": "src/website/src/app/documentation/demos/header/sub-nav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-nav-demo-subnav",
      "styleUrls": ["./sub-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./sub-nav.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<header>\n    ...\n</header>\n<nav class=\"subnav\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" href=\"#\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Management</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Cloud</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Tenants</a>\n        </li>\n    </ul>\n</nav>\n`;\n\n@Component({\n  selector: 'clr-nav-demo-subnav',\n  styleUrls: ['./sub-nav.demo.scss'],\n  templateUrl: './sub-nav.demo.html',\n})\nexport class SubNavDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.main-container {\n  padding-top: 0;\n  height: $clr_baselineRem_20;\n}\n",
          "styleUrl": "./sub-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header-6\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"settings\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n        <nav class=\"subnav\">\n            <ul class=\"nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"javascript://\">Dashboard</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Management</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Cloud</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Tenants</a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n                    ut labore et dolore magna aliqua. Non enim praesent elementum facilisis leo vel fringilla.\n                    Euismod elementum nisi quis eleifend quam adipiscing vitae proin. Volutpat consequat\n                    mauris nunc congue nisi vitae suscipit tellus mauris. Dolor magna eget est lorem ipsum\n                    dolor sit amet consectetur. Ullamcorper dignissim cras tincidunt lobortis feugiat vivamus.\n                    Volutpat commodo sed egestas egestas. Pharetra sit amet aliquam id diam maecenas ultricies\n                    mi. Pulvinar etiam non quam lacus suspendisse faucibus interdum posuere. Viverra nibh cras\n                    pulvinar mattis nunc sed blandit libero volutpat. Enim nunc faucibus a pellentesque sit\n                    amet porttitor eget dolor. Quis viverra nibh cras pulvinar mattis nunc. Donec ac odio tempor orci.\n                    Tortor consequat id porta nibh. Risus ultricies tristique nulla aliquet enim tortor. A scelerisque\n                    purus semper eget duis at tellus at. Arcu non sodales neque sodales ut. Egestas integer eget aliquet\n                    nibh praesent tristique.\n                </p>\n                <p>\n                    Leo integer malesuada nunc vel risus commodo viverra. Lectus sit amet est placerat in\n                    egestas. Tincidunt vitae semper quis lectus nulla at volutpat diam. Blandit aliquam\n                    etiam erat velit scelerisque in dictum non consectetur.\n                    Purus sit amet volutpat consequat mauris. Enim blandit volutpat maecenas volutpat\n                    blandit aliquam etiam erat velit.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "SubNavDemo",
      "id": "component-SubNavDemo-b7fb8309b99ffd1cc25f42fb02433a82-1",
      "file": "src/website/src/app/documentation/demos/nav/sub-nav.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-nav-demo-subnav",
      "styleUrls": ["./sub-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./sub-nav.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-nav-demo-subnav',\n  styleUrls: ['./sub-nav.demo.scss'],\n  templateUrl: './sub-nav.demo.html',\n})\nexport class SubNavDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.main-container {\n  padding-top: 0;\n  height: $clr_baselineRem_20;\n}\n",
          "styleUrl": "./sub-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "SubNavDemo-1",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"main-container\">\n        <header class=\"header-6\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"vm-bug\"></clr-icon>\n                    <span class=\"title\">Project Clarity</span>\n                </a>\n            </div>\n            <div class=\"settings\">\n                <a href=\"javascript://\" class=\"nav-link nav-icon\">\n                    <clr-icon shape=\"cog\"></clr-icon>\n                </a>\n            </div>\n        </header>\n        <nav class=\"subnav\">\n            <ul class=\"nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"javascript://\">Dashboard</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Management</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Cloud</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"javascript://\">Tenants</a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"content-container\">\n            <div class=\"content-area\">\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n                    ut labore et dolore magna aliqua. Non enim praesent elementum facilisis leo vel fringilla.\n                    Euismod elementum nisi quis eleifend quam adipiscing vitae proin. Volutpat consequat\n                    mauris nunc congue nisi vitae suscipit tellus mauris. Dolor magna eget est lorem ipsum\n                    dolor sit amet consectetur. Ullamcorper dignissim cras tincidunt lobortis feugiat vivamus.\n                    Volutpat commodo sed egestas egestas. Pharetra sit amet aliquam id diam maecenas ultricies\n                    mi. Pulvinar etiam non quam lacus suspendisse faucibus interdum posuere. Viverra nibh cras\n                    pulvinar mattis nunc sed blandit libero volutpat. Enim nunc faucibus a pellentesque sit\n                    amet porttitor eget dolor. Quis viverra nibh cras pulvinar mattis nunc. Donec ac odio tempor orci.\n                    Tortor consequat id porta nibh. Risus ultricies tristique nulla aliquet enim tortor. A scelerisque\n                    purus semper eget duis at tellus at. Arcu non sodales neque sodales ut. Egestas integer eget aliquet\n                    nibh praesent tristique.\n                </p>\n                <p>\n                    Leo integer malesuada nunc vel risus commodo viverra. Lectus sit amet est placerat in\n                    egestas. Tincidunt vitae semper quis lectus nulla at volutpat diam. Blandit aliquam\n                    etiam erat velit scelerisque in dictum non consectetur.\n                    Purus sit amet volutpat consequat mauris. Enim blandit volutpat maecenas volutpat\n                    blandit aliquam etiam erat velit.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<pre><code clr-code-highlight=\"language-html\">\n&lt;header&gt;\n    ...\n&lt;/header&gt;\n&lt;nav class=&quot;subnav&quot;&gt;\n    &lt;ul class=&quot;nav&quot;&gt;\n        &lt;li class=&quot;nav-item&quot;&gt;\n            &lt;a class=&quot;nav-link active&quot; href=&quot;#&quot;&gt;Dashboard&lt;/a&gt;\n        &lt;/li&gt;\n        &lt;li class=&quot;nav-item&quot;&gt;\n            &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Management&lt;/a&gt;\n        &lt;/li&gt;\n        &lt;li class=&quot;nav-item&quot;&gt;\n            &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Cloud&lt;/a&gt;\n        &lt;/li&gt;\n        &lt;li class=&quot;nav-item&quot;&gt;\n            &lt;a class=&quot;nav-link&quot; href=&quot;#&quot;&gt;Tenants&lt;/a&gt;\n        &lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/nav&gt;\n</code></pre>\n"
    },
    {
      "name": "TablesBasicDemo",
      "id": "component-TablesBasicDemo-865cbe592cad94af9f4614d77dd2b4e1",
      "file": "src/website/src/app/documentation/demos/tables/tables-basic.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-basic-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-basic.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Decimal</th>\n            <th>Hexadecimal</th>\n            <th>Binary</th>\n            <th>Roman Numeral</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1</td>\n            <td>1</td>\n            <td>1</td>\n            <td>I</td>\n        </tr>\n        <tr>\n            <td>5</td>\n            <td>5</td>\n            <td>101</td>\n            <td>V</td>\n        </tr>\n        <tr>\n            <td>10</td>\n            <td>A</td>\n            <td>1010</td>\n            <td>X</td>\n        </tr>\n        <tr>\n            <td>15</td>\n            <td>F</td>\n            <td>1111</td>\n            <td>XV</td>\n        </tr>\n    </tbody>\n</table>\n`;\n\n@Component({\n  selector: 'clr-tables-basic-demo',\n  templateUrl: './tables-basic.html',\n})\nexport class TablesBasicDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Decimal</th>\n            <th>Hexadecimal</th>\n            <th>Binary</th>\n            <th class=\"hidden-xs-down\">Roman Numeral</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1</td>\n            <td>1</td>\n            <td>1</td>\n            <td class=\"hidden-xs-down\">I</td>\n        </tr>\n        <tr>\n            <td>5</td>\n            <td>5</td>\n            <td>101</td>\n            <td class=\"hidden-xs-down\">V</td>\n        </tr>\n        <tr>\n            <td>10</td>\n            <td>A</td>\n            <td>1010</td>\n            <td class=\"hidden-xs-down\">X</td>\n        </tr>\n        <tr>\n            <td>15</td>\n            <td>F</td>\n            <td>1111</td>\n            <td class=\"hidden-xs-down\">XV</td>\n        </tr>\n    </tbody>\n</table>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TablesCompactDemo",
      "id": "component-TablesCompactDemo-c92958d7b0d742126ab94cbb3a52a1bc",
      "file": "src/website/src/app/documentation/demos/tables/tables-compact.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-compact-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-compact.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<table class=\"table table-compact\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`;\n\n@Component({\n  selector: 'clr-tables-compact-demo',\n  templateUrl: './tables-compact.html',\n})\nexport class TablesCompactDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table table-compact\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th class=\"hidden-xs-down\">Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left hidden-xs-down\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td class=\"hidden-xs-down\">Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left hidden-xs-down\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td class=\"hidden-xs-down\">Tropical island</td>\n            <td>No</td>\n            <td class=\"left hidden-xs-down\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td class=\"hidden-xs-down\">Sesame Street</td>\n            <td>No</td>\n            <td class=\"left hidden-xs-down\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td class=\"hidden-xs-down\">Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left hidden-xs-down\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TablesCompactNoborderDemo",
      "id": "component-TablesCompactNoborderDemo-5aef1b6825ebf78957117d96c2d9dfdb",
      "file": "src/website/src/app/documentation/demos/tables/tables-compact-noborder.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-compact-noborder-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-compact-noborder.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<table class=\"table table-compact table-noborder\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`;\n\n@Component({\n  selector: 'clr-tables-compact-noborder-demo',\n  templateUrl: './tables-compact-noborder.html',\n})\nexport class TablesCompactNoborderDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table table-compact table-noborder\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th class=\"hidden-xs-down\">Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left hidden-xs-down\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td class=\"hidden-xs-down\">Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left hidden-xs-down\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td class=\"hidden-xs-down\">Tropical island</td>\n            <td>No</td>\n            <td class=\"left hidden-xs-down\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td class=\"hidden-xs-down\">Sesame Street</td>\n            <td>No</td>\n            <td class=\"left hidden-xs-down\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td class=\"hidden-xs-down\">Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left hidden-xs-down\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TablesDemo",
      "id": "component-TablesDemo-d4ca147f72e5659b44843e2b392c95a8",
      "file": "src/website/src/app/documentation/demos/tables/tables.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-tables-demo',\n  templateUrl: './tables.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class TablesDemo extends ClarityDocComponent {\n  constructor() {\n    super('tables');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\"\n            id=\"use-the-table-styles-wherever-you-need-to-present-static-data-in-a-tabular-format\">Use the table styles\n            wherever you need to present static data in a tabular format.</h5>\n\n        <div class=\"alert\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        For advanced features like sorting, filtering, pagination etc. see\n                        <a routerLink=\"../../datagrid\" target=\"_blank\">Datagrid.</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"basic-tables\">Basic Tables</h3>\n\n            <p>Tables take up the full width of their container. Values in table cells are\n                center-aligned by default.</p>\n\n            <clr-tables-basic-demo></clr-tables-basic-demo>\n\n            <h3 id=\"left-aligned-table-cells\">Left-Aligned Table Cells</h3>\n\n            <p>Values within cells can be left-aligned by adding the\n                <code class=\"clr-code\">.left</code> classname to the table cell.</p>\n\n            <clr-tables-leftcell-demo></clr-tables-leftcell-demo>\n\n            <h3 id=\"multiline-table-cells\">Multiline Table Cells</h3>\n\n            <p>Table cells automatically wrap text.</p>\n\n            <clr-tables-multiline-demo></clr-tables-multiline-demo>\n\n            <h3 id=\"non-bordered-tables\">Non-Bordered Tables</h3>\n\n            <p>Tables can be displayed without borders by using the\n                <code class=\"clr-code\">.table-noborder</code> classname.</p>\n\n            <clr-tables-noborder-demo></clr-tables-noborder-demo>\n\n            <h3 id=\"compact-tables\">Compact Tables</h3>\n\n            <p>Table row heights can be reduced with the <code class=\"clr-code\">.table-compact</code>\n                classname.</p>\n\n            <clr-tables-compact-demo></clr-tables-compact-demo>\n\n            <h3 id=\"compact-non-bordered-tables\">Compact, Non-Bordered Tables</h3>\n\n            <p>The <code class=\"clr-code\">.table-compact</code> and\n                <code class=\"clr-code\">.table-noborder</code> classnames can be combined.</p>\n\n            <clr-tables-compact-noborder-demo></clr-tables-compact-noborder-demo>\n\n            <h3 id=\"vertical-tables\">Vertical Tables</h3>\n\n            <p>Using the <code class=\"clr-code\">.table-vertical</code> classname orients the table\n                vertically. The left-most column serves as the table header. The left-most cell\n                can be either a <code class=\"clr-code\">td</code> or\n                <code class=\"clr-code\">th</code> element.</p>\n\n            <p>Cells in a vertical table default to left alignment. We have no use cases for\n                center alignment at this time.</p>\n\n            <clr-tables-vertical-demo></clr-tables-vertical-demo>\n\n            <h3 id=\"vertical-compact-non-bordered-tables\">Vertical, Compact, Non-bordered Tables</h3>\n            <clr-tables-vertical-noborder-compact-demo></clr-tables-vertical-noborder-compact-demo>\n\n            <h3 id=\"table-container-widths\">Table Container Widths</h3>\n\n            <p>Tables can exist inside grid columns.</p>\n\n            <clr-tables-width-demo></clr-tables-width-demo>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "TablesLeftcellDemo",
      "id": "component-TablesLeftcellDemo-ce8489256bb2daf2274a67f93f1d5e3b",
      "file": "src/website/src/app/documentation/demos/tables/tables-leftcell.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-leftcell-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-leftcell.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Wizard</th>\n            <th>Allegiance</th>\n            <th>Triwizard Champion?</th>\n            <th>Can Cast Fireball</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Harry</td>\n            <td>Gryffindor</td>\n            <td>Yes</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Gandalf</td>\n            <td>Hobbits</td>\n            <td>Maybe?</td>\n            <td>I don&apos;t think so...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Obi-Wan Kenobi</td>\n            <td>Republic/Rebellion</td>\n            <td>No</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Merlin</td>\n            <td>King Arthur</td>\n            <td>Probably invented the tournament</td>\n            <td>Solid maybe</td>\n        </tr>\n    </tbody>\n</table>\n`;\n\n@Component({\n  selector: 'clr-tables-leftcell-demo',\n  templateUrl: './tables-leftcell.html',\n})\nexport class TablesLeftcellDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Wizard</th>\n            <th>Allegiance</th>\n            <th class=\"hidden-xs-down\">Triwizard Champion?</th>\n            <th>Can Cast Fireball</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Harry</td>\n            <td>Gryffindor</td>\n            <td class=\"hidden-xs-down\">Yes</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Gandalf</td>\n            <td>Hobbits</td>\n            <td class=\"hidden-xs-down\">Maybe?</td>\n            <td>I don't think so...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Obi-Wan Kenobi</td>\n            <td>Republic/Rebellion</td>\n            <td class=\"hidden-xs-down\">No</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Merlin</td>\n            <td>King Arthur</td>\n            <td class=\"hidden-xs-down\">Probably invented the tournament</td>\n            <td>Solid maybe</td>\n        </tr>\n    </tbody>\n</table>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TablesMultilineDemo",
      "id": "component-TablesMultilineDemo-c100cd216280356f218be83f8d5339dc",
      "file": "src/website/src/app/documentation/demos/tables/tables-multiline.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-multiline-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-multiline.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 42
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Name</th>\n            <th>A/B</th>\n            <th class=\"left\">Comment</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Beetlejuice</td>\n            <td>B</td>\n            <td class=\"left\">...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mytzlplk</td>\n            <td>A</td>\n            <td class=\"left\">...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Q</td>\n            <td>A</td>\n            <td class=\"left\">...</td>\n        </tr>\n    </tbody>\n</table>\n`;\n\n@Component({\n  selector: 'clr-tables-multiline-demo',\n  templateUrl: './tables-multiline.html',\n})\nexport class TablesMultilineDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-lg-10 clr-col-xl-8\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Name</th>\n                    <th class=\"hidden-xs-down\">A/B</th>\n                    <th class=\"left\">Comment</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Beetlejuice</td>\n                    <td class=\"hidden-xs-down\">B</td>\n                    <td class=\"left\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                        Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Mytzlplk</td>\n                    <td class=\"hidden-xs-down\">A</td>\n                    <td class=\"left\">Excepteur sint occaecat cupidatat non proident.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Q</td>\n                    <td class=\"hidden-xs-down\">A</td>\n                    <td class=\"left\">Ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n                        pariatur.</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TablesNoborderDemo",
      "id": "component-TablesNoborderDemo-f83ce74416b1ec72a2402e0e67d7db12",
      "file": "src/website/src/app/documentation/demos/tables/tables-noborder.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-noborder-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-noborder.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<table class=\"table table-noborder\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`;\n\n@Component({\n  selector: 'clr-tables-noborder-demo',\n  templateUrl: './tables-noborder.html',\n})\nexport class TablesNoborderDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table table-noborder\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th class=\"hidden-xs-down\">Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left hidden-xs-down\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td class=\"hidden-xs-down\">Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left hidden-xs-down\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td class=\"hidden-xs-down\">Tropical island</td>\n            <td>No</td>\n            <td class=\"left hidden-xs-down\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td class=\"hidden-xs-down\">Sesame Street</td>\n            <td>No</td>\n            <td class=\"left hidden-xs-down\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td class=\"hidden-xs-down\">Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left hidden-xs-down\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TablesVerticalDemo",
      "id": "component-TablesVerticalDemo-8ee22616c3575e8e77769410507b8920",
      "file": "src/website/src/app/documentation/demos/tables/tables-vertical.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-vertical-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-vertical.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<table class=\"table table-vertical\">\n    <tbody>\n        <tr>\n            <th>Basic table</th>\n            <td>.table</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Left-aligned table cells</th>\n            <td>.left</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Tables without borders</th>\n            <td>.table-noborder</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Compact tables</th>\n            <td>.table-compact</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Vertical tables</th>\n            <td>.table-vertical</td>\n            <td>...</td>\n        </tr>\n    </tbody>\n</table>\n`;\n\n@Component({\n  selector: 'clr-tables-vertical-demo',\n  templateUrl: './tables-vertical.html',\n})\nexport class TablesVerticalDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table table-vertical\">\n    <tbody>\n        <tr>\n            <th>Basic table</th>\n            <td>.table</td>\n            <td>The classname used to apply general styling of Clarity tables to an HTML table.</td>\n        </tr>\n        <tr>\n            <th>Left-aligned table cells</th>\n            <td>.left</td>\n            <td>Use this classname on a <code class=\"clr-code\">td</code> to align its contents to the left edge of the table data cell.<br>This is not necessary for vertical tables.</td>\n        </tr>\n        <tr>\n            <th>Tables without borders</th>\n            <td>.table-noborder</td>\n            <td>This classname will remove borders between table rows as well as the border around the edge of the table.<br>Also removes the background so that the table will be transparent over the background its container has.</td>\n        </tr>\n        <tr>\n            <th>Compact tables</th>\n            <td>.table-compact</td>\n            <td>This classname changes is the height of the table rows from 36px to 24px.</td>\n        </tr>\n        <tr>\n            <th>Vertical tables</th>\n            <td>.table-vertical</td>\n            <td>This classname removes the table header and applies table header styles to the left-most column.</td>\n        </tr>\n    </tbody>\n</table>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TablesVerticalNoborderCompactDemo",
      "id": "component-TablesVerticalNoborderCompactDemo-8f2a5f5e20e699fb10a92c9d43b31e8b",
      "file": "src/website/src/app/documentation/demos/tables/tables-vertical-noborder-compact.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-vertical-noborder-compact-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-vertical-noborder-compact.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<table class=\"table table-vertical table-noborder table-compact\">\n    <tbody>\n        <tr>\n            <th>Basic table</th>\n            <td>.table</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Left-aligned table cells</th>\n            <td>.left</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Tables without borders</th>\n            <td>.table-noborder</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Compact tables</th>\n            <td>.table-compact</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Vertical tables</th>\n            <td>.table-vertical</td>\n            <td>...</td>\n        </tr>\n    </tbody>\n</table>\n`;\n\n@Component({\n  selector: 'clr-tables-vertical-noborder-compact-demo',\n  templateUrl: './tables-vertical-noborder-compact.html',\n})\nexport class TablesVerticalNoborderCompactDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table table-vertical table-noborder table-compact\">\n    <tbody>\n        <tr>\n            <th>Basic table</th>\n            <td>.table</td>\n            <td>The classname for applying general styling of Clarity tables to an HTML table.</td>\n        </tr>\n        <tr>\n            <th>Left-aligned table cells</th>\n            <td>.left</td>\n            <td>This classname on a <code class=\"clr-code\">td</code> aligns content to the left edge of the table cell.<br>This is not necessary for vertical tables.</td>\n        </tr>\n        <tr>\n            <th>Tables without borders</th>\n            <td>.table-noborder</td>\n            <td>This classname removes borders between table rows and the border around the table.<br>It also removes the background so that the table is transparent over its container background.</td>\n        </tr>\n        <tr>\n            <th>Compact tables</th>\n            <td>.table-compact</td>\n            <td>This classname changes the height of the table rows from 36px to 24px.</td>\n        </tr>\n        <tr>\n            <th>Vertical tables</th>\n            <td>.table-vertical</td>\n            <td>This classname removes the table header and applies table header styles to the left-most column.</td>\n        </tr>\n    </tbody>\n</table>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>"
    },
    {
      "name": "TablesWidthDemo",
      "id": "component-TablesWidthDemo-109c9d9f3c327b72d4c86559d13a5634",
      "file": "src/website/src/app/documentation/demos/tables/tables-width.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tables-width-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tables-width.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 106
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Language</th>\n                    <th>Foo</th>\n                    <th>Bar</th>\n                    <th>Baz</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Pig Latin</td>\n                    <td>Oofay</td>\n                    <td>Arbay</td>\n                    <td>Azbay</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Bizarro</td>\n                    <td>Bar</td>\n                    <td>Foo</td>\n                    <td>Bang</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Hodor</td>\n                    <td>Hodor</td>\n                    <td>Hodor</td>\n                    <td>Hodor</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Color</th>\n                    <th>R</th>\n                    <th>G</th>\n                    <th>B</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Black</td>\n                    <td>0</td>\n                    <td>0</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">New Black</td>\n                    <td>255</td>\n                    <td>165</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Pantone 292</td>\n                    <td>98</td>\n                    <td>168</td>\n                    <td>229</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Name</th>\n                    <th class=\"left\">Weakness</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Frankenstein</td>\n                    <td class=\"left\">Fire</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Dracula</td>\n                    <td class=\"left\">Garlic</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Wolfman</td>\n                    <td class=\"left\">Squirrels</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-tables-width-demo',\n  templateUrl: './tables-width.html',\n})\nexport class TablesWidthDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Language</th>\n                    <th>Foo</th>\n                    <th>Bar</th>\n                    <th>Baz</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Pig Latin</td>\n                    <td>Oofay</td>\n                    <td>Arbay</td>\n                    <td>Azbay</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Bizarro</td>\n                    <td>Bar</td>\n                    <td>Foo</td>\n                    <td>Bang</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Hodor</td>\n                    <td>Hodor</td>\n                    <td>Hodor</td>\n                    <td>Hodor</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Color</th>\n                    <th>R</th>\n                    <th>G</th>\n                    <th>B</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Black</td>\n                    <td>0</td>\n                    <td>0</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">New Black</td>\n                    <td>255</td>\n                    <td>165</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Pantone 292</td>\n                    <td>98</td>\n                    <td>168</td>\n                    <td>229</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Name</th>\n                    <th class=\"left\">Weakness</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Frankenstein</td>\n                    <td class=\"left\">Fire</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Dracula</td>\n                    <td class=\"left\">Garlic</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Wolfman</td>\n                    <td class=\"left\">Squirrels</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TabsAngularDemo",
      "id": "component-TabsAngularDemo-80356669ef400b2c90559069726343fd",
      "file": "src/website/src/app/documentation/demos/tabs/tabs-angular.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-tabs-angular",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tabs-angular.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cloudActive",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "dashboardActive",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "infrastructureActive",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "managementActive",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>Dashboard</button>\n        <ng-template [(clrIfActive)]=\"dashboardActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Management</button>\n        <ng-template [(clrIfActive)]=\"managementActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Cloud</button>\n        <ng-template [(clrIfActive)]=\"cloudActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Infrastructure</button>\n        <ng-template [(clrIfActive)]=\"infrastructureActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n</clr-tabs>\n`;\n\n@Component({\n  selector: 'clr-modal-tabs-angular',\n  templateUrl: './tabs-angular.demo.html',\n})\nexport class TabsAngularDemo {\n  example = EXAMPLE;\n  dashboardActive = true;\n  managementActive = false;\n  cloudActive = false;\n  infrastructureActive = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <clr-tabs>\n        <clr-tab>\n            <button clrTabLink>Dashboard</button>\n            <ng-template [(clrIfActive)]=\"dashboardActive\">\n                <clr-tab-content>\n                    <p>Content for Dashboard tab. Here is a <a href=\"javascript://\">link</a> that can be accessed via clicking or through keyboard via tabbing.</p>\n                </clr-tab-content>\n            </ng-template>\n        </clr-tab>\n\n        <clr-tab>\n            <button clrTabLink>Management</button>\n            <ng-template [(clrIfActive)]=\"managementActive\">\n                <clr-tab-content>\n                    <p>Content for Management tab.</p>\n                </clr-tab-content>\n            </ng-template>\n        </clr-tab>\n\n        <clr-tab>\n            <button clrTabLink>Cloud</button>\n            <ng-template [(clrIfActive)]=\"cloudActive\">\n                <clr-tab-content>\n                    <p>Content for Cloud tab.</p>\n                </clr-tab-content>\n            </ng-template>\n        </clr-tab>\n\n        <clr-tab>\n            <button clrTabLink>Infrastructure</button>\n            <ng-template [(clrIfActive)]=\"infrastructureActive\">\n                <clr-tab-content>\n                    <p>Content for Infrastructure tab.</p>\n                </clr-tab-content>\n            </ng-template>\n        </clr-tab>\n    </clr-tabs>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TabsAngularOverflowDemo",
      "id": "component-TabsAngularOverflowDemo-b0673fdbc12c74f2e9011e6fc2de98dd",
      "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-overflow.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-tabs-angular-overflow",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tabs-angular-overflow.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "inOverflow",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>Dashboard</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Management</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Cloud</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink [clrTabLinkInOverflow]=\"inOverflow\">Settings</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n    \n    <clr-tab>\n        <button clrTabLink [clrTabLinkInOverflow]=\"inOverflow\">Alerts</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`;\n\n@Component({\n  selector: 'clr-modal-tabs-angular-overflow',\n  templateUrl: './tabs-angular-overflow.demo.html',\n})\nexport class TabsAngularOverflowDemo {\n  example = EXAMPLE;\n  inOverflow = true;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <clr-tabs>\n        <clr-tab>\n            <button clrTabLink id=\"link1\">Dashboard</button>\n            <clr-tab-content id=\"content1\" *clrIfActive>\n                <p>Content for Dashboard tab. Here is a <a href=\"javascript://\">link</a> that can be accessed via\n                    clicking or through keyboard via tabbing.</p>\n            </clr-tab-content>\n        </clr-tab>\n        <clr-tab>\n            <button clrTabLink>Management</button>\n            <clr-tab-content *clrIfActive>\n                <p>Content for Management tab.</p>\n            </clr-tab-content>\n        </clr-tab>\n        <clr-tab>\n            <button clrTabLink [clrTabLinkInOverflow]=\"inOverflow\">Cloud</button>\n            <clr-tab-content *clrIfActive>\n                <p>Content for Cloud tab.</p>\n            </clr-tab-content>\n        </clr-tab>\n        <clr-tab>\n            <button clrTabLink [clrTabLinkInOverflow]=\"inOverflow\">Settings</button>\n            <clr-tab-content *clrIfActive>\n                <p>Content for Settings tab.</p>\n            </clr-tab-content>\n        </clr-tab>\n    </clr-tabs>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TabsAngularSimpleDemo",
      "id": "component-TabsAngularSimpleDemo-f77d0366d8e59002fd01d625055bcd0d",
      "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-simple.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-modal-tabs-angular-simple",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tabs-angular-simple.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink id=\"link1\">Tab1</button>\n        <clr-tab-content id=\"content1\" *clrIfActive>\n        ...\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>Tab2</button>\n        <clr-tab-content *clrIfActive=\"true\">\n        ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`;\n\n@Component({\n  selector: 'clr-modal-tabs-angular-simple',\n  templateUrl: './tabs-angular-simple.demo.html',\n})\nexport class TabsAngularSimpleDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <clr-tabs>\n        <clr-tab>\n            <button clrTabLink id=\"link1\">Dashboard</button>\n            <clr-tab-content id=\"content1\" *clrIfActive>\n                <p>Content for Dashboard tab. Here is a <a href=\"javascript://\">link</a> that can be accessed via\n                    clicking or through keyboard via tabbing.</p>\n            </clr-tab-content>\n        </clr-tab>\n        <clr-tab>\n            <button clrTabLink>Management</button>\n            <clr-tab-content *clrIfActive>\n                <p>Content for Management tab.</p>\n            </clr-tab-content>\n        </clr-tab>\n        <clr-tab>\n            <button clrTabLink>Cloud</button>\n            <clr-tab-content *clrIfActive>\n                <p>Content for Cloud tab.</p>\n            </clr-tab-content>\n        </clr-tab>\n    </clr-tabs>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TabsAngularVerticalDemo",
      "id": "component-TabsAngularVerticalDemo-36acae3bbb4aa6a958e2fe7ab2a7c240",
      "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-vertical.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tabs-angular-vertical",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tabs-angular-vertical.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<clr-tabs clrLayout=\"vertical\">\n    <clr-tab>\n        <button clrTabLink id=\"link1\">Tab1</button>\n        <clr-tab-content id=\"content1\" *clrIfActive>\n        ...\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>Tab2</button>\n        <clr-tab-content *clrIfActive=\"true\">\n        ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`;\n\n@Component({\n  selector: 'clr-tabs-angular-vertical',\n  templateUrl: './tabs-angular-vertical.demo.html',\n})\nexport class TabsAngularVerticalDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <clr-tabs clrLayout=\"vertical\">\n        <clr-tab>\n            <button clrTabLink id=\"link1\">Dashboard</button>\n            <clr-tab-content id=\"content1\" *clrIfActive>\n                Content for Dashboard tab. Here is a <a href=\"javascript://\">link</a> that can be accessed via\n                    clicking or through keyboard via tabbing.\n            </clr-tab-content>\n        </clr-tab>\n        <clr-tab>\n            <button clrTabLink>Management</button>\n            <clr-tab-content *clrIfActive>\n                Content for Management tab.\n            </clr-tab-content>\n        </clr-tab>\n        <clr-tab>\n            <button clrTabLink>Cloud</button>\n            <clr-tab-content *clrIfActive>\n                Content for Cloud tab.\n            </clr-tab-content>\n        </clr-tab>\n    </clr-tabs>\n</div>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TabsDemo",
      "id": "component-TabsDemo-836196dde0d5846e83a8afb6244b3d4e",
      "file": "src/website/src/app/documentation/demos/tabs/tabs.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tabs-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tabs.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-tabs-demo',\n  templateUrl: './tabs.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class TabsDemo extends ClarityDocComponent {\n  constructor() {\n    super('tabs');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"tabs-divide-content-into-separate-views-which-users-navigate-between\">Tabs\n            divide content into separate views which users navigate between.</h5>\n\n        <div id=\"code-examples\">\n            <h4 id=\"static\">Static</h4>\n\n            <p>\n                The following is a static example of tabs with their associated sections.\n                You cannot switch between tabs in this static demo because it does not\n                contain the JavaScript to handle this behavior.\n            </p>\n            <p>\n                The active tab should have the additional class <code class=\"clr-code\">active</code>.\n                The stylesheet will hide all the section elements where attribute <code\n                class=\"clr-code\">aria-hidden</code>\n                is set to <code class=\"clr-code\">true</code>.\n            </p>\n\n            <clr-tabs-demo-static></clr-tabs-demo-static>\n\n            <h6 id=\"vertical\">Vertical Tabs</h6>\n\n            <p>If you'd like to use vertical tabs add\n                <code class=\"clr-code\">tabs-vertical</code> class to the container.</p>\n\n            <clr-tabs-vertical-demo-static></clr-tabs-vertical-demo-static>\n\n            <h6 id=\"accessibility\">Accessibility</h6>\n\n            <p>The active tab should have the attribute <code class=\"clr-code\">aria-selected</code>\n                set to <code class=\"clr-code\">true</code>, and the others to false.</p>\n\n            <p>The active panel associated with the active tab should have the attribute <code\n                class=\"clr-code\">aria-hidden</code> set to <code class=\"clr-code\">true</code>,\n                and the others <code class=\"clr-code\">to false</code>.</p>\n\n            <p>In addition, each tab should have an aria-controls attribute set to the id of the\n                matching panel and each panel should have an <code class=\"clr-code\">aria-labelledby</code>\n                attribute set to the id of the tab associated with the panel.</p>\n\n            <h4 id=\"angular-component\">Angular Component</h4>\n\n            <h5>Simple Tabs</h5>\n            <p>\n                The tabs component uses the <code class=\"clr-code\">*clrIfActive</code> structural\n                directive to lazy load the content of an active tab. For simple cases, using the\n                microsyntax as shown below would suffice.\n            </p>\n            <clr-modal-tabs-angular-simple></clr-modal-tabs-angular-simple>\n\n            <h5>Tabs with two-way binding</h5>\n            <p>\n                If you'd like to use two-way binding on the active state of the tabs, we recommend that\n                you use the de-sugared syntax of the structural directive by wrapping it in <code\n                class=\"clr-code\">ng-template</code> as shown below.\n            </p>\n\n            <clr-modal-tabs-angular></clr-modal-tabs-angular>\n\n            <h5>Tab Overflow</h5>\n\n            <p>\n                Tab overflow is used when the tab group is larger than its containing space, or used to\n                preserve space. The overflow is configurable so you can assign tabs to the dropdown menu.\n            </p>\n\n            <p>\n                Tab overflow is shown below as an ellipsis button in the tab group and is the last\n                position to the right. Clicking on the ellipsis will show the overflow dropdown menu.\n            </p>\n\n            <p>\n                We recommend that a overflow dropdown have at least two options in it. We also recommend\n                that you test out scenarios with tab labels that may vary in length or when translated to\n                another language to make sure there is enough room for them.\n            </p>\n\n            <clr-modal-tabs-angular-overflow></clr-modal-tabs-angular-overflow>\n\n            <h5>Vertical Tabs</h5>\n            <p>If you'd like to use vertical tabs add\n                    <code class=\"clr-code\">clrLayout=\"vertical\"</code> parameter to the\n                    <code class=\"clr-code\">clr-tabs</code> component.</p>\n            <clr-tabs-angular-vertical></clr-tabs-angular-vertical>\n\n            <h6 id=\"accessibility-1\">Accessibility</h6>\n\n            <p>\n                All attributes associated with accessibility (<code class=\"clr-code\">aria-controls</code>,\n                <code class=\"clr-code\">aria-selected</code>, <code class=\"clr-code\">aria-hidden</code>,\n                <code class=\"clr-code\">aria-labelledby</code>, <code class=\"clr-code\">role</code>)\n                are automatically created and managed by the angular component.\n            </p>\n\n            <h4 id=\"summary-of-options\">Summary of Options</h4>\n\n            <h5>Tabs Component (clrTabs)</h5>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrLayout]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>&lt;'horizontal', 'vertical'&gt;</div>\n                        <div class=\"hidden-sm-up\">Default: 'horizontal'</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">&lt;'horizontal', 'vertical'&gt;</td>\n                    <td class=\"hidden-xs-down\">'horizontal'</td>\n                    <td class=\"left\">\n                        If set to 'vertical', will change tabs layout to vertical.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h5>Tab Link Directive (clrTabLink)</h5>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[id]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>&lt;any valid id for html element&gt;</div>\n                        <div class=\"hidden-sm-up\">Default: auto-generated</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">&lt;any valid id for html element&gt;</td>\n                    <td class=\"hidden-xs-down\">auto-generated</td>\n                    <td class=\"left\">\n                        If explicitly set, will assign the set id as the id for the element.\n                        If not set, the component will auto-generate the id.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h5>Tab Content (clr-tab-content)</h5>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrTabLinkInOverflow]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>true, false</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">&lt;true, false&gt;</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        If true, then this tab link will go into the overflow section of the tabs.\n                    </td>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[id]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>&lt;any valid id for html element&gt;</div>\n                        <div class=\"hidden-sm-up\">Default: auto-generated</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">&lt;any valid id for html element&gt;</td>\n                    <td class=\"hidden-xs-down\">auto-generated</td>\n                    <td class=\"left\">\n                        Used on &lt;clr-tab-content&gt;. If explicitly set, will assign the set id as the id for the\n                        element. If not set, the component will auto-generate the id.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h5>Directives used along with clr-tab-content</h5>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[(clrIfActive)]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>true, false</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">&lt;true, false&gt;</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Two-way binding on the state of the tab content. The content of the active\n                        tab will lazily load when set to true, and destroy it when set to false.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>Use tabs for alternate views within the <a routerLink=\"../../sidenav\">sidenav</a>\n                or main content area.</p>\n\n            <p>Don’t use tabs to break user interactions into a series of steps. Serial workflows are\n                best presented in a <a routerLink=\"../../wizards\">wizard</a>.</p>\n\n            <p>Avoid using tabs in cards and modals.</p>\n\n            <h3 id=\"presentation\">Presentation</h3>\n\n            <p>Tabs appear in a single, non-scrollable row, above their content. The width of each tab\n                is dependent on its label.</p>\n\n            <p>To ensure that all tabs appear in the container, avoid using more than seven tabs and\n                limit labels to one or two words.</p>\n\n            <h3 id=\"content\">Content</h3>\n\n            <p>While the content within tabs is flexible, follow these guidelines for organization and\n                presentation:</p>\n\n            <ul class=\"list\">\n                <li>Ensure that the content in each view is independent of the content in other views.</li>\n                <li>Don’t force users to navigate back and forth to compare data–keep such content\n                    in the same view.</li>\n                <li>Avoid cross-linking between tabs.</li>\n                <li>If the content within a view is broad, divide it into subsections.</li>\n            </ul>\n\n            <h3 id=\"labels\">Labels</h3>\n\n            <ul class=\"list\">\n                <li>Ensure that the labels show a clear relationship between views.</li>\n                <li>Favor nouns over verbs, for example, Settings, Permissions, and Performance.</li>\n                <li>Avoid generic labels such as General or Advanced.</li>\n                <li>Use title-style caps.</li>\n                <li>Avoid using icons in labels.</li>\n            </ul>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "TabsStaticDemo",
      "id": "component-TabsStaticDemo-cb831ebfee847d2350418afc68f02bf1",
      "file": "src/website/src/app/documentation/demos/tabs/tabs-static.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tabs-demo-static",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tabs-static.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab1\" class=\"btn btn-link nav-link active\" aria-controls=\"panel1\"\n                aria-selected=\"true\" type=\"button\">Dashboard</button>\n    </li>\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab2\" class=\"btn btn-link nav-link\" aria-controls=\"panel2\"\n                aria-selected=\"false\" type=\"button\">Management</button>\n    </li>\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab3\" class=\"btn btn-link nav-link\" aria-controls=\"panel3\"\n                aria-selected=\"false\" type=\"button\">Cloud</button>\n    </li>\n</ul>\n<section id=\"panel1\" role=\"tabpanel\" aria-labelledby=\"tab1\">\n    ...\n</section>\n<section id=\"panel2\" role=\"tabpanel\" aria-labelledby=\"tab2\" aria-hidden=\"true\">\n    ...\n</section>\n<section id=\"panel3\" role=\"tabpanel\" aria-labelledby=\"tab3\" aria-hidden=\"true\">\n    ...\n</section>\n`;\n\n@Component({\n  selector: 'clr-tabs-demo-static',\n  templateUrl: './tabs-static.demo.html',\n})\nexport class TabsStaticDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tabDashboard\" class=\"btn btn-link nav-link active\" aria-controls=\"panelDashboard\" aria-selected=\"true\" type=\"button\">Dashboard</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tabManagement\" class=\"btn btn-link nav-link\" aria-controls=\"panelManagement\" aria-selected=\"false\" type=\"button\">Management</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tabCloud\" class=\"btn btn-link nav-link\" aria-controls=\"panelCloud\" aria-selected=\"false\" type=\"button\">Cloud</button>\n        </li>\n    </ul>\n    <section id=\"panelDashboard\" role=\"tabpanel\" aria-labelledby=\"tabDashboard\">\n        <p>You cannot switch between tabs in this static demo because it does not contain the JavaScript to handle this behavior. The demo is here to show the look of tabs and the DOM structure.</p>\n    </section>\n    <section id=\"panelManagement\" role=\"tabpanel\" aria-labelledby=\"tabManagement\" aria-hidden=\"true\">\n        <p>Content 2</p>\n    </section>\n    <section id=\"panelCloud\" role=\"tabpanel\" aria-labelledby=\"tabCloud\" aria-hidden=\"true\">\n        <p>Content 3</p>\n    </section>\n</div>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TabsStaticVerticalDemo",
      "id": "component-TabsStaticVerticalDemo-3885eeda745568ffeb17222478ccda00",
      "file": "src/website/src/app/documentation/demos/tabs/tabs-static-vertical.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tabs-vertical-demo-static",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tabs-static-vertical.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<div class=\"tabs-vertical\">\n    <ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab1\" class=\"btn btn-link nav-link active\" aria-controls=\"panel1\"\n                    aria-selected=\"true\" type=\"button\">Dashboard</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab2\" class=\"btn btn-link nav-link\" aria-controls=\"panel2\"\n                    aria-selected=\"false\" type=\"button\">Management</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab3\" class=\"btn btn-link nav-link\" aria-controls=\"panel3\"\n                    aria-selected=\"false\" type=\"button\">Cloud</button>\n        </li>\n    </ul>\n    <section id=\"panel1\" role=\"tabpanel\" aria-labelledby=\"tab1\">\n        ...\n    </section>\n    <section id=\"panel2\" role=\"tabpanel\" aria-labelledby=\"tab2\" aria-hidden=\"true\">\n        ...\n    </section>\n    <section id=\"panel3\" role=\"tabpanel\" aria-labelledby=\"tab3\" aria-hidden=\"true\">\n        ...\n    </section>\n</div>\n`;\n\n@Component({\n  selector: 'clr-tabs-vertical-demo-static',\n  templateUrl: './tabs-static-vertical.demo.html',\n})\nexport class TabsStaticVerticalDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example tabs-vertical\">\n    <ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tabDashboard\" class=\"btn btn-link nav-link active\" aria-controls=\"panelDashboard\" aria-selected=\"true\" type=\"button\">Dashboard</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tabManagement\" class=\"btn btn-link nav-link\" aria-controls=\"panelManagement\" aria-selected=\"false\" type=\"button\">Management</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tabCloud\" class=\"btn btn-link nav-link\" aria-controls=\"panelCloud\" aria-selected=\"false\" type=\"button\">Cloud</button>\n        </li>\n    </ul>\n    <section id=\"panelDashboard\" role=\"tabpanel\" aria-labelledby=\"tabDashboard\">\n        You cannot switch between tabs in this static demo because it does not contain the JavaScript to handle this behavior. The demo is here to show the look of tabs and the DOM structure.\n    </section>\n    <section id=\"panelManagement\" role=\"tabpanel\" aria-labelledby=\"tabManagement\" aria-hidden=\"true\">\n        Content 2\n    </section>\n    <section id=\"panelCloud\" role=\"tabpanel\" aria-labelledby=\"tabCloud\" aria-hidden=\"true\">\n        Content 3\n    </section>\n</div>\n\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TertiaryButtonDemo",
      "id": "component-TertiaryButtonDemo-66d0bd5ce56df4c2cd0976d91df040b3",
      "file": "src/website/src/app/documentation/demos/buttons/tertiary-button.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-buttons-demo-tertiary-button",
      "styleUrls": ["./buttons.demo.scss"],
      "styles": [],
      "templateUrl": ["./tertiary-button.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<button class=\"btn btn-link\">Tertiary</button>\n<button class=\"btn btn-link\" disabled>Disabled</button>\n`;\n\n@Component({\n  selector: 'clr-buttons-demo-tertiary-button',\n  templateUrl: './tertiary-button.html',\n  styleUrls: ['./buttons.demo.scss'],\n})\nexport class TertiaryButtonDemo {\n  htmlExample = HTML_EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.btn-example {\n  background: $clr-color-neutral-900;\n  padding: $clr_baselineRem_1;\n}\n",
          "styleUrl": "./buttons.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Tertiary Button</h4>\n<button class=\"btn btn-link\">Tertiary</button>\n<button class=\"btn btn-link\" disabled>Disabled</button>\n<clr-code-snippet [clrCode]=\"htmlExample\"></clr-code-snippet>\n"
    },
    {
      "name": "TextareaDemo",
      "id": "component-TextareaDemo-46edcf83b6625bc4fd7c1a1b92f7490c",
      "file": "src/website/src/app/documentation/demos/textarea/textarea.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-textarea-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./textarea.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleOne",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "exampleThree",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "exampleTwo",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "ngBasic",
          "defaultValue": "NgBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "ngHelpers",
          "defaultValue": "NgHelpers",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "ngLabel",
          "defaultValue": "NgLabel",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "uiBasic",
          "defaultValue": "UiBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "uiError",
          "defaultValue": "UiError",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "uiFull",
          "defaultValue": "UiFull",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nimport * as UiBasic from 'raw-loader!./ui/basic.html';\nimport * as UiFull from 'raw-loader!./ui/full.html';\nimport * as UiError from 'raw-loader!./ui/error.html';\n\nimport * as NgBasic from 'raw-loader!./ng/basic.html';\nimport * as NgLabel from 'raw-loader!./ng/label.html';\nimport * as NgHelpers from 'raw-loader!./ng/helpers.html';\n\n@Component({\n  selector: 'clr-textarea-demo',\n  templateUrl: './textarea.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class TextareaDemo extends ClarityDocComponent {\n  constructor() {\n    super('textarea');\n  }\n\n  exampleOne = '';\n  exampleTwo = '';\n  exampleThree = '';\n\n  uiBasic: any = UiBasic;\n  uiFull: any = UiFull;\n  uiError: any = UiError;\n\n  ngBasic: any = NgBasic;\n  ngLabel: any = NgLabel;\n  ngHelpers: any = NgHelpers;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 25
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"summary\">\n            Textareas are a popular form control for long form text input, and Clarity supports both a CSS only and Angular component. You may wish to review the general <a routerLink=\"../../forms\">forms</a> documentation about form controls.\n        </h5>\n\n        <h2 id=\"forms-code-samples\">Angular Textarea Component</h2>\n\n        <p>If you are using Angular, the recommended approach is to always use the <code class=\"clr-code\">ClrTextarea</code> directive on your textareas to help manage the form control. By using <code class=\"clr-code\">ClrTextarea</code>, you'll automatically be able to leverage built in validation, helper text, and layout features in forms.</p>\n\n        <h4>Basic textarea</h4>\n\n        <p>This is the most basic way to create a textarea inside of a form. This is only if you don't have a need for a label or validation. You need to add <code class=\"clr-code\">clrTextarea</code> to your textarea to wire up the directive. Notice, it is not necessary to add <code class=\"clr-code\">type=\"text\"</code> as it is handled automatically. It will only work if you have the control wired up with either a template driven form or reactive form.</p>\n\n        <p></p>\n\n        <form clrForm>\n            <textarea clrTextarea [(ngModel)]=\"exampleOne\" name=\"description\"></textarea>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngBasic\"></clr-code-snippet>\n\n        <h4>Labels</h4>\n\n        <p>For anything beyond a standalone textarea field, you'll need to wrap it with the <code class=\"clr-code\">ClrTextareaContainer</code> component. This is required to contain all of the logic and validation details for the individual textarea control.</p>\n\n        <p>Then you can add a <code class=\"clr-code\">label</code> element and it will automatically get laid out correctly in the form.</p>\n\n        <p></p>\n\n        <form clrForm>\n            <clr-textarea-container>\n                <label>Description</label>\n                <textarea clrTextarea [(ngModel)]=\"exampleTwo\" name=\"description\"></textarea>\n            </clr-textarea-container>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngLabel\"></clr-code-snippet>\n\n        <h4>Helper and error messages</h4>\n\n        <p>The textarea form control wires up with the validations placed on it, such as <code class=\"clr-code\">required</code> or even custom built validators in Angular. Under the hood, it looks at the <code class=\"clr-code\">NgControl</code> values to determine the control validity, and display the helper text or error message accordingly.</p>\n\n        <p>Note: the validation only displays an error after the user has left focus on a control. This is for better UX where the user doesn't see an error while they are still typing.</p>\n\n        <p></p>\n\n        <form clrForm>\n            <clr-textarea-container>\n                <label>Label</label>\n                <textarea clrTextarea [(ngModel)]=\"exampleThree\" name=\"description\" required></textarea>\n                <clr-control-helper>Helper text</clr-control-helper>\n                <clr-control-error>You must provide a description!</clr-control-error>\n            </clr-textarea-container>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"ngHelpers\"></clr-code-snippet>\n\n\n\n\n        <h2 id=\"css-component\">CSS Input Component</h2>\n\n        <p>Inputs can be used without Angular, but without some of the automatic interactivity. If you intend to create your own components, here are the basic features you'll need to build out.</p>\n\n        <h4>Basic input</h4>\n\n        <p>It is possible to display the input by simply having the input as a standalone element not inside of a form. This may be useful in simple cases where you don't need a full form and just an inline input.</p>\n\n        <p></p>\n\n        <form class=\"clr-form\">\n            <div class=\"clr-control-container\">\n                <textarea placeholder=\"Describe something\" class=\"clr-textarea\"></textarea>\n            </div>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiBasic\"></clr-code-snippet>\n\n        <h4>Full input display</h4>\n\n        <p>Each form control has a <code class=\"clr-code\">.clr-form-control</code> wrapper, as well as a specific DOM structure necessary to layout the form control as desired. This works with all layout options as well without needing to change the DOM structure in any way.</p>\n\n        <p></p>\n\n        <form class=\"clr-form\">\n            <div class=\"clr-form-control\">\n                <label for=\"textarea-basic\" class=\"clr-control-label\">Basic textarea</label>\n                <div class=\"clr-control-container\">\n                    <div class=\"clr-textarea-wrapper\">\n                        <textarea id=\"textarea-basic\" placeholder=\"Enter value here\" class=\"clr-textarea\"></textarea>\n                        <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    </div>\n                    <span class=\"clr-subtext\">Helper Text</span>\n                </div>\n            </div>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiFull\"></clr-code-snippet>\n\n        <h4>Error state</h4>\n\n        <p>To signify an error state, you need to add the <code class=\"clr-code\">.clr-error</code> class to the <code class=\"clr-code\">.clr-control-container</code> element. This will show the <code class=\"clr-code\">.clr-validate-icon</code> and turn the <code class=\"clr-code\">.clr-subtext</code> message to red. If you have helper text that needs to change to error content, you'll have to handle the hiding and showing of that content inside of the <code class=\"clr-code\">.clr-subtext</code> element.</p>\n\n        <p></p>\n\n        <form class=\"clr-form\">\n            <div class=\"clr-form-control\">\n                <label for=\"textarea-basic-error\" class=\"clr-control-label\">Basic textarea, error</label>\n                <div class=\"clr-control-container clr-error\">\n                <div class=\"clr-textarea-wrapper\">\n                    <textarea id=\"textarea-basic-error\" placeholder=\"Enter value here\" class=\"clr-textarea\"></textarea>\n                    <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n                </div>\n                <span class=\"clr-subtext\">Helper Text</span>\n                </div>\n            </div>\n        </form>\n\n        <p></p>\n\n        <clr-code-snippet [clrCode]=\"uiError\"></clr-code-snippet>\n\n\n\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Design Guidelines</h3>\n\n            <div class=\"alert alert-info\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            The UX design guidelines documentation is currently a work in progress, and will be updated when they are ready.\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"accessibility-guidelines\">\n            <h2 id=\"accessibility\">Accessibility</h2>\n\n            <p>\n                For applications that use the <code class=\"clr-code\">ClrTextarea</code> directive and the associated\n                <code class=\"clr-code\">ClrTextarea</code> component there is built in support that adds accessible\n                behavior to the control and its form. This behavior includes:\n            </p>\n            <p></p>\n            <ol>\n                <li>\n                    Programmatically associating the correct label <code class=\"clr-code\">for</code>\n                    attribute with the <code class=\"clr-code\">id</code> of the input</li>\n                <li>\n                    Automatic wiring up of the <code class=\"clr-code\">aria-describedby</code> behavior with associated\n                    <code class=\"clr-code\">clr-control-error</code> elements\n                </li>\n                <li>\n                    An <code class=\"clr-code\">aria-live</code> region that can notify screen readers about changes in\n                    the control error state\n                </li>\n                <li>\n                    Adds the label to a general form summary for screen readers when the control is in an error state\n                    after a form submit\n                </li>\n            </ol>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "ThemesDemo",
      "id": "component-ThemesDemo-7fab384864783076a5bdaa5f8de0f265",
      "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-themes-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./themes.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "uiCustomClarityDarkScssFile",
          "defaultValue": "UI_CUSTOM_CLARITY_DARK_SCSS_FILE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 83,
          "modifierKind": [114]
        },
        {
          "name": "uiCustomClarityDarkThemeScssFile",
          "defaultValue": "UI_CUSTOM_CLARITY_DARK_THEME_SCSS_FILE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 81,
          "modifierKind": [114]
        },
        {
          "name": "uiCustomClarityLightScssFile",
          "defaultValue": "UI_CUSTOM_CLARITY_LIGHT_SCSS_FILE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 82,
          "modifierKind": [114]
        },
        {
          "name": "uiCustomClarityLightThemeScssFile",
          "defaultValue": "UI_CUSTOM_CLARITY_LIGHT_THEME_SCSS_FILE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 80,
          "modifierKind": [114]
        },
        {
          "name": "uiNodeImports",
          "defaultValue": "UI_NODE_IMPORTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 78,
          "modifierKind": [114]
        },
        {
          "name": "uiNoNodeImports",
          "defaultValue": "UI_NO_NODE_IMPORTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 84,
          "modifierKind": [114]
        },
        {
          "name": "uiWebpackImports",
          "defaultValue": "UI_WEBPACK_IMPORTS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 79,
          "modifierKind": [114]
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nconst UI_NO_NODE_IMPORTS = `\n\"styles\": [\n      ...\n      \"./node_modules/@clr/icons/clr-icons.min.css\",\n      ...\n  ]\n`;\n\nconst UI_CUSTOM_CLARITY_DARK_SCSS_FILE = `\n@import \"../node_modules/@clr/ui/src/utils/theme.dark.clarity\"; // Overwrites with dark theme\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`;\n\nconst UI_CUSTOM_CLARITY_DARK_THEME_SCSS_FILE = `\n@import \"../node_modules/@clr/ui/src/utils/theme.dark.clarity\"; // Dark theme variables\n\n// Your Application Theme File\n@import \"./theme.scss\";\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`;\n\nconst UI_CUSTOM_CLARITY_LIGHT_SCSS_FILE = `\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`;\n\nconst UI_CUSTOM_CLARITY_LIGHT_THEME_SCSS_FILE = `\n// Your Application Theme File\n@import \"./theme.scss\";\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`;\n\nconst UI_NODE_IMPORTS = `\n\"styles\": [\n      ...\n      \"../node_modules/@clr/icons/clr-icons.min.css\",\n      \"../node_modules/@clr/ui/clr-ui-dark.min.css\",\n      ...\n  ]\n`;\n\nconst UI_WEBPACK_IMPORTS = `\n  \"entry\": {\n    \"main\": [\n      \"./src/main.ts\"\n    ],\n    \"styles\": [\n      \"./node_modules/@clr/icons/clr-icons.min.css\",\n      \"./node_modules/@clr/ui/clr-ui-dark.min.css\",\n      \"./src/styles.css\"\n    ]\n  },\n`;\n\n@Component({\n  selector: 'clr-themes-demo',\n  templateUrl: './themes.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class ThemesDemo extends ClarityDocComponent {\n  public uiNodeImports = UI_NODE_IMPORTS;\n  public uiWebpackImports = UI_WEBPACK_IMPORTS;\n  public uiCustomClarityLightThemeScssFile = UI_CUSTOM_CLARITY_LIGHT_THEME_SCSS_FILE;\n  public uiCustomClarityDarkThemeScssFile = UI_CUSTOM_CLARITY_DARK_THEME_SCSS_FILE;\n  public uiCustomClarityLightScssFile = UI_CUSTOM_CLARITY_LIGHT_SCSS_FILE;\n  public uiCustomClarityDarkScssFile = UI_CUSTOM_CLARITY_DARK_SCSS_FILE;\n  public uiNoNodeImports = UI_NO_NODE_IMPORTS;\n\n  constructor() {\n    super('themes');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 84
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMWare, Inc. All Rights Reserved.\n  ~ This software is released under MIT License.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"a-signpost-description\">Themes help you customize the look and\n            feel of your application.</h5>\n        <div id=\"design-guidelines\">\n            <h3>Establish your brand with Clarity</h3>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <img src=\"assets/images/documentation/themes/theme-branding.svg\" alt=\"Color Theming\"\n                             class=\"clrweb-Img\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            Match a company or client’s unique brand identity with <strong>color theming</strong> at\n                            <strong>many different levels of granularity</strong> allowing for customization at an\n                            application or\n                            component level.\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <img src=\"assets/images/documentation/themes/theme-icons.svg\" alt=\"Clarity Icons API\"\n                             class=\"clrweb-Img\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <strong>Font customization</strong> and the <a href=\"/icons/api\">Clarity Icons API</a>\n                            offer the\n                            power to reinforce identity at the most fundamental levels of user experience.\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <img src=\"assets/images/documentation/themes/theme-info.svg\" alt=\"Theme information density\"\n                             class=\"clrweb-Img\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            Depending on users’ expectations, different applications may require different degrees of\n                            <strong>information density</strong>. Clarity themes can be adjusted to make an application\n                            as <strong>sparse or compact</strong> as it needs to be.\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <h3>Default Themes</h3>\n            <p class=\"p1\">\n                Clarity offers two default themes — light and dark. These themes can be used without modification to\n                optimize user experience or they can be used as a guideline for creating custom themes in Clarity.\n            </p>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <img src=\"assets/images/documentation/themes/theme-light.svg\" alt=\"Light Theme\"\n                             class=\"clrweb-Img\">\n                        <h6>Light Theme</h6>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            Light theme is Clarity’s default. It is best suited to <strong>content-rich\n                            applications</strong>\n                            where users will be working with the application in <strong>well-lit conditions</strong> for\n                            brief periods of time throughout the day. Light theme can help prevent eye strain in\n                            applications where a user is expected to <strong>read a large amount of content</strong> —\n                            like documentation or a blog.\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <img src=\"assets/images/documentation/themes/theme-dark.svg\" alt=\"Dark Theme\"\n                             class=\"clrweb-Img\">\n                        <h6>Dark Theme</h6>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            Dark theme is best suited for applications that are <strong>content-sparse, yet highly\n                            interactive</strong>. A dark theme can help with eye strain if a user works with an\n                            application over a long span of time but in a way that requires <strong>focus but not a\n                            great\n                            amount of reading</strong>.\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <h3>Theme Guidelines</h3>\n            <p class=\"p1\">\n                Themes offer a great deal of flexibility — which can be both a good and bad thing. The Clarity team has\n                put continued effort towards <strong>accessibility</strong> and the intentional\n                <strong>use of color</strong> so that our end users can add great value to their products with minimal\n                investment.\n            </p>\n            <p class=\"p1\">\n                <strong>But theming can put some of those benefits at risk</strong>. Please review the following\n                guidelines\n                before building a custom theme.\n            </p>\n            <h5>Use color responsibly</h5>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <p class=\"p1\">\n                            Use colors that reinforce your brand but in a way that is pleasing.\n                        </p>\n                        <p class=\"p1\">\n                            Save saturated or bright colors in your palette for highlights. And use them sparingly to\n                            highlight actions or content.\n                        </p>\n                        <p class=\"p1\">\n                            Harsh colors can cause eye strain for users over time. Avoid using too many bright, neon\n                            colors\n                            and avoid using highly saturated/bold colors as backgrounds over large areas of content.\n                        </p>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img alt=\"Do use brand colors in a pleasing manner\" class=\"clrweb-Img\"\n                                     src=\"assets/images/documentation/themes/theme-responsability.svg\">\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p class=\"p1\">\n                                Use brand colors in a pleasing manner, saving bold or saturated colors for highlights or\n                                calls to action.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <h6>Communicate with color</h6>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <p class=\"p1\">\n                            Consider using color to communicate meaning to users. Using colors like red for warning or\n                            danger and green for success or preferred actions reinforces your user experience.\n                        </p>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img alt=\"Don't use brand colors irrespective of what the color communicates to users.\"\n                                     class=\"clrweb-Img\"\n                                     src=\"assets/images/documentation/themes/theme-comms.svg\">\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p class=\"p1\">\n                                Use brand colors irrespective of what the color communicates to users.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <h5>Create visual hierarchy</h5>\n            <p class=\"p1\">\n                Darker colors recede while lighter and brighter colors push forward. Be mindful of this when working\n                with\n                brand colors to create a custom theme.\n            </p>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img alt=\"Use light and dark colors to reinforce visual hierarchy and draw users’\n                                focus.\"\n                                     class=\"clrweb-Img\"\n                                     src=\"assets/images/documentation/themes/theme-visual-do.svg\">\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p class=\"p1\">\n                                Use light and dark colors to reinforce visual hierarchy and draw users’ focus.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img alt=\"Don't draw attention to the wrong items with the use of color.\"\n                                     class=\"clrweb-Img\"\n                                     src=\"assets/images/documentation/themes/theme-visual-dont.svg\">\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p class=\"p1\">\n                                Draw attention to the wrong items with the use of color. In this example, the content\n                                of the\n                                cards and datagrid recede into the background while the sidenav and header unnecessarily\n                                draw the user’s attention.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <h5>Avoid extreme color combinations</h5>\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <p class=\"p1\">\n                            Avoid extreme light-on-dark and dark-on-light color combinations that could contribute to\n                            eye\n                            strain.\n                        </p>\n                    </div>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img alt=\"Don't Use color combinations that may cause eye-strain.\" class=\"clrweb-Img\"\n                                     src=\"assets/images/documentation/themes/theme-color-combos.svg\">\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p class=\"p1\">\n                                Use color combinations that may cause eye-strain.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <h5>Be Accessible</h5>\n            <p class=\"p1\">\n                Clarity’s color palette is WCAG AA compliant, meaning all color combinations of text-on-background meet\n                the\n                standard for color accessibility for our users. Use the WebAIM Color Contrast Checker tool to test text\n                and\n                background colors when deciding how a brand’s color palette will be used in an application.\n            </p>\n            <div style=\"margin: 48px 0;\">\n                <div class=\"clrweb-DoxBookmark hidden-sm-down\">\n                    <div class=\"clrweb-DoxBookmark-bookmark\" style=\"color: #205F00\">\n                        <clr-icon shape=\"bookmark\"></clr-icon>\n                    </div>\n                    <p>\n                        All of the text/background combinations on the Clarity Color Palette page are tested for WCAG AA\n                        compliance.\n                    </p>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n            <p>Clarity UI ships with two css files,\n                <code class=\"clr-code\">clr-ui.min.css</code> for the light theme and\n                <code class=\"clr-code\">clr-ui-dark.min.css</code> for the dark theme. You can consume either one of\n                these files and have a fully light or dark-themed Clarity application as part of typical build\n                process. If you already use clr-ui in your project there is nothing to do. If you want to switch\n                over to the dark theme use one of the examples below to modify your build process and consume the\n                <code class=\"clr-code\">clr-ui-dark.min.css</code> code.</p>\n            <h4 style=\"margin-bottom: 12px;\">Angular CLI Builds</h4>\n            <p>\n                Consume the dark theme code in <code\n                    class=\"clr-code\"> clr-ui-dark.min.css</code> by adding it to your styles array in the <code\n                    class=\"clr-code\">.angular-cli.json</code> file.\n            </p>\n            <clr-code-snippet [clrCode]=\"uiNodeImports\" [clrDisablePrism]=\"true\"></clr-code-snippet>\n            <h4 style=\"margin-bottom: 12px;\">Webpack Builds</h4>\n            <p>Modify your <code class=\"clr-code\">webpack.config.js</code> entry styles to consume the new\n                <code class=\"clr-code\">clr-ui-dark.min.css</code></p>\n            <clr-code-snippet [clrCode]=\"uiWebpackImports\" [clrDisablePrism]=\"true\"></clr-code-snippet>\n            <h4 style=\"margin-bottom: 12px;\">Custom Themes</h4>\n            <p>If you need to customize components for you application we suggest starting with either the\n                light theme or the dark theme and override variables from there to suit your customizations. For\n                now, the best place to find a comprehensive list of component variables is in the\n                <a href=\"//github.com/vmware/clarity/blob/master/src/clr-angular/utils/_variables.clarity.scss\" rel=\"noopener\" target=\"_blank\">_variables.clarity.scss</a> file.</p>\n            <clr-tabs>\n                <clr-tab>\n                    <button clrTabLink=\"\">Light Theme Base</button>\n                    <clr-tab-content *clrIfActive>\n                        <p>In order to customize the Clarity light theme you will need to build with the Clarity SCSS\n                            and\n                            overwrite the SCSS variables that set the look-n-feel for each component you need to\n                            customize. You will need to build your applications CSS output with Clarity's SCSS.\n                        </p>\n                        <h6>Remove Clarity CSS from your build configuration</h6>\n                        <p>First, since we are going to be creating custom component styles the first step is to remove\n                            all of the Clarity css from your build process.</p>\n                        <clr-code-snippet [clrCode]=\"uiNoNodeImports\" [clrDisablePrism]=\"true\"></clr-code-snippet>\n                        <h6>Add (or modify) your applications main.scss file</h6>\n                        <p>Next, we need to include the the application scss variable overrides and the\n                            Clarity component styles. This example shows one way of adding the Clarity dependencies\n                            and component styles based on standard <code class=\"clr-code\">npm</code> installation into a\n                            <code class=\"clr-code\">node_modules</code> directory of the project. In this example the\n                            <code class=\"clr-code\">styles.scss</code> file lives at the top of a standard\n                            angular-cli application <code class=\"clr-code\">src</code> folder.</p>\n                        <clr-code-snippet [clrCode]=\"uiCustomClarityLightThemeScssFile\"\n                                          [clrDisablePrism]=\"true\"></clr-code-snippet>\n                    </clr-tab-content>\n                </clr-tab>\n                <clr-tab>\n                    <button clrTabLink=\"\">Dark Theme Base</button>\n                    <clr-tab-content *clrIfActive>\n                        <p>In order to customize the Clarity dark theme, you will need to build with the Clarity SCSS\n                            and overwrite the SCSS variables that set the look-and-feel for each component you need to\n                            customize. You will need to build your application's CSS output with Clarity's SCSS.\n                        </p>\n                        <h6>Remove Clarity CSS from your build configuration</h6>\n                        <p>First, since we are going to be creating custom component styles the first step is to remove\n                            all\n                            of the Clarity CSS from your build process.</p>\n                        <clr-code-snippet [clrCode]=\"uiNoNodeImports\" [clrDisablePrism]=\"true\"></clr-code-snippet>\n                        <h6>Add or modify your application's main.scss file</h6>\n                        <p>Next, we need to include the Clarity dependencies and component styles. This example shows\n                            one way of adding the Clarity dependencies and component styles based on standard <code\n                            class=\"clr-code\">npm</code> installation into a <code class=\"clr-code\">node_modules\n                            </code> directory of the project. In this example, the\n                            <code class=\"clr-code\">styles.scss</code> file lives at the top of a standard angular-cli\n                            application src folder.</p>\n                        <clr-code-snippet [clrCode]=\"uiCustomClarityDarkThemeScssFile\"\n                                          [clrDisablePrism]=\"true\"></clr-code-snippet>\n                    </clr-tab-content>\n                </clr-tab>\n            </clr-tabs>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "TimelineBodyDemo",
      "id": "component-TimelineBodyDemo-365930a75446fcd39eb623c71eda5f3b",
      "file": "src/website/src/app/documentation/demos/timeline/timeline-body-demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-timeline-body-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./timeline-body.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "body",
          "defaultValue": "body",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst body = `\n<div class=\"clr-timeline-step-body\">\n  <span class=\"clr-timeline-step-title\">Body Title</span>\n  <span class=\"clr-timeline-step-description\">Body Description.</span>\n</div>\n`;\n\n@Component({\n  selector: 'clr-timeline-body-demo',\n  templateUrl: './timeline-body.demo.html',\n})\nexport class TimelineBodyDemo {\n  body = body;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<clr-code-snippet [clrCode]=\"body\"></clr-code-snippet>\n"
    },
    {
      "name": "TimelineContainerDemo",
      "id": "component-TimelineContainerDemo-59af23f291c077c1420187248fa60876",
      "file": "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-timeline-container-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./timeline-container.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "horizontal",
          "defaultValue": "horizontal",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "vertical",
          "defaultValue": "vertical",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst vertical = `\n<ul class=\"clr-timeline clr-timeline-vertical\">\n  ...\n</ul>\n`;\n\nconst horizontal = `\n<ul class=\"clr-timeline clr-timeline-horizontal\">\n  ...\n</ul>\n`;\n\n@Component({\n  selector: 'clr-timeline-container-demo',\n  templateUrl: './timeline-container.demo.html',\n})\nexport class TimelineContainerDemo {\n  vertical = vertical;\n  horizontal = horizontal;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>Vertical Timeline Container</h6>\n<clr-code-snippet [clrCode]=\"vertical\"></clr-code-snippet>\n\n<h6>Horizontal Timeline Container</h6>\n<clr-code-snippet [clrCode]=\"horizontal\"></clr-code-snippet>\n"
    },
    {
      "name": "TimelineDemo",
      "id": "component-TimelineDemo-330dbfc8a4b8c1e5dcd066fc214ea1a0",
      "file": "src/website/src/app/documentation/demos/timeline/timeline.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-timeline-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./timeline.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-timeline-demo',\n  templateUrl: './timeline.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class TimelineDemo extends ClarityDocComponent {\n  constructor() {\n    super('timeline');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 18
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n  <article>\n    <h5 class=\"component-summary\" id=\"timeline-summary\">\n      A timeline is a visual indicator that shows progress and might guide the user through specific processes or\n      pre-defined steps while also showing current progress.\n    </h5>\n\n    <div id=\"design-guidelines\">\n      <h3 id=\"guidelines\">Design Guidelines</h3>\n\n      <p>Timeline should set an expectation for the whole process by breaking it up into concrete steps and a\n        pre-determined goal. It shows the user their progress along the steps of the timeline with a current step.\n        For all of the steps, a timeline can provide additional information such as a header (timestamp), an icon\n        showing state, a title and a description that optionally includes related contextual actions.</p>\n\n      <h3 id=\"layout\">Layout</h3>\n      <p>There are two types of layouts, horizontal and vertical.</p>\n\n      <div class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-md-6\">\n          <div class=\"clrweb-DoxMedia\">\n            <div class=\"clrweb-DoxMedia-block\" style=\"height: 297px\">\n              <div class=\"clrweb-DoxMedia-img\">\n                <img src=\"assets/images/documentation/timeline/timeline-horizontal-example.svg\" alt=\"\"/>\n              </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n              <h6>Horizontal</h6>\n              <ul class=\"list\">\n                <li>Used when there are workflows of 3 - 5 steps</li>\n                <li>Used when all steps can be displayed without wrapping</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"clr-col-12 clr-col-md-6\">\n          <div class=\"clrweb-DoxMedia\">\n            <div class=\"clrweb-DoxMedia-block\" style=\"height: 297px\">\n              <div class=\"clrweb-DoxMedia-img\" style=\"height: 100%\">\n                <img src=\"assets/images/documentation/timeline/timeline-vertical-example.svg\" alt=\"\"/>\n              </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n              <h6>Vertical</h6>\n              <ul class=\"list\">\n                <li>Used when there are workflows greater than five steps</li>\n                <li>Used when timestamps are optional</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h3 id=\"timeline-step-states\">Timeline Step States</h3>\n      <p>Every timeline step has one of five steps. With one exception these steps are represented with a Clarity Icon.\n      The exception is for loading state which uses the <code class=\"clr-code\">clr-spinner</code> component.</p>\n\n      <ol class=\"margin-top-12\">\n        <li>\n          &nbsp;<!-- align the icons b/c 1. is shorter than the rest --><clr-icon size=\"36\" class=\"is-success\" shape=\"success-standard\" aria-label=\"step complete\"></clr-icon> - <strong>Step complete</strong> uses the\n          <code class=\"clr-code\">success-standard</code> shape\n        </li>\n        <li>\n          <clr-icon size=\"36\" class=\"is-info\" shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n           - <strong>Current step</strong> uses the <code class=\"clr-code\">dot-circle</code> shape\n        </li>\n        <li>\n          <clr-icon size=\"36\" shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n           - <strong>Not started, available to start</strong> uses the <code class=\"clr-code\">circle</code> shape\n        </li>\n        <li>\n          <clr-spinner clrMedium aria-label=\"In progress\" class=\"clr-align-middle\">Fetching data</clr-spinner>\n            - <strong>Processing user initiated action</strong> uses the\n          <code class=\"clr-code\">clr-spinner</code> (w/ clrMedium size) component\n        </li>\n        <li>\n          <clr-icon size=\"36\" class=\"is-error\" shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n           - <strong>Error completing step</strong> uses the\n          <code class=\"clr-code\">error</code> shape\n        </li>\n      </ol>\n\n      <h4>Showing the current step</h4>\n      <div class=\"clr-row\">\n        <div class=\"clr-col-4\">\n          <p>By default, step one is highlighted as the current step.</p>\n        </div>\n        <div class=\"clr-col-8\">\n          <p><img src=\"assets/images/documentation/timeline/timeline-step-1.svg\" alt=\"\"></p>\n        </div>\n      </div>\n      <div class=\"clr-row\">\n        <div class=\"clr-col-4\">\n          <p>When step one is complete the step two gets highlighted.</p>\n        </div>\n        <div class=\"clr-col-8\">\n          <p><img src=\"assets/images/documentation/timeline/timeline-step-2.svg\" alt=\"\"></p>\n        </div>\n      </div>\n      <div class=\"clr-row\">\n        <div class=\"clr-col-4\">\n          <p>When steps one and two are complete, step three gets highlighted.</p>\n        </div>\n        <div class=\"clr-col-8\">\n          <p><img src=\"assets/images/documentation/timeline/timeline-step-3.svg\" alt=\"\"></p>\n        </div>\n      </div>\n      <div class=\"clr-row\">\n        <div class=\"clr-col-4\">\n          <p>All steps are complete.</p>\n        </div>\n        <div class=\"clr-col-8\">\n          <p><img src=\"assets/images/documentation/timeline/timeline-step-4.svg\" alt=\"\"></p>\n        </div>\n      </div>\n\n      <h4>Additional States</h4>\n      <div class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-md-6\">\n          <div class=\"clrweb-DoxMedia\">\n            <div class=\"clrweb-DoxMedia-block\" style=\"height: 205px\">\n              <div class=\"clrweb-DoxMedia-img\">\n                <img src=\"assets/images/documentation/timeline/timeline-error-state.svg\" alt=\"\"/>\n              </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n              <h6>Error</h6>\n              <ul class=\"list\">\n                <li>Display the error message under the error icon if needed </li>\n                <li>Tooltips are not recommended because of low affordance</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"clr-col-12 clr-col-md-6\">\n          <div class=\"clrweb-DoxMedia\">\n            <div class=\"clrweb-DoxMedia-block\" style=\"height: 205px\">\n              <div class=\"clrweb-DoxMedia-img\">\n                <img src=\"assets/images/documentation/timeline/timeline-loading-state.svg\" alt=\"\"/>\n              </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n              <h6>Loading</h6>\n              <ul class=\"list\">\n                <li>When loading or taking action, display a spinner</li>\n                <li>Disable buttons when loading or make buttons contextual for the loading state (e.g CANCEL)</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h3>Step Description</h3>\n      <p>It is optional to have a step description that offers additional information and guidance to the user. This\n        information can be displayed all of the time or only for the current step.</p>\n      <div class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-md-6\">\n          <div class=\"clrweb-DoxMedia\">\n            <div class=\"clrweb-DoxMedia-block\">\n              <div class=\"clrweb-DoxMedia-img\">\n                <img src=\"assets/images/documentation/timeline/single-step-description.svg\" alt=\"\"/>\n              </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n              <h6>Single step description</h6>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"clr-col-12 clr-col-md-6\">\n          <div class=\"clrweb-DoxMedia\">\n            <div class=\"clrweb-DoxMedia-block\">\n              <div class=\"clrweb-DoxMedia-img\">\n                <img src=\"assets/images/documentation/timeline/all-step-descriptions.svg\" alt=\"\"/>\n              </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n              <h6>All step descriptions</h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div id=\"code-examples\">\n      <h3 id=\"examples\">Code &amp; Examples</h3>\n      <h4>Structure</h4>\n      <p>A Timeline is structured as a container component with classes placed on the correct DOM structure to target\n        elements for timeline specific style and layout. Te first container element is an unordered list element with\n        <code class=\"clr-code\">.clr-timeline</code> class. Each list item corresponds to a step that has the\n        <code class=\"clr-code\">.clr-timeline-step</code> class on it. Steps are composed with several children elements.\n        Timelines can be either horizontal or vertical and it is specified by the css class declared with the\n        <code class=\"clr-code\">.clr-timeline</code>element.</p>\n      <p>Each timeline step can have three children elements:</p>\n\n      <ol class=\"list\">\n        <li>\n          An optional header (<code class=\"clr-code\">.clr-timeline-step-header</code>) that appears above the timeline\n          when its horizontal and to the left of the timeline when its vertical. In the demos they are populated with\n          times. e.g 11:59am.\n        </li>\n        <li>An icon shape that corresponds to the correct step state\n          (note usage of <code class=\"clr-code\">aria-label</code> for accessibility):\n          <ul>\n            <li>\n              <clr-icon size=\"18\" class=\"is-success\" shape=\"success-standard\" aria-label=\"step complete\"></clr-icon>\n              : <strong>Step complete</strong> uses the\n              <code class=\"clr-code\">success-standard</code> shape\n            </li>\n            <li>\n              <clr-icon size=\"18\" class=\"is-info\" shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n              : <strong>Current step</strong> uses the <code class=\"clr-code\">dot-circle</code> shape\n            </li>\n            <li>\n              <clr-icon size=\"18\" shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n              : <strong>Not started, available to start</strong> uses the <code class=\"clr-code\">circle</code> shape\n            </li>\n            <li>\n              <span class=\"spinner spinner-inline spinner-sm\">\n                  Loading...\n              </span>\n              : <strong>Processing user initiated action</strong> uses the\n              <code class=\"clr-code\">spinner</code> shape\n            </li>\n            <li>\n              <clr-icon size=\"18\" class=\"is-error\" shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n              : <strong>Error completing step</strong> uses the\n              <code class=\"clr-code\">error</code> shape\n            </li>\n          </ul>\n        </li>\n        <li>\n          A container element for the <code class=\"clr-code\">.clr-timeline-step-body</code> that contains two children\n          elements:\n          <ul>\n            <li>\n              A <code class=\"clr-code\">.clr-timeline-step-title</code> for calling out the step title below the step\n              icon when horizontal and on the right at the top of the step when it is vertical\n            </li>\n            <li>\n              A <code class=\"clr-code\">.clr-timeline-step-description</code></li> to put a longer description that wraps\n            with the width of the step container. This is also where (optional) action buttons will be placed.\n          </ul>\n        </li>\n      </ol>\n\n      <h4>CSS Classes (for Clarity UI static implementation)</h4>\n      <table class=\"table\">\n        <thead>\n         <tr>\n           <th width=\"288px\">Classname</th>\n           <th class=\"left\">Description</th>\n         </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <code class=\"clr-code\">.clr-timeline</code>\n            </td>\n            <td class=\"left\">\n              Designates the timeline container element and is used on an unordered list\n              <code class=\"clr-code\">ul</code>. This class should only contain <code class=\"clr-code\">li</code> children\n              with the <code class=\"clr-code\">clr-timeline-step</code> class.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code class=\"clr-code\">.clr-timeline-horizontal</code>\n            </td>\n            <td class=\"left\">\n              Used in conjunction with <code class=\"clr-code\">clr-timeline</code> class to designate a horizontal\n              timeline.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code class=\"clr-code\">.clr-timeline-vertical</code>\n            </td>\n            <td class=\"left\">\n              Used in conjunction with <code class=\"clr-code\">clr-timeline</code> class to designate a vertical\n              timeline.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code class=\"clr-code\">.clr-timeline-step</code>\n            </td>\n            <td class=\"left\">\n              A class to designate a step container. It should be placed on an <code class=\"clr-code\">li</code> element\n              as a child of the <code class=\"clr-code\">clr-timeline</code> class.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code class=\"clr-code\">.clr-timeline-step-header</code>\n            </td>\n            <td class=\"left\">\n              Used to display information like a time or a date. This element will appear\n              <strong>above</strong> the <a routerLink=\"/icons\">ClarityIcon</a> used in the time line step when its a horizontal timeline\n              and to the <strong>left</strong> when it is a vertical timeline.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code class=\"clr-code\">clr-timeline-step-body</code>\n            </td>\n            <td class=\"left\">\n              This is a container class used to group the <code class=\"clr-code\">.clr-timeline-step-title</code>\n              and <code class=\"clr-code\">.clr-timeline-step-description</code> elements. This element will appear\n              <strong>below</strong> the <a routerLink=\"/icons\">ClarityIcon</a> used in the timeline step when its a\n              horizontal timeline and to the <strong>right</strong> when it is a vertical timeline.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code class=\"clr-code\">.clr-timeline-step-title</code>\n            </td>\n            <td class=\"left\">\n              Used inside of the <code class=\"clr-code\">clr-timeline-step-body</code> container this is a\n              bolded title that describes the step.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code class=\"clr-code\">.clr-timeline-step-description</code>\n            </td>\n            <td class=\"left\">This element contains a longer description and details about the step it is used on. This\n            is also where consumers should place any action buttons that may be used in <strong>this</strong> step.</td>\n          </tr>\n        </tbody>\n      </table>\n      <h4>Examples</h4>\n      <p>Lets look at some of the elements in isolation and then put everything together at the bottom of the page.</p>\n\n<!--      includes vertical and horizontal code snippets-->\n      <h3> Timeline</h3>\n      <clr-timeline-container-demo></clr-timeline-container-demo>\n\n<!--      includes optional header, clr icon and step-body-->\n      <h3> Timeline Step</h3>\n      <clr-timeline-step-demo></clr-timeline-step-demo>\n\n<!--      includes body elements title and description (multiple descriptions with -->\n<!--      title description, desc +button, desc + button link-->\n      <h3> Timeline Step Body</h3>\n      <clr-timeline-body-demo></clr-timeline-body-demo>\n\n      <h3>Full Demo</h3>\n      <clr-timeline-full-demo></clr-timeline-full-demo>\n    </div>\n  </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "TimelineFullDemo",
      "id": "component-TimelineFullDemo-405e753189d9e4bc4234f96f7414c9cc",
      "file": "src/website/src/app/documentation/demos/timeline/timeline-full-demo.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-timeline-full-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./timeline-full-demo.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "staticHorizontal",
          "defaultValue": "code.staticHorizontal",
          "type": "",
          "optional": false,
          "description": "",
          "line": 128
        },
        {
          "name": "staticVertical",
          "defaultValue": "code.staticVertical",
          "type": "",
          "optional": false,
          "description": "",
          "line": 129
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nconst code = {\n  staticHorizontal: `\n<ul class=\"clr-timeline clr-timeline-horizontal\">\n  <li class=\"clr-timeline-step disabled\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Add KMS</span>\n      <span class=\"clr-timeline-step-description\">Root CA certificate requested.</span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Add KMS</span>\n      <span class=\"clr-timeline-step-description\">\n    Root CA certificate requested. Upload it to the KMS to complete the connection.\n    <button class=\"btn btn-sm\">Action</button>\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Make vCenter trust KMS</span>\n      <span class=\"clr-timeline-step-description\">\n    Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n    and very long.\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Make KMS trust vCenter</span>\n      <span class=\"clr-timeline-step-description\">Upload it to the KMS to complete the connection. Third\n    sentence.\n    <button class=\"btn btn-sm btn-link\">Action</button>\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Connected</span>\n      <span class=\"clr-timeline-step-description\">No. It's not connected.</span>\n    </div>\n  </li>\n  </ul>`,\n  staticVertical: `\n  <ul class=\"clr-timeline clr-timeline-vertical\">\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Add KMS</span>\n        <span class=\"clr-timeline-step-description\">Root CA certificate requested.</span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Add KMS</span>\n        <span class=\"clr-timeline-step-description\">\n          Root CA certificate requested. Upload it to the KMS to complete the connection.\n          <!-- <img src=\"assets/placeholder_350x150.png\" alt=\"Example of an Image in a Card\" /> -->\n          <img src=\"https://clarity.design/assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of an Image in a Card\" />\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <span class=\"clr-timeline-step-header\">11:59 am</span>\n      <clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n        <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Make vCenter trust KMS</span>\n        <span class=\"clr-timeline-step-description\">\n          Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n          and very long.\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Make KMS trust vCenter</span>\n        <span class=\"clr-timeline-step-description\">Upload it to the KMS to complete the connection. Third\n          sentence.\n          <button class=\"btn btn-sm\">Refresh</button>\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\"></div>\n      <clr-icon shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Connected</span>\n        <span class=\"clr-timeline-step-description\">No. It's not connected.</span>\n      </div>\n    </li>\n  </ul>\n  `,\n};\n\n@Component({\n  selector: 'clr-timeline-full-demo',\n  templateUrl: './timeline-full-demo.component.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class TimelineFullDemo extends ClarityDocComponent {\n  staticHorizontal = code.staticHorizontal;\n  staticVertical = code.staticVertical;\n  constructor() {\n    super('timeline');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 129
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div>\n  <clr-tabs>\n    <clr-tab>\n      <button clrTabLink id=\"link1\">Clarity UI (Static Horizontal)</button>\n      <clr-tab-content id=\"content1\" *clrIfActive>\n        <h5>Horizontal Timeline</h5>\n        <ul class=\"clr-timeline clr-timeline-horizontal\">\n          <li class=\"clr-timeline-step disabled\">\n            <div class=\"clr-timeline-step-header\">11:59 am</div>\n            <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n            <div class=\"clr-timeline-step-body\">\n              <span class=\"clr-timeline-step-title\">Add KMS</span>\n              <span class=\"clr-timeline-step-description\">Root CA certificate requested.</span>\n            </div>\n          </li>\n          <li class=\"clr-timeline-step\">\n            <div class=\"clr-timeline-step-header\">11:59 am</div>\n            <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n            <div class=\"clr-timeline-step-body\">\n              <span class=\"clr-timeline-step-title\">Add KMS</span>\n              <span class=\"clr-timeline-step-description\">\n          Root CA certificate requested. Upload it to the KMS to complete the connection.\n          <button class=\"btn btn-sm\">Action</button>\n        </span>\n            </div>\n          </li>\n          <li class=\"clr-timeline-step\">\n            <div class=\"clr-timeline-step-header\">11:59 am</div>\n            <clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n            <div class=\"clr-timeline-step-body\">\n              <span class=\"clr-timeline-step-title\">Make vCenter trust KMS</span>\n              <span class=\"clr-timeline-step-description\">\n          Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n          and very long.\n        </span>\n            </div>\n          </li>\n          <li class=\"clr-timeline-step\">\n            <div class=\"clr-timeline-step-header\">11:59 am</div>\n            <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n            <div class=\"clr-timeline-step-body\">\n              <span class=\"clr-timeline-step-title\">Make KMS trust vCenter</span>\n              <span class=\"clr-timeline-step-description\">Upload it to the KMS to complete the connection. Third\n          sentence.\n          <button class=\"btn btn-sm btn-link\">Action</button>\n        </span>\n            </div>\n          </li>\n          <li class=\"clr-timeline-step\">\n            <div class=\"clr-timeline-step-header\">11:59 am</div>\n            <clr-icon shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n            <div class=\"clr-timeline-step-body\">\n              <span class=\"clr-timeline-step-title\">Connected</span>\n              <span class=\"clr-timeline-step-description\">No. It's not connected.</span>\n            </div>\n          </li>\n        </ul>\n        <clr-code-snippet [clrCode]=\"staticHorizontal\"></clr-code-snippet>\n      </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n      <button clrTabLink>Clarity UI (Static Vertical)</button>\n      <clr-tab-content *clrIfActive>\n        <h5>Vertical Timeline</h5>\n        <p>When you inspect this example, notice that its inside of a four column grid container.\n          To restrict the size of a vertical timeline there are two options. First, you can use CSS directly on the\n          <code class=\"clr-code\">.clr-timeline</code> element. The second option is to put the vertical timeline\n          inside of a defined column and let it expand to the space of its container.</p>\n        <div class=\"clr-row\">\n          <div class=\"clr-col-4\">\n            <ul class=\"clr-timeline clr-timeline-vertical\">\n              <li class=\"clr-timeline-step\">\n                <div class=\"clr-timeline-step-header\">11:59 am</div>\n                <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n                <div class=\"clr-timeline-step-body\">\n                  <span class=\"clr-timeline-step-title\">Add KMS</span>\n                  <span class=\"clr-timeline-step-description\">Root CA certificate requested.</span>\n                </div>\n              </li>\n              <li class=\"clr-timeline-step\">\n                <div class=\"clr-timeline-step-header\">11:59 am</div>\n                <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n                <div class=\"clr-timeline-step-body\">\n                  <span class=\"clr-timeline-step-title\">Add KMS</span>\n                  <span class=\"clr-timeline-step-description\">\n        Root CA certificate requested. Upload it to the KMS to complete the connection.\n        <img src=\"https://clarity.design/assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of an Image in a Card\" />\n      </span>\n                </div>\n              </li>\n              <li class=\"clr-timeline-step\">\n                <span class=\"clr-timeline-step-header\">11:59 am</span>\n                <clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n                <div class=\"clr-timeline-step-body\">\n                  <span class=\"clr-timeline-step-title\">Make vCenter trust KMS</span>\n                  <span class=\"clr-timeline-step-description\">\n        Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n        and very long.\n      </span>\n                </div>\n              </li>\n              <li class=\"clr-timeline-step\">\n                <div class=\"clr-timeline-step-header\">11:59 am</div>\n                <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n                <div class=\"clr-timeline-step-body\">\n                  <span class=\"clr-timeline-step-title\">Make KMS trust vCenter</span>\n                  <span class=\"clr-timeline-step-description\">Upload it to the KMS to complete the connection. Third\n        sentence.\n        <button class=\"btn btn-sm\">Refresh</button>\n      </span>\n                </div>\n              </li>\n              <li class=\"clr-timeline-step\">\n                <div class=\"clr-timeline-step-header\"></div>\n                <clr-icon shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n                <div class=\"clr-timeline-step-body\">\n                  <span class=\"clr-timeline-step-title\">Connected</span>\n                  <span class=\"clr-timeline-step-description\">No. It's not connected.</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <clr-code-snippet [clrCode]=\"staticVertical\"></clr-code-snippet>\n      </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n      <button clrTabLink>Clarity Angular</button>\n      <clr-tab-content>\n        <h4>ClrTimeline</h4>\n        <h5>Coming Soon <a rel=\"noopener\" target=\"_blank\" href=\"https://github.com/vmware/clarity/issues/1633\">(Contributions welcome)</a></h5>\n      </clr-tab-content>\n    </clr-tab>\n  </clr-tabs>\n</div>\n"
    },
    {
      "name": "TimelineStepDemo",
      "id": "component-TimelineStepDemo-30ca5ae0f5a88c44160022ff16532f6c",
      "file": "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-timeline-step-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./timeline-step.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "spinner",
          "defaultValue": "spinner",
          "type": "",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "timelineStep",
          "defaultValue": "timelineStep",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst timelineStep = `\n<li class=\"clr-timeline-step\">\n  <div class=\"clr-timeline-step-header\">11:59 am</div>\n  <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n  <div class=\"clr-timeline-step-body\">\n    ...\n  </div>\n</li>\n`;\n\nconst spinner = `\n<clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n`;\n\n@Component({\n  selector: 'clr-timeline-step-demo',\n  templateUrl: './timeline-step.demo.html',\n})\nexport class TimelineStepDemo {\n  timelineStep = timelineStep;\n  spinner = spinner;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>Timeline Step Container</h6>\n<clr-code-snippet [clrCode]=\"timelineStep\"></clr-code-snippet>\n<clr-alert [clrAlertType]=\"'warning'\" [clrAlertClosable]=\"false\">\n  <clr-alert-item>\n        <span class=\"alert-text\">\n          For loading steps, notice that instead of a <code class=\"clr-code\">clr-icon</code> element we use a\n          ClrSpinner component.\n        </span>\n  </clr-alert-item>\n</clr-alert>\n<clr-code-snippet [clrCode]=\"spinner\"></clr-code-snippet>\n"
    },
    {
      "name": "TogglesDemo",
      "id": "component-TogglesDemo-80191c41ff0de394e89120a7f29c4122",
      "file": "src/website/src/app/documentation/demos/toggles/toggles.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./toggles.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleOne",
          "defaultValue": "{\n    one: false,\n    two: false,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "exampleThree",
          "defaultValue": "{\n    one: false,\n    two: false,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "exampleTwo",
          "defaultValue": "{\n    one: false,\n    two: false,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "ngBasic",
          "defaultValue": "NgBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "ngDisabled",
          "defaultValue": "NgDisabled",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "ngHelpers",
          "defaultValue": "NgHelpers",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "ngInline",
          "defaultValue": "NgInline",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "ngLabel",
          "defaultValue": "NgLabel",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "uiBasic",
          "defaultValue": "UiBasic",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "uiDisabled",
          "defaultValue": "UiDisabled",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "uiError",
          "defaultValue": "UiError",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "uiFull",
          "defaultValue": "UiFull",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "uiInline",
          "defaultValue": "UiInline",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\nimport * as UiBasic from 'raw-loader!./ui/basic.html';\nimport * as UiFull from 'raw-loader!./ui/full.html';\nimport * as UiError from 'raw-loader!./ui/error.html';\nimport * as UiInline from 'raw-loader!./ui/inline.html';\nimport * as UiDisabled from 'raw-loader!./ui/disabled.html';\n\nimport * as NgBasic from 'raw-loader!./ng/basic.html';\nimport * as NgLabel from 'raw-loader!./ng/label.html';\nimport * as NgHelpers from 'raw-loader!./ng/helpers.html';\nimport * as NgInline from 'raw-loader!./ng/inline.html';\nimport * as NgDisabled from 'raw-loader!./ng/disabled.html';\n\n@Component({\n  templateUrl: './toggles.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class TogglesDemo extends ClarityDocComponent {\n  constructor() {\n    super('toggle-switches');\n  }\n\n  exampleOne = {\n    one: false,\n    two: false,\n  };\n  exampleTwo = {\n    one: false,\n    two: false,\n  };\n  exampleThree = {\n    one: false,\n    two: false,\n  };\n\n  uiBasic: any = UiBasic;\n  uiFull: any = UiFull;\n  uiError: any = UiError;\n  uiInline: any = UiInline;\n  uiDisabled: any = UiDisabled;\n\n  ngBasic: any = NgBasic;\n  ngLabel: any = NgLabel;\n  ngHelpers: any = NgHelpers;\n  ngInline: any = NgInline;\n  ngDisabled: any = NgDisabled;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 28
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n  <article>\n    <h5 class=\"component-summary\" id=\"summary\">\n      With toggle switches, users can select the on or off state of an option.\n    </h5>\n\n    <h2 id=\"forms-code-samples\">Angular Toggle Switch Component</h2>\n\n    <p>If you are using Angular, the recommended approach is to always use the <code class=\"clr-code\">ClrToggle</code>\n      directive on your toggle switches to help manage the form control. By using <code class=\"clr-code\">ClrToggle</code>,\n      you'll automatically be able to leverage built in validation, helper text, and layout features in forms.</p>\n\n    <h4>Basic checkbox button</h4>\n\n    <p>While it is possible to create a toggle switch without a label, the cases are rare. However, it is possible\n      by just adding <code class=\"clr-code\">clrToggle</code> to your checkbox button to wire up the\n      directive. Notice, it is necessary to add <code class=\"clr-code\">type=\"checkbox\"</code>.</p>\n\n    <p></p>\n\n    <input type=\"checkbox\" clrToggle />\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"ngBasic\"></clr-code-snippet>\n\n    <h4>Labels</h4>\n\n    <p>For anything beyond a standalone checkbox button, you'll need to wrap your toggle switches with the <code class=\"clr-code\">ClrToggleWrapper</code>\n      component when you include a label. This manages the label and display of the toggle switch for you.\n    </p>\n\n    <p></p>\n\n    <clr-toggle-container>\n      <clr-toggle-wrapper>\n        <input type=\"checkbox\" clrToggle name=\"test2\" value=\"option1\" />\n        <label>Option 1</label>\n      </clr-toggle-wrapper>\n      <clr-toggle-wrapper>\n        <input type=\"checkbox\" clrToggle name=\"test2\" value=\"option2\" />\n        <label>Option 2</label>\n      </clr-toggle-wrapper>\n    </clr-toggle-container>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"ngLabel\"></clr-code-snippet>\n\n    <h4>Helper and error messages</h4>\n\n    <p>To leverage helper and validation messages, you'll need to wrap all of the toggle switches inside of a <code class=\"clr-code\">ClrToggleContainer</code>\n      component. The toggle switch container tracks the the validations placed on a toggle switch, such as <code\n        class=\"clr-code\">required</code>\n      or even custom built validators in Angular. Under the hood, it looks at the <code class=\"clr-code\">NgControl</code>\n      values to determine the control validity, and display the helper text or error message accordingly.</p>\n\n    <p>Note: the validation in this example only displays an error after you focus and leave focus without\n      selecting a value. The easiest way to do this is to highlight the text in this paragraph, and hit tab a few\n      times to change the focus.</p>\n\n    <p></p>\n\n    <clr-toggle-container>\n      <label>Full toggle switch example</label>\n      <clr-toggle-wrapper>\n        <input type=\"checkbox\" clrToggle name=\"test3\" required value=\"option1\" [(ngModel)]=\"exampleOne.one\" />\n        <label>Option 1</label>\n      </clr-toggle-wrapper>\n      <clr-toggle-wrapper>\n        <input type=\"checkbox\" clrToggle name=\"test3\" required value=\"option2\" [(ngModel)]=\"exampleOne.two\" />\n        <label>Option 2</label>\n      </clr-toggle-wrapper>\n      <clr-control-helper>Helper text</clr-control-helper>\n      <clr-control-error>This field is required!</clr-control-error>\n    </clr-toggle-container>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"ngHelpers\"></clr-code-snippet>\n\n    <h4>Inline toggle switches</h4>\n\n    <p>Toggle switches can be placed inline by default by adding the <code class=\"clr-code\">clrInline</code> directive\n      to your toggle switch container elements. The toggle switches will wrap if there is not enough space.</p>\n\n    <p></p>\n\n    <clr-toggle-container clrInline>\n      <label>Inline toggle switch example</label>\n      <clr-toggle-wrapper>\n        <input type=\"checkbox\" clrToggle name=\"test4\" required value=\"option1\" [(ngModel)]=\"exampleTwo.one\" />\n        <label>Option 1</label>\n      </clr-toggle-wrapper>\n      <clr-toggle-wrapper>\n        <input type=\"checkbox\" clrToggle name=\"test4\" required value=\"option2\" [(ngModel)]=\"exampleTwo.two\" />\n        <label>Option 2</label>\n      </clr-toggle-wrapper>\n      <clr-control-helper>Helper text</clr-control-helper>\n      <clr-control-error>This field is required!</clr-control-error>\n    </clr-toggle-container>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"ngInline\"></clr-code-snippet>\n\n    <h4>Disabled toggle switches</h4>\n\n    <p>A toggle switch can be disabled by simply putting the <code class=\"clr-code\">disabled</code> attribute on the\n      checkbox input. This does require the toggle switch to be inside of a toggle switch container. Also, for groups of\n      toggle switches you have to put the disabled attribute on the last checkbox input and cannot disable individual ones,\n      as Angular doesn't have support to disable individual checkboxes in a group.</p>\n\n    <p></p>\n\n    <clr-toggle-container>\n      <label>Disabled toggle switch example</label>\n      <clr-toggle-wrapper>\n        <input type=\"checkbox\" clrToggle name=\"test5\" value=\"option1\" [(ngModel)]=\"exampleThree.one\" disabled />\n        <label>Option 1</label>\n      </clr-toggle-wrapper>\n      <clr-toggle-wrapper>\n        <input type=\"checkbox\" clrToggle name=\"test5\" value=\"option2\" [(ngModel)]=\"exampleThree.two\" disabled />\n        <label>Option 2</label>\n      </clr-toggle-wrapper>\n      <clr-control-helper>Helper text</clr-control-helper>\n    </clr-toggle-container>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"ngDisabled\"></clr-code-snippet>\n\n\n\n\n    <h2 id=\"css-component\">CSS Toggle Switch Component</h2>\n\n    <p>Toggle switches can be used without Angular, but without some of the automatic interactivity. If you intend to\n      create\n      your own components, here are the basic features you'll need to build out.</p>\n\n    <h4>Basic toggle switch button</h4>\n\n    <p>This is the minimal markup needed to style the checkbox button control by wrapping it with the an element with\n      the\n      <code class=\"clr-code\">clr-toggle-wrapper</code> class. You must then put the input first, then the label\n      like you see below (the CSS selectors are specific about this ordering). You'll want to tie the input and\n      label together by providing an id for the label to connect. Ensure you add the <code class=\"clr-code\">clr-toggle</code>\n      class to the checkbox input as well.</p>\n\n    <p></p>\n\n    <div class=\"clr-form-control\">\n      <div class=\"clr-control-container\">\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"toggle1\" name=\"toggle-basic\" value=\"option1\" class=\"clr-toggle\">\n          <label for=\"toggle1\">My choice</label>\n        </div>\n      </div>\n    </div>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"uiBasic\"></clr-code-snippet>\n\n    <h4>Full input display</h4>\n\n    <p>Each form control has a <code class=\"clr-code\">.clr-form-control</code> wrapper, as well as a specific DOM\n      structure necessary to layout the form control as desired. This works with all layout options as well\n      without needing to change the DOM structure in any way.</p>\n\n    <p></p>\n\n    <div class=\"clr-form-control\">\n      <label class=\"clr-control-label\">Full toggle switch example</label>\n      <div class=\"clr-control-container\">\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox1\" name=\"checkbox-full\" value=\"option1\" class=\"clr-toggle\">\n          <label for=\"checkbox1\" class=\"clr-control-label\">option 1</label>\n        </div>\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox2\" name=\"checkbox-full\" value=\"option2\" class=\"clr-toggle\">\n          <label for=\"checkbox2\" class=\"clr-control-label\">option 2</label>\n        </div>\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox3\" name=\"checkbox-full\" value=\"option3\" class=\"clr-toggle\">\n          <label for=\"checkbox3\" class=\"clr-control-label\">option 3</label>\n        </div>\n        <div class=\"clr-subtext-wrapper\">\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n          <span class=\"clr-subtext\">Helper Text</span>\n        </div>\n      </div>\n    </div>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"uiFull\"></clr-code-snippet>\n\n    <h4>Error state</h4>\n\n    <p>To signify an error state, you need to add the <code class=\"clr-code\">.clr-error</code> class to the <code\n      class=\"clr-code\">.clr-control-container</code> element. This will show the <code class=\"clr-code\">.clr-validate-icon</code>\n      and turn the <code class=\"clr-code\">.clr-subtext</code> message to red. If you have helper text that needs\n      to change to error content, you'll have to handle the hiding and showing of that content inside of the\n      <code class=\"clr-code\">.clr-subtext</code> element.</p>\n\n    <p></p>\n\n    <div class=\"clr-form-control\">\n      <label class=\"clr-control-label\">Error checkbox</label>\n      <div class=\"clr-control-container clr-error\">\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox4\" name=\"checkbox-error\" value=\"option1\" class=\"clr-toggle\">\n          <label for=\"checkbox4\" class=\"clr-control-label\">option 1</label>\n        </div>\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox5\" name=\"checkbox-error\" value=\"option2\" class=\"clr-toggle\">\n          <label for=\"checkbox5\" class=\"clr-control-label\">option 2</label>\n        </div>\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox6\" name=\"checkbox-error\" value=\"option3\" class=\"clr-toggle\">\n          <label for=\"checkbox6\" class=\"clr-control-label\">option 3</label>\n        </div>\n        <div class=\"clr-subtext-wrapper\">\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n          <span class=\"clr-subtext\">Error message</span>\n        </div>\n      </div>\n    </div>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"uiError\"></clr-code-snippet>\n\n    <h4>Inline toggle switches</h4>\n\n    <p>Toggle switches can be placed inline by default by adding the <code class=\"clr-code\">clr-control-inline</code> directive\n      to your checkbox container. The toggle switches will wrap if there is not enough space.</p>\n\n    <p>The subtext content, the icon and subtext messages, also must be wrapped in a <code class=\"clr-code\">clr-subtext-wrapper</code>\n      element so it can properly layout in all layout variations. If you omit this, the validation icon and text may appear in the wrong place.</p>\n\n    <p></p>\n\n    <div class=\"clr-form-control\">\n      <label class=\"clr-control-label\">Inline toggle switches example</label>\n      <div class=\"clr-control-container clr-control-inline\">\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox7\" name=\"checkbox-error\" value=\"option1\" class=\"clr-toggle\">\n          <label for=\"checkbox7\" class=\"clr-control-label\">option 1</label>\n        </div>\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox8\" name=\"checkbox-error\" value=\"option2\" class=\"clr-toggle\">\n          <label for=\"checkbox8\" class=\"clr-control-label\">option 2</label>\n        </div>\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox9\" name=\"checkbox-error\" value=\"option3\" class=\"clr-toggle\">\n          <label for=\"checkbox9\" class=\"clr-control-label\">option 3</label>\n        </div>\n        <div class=\"clr-subtext-wrapper\">\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n          <span class=\"clr-subtext\">Helper text</span>\n        </div>\n      </div>\n    </div>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"uiInline\"></clr-code-snippet>\n\n    <h4>Disabled toggle switches</h4>\n\n    <p>In order to disable toggle switches, you'll add the <code class=\"clr-code\">disabled</code> attribute on the checkbox input and\n      putting the <code class=\"clr-code\">clr-form-control-disabled</code> class onto the form control wrapper. This\n      helps setup the correct styling for the labels and other aspects of the form control when it is disabled.</p>\n\n    <p></p>\n\n    <div class=\"clr-form-control clr-form-control-disabled\">\n      <label class=\"clr-control-label\">Disabled toggle switches example</label>\n      <div class=\"clr-control-container\">\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox10\" name=\"checkbox-disabled\" value=\"option1\" class=\"clr-toggle\" disabled>\n          <label for=\"checkbox10\" class=\"clr-control-label\">option 1</label>\n        </div>\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox11\" name=\"checkbox-disabled\" value=\"option2\" class=\"clr-toggle\" disabled>\n          <label for=\"checkbox11\" class=\"clr-control-label\">option 2</label>\n        </div>\n        <div class=\"clr-toggle-wrapper\">\n          <input type=\"checkbox\" id=\"checkbox12\" name=\"checkbox-disabled\" value=\"option3\" class=\"clr-toggle\" disabled>\n          <label for=\"checkbox12\" class=\"clr-control-label\">option 3</label>\n        </div>\n        <div class=\"clr-subtext-wrapper\">\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n          <span class=\"clr-subtext\">Helper text</span>\n        </div>\n      </div>\n    </div>\n\n    <p></p>\n\n    <clr-code-snippet [clrCode]=\"uiDisabled\"></clr-code-snippet>\n\n\n    <div id=\"design-guidelines\">\n      <h3 id=\"guidelines\">Usage</h3>\n\n      <p>Use a toggle switch when you need the sole options of “on” and “off.”</p>\n\n      <p>Toggle switches take up less space than an “on/off” <a routerLink=\"../../radio\">radio button group</a> and communicate their intended purpose better than a <a routerLink=\"../../checkboxes\">checkbox</a> that toggles functionality.</p>\n\n      <h4>Toggle States</h4>\n\n      <p>Toggle switches should always be preceded with a visual label such as ON/OFF</p>\n\n      <h4>Label</h4>\n\n      <p>The label should clearly describe the setting. Although Clarity supports a toggle switch without a label, use this approach only if the purpose of the control is made clear elsewhere, for example, in a group label or section header.</p>\n    </div>\n\n    <div id=\"accessibility-guidelines\">\n      <h2 id=\"accessability\">Accessibility</h2>\n\n      <p>\n        For applications that use the <code class=\"clr-code\">ClrToggle</code> directive and the associated\n        <code class=\"clr-code\">ClrToggleContainer</code> and <code class=\"clr-code\">ClrToggleWrapper</code>\n        components there is built in support that adds accessible behavior to the control and its form.\n        This behavior includes:\n      </p>\n      <p></p>\n      <ol>\n        <li>\n          Programmatically associating the correct label <code class=\"clr-code\">for</code>\n          attribute with the <code class=\"clr-code\">id</code> of the input</li>\n        <li>\n          Automatic wiring up of the <code class=\"clr-code\">aria-describedby</code> behavior with associated\n          <code class=\"clr-code\">clr-control-error</code> elements\n        </li>\n        <li>\n          An <code class=\"clr-code\">aria-live</code> region that can notify screen readers about changes in\n          the control error state\n        </li>\n        <li>\n          Adds the label to a general form summary for screen readers when the control is in an error state\n          after a form submit\n        </li>\n      </ol>\n    </div>\n  </article>\n</clr-doc-wrapper>\n\n"
    },
    {
      "name": "TooltipsAngularDemo",
      "id": "component-TooltipsAngularDemo-d1d4fe042566cd08cf88298ba4217c33",
      "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "moduleId": "module.id",
      "outputs": [],
      "providers": [],
      "selector": "clr-tooltips-angular-demo",
      "styleUrls": ["./tooltips.demo.scss"],
      "styles": [],
      "templateUrl": ["./tooltips-angular.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "example3",
          "defaultValue": "EXAMPLE3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "example4",
          "defaultValue": "EXAMPLE4",
          "type": "",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "example5",
          "defaultValue": "EXAMPLE5",
          "type": "",
          "optional": false,
          "description": "",
          "line": 73
        },
        {
          "name": "example6",
          "defaultValue": "EXAMPLE6",
          "type": "",
          "optional": false,
          "description": "",
          "line": 74
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE1 = `\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 1\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"top-right\" clrSize=\"xs\" *clrIfOpen>\n        <span>Lorem</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`;\n\nconst EXAMPLE2 = `\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 2\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"top-left\" clrSize=\"sm\" *clrIfOpen>\n        <span>Lorem ipsum</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`;\n\nconst EXAMPLE3 = `\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 3\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"bottom-right\" clrSize=\"md\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`;\n\nconst EXAMPLE4 = `\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 4\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"bottom-left\" clrSize=\"lg\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`;\n\nconst EXAMPLE5 = `\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 5\"></clr-icon>\n    <clr-tooltip-content *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`;\n\nconst EXAMPLE6 = `\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 6\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"left\" clrSize=\"sm\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`;\n\n@Component({\n  moduleId: module.id,\n  selector: 'clr-tooltips-angular-demo',\n  styleUrls: ['./tooltips.demo.scss'],\n  templateUrl: './tooltips-angular.html',\n})\nexport class TooltipsAngularDemo {\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n  example3 = EXAMPLE3;\n  example4 = EXAMPLE4;\n  example5 = EXAMPLE5;\n  example6 = EXAMPLE6;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n@import '../../../../../../clr-angular/image/icons.clarity';\n\n.clr-example {\n  position: relative;\n\n  &.squeeze {\n    padding: $clr_baselineRem_1;\n  }\n\n  &.example-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &.example-column {\n      flex-direction: column;\n    }\n  }\n\n  .example-icon {\n    display: inline-block;\n    height: $clr_baselineRem_1;\n    width: $clr_baselineRem_1;\n    padding: 0;\n    background-repeat: no-repeat;\n    background-size: contain;\n    cursor: pointer;\n    vertical-align: middle;\n\n    &.example-add-icon {\n      background-image: generateAddIcon();\n\n      &:hover {\n        background-image: generateAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-edit-icon {\n      background-image: generateEditIcon();\n\n      &:hover {\n        background-image: generateEditIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-folder-add-icon {\n      background-image: generateFolderAddIcon();\n\n      &:hover {\n        background-image: generateFolderAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-more-icon {\n      background-image: generateMoreIcon();\n\n      &:hover {\n        background-image: generateMoreIcon($clr-color-action-600);\n      }\n    }\n  }\n}\n",
          "styleUrl": "./tooltips.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>Top-Right</h6>\n<div class=\"clr-example squeeze example-center\" id=\"top-right\">\n    <clr-tooltip>\n        <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 1\"></clr-icon>\n        <clr-tooltip-content clrPosition=\"top-right\" clrSize=\"xs\" *clrIfOpen>\n            <span>Lorem</span>\n        </clr-tooltip-content>\n    </clr-tooltip>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n\n<h6>Top-Left</h6>\n<div class=\"clr-example squeeze example-center\" id=\"top-left\">\n    <clr-tooltip>\n        <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 2\"></clr-icon>\n        <clr-tooltip-content clrPosition=\"top-left\" clrSize=\"sm\" *clrIfOpen>\n            <span>Lorem ipsum</span>\n        </clr-tooltip-content>\n    </clr-tooltip>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n\n<h6>Bottom-Right</h6>\n<div class=\"clr-example squeeze example-center\" id=\"bottom-right\">\n    <clr-tooltip>\n        <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 3\"></clr-icon>\n        <clr-tooltip-content clrPosition=\"bottom-right\" clrSize=\"md\" *clrIfOpen>\n            <span>Lorem ipsum sit</span>\n        </clr-tooltip-content>\n    </clr-tooltip>\n</div>\n<clr-code-snippet [clrCode]=\"example3\"></clr-code-snippet>\n\n<h6>Bottom-Left</h6>\n<div class=\"clr-example squeeze example-center\" id=\"bottom-left\">\n    <clr-tooltip>\n        <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 4\"></clr-icon>\n        <clr-tooltip-content clrPosition=\"bottom-left\" clrSize=\"lg\" *clrIfOpen>\n            <span>Lorem ipsum sit</span>\n        </clr-tooltip-content>\n    </clr-tooltip>\n</div>\n<clr-code-snippet [clrCode]=\"example4\"></clr-code-snippet>\n\n<h6>Right</h6>\n<div class=\"clr-example squeeze example-center\" id=\"right\">\n    <clr-tooltip>\n        <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 5\"></clr-icon>\n        <clr-tooltip-content *clrIfOpen>\n            <span>Lorem ipsum sit</span>\n        </clr-tooltip-content>\n    </clr-tooltip>\n</div>\n<clr-code-snippet [clrCode]=\"example5\"></clr-code-snippet>\n\n<h6>Left</h6>\n<div class=\"clr-example squeeze example-center\" id=\"left\">\n    <clr-tooltip>\n        <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 6\"></clr-icon>\n        <clr-tooltip-content clrPosition=\"left\" clrSize=\"sm\" *clrIfOpen>\n            <span>Lorem ipsum sit</span>\n        </clr-tooltip-content>\n    </clr-tooltip>\n</div>\n<clr-code-snippet [clrCode]=\"example6\"></clr-code-snippet>\n"
    },
    {
      "name": "TooltipsButtonsDemo",
      "id": "component-TooltipsButtonsDemo-9509e625fb913f3cb3563ee40a336e58",
      "file": "src/website/src/app/documentation/demos/tooltips/tooltips-buttons.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tooltips-buttons-demo",
      "styleUrls": ["./tooltips.demo.scss"],
      "styles": [],
      "templateUrl": ["./tooltips-buttons.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tooltips-buttons-demo',\n  styleUrls: ['./tooltips.demo.scss'],\n  templateUrl: './tooltips-buttons.html',\n})\nexport class TooltipsButtonsDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n@import '../../../../../../clr-angular/image/icons.clarity';\n\n.clr-example {\n  position: relative;\n\n  &.squeeze {\n    padding: $clr_baselineRem_1;\n  }\n\n  &.example-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &.example-column {\n      flex-direction: column;\n    }\n  }\n\n  .example-icon {\n    display: inline-block;\n    height: $clr_baselineRem_1;\n    width: $clr_baselineRem_1;\n    padding: 0;\n    background-repeat: no-repeat;\n    background-size: contain;\n    cursor: pointer;\n    vertical-align: middle;\n\n    &.example-add-icon {\n      background-image: generateAddIcon();\n\n      &:hover {\n        background-image: generateAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-edit-icon {\n      background-image: generateEditIcon();\n\n      &:hover {\n        background-image: generateEditIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-folder-add-icon {\n      background-image: generateFolderAddIcon();\n\n      &:hover {\n        background-image: generateFolderAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-more-icon {\n      background-image: generateMoreIcon();\n\n      &:hover {\n        background-image: generateMoreIcon($clr-color-action-600);\n      }\n    }\n  }\n}\n",
          "styleUrl": "./tooltips.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>Tooltip on Buttons</h6>\n<div class=\"clr-example squeeze example-center example-column\">\n    <div>\n        <span role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-left\">\n            <button class=\"btn btn-primary\">Hover over me!</button>\n            <span class=\"tooltip-content\">Warning!</span>\n        </span>\n        <span role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-top-left\">\n            <button class=\"btn btn-primary\">Hover over me!</button>\n            <span class=\"tooltip-content\">Warning!</span>\n        </span>\n        <span role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-top-right\">\n            <button class=\"btn btn-primary\">Hover over me!</button>\n            <span class=\"tooltip-content\">Warning!</span>\n        </span>\n    </div>\n    <div>\n        <span role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-bottom-left\">\n            <button class=\"btn btn-primary\">Hover over me!</button>\n            <span class=\"tooltip-content\">Warning!</span>\n        </span>\n        <span role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-bottom-right\">\n            <button class=\"btn btn-primary\">Hover over me!</button>\n            <span class=\"tooltip-content\">Warning!</span>\n        </span>\n        <span role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-right\">\n            <button class=\"btn btn-primary\">Hover over me!</button>\n            <span class=\"tooltip-content\">Warning!</span>\n        </span>\n    </div>\n</div>\n"
    },
    {
      "name": "TooltipsDemo",
      "id": "component-TooltipsDemo-d1c1ae5f0cd9042a805607e41a0b67ce",
      "file": "src/website/src/app/documentation/demos/tooltips/tooltips.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tooltips-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tooltips.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-tooltips-demo',\n  templateUrl: './tooltips.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class TooltipsDemo extends ClarityDocComponent {\n  constructor() {\n    super('tooltips');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"a-tooltip-provides-a-short-description-of-a-ui-element\">A tooltip \n            provides a short description of a UI element.</h5>\n\n        <div id=\"code-examples\">\n            <h6 id=\"tooltip\">.tooltip</h6>\n            <p>This class wraps an actionable icon followed by the <code class=\"clr-code\">.tooltip-content</code> \n                to be shown on the icon. The content appears when the user hovers over the icon.</p>\n\n            <h6 id=\"tooltip-content\">.tooltip-content</h6>\n            <p>This class contains the text that will be shown when the tooltip is visible.</p>\n\n            <h3 id=\"sizes\">Sizes</h3>\n\n            <p>Tooltips support four sizes, defined by using one of the following classes with the\n                <code class=\"clr-code\">.tooltip</code> class:</p>\n\n            <ul class=\"list\">\n                <li>.tooltip-xs</li>\n                <li>.tooltip-sm</li>\n                <li>.tooltip-md</li>\n                <li>.tooltip-lg</li>\n            </ul>\n\n            <clr-tooltips-sizes-demo class=\"tooltip-demo\"></clr-tooltips-sizes-demo>\n\n            <h3 id=\"directions\">Directions</h3>\n\n            <p>Tooltips support six directions, defined by using one of the following classes with the\n                <code class=\"clr-code\">.tooltip</code> class:</p>\n\n            <ul class=\"list\">\n                <li>.tooltip-top-right</li>\n                <li>.tooltip-top-left</li>\n                <li>.tooltip-bottom-right</li>\n                <li>.tooltip-bottom-left</li>\n                <li>.tooltip-right</li>\n                <li>.tooltip-left</li>\n            </ul>\n\n            <clr-tooltips-directions-demo class=\"tooltip-demo\"></clr-tooltips-directions-demo>\n        </div>\n\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">Usage</h3>\n\n            <p>Use tooltips for actionable icons that do not have text labels, such as the icons in a \n                toolbar. A tooltip is visible on hover.</p>\n\n            <p>Don’t use a tooltip on:</p>\n\n            <ul class=\"list\">\n                <li><strong>Components.</strong> Provide a descriptive label and use inline or signpost\n                    help for more information.\n                </li>\n                <li><strong>Static images.</strong> Use the HTML alt tag to provide information about the image.</li>\n                <li><strong>Textual links.</strong> Ensure that the link describes its destination and is not truncated.\n                </li>\n            </ul>\n\n            <p>Don’t rely on tooltips to meet accessibility requirements. Rather, ensure that your underlying \n                content is well-structured for accessibility, for example, by using ARIA roles.</p>\n\n            <h4 id=\"placement\">Placement</h4>\n\n            <p>Choose a tooltip position that ensures the entire tooltip is visible on the screen and that \n                the tooltip does not cover an important UI element. By default, the positioning for tooltips \n                is to the top-right of the icon, pointing to its center.</p>\n\n            <p>Other positions are:</p>\n\n            <ul class=\"list\">\n                <li>Top left</li>\n                <li>Bottom right</li>\n                <li>Bottom left</li>\n                <li>Side left</li>\n                <li>Side right</li>\n            </ul>\n\n            <h4 id=\"size\">Size</h4>\n\n            <p>Set a width that accommodates the text string. The default is 240 px. Other choices are\n                72 px, 120 px, and 360 px.</p>\n\n            <h4 id=\"text\">Text</h4>\n\n            <ul class=\"list\">\n                <li>Use a verb phrase to describe the action on the icon, for example, “Edit settings.”</li>\n                <li>Use only plain text and be concise. Tooltips can be a sentence fragment.</li>\n                <li>If more detailed information is required, use another form of help.</li>\n                <li>Use sentence-style caps and no ending punctuation.</li>\n            </ul>\n        </div>\n\n        <div id=\"ng-code-examples\">\n            <h2 id=\"angular-component\">Angular Component</h2>\n\n            <p>\n                The tooltip component uses the <code class=\"clr-code\">*clrIfOpen</code> structural directive\n                (detailed documentation coming soon) on the tooltip content\n                to indicate clearly that said content is only present in the DOM when open. We heavily recommend using\n                it for many reasons: better performance, making the intent clear in your own templates,\n                and following a more natural lifecycle for any directives or components inside of the tooltip.\n            </p>\n            <p>\n                If for some reason this behavior was not the one you wanted, for instance if you want screenreaders to\n                read the tooltip inline as opposed to when the user moves focus to the trigger,\n                we also support the tooltip content without a\n                <code class=\"clr-code\">*clrIfOpen</code> directive on it. It will be created eagerly when the tooltip\n                itself initializes, and will not be destroyed or recreated until the tooltip itself is. Please make\n                sure you know exactly why you are omitting this directive if you end up doing so.\n            </p>\n\n            <h3 id=\"summary-of-options\">Summary of Options</h3>\n\n            <h6><code class=\"clr-code\">&lt;clr-tooltip-content&gt;</code> component</h6>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input / Output</th>\n                    <th class=\"left hidden-xs-down\">Values</th>\n                    <th class=\"left hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrPosition]</b>\n                        <div class=\"hidden-sm-up\">Values:<br/>Direction classnames</div>\n                        <div class=\"hidden-sm-up\">Default: \"right\"</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        top-right, top-left, bottom-right, bottom-left, right, left\n                    </td>\n                    <td class=\"left hidden-xs-down\">right</td>\n                    <td class=\"left\">Sets the direction in which the tooltip will open.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrSize]</b>\n                        <div class=\"hidden-sm-up\">Values: xs, sm, md, lg</div>\n                        <div class=\"hidden-sm-up\">Default: md</div>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        xs, sm, md, lg\n                    </td>\n                    <td class=\"left hidden-xs-down\">md</td>\n                    <td class=\"left\">Sets the size of the tooltip.</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrTooltipLabel]</b>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        string\n                    </td>\n                    <td class=\"left\">\n                        Consumers must supply a unique value that is human readable for screen readers.\n                    </td>\n                    <td class=\"left\">\n                        Populates the value for aria-label attribute needed to enable screen readers\n                        in supported browsers.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[id]</b>\n                    </td>\n                    <td class=\"left hidden-xs-down\">\n                        string\n                    </td>\n                    <td class=\"left\">\n                        Consumers can supply a custom id for the tooltip content. If no id is supplied Clarity will\n                        generate one for the tooltip complex. Note: empty strings, undefined and null values will be\n                        coerced into an empty string and the content id / trigger aria-describedby values will not be\n                        accessible.\n                    </td>\n                    <td class=\"left\">\n                        <span class=\"code\">clr-tooltip-content</span>(id) associates with the\n                        <span class=\"code\">clr-tooltip-trigger</span>(aria-describedby) attribute using this value.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h4 id=\"example\">Example</h4>\n            <p>Below are tooltip examples using various directions and sizes.</p>\n            <clr-tooltips-angular-demo></clr-tooltips-angular-demo>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "TooltipsDirectionsDemo",
      "id": "component-TooltipsDirectionsDemo-fa0cd7a2c5c6797f08ae973a67ac9494",
      "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tooltips-directions-demo",
      "styleUrls": ["./tooltips.demo.scss"],
      "styles": [],
      "templateUrl": ["./tooltips-directions.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "example3",
          "defaultValue": "EXAMPLE3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "example4",
          "defaultValue": "EXAMPLE4",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "example5",
          "defaultValue": "EXAMPLE5",
          "type": "",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "example6",
          "defaultValue": "EXAMPLE6",
          "type": "",
          "optional": false,
          "description": "",
          "line": 60
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE1 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-top-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`;\nconst EXAMPLE2 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-top-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`;\n\nconst EXAMPLE3 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-bottom-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, ipsum</span>\n</a>\n`;\n\nconst EXAMPLE4 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-lg tooltip-bottom-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit</span>\n</a>\n`;\n\nconst EXAMPLE5 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, ipsum</span>\n</a>\n`;\n\nconst EXAMPLE6 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`;\n\n@Component({\n  selector: 'clr-tooltips-directions-demo',\n  styleUrls: ['./tooltips.demo.scss'],\n  templateUrl: './tooltips-directions.html',\n})\nexport class TooltipsDirectionsDemo {\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n  example3 = EXAMPLE3;\n  example4 = EXAMPLE4;\n  example5 = EXAMPLE5;\n  example6 = EXAMPLE6;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n@import '../../../../../../clr-angular/image/icons.clarity';\n\n.clr-example {\n  position: relative;\n\n  &.squeeze {\n    padding: $clr_baselineRem_1;\n  }\n\n  &.example-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &.example-column {\n      flex-direction: column;\n    }\n  }\n\n  .example-icon {\n    display: inline-block;\n    height: $clr_baselineRem_1;\n    width: $clr_baselineRem_1;\n    padding: 0;\n    background-repeat: no-repeat;\n    background-size: contain;\n    cursor: pointer;\n    vertical-align: middle;\n\n    &.example-add-icon {\n      background-image: generateAddIcon();\n\n      &:hover {\n        background-image: generateAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-edit-icon {\n      background-image: generateEditIcon();\n\n      &:hover {\n        background-image: generateEditIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-folder-add-icon {\n      background-image: generateFolderAddIcon();\n\n      &:hover {\n        background-image: generateFolderAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-more-icon {\n      background-image: generateMoreIcon();\n\n      &:hover {\n        background-image: generateMoreIcon($clr-color-action-600);\n      }\n    }\n  }\n}\n",
          "styleUrl": "./tooltips.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>Top-Right</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-top-right\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem ipsum sit</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n\n<h6>Top-Left</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-top-left\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem ipsum sit</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n\n<h6>Bottom-Right</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-bottom-right\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, ipsum</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example3\"></clr-code-snippet>\n\n<h6>Bottom-Left</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-lg tooltip-bottom-left\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example4\"></clr-code-snippet>\n\n<h6>Right</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-right\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, ipsum</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example5\"></clr-code-snippet>\n\n<h6>Left</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-left\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem ipsum sit</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example6\"></clr-code-snippet>\n"
    },
    {
      "name": "TooltipsIconDemo",
      "id": "component-TooltipsIconDemo-0a636cd05fa943e62ce1ad2d3c842f22",
      "file": "src/website/src/app/documentation/demos/tooltips/tooltips-icons.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tooltips-icons-demo",
      "styleUrls": ["./tooltips.demo.scss"],
      "styles": [],
      "templateUrl": ["./tooltips-icons.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tooltips-icons-demo',\n  styleUrls: ['./tooltips.demo.scss'],\n  templateUrl: './tooltips-icons.html',\n})\nexport class TooltipsIconDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n@import '../../../../../../clr-angular/image/icons.clarity';\n\n.clr-example {\n  position: relative;\n\n  &.squeeze {\n    padding: $clr_baselineRem_1;\n  }\n\n  &.example-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &.example-column {\n      flex-direction: column;\n    }\n  }\n\n  .example-icon {\n    display: inline-block;\n    height: $clr_baselineRem_1;\n    width: $clr_baselineRem_1;\n    padding: 0;\n    background-repeat: no-repeat;\n    background-size: contain;\n    cursor: pointer;\n    vertical-align: middle;\n\n    &.example-add-icon {\n      background-image: generateAddIcon();\n\n      &:hover {\n        background-image: generateAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-edit-icon {\n      background-image: generateEditIcon();\n\n      &:hover {\n        background-image: generateEditIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-folder-add-icon {\n      background-image: generateFolderAddIcon();\n\n      &:hover {\n        background-image: generateFolderAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-more-icon {\n      background-image: generateMoreIcon();\n\n      &:hover {\n        background-image: generateMoreIcon($clr-color-action-600);\n      }\n    }\n  }\n}\n",
          "styleUrl": "./tooltips.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>Tooltip on Icons</h6>\n<div class=\"clr-example squeeze example-center\">\n    <span role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm\" data-tooltip=\"I am a tooltip on an icon!\">\n        <span class=\"alert-icon icon-warning\"></span>\n        <span class=\"tooltip-content\">Warning!</span>\n    </span>\n</div>\n"
    },
    {
      "name": "TooltipsSizesDemo",
      "id": "component-TooltipsSizesDemo-f7ebfc5a4054d5b027ed016fc101afd0",
      "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tooltips-sizes-demo",
      "styleUrls": ["./tooltips.demo.scss"],
      "styles": [],
      "templateUrl": ["./tooltips-sizes.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example1",
          "defaultValue": "EXAMPLE1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "example2",
          "defaultValue": "EXAMPLE2",
          "type": "",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "example3",
          "defaultValue": "EXAMPLE3",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "example4",
          "defaultValue": "EXAMPLE4",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE1 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-xs\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`;\nconst EXAMPLE2 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`;\n\nconst EXAMPLE3 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`;\n\nconst EXAMPLE4 = `\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-lg\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`;\n\n@Component({\n  selector: 'clr-tooltips-sizes-demo',\n  styleUrls: ['./tooltips.demo.scss'],\n  templateUrl: './tooltips-sizes.html',\n})\nexport class TooltipsSizesDemo {\n  example1 = EXAMPLE1;\n  example2 = EXAMPLE2;\n  example3 = EXAMPLE3;\n  example4 = EXAMPLE4;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n@import '../../../../../../clr-angular/image/icons.clarity';\n\n.clr-example {\n  position: relative;\n\n  &.squeeze {\n    padding: $clr_baselineRem_1;\n  }\n\n  &.example-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &.example-column {\n      flex-direction: column;\n    }\n  }\n\n  .example-icon {\n    display: inline-block;\n    height: $clr_baselineRem_1;\n    width: $clr_baselineRem_1;\n    padding: 0;\n    background-repeat: no-repeat;\n    background-size: contain;\n    cursor: pointer;\n    vertical-align: middle;\n\n    &.example-add-icon {\n      background-image: generateAddIcon();\n\n      &:hover {\n        background-image: generateAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-edit-icon {\n      background-image: generateEditIcon();\n\n      &:hover {\n        background-image: generateEditIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-folder-add-icon {\n      background-image: generateFolderAddIcon();\n\n      &:hover {\n        background-image: generateFolderAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-more-icon {\n      background-image: generateMoreIcon();\n\n      &:hover {\n        background-image: generateMoreIcon($clr-color-action-600);\n      }\n    }\n  }\n}\n",
          "styleUrl": "./tooltips.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>Extra Small</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-xs\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example1\"></clr-code-snippet>\n\n<h6>Small</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem ipsum sit</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example2\"></clr-code-snippet>\n\n<h6>Medium</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">\n            Lorem ipsum dolor sit amet, ipsum\n        </span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example3\"></clr-code-snippet>\n\n<h6>Large</h6>\n<div class=\"clr-example squeeze example-center\">\n    <a href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-lg\">\n        <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n        <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit</span>\n    </a>\n</div>\n<clr-code-snippet [clrCode]=\"example4\"></clr-code-snippet>\n"
    },
    {
      "name": "TooltipsTextDemo",
      "id": "component-TooltipsTextDemo-a27f232b704bfc58d388d880546131cb",
      "file": "src/website/src/app/documentation/demos/tooltips/tooltips-text.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tooltips-text-demo",
      "styleUrls": ["./tooltips.demo.scss"],
      "styles": [],
      "templateUrl": ["./tooltips-text.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tooltips-text-demo',\n  styleUrls: ['./tooltips.demo.scss'],\n  templateUrl: './tooltips-text.html',\n})\nexport class TooltipsTextDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n@import '../../../../../../clr-angular/image/icons.clarity';\n\n.clr-example {\n  position: relative;\n\n  &.squeeze {\n    padding: $clr_baselineRem_1;\n  }\n\n  &.example-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &.example-column {\n      flex-direction: column;\n    }\n  }\n\n  .example-icon {\n    display: inline-block;\n    height: $clr_baselineRem_1;\n    width: $clr_baselineRem_1;\n    padding: 0;\n    background-repeat: no-repeat;\n    background-size: contain;\n    cursor: pointer;\n    vertical-align: middle;\n\n    &.example-add-icon {\n      background-image: generateAddIcon();\n\n      &:hover {\n        background-image: generateAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-edit-icon {\n      background-image: generateEditIcon();\n\n      &:hover {\n        background-image: generateEditIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-folder-add-icon {\n      background-image: generateFolderAddIcon();\n\n      &:hover {\n        background-image: generateFolderAddIcon($clr-color-action-600);\n      }\n    }\n\n    &.example-more-icon {\n      background-image: generateMoreIcon();\n\n      &:hover {\n        background-image: generateMoreIcon($clr-color-action-600);\n      }\n    }\n  }\n}\n",
          "styleUrl": "./tooltips.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h6>Tooltip on Text</h6>\n<div class=\"clr-example squeeze\">\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    <span role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-top-right\">\n        <a href=\"javascript:void(0)\">Fugit id, eaque cumque</a>\n        <span class=\"tooltip-content\">Warning!</span>\n    </span>\n    cum optio distinctio similique ipsum impedit atque dicta, ratione voluptates dolor ex totam quidem quisquam voluptate. A, itaque.\n</div>\n"
    },
    {
      "name": "TreeBasicDemo",
      "id": "component-TreeBasicDemo-829c2b96b56a53c1471e62c9a0340bda",
      "file": "src/website/src/app/documentation/demos/tree-view/basic-tree/tree-basic.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tree-basic-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./tree-basic.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tree-basic-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: './tree-basic.html',\n})\nexport class TreeBasicDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-tree>\n    <clr-tree-node [clrExpanded]=\"true\">\n        Office Locations\n        <clr-tree-node [clrExpanded]=\"true\">\n            USA\n            <clr-tree-node>Palo Alto, CA (Headquarters)</clr-tree-node>\n            <clr-tree-node>Seattle, WA</clr-tree-node>\n            <clr-tree-node>Austin, TX</clr-tree-node>\n        </clr-tree-node>\n        <clr-tree-node>\n            UK\n            <clr-tree-node>London</clr-tree-node>\n        </clr-tree-node>\n        <clr-tree-node>\n            India\n            <clr-tree-node>Bangalore, KA</clr-tree-node>\n            <clr-tree-node>Pune, MH</clr-tree-node>\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>\n"
    },
    {
      "name": "TreeBasicDMDemo",
      "id": "component-TreeBasicDMDemo-42888bfaabd4b10b84ef411dfad86cec",
      "file": "src/website/src/app/documentation/demos/tree-view/basic-tree-DM/tree-basic-DM.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tree-basic-dm-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["tree-basic-DM.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 67
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<clr-tree>\n    <clr-tree-node [clrExpanded]=\"true\">\n        David Wallace (CFO)\n        <clr-tree-node [clrExpanded]=\"true\">\n            Michael Scott (Regional Manager)\n\n            <clr-tree-node>Dwight K. Schrute (Assistant to the Regional Manager)</clr-tree-node>\n\n            <clr-tree-node>\n                Jim Halpert (Head of Sales)\n                <clr-tree-node>Andy Bernard</clr-tree-node>\n                <clr-tree-node>Stanley Hudson</clr-tree-node>\n                <clr-tree-node>Phyllis Vance</clr-tree-node>\n                <clr-tree-node>Todd Packer</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Angela Martin (Head of Accounting)\n                <clr-tree-node>Kevin Malone</clr-tree-node>\n                <clr-tree-node>Oscar Martinez</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Kelly Kapoor (Head of Customer Service)\n                <clr-tree-node>Ryan Howard (Temp)</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Creed Bratton (Quality Assurance)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Meredith Palmer (Supplier Relations)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Toby Flenderson (Human Resources)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Pam Beesly (Reception)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Darryl Philbin (Warehouse)\n            </clr-tree-node>\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>\n`;\n\n@Component({\n  selector: 'clr-tree-basic-dm-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: 'tree-basic-DM.html',\n})\nexport class TreeBasicDMDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-tree>\n    <clr-tree-node [clrExpanded]=\"true\">\n        David Wallace (CFO)\n        <clr-tree-node [clrExpanded]=\"true\">\n            Michael Scott (Regional Manager)\n    \n            <clr-tree-node>Dwight K. Schrute (Assistant to the Regional Manager)</clr-tree-node>\n    \n            <clr-tree-node>\n                Jim Halpert (Head of Sales)\n                <clr-tree-node>Andy Bernard</clr-tree-node>\n                <clr-tree-node>Stanley Hudson</clr-tree-node>\n                <clr-tree-node>Phyllis Vance</clr-tree-node>\n                <clr-tree-node>Todd Packer</clr-tree-node>\n            </clr-tree-node>\n    \n            <clr-tree-node>\n                Angela Martin (Head of Accounting)\n                <clr-tree-node>Kevin Malone</clr-tree-node>\n                <clr-tree-node>Oscar Martinez</clr-tree-node>\n            </clr-tree-node>\n    \n            <clr-tree-node>\n                Kelly Kapoor (Head of Customer Service)\n                <clr-tree-node>Ryan Howard (Temp)</clr-tree-node>\n            </clr-tree-node>\n    \n            <clr-tree-node>\n                Creed Bratton (Quality Assurance)\n            </clr-tree-node>\n    \n            <clr-tree-node>\n                Meredith Palmer (Supplier Relations)\n            </clr-tree-node>\n    \n            <clr-tree-node>\n                Toby Flenderson (Human Resources)\n            </clr-tree-node>\n    \n            <clr-tree-node>\n                Pam Beesly (Reception)\n            </clr-tree-node>\n    \n            <clr-tree-node>\n                Darryl Philbin (Warehouse)\n            </clr-tree-node>\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>\n\n<clr-code-snippet [clrCode]=\"example\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "TreeNodeLabelChangeOnExpandDemo",
      "id": "component-TreeNodeLabelChangeOnExpandDemo-dad54f711f6d8db5d0388b3b3d261aac",
      "file": "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tree-node-label-change-expand-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./label-change-on-expand.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "exampleTs",
          "defaultValue": "EXAMPLE_TS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "expanded",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE_HTML = `\n<clr-tree>\n  <clr-tree-node [(clrExpanded)]=\"expanded\">\n      {{expanded ? \"I am expanded\" : \"I am collapsed\"}}\n      <clr-tree-node>\n          Child Tree Node\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`;\n\nconst EXAMPLE_TS = `\nexport class TreeNodeLabelChangeOnExpandDemo {\n    expanded: boolean = true;\n}\n`;\n\n@Component({\n  selector: 'clr-tree-node-label-change-expand-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: './label-change-on-expand.html',\n})\nexport class TreeNodeLabelChangeOnExpandDemo {\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  expanded: boolean = true;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-tree>\n  <clr-tree-node [(clrExpanded)]=\"expanded\">\n    {{expanded ? \"I am expanded\" : \"I am collapsed\"}}\n    <clr-tree-node>\n        Child Tree Node\n    </clr-tree-node>\n</clr-tree-node>\n</clr-tree>\n\n<clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n<clr-code-snippet [clrCode]=\"exampleTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n"
    },
    {
      "name": "TreeNodeRoutingDemo",
      "id": "component-TreeNodeRoutingDemo-c912aae8ebf53e9bf20594d69dd4598c",
      "file": "src/website/src/app/documentation/demos/tree-view/tree-node-routing/tree-node-routing.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tree-node-routing-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["tree-node-routing.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "content",
          "defaultValue":
            "[\n    {\n      title: 'Abbey Road (1969)',\n      content: `\n                Abbey Road is the eleventh studio album by the English rock band \n                the Beatles, released on 26 September 1969 by Apple Records. \n                The recording sessions for the album were the last in which all \n                four Beatles participated. Although Let It Be was the final album \n                that the Beatles completed before the band's dissolution in April 1970, \n                most of the album had been recorded before the Abbey Road sessions began.\n                A double A-side single from the album, \"Something\"/\"Come Together\", \n                released in October, topped the Billboard chart in the US.\n            `,\n    },\n    {\n      title: 'Revolver (1966)',\n      content: `\n                Revolver is the seventh studio album by the English rock band the Beatles. \n                It was released on 5 August 1966 in the United Kingdom and three days \n                later in the United States. The record spent 34 weeks on the UK Albums \n                Chart, for seven of which it held the number one spot. Reduced to eleven \n                songs for the North American market, Revolver was the last Beatles album\n                to be subjected to Capitol Records' policy of altering the band's \n                intended running order and content. In America, the album topped\n                the Billboard Top LPs list for six weeks.\n            `,\n    },\n    {\n      title: 'Rubber Soul (1965)',\n      content: `\n                Rubber Soul is a 1965 album by the Beatles, their sixth UK album, \n                and the tenth released in America. Released on 3 December, it met\n                with a highly favourable critical response and topped record charts\n                in the United Kingdom for several weeks, as well as in the United States,\n                where it was issued with a different selection of tracks. Produced by \n                George Martin, Rubber Soul incorporates a mix of 1960s pop, soul, and \n                folk music styles. In 2012, Rubber Soul was ranked number five on \n                Rolling Stone magazine's list of the \"500 Greatest Albums of All Time\".\n            `,\n    },\n  ]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "pane",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [
        {
          "name": "showPane",
          "args": [
            {
              "name": "pane",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43,
          "jsdoctags": [
            {
              "name": "pane",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE_HTML = `\n<clr-tree>\n  <clr-tree-node [clrExpanded]=\"true\">\n    The Beatles\n    <clr-tree-node>\n        <a [routerLink]=\"['./album1']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Abbey Road</a>\n    </clr-tree-node>\n    <clr-tree-node>\n        <a [routerLink]=\"['./album2']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Revolver</a>\n    </clr-tree-node>\n    <clr-tree-node>\n        <a [routerLink]=\"['./album3']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Rubber Soul</a>\n    </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n<router-outlet></router-outlet>\n`;\n\n@Component({\n  selector: 'clr-tree-node-routing-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: 'tree-node-routing.html',\n})\nexport class TreeNodeRoutingDemo {\n  exampleHtml = EXAMPLE_HTML;\n\n  pane: number = 0;\n\n  showPane(pane: number) {\n    this.pane = pane;\n  }\n\n  content: any[] = [\n    {\n      title: 'Abbey Road (1969)',\n      content: `\n                Abbey Road is the eleventh studio album by the English rock band \n                the Beatles, released on 26 September 1969 by Apple Records. \n                The recording sessions for the album were the last in which all \n                four Beatles participated. Although Let It Be was the final album \n                that the Beatles completed before the band's dissolution in April 1970, \n                most of the album had been recorded before the Abbey Road sessions began.\n                A double A-side single from the album, \"Something\"/\"Come Together\", \n                released in October, topped the Billboard chart in the US.\n            `,\n    },\n    {\n      title: 'Revolver (1966)',\n      content: `\n                Revolver is the seventh studio album by the English rock band the Beatles. \n                It was released on 5 August 1966 in the United Kingdom and three days \n                later in the United States. The record spent 34 weeks on the UK Albums \n                Chart, for seven of which it held the number one spot. Reduced to eleven \n                songs for the North American market, Revolver was the last Beatles album\n                to be subjected to Capitol Records' policy of altering the band's \n                intended running order and content. In America, the album topped\n                the Billboard Top LPs list for six weeks.\n            `,\n    },\n    {\n      title: 'Rubber Soul (1965)',\n      content: `\n                Rubber Soul is a 1965 album by the Beatles, their sixth UK album, \n                and the tenth released in America. Released on 3 December, it met\n                with a highly favourable critical response and topped record charts\n                in the United Kingdom for several weeks, as well as in the United States,\n                where it was issued with a different selection of tracks. Produced by \n                George Martin, Rubber Soul incorporates a mix of 1960s pop, soul, and \n                folk music styles. In 2012, Rubber Soul was ranked number five on \n                Rolling Stone magazine's list of the \"500 Greatest Albums of All Time\".\n            `,\n    },\n  ];\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-md-4\">\n        <clr-tree>\n            <clr-tree-node [clrExpanded]=\"true\">\n                The Beatles\n                <clr-tree-node>\n                    <button\n                            (click)=\"showPane(0)\"\n                            class=\"clr-treenode-link\"\n                            [class.active]=\"pane === 0\">Abbey Road\n                    </button>\n                </clr-tree-node>\n    \n                <clr-tree-node>\n                    <button\n                            (click)=\"showPane(1)\"\n                            class=\"clr-treenode-link\"\n                            [class.active]=\"pane === 1\">Revolver\n                    </button>\n                </clr-tree-node>\n    \n                <clr-tree-node>\n                    <button\n                            (click)=\"showPane(2)\"\n                            class=\"clr-treenode-link\"\n                            [class.active]=\"pane === 2\">Rubber Soul\n                    </button>\n                </clr-tree-node>\n            </clr-tree-node>\n        </clr-tree>\n    </div>\n    <div class=\"clr-col-12 clr-col-md-8 example-outlet\">\n        <h4 style=\"margin-top: 0\">{{content[pane].title}}</h4>\n        <p>{{content[pane].content}}</p>\n    </div>\n</div>\n\n<clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "TreeViewDemo",
      "id": "component-TreeViewDemo-f70aa52877799b9ed689ffad27fc854c",
      "file": "src/website/src/app/documentation/demos/tree-view/tree-view.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tree-view-demo",
      "styleUrls": [],
      "styles": [
        "\n        .demo-list {\n            column-count: 2;\n            list-style-position: inside;\n        }\n    "
      ],
      "templateUrl": ["./tree-view.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-tree-view-demo',\n  templateUrl: './tree-view.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n  styles: [\n    `\n        .demo-list {\n            column-count: 2;\n            list-style-position: inside;\n        }\n    `,\n  ],\n})\nexport class TreeViewDemo extends ClarityDocComponent {\n  constructor() {\n    super('tree-view');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData":
        "\n        .demo-list {\n            column-count: 2;\n            list-style-position: inside;\n        }\n    \n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 25
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n\n        <h5 class=\"component-summary\" id=\"tree-view-header\">\n            A tree is a hierarchical component that shows the visual representation\n            of the parent-child relationship between nodes.\n        </h5>\n\n        <div id=\"design-guidelines\">\n            <h3>Three Main Variations</h3>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Basic Tree</h4>\n                    <p>\n                        A basic tree provides a tree structure with named nodes and an\n                        arrow to expand and collapse child nodes.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-tree-basic-demo></clr-tree-basic-demo>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Basic Tree With Icons</h4>\n                    <p>\n                        A tree can include icons to represent the type of nodes within that group.\n                        Icons appear between the collapse/expand arrow and the parent node title.\n                    </p>\n                    <p>\n                        When using icons in a tree, make sure to use them on all nodes.\n                        Do not alternate between using and not using icons within the same tree.\n                    </p>\n                    <p>\n                        If using a tree in the context of other components, make sure those icons\n                        are distinctive and easily recognizable. Use neutral colors to avoid\n                        overloading the tree and related components with colors and shapes.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-tree-view-dynamic-demo></clr-tree-view-dynamic-demo>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Checkbox Tree</h4>\n                    <p>\n                        A checkbox tree features checkboxes between the collapse/expand\n                        arrow and the name to indicate whether a node is selected. A\n                        parent node with children that are both selected and not selected\n                        is shown with an “indeterminate” state.\n                    </p>\n                    <p>\n                        Checkbox trees should not be used together with icons for the nodes.\n                        As with icon trees, make sure to put checkboxes on all nodes of a\n                        checkbox tree. Do not alternate between types of trees in a checkbox\n                        tree.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-small-selection-tree-demo></clr-small-selection-tree-demo>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Style</h3>\n\n            <p>\n                The styling of each piece of a tree node is consistent across the different types of trees.\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Touch Targets</h4>\n                    <p>\n                        The dimensions of the expand/collapse arrow and the node title allow\n                        for a comfortable touch target allowing use with a mouse or a touch screen.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img\n                                        src=\"assets/images/documentation/tree-view/example_tree_touch.svg\"\n                                        alt=\"Touch Targets\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"alert alert-info has-margin-top-b2\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                        </div>\n                        <div class=\"alert-text\">\n                            Touch Targets are relevant even outside of a mobile form factor.\n                            Many new desktop environments, especially those running Windows,\n                            allow for the use of a touch screen and should be considered\n                            when designing your applications.\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Behavior</h3>\n            <p>\n                To explain the behavior of the tree, here is the terminology we’ll be using in this section:\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <h6>Highlight</h6>\n                    <p>Click on a node in the tree to either “highlight” it or navigate to its relative content.</p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <h6>Select</h6>\n                    <p>Choose items to apply an action. For example, selecting a checkbox in the tree.</p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <h6>Expand / Collapse</h6>\n                    <p>Use the arrow to the left of a node to expand or collapse a node in the tree.</p>\n                </div>\n            </div>\n\n            <h3>Interacting With Nodes</h3>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Expanding / Collapsing Nodes</h4>\n                    <p>\n                        To expand or collapse a parent node, the user clicks on the expand/collapse arrow.\n                        Clicking on the node item itself does not expand or collapse a node.\n                        It serves as a highlighting mechanism.\n                    </p>\n                    <p>\n                        In read-only trees where highlighting is not an option,\n                        this pattern remains true for consistency.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <img\n                                        src=\"assets/images/documentation/tree-view/example_tree_interacting.svg\"\n                                        alt=\"Interacting With Nodes\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Highlighting Tree Nodes</h4>\n                    <p>\n                        To navigate to a content area based on a tree node or to highlight\n                        a tree node in order to take a subsequent action based on\n                        the selection, a user clicks on the node title itself.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <img\n                                        src=\"assets/images/documentation/tree-view/example_tree_highlighting.svg\"\n                                        alt=\"Highlighting Tree Nodes\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h4>Interacting With Checkbox Trees</h4>\n                    <p>\n                        With a checkbox tree, a user is able to perform one or a\n                        combination of three actions by clicking on one of three\n                        distinct targets:\n                    </p>\n                    <ol class=\"list\">\n                        <li style=\"margin-top:24px\">\n                            Expanding and Collapsing: a user is able to perform this\n                            action by clicking on the expand / collapse arrow.\n                        </li>\n                        <li style=\"margin-top:24px\">\n                            Checking a Checkbox: this would require clicking on the\n                            checkbox itself to check or uncheck a treenode. This\n                            will also affect the status of the parent node’s checkbox.\n                        </li>\n                        <li style=\"margin-top:24px\">\n                            Highlighting Tree Node: a user can highlight a tree node by\n                            clicking on the name (label) of the tree node. This allows\n                            for the possibility of loading content based on selection\n                            to provide more information on a tree node.\n                        </li>\n                    </ol>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h4-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <img\n                                        src=\"assets/images/documentation/tree-view/example_tree_checkbox_interacting.svg\"\n                                        alt=\"Interacting with Checkbox Trees\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Loading Data</h3>\n            <p>The way to load data within the tree is based on the scenario in which the tree is being used.</p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-5\">\n                    <h6>Load Parent Nodes First</h6>\n                    <p>\n                        With a dynamic tree, make sure to load the parent\n                        nodes first and then lazy load child nodes when requested.\n                    </p>\n                    <p>\n                        A general goal to keep in mind is that you want to minimize\n                        the time a user needs to spend before their first\n                        interaction with the tree as well as every\n                        subsequent interaction afterwards.\n                    </p>\n                </div>\n                <div class=\"clr-col-12 clr-col-md-6 clr-offset-md-1\">\n                    <div class=\"clrweb-DoxMedia has-h6-margin\">\n                        <div class=\"clrweb-DoxMedia-block\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <img\n                                        src=\"assets/images/documentation/tree-view/example_tree_lazyloading.svg\"\n                                        alt=\"Loading Data\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <div class=\"clr-row\" style=\"margin-top: 24px\">\n                <div class=\"clr-col-12\">\n                    <ul class=\"list demo-list\">\n                        <li><a routerLink=\".\" fragment=\"basic-tree\">Basic tree</a></li>\n                        <li><a routerLink=\".\" fragment=\"expanded-nodes\">Keeping track of expanded nodes</a></li>\n                        <li><a routerLink=\".\" fragment=\"routing-tree\">Routing using a tree</a></li>\n                        <li><a routerLink=\".\" fragment=\"dynamically-generated\">Generating A tree dynamically</a></li>\n                        <li><a routerLink=\".\" fragment=\"checkbox-tree\">Checkbox tree</a></li>\n                        <li><a routerLink=\".\" fragment=\"boolean-selection\">Binding selection to a boolean</a></li>\n                        <li><a routerLink=\".\" fragment=\"recursive-tree\">Recursive tree</a></li>\n                        <li><a routerLink=\".\" fragment=\"lazy-loading\">Lazy loading children</a></li>\n                        <li><a routerLink=\".\" fragment=\"lazy-loading-selection\">Lazy loading and selection</a></li>\n                        <li><a routerLink=\".\" fragment=\"lazy-loading-recursive\">Lazy-loading recursive trees</a></li>\n                        <li><a routerLink=\".\" fragment=\"api-tables\">Summary of options</a></li>\n                    </ul>\n                </div>\n            </div>\n\n            <h3 id=\"basic-tree\">Basic Tree</h3>\n\n            <p>\n                A basic tree can be created by simply nesting\n                <code class=\"clr-code\">clr-tree-node</code> components at will.\n                To pre-expand a node, you can use the <code class=\"clr-code\">[clrExpanded]</code> input.\n            </p>\n\n            <div class=\"alert alert-info has-margin-top-b2\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                        </div>\n                        <div class=\"alert-text\">\n                            Please note that every tree requires to have root node to work properly,\n                            this is done by having <code class=\"clr-code\">clr-tree</code> as root wrapper, please\n                            check the example below.\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <section class=\"clr-demo\">\n                <clr-tree-basic-dm-demo></clr-tree-basic-dm-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h3 id=\"expanded-nodes\">Keeping track of expanded nodes</h3>\n\n            <p>\n                If you need to keep track of whether certain nodes are expanded or collapsed,\n                each tree node offers a <code class=\"clr-code\">[(clrExpanded)]</code> boolean two-way binding.\n            </p>\n\n            <section class=\"clr-demo\">\n                <clr-tree-node-label-change-expand-demo></clr-tree-node-label-change-expand-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h3 id=\"routing-tree\">Routing using a Tree</h3>\n\n            <p>\n                Use the <code class=\"clr-code\">.clr-treenode-link</code> class to style content inside of a Tree Node\n                as clickable. To indicate an active Tree Node use the <code class=\"clr-code\">.active</code> class\n                along with <code class=\"clr-code\">.clr-treenode-link</code>.\n            </p>\n\n            <section class=\"clr-demo\">\n                <clr-tree-node-routing-demo></clr-tree-node-routing-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h3 id=\"dynamically-generated\">Generating A Tree Dynamically</h3>\n\n            <section class=\"clr-demo\">\n                <clr-tree-view-dynamic-demo\n                        [clrDemoShowCode]=\"true\"\n                        [clrDemoShowHalf]=\"true\"></clr-tree-view-dynamic-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h3 id=\"checkbox-tree\">Checkbox Tree</h3>\n\n            <p>\n                Selection on the whole tree is enabled as soon as one of the nodes uses the\n                <code class=\"clr-code\">[(clrSelected)]</code> two-way binding. This two-way binding can receive\n                either booleans or <code class=\"clr-code\">ClrSelectedState</code> enum values, which can be\n                <code class=\"clr-code\">UNSELECTED</code>, <code class=\"clr-code\">SELECTED</code> or\n                <code class=\"clr-code\">INDETERMINATE</code>. It will however always output\n                <code class=\"clr-code\">ClrSelectedState</code> enum values because the node could become indeterminate,\n                so true two-way binding should be used on a <code class=\"clr-code\">ClrSelectedState</code> property.\n            </p>\n            <p>\n                As with any two-way binding, the input can be used to pre-select nodes or dynamically select them\n                due to external actions.\n            </p>\n\n            <section class=\"clr-demo\">\n                <clr-selection-tree-demo></clr-selection-tree-demo>\n            </section>\n\n\n            <h3 id=\"boolean-selection\">Binding selection to a boolean</h3>\n\n            <p>\n                If you know a specific node can never become indeterminate, you probably want to use a boolean\n                property on your node. As mentioned previously, <code class=\"clr-code\">[(clrSelected)]</code>\n                always outputs <code class=\"clr-code\">ClrSelectedState</code> enum values, making two-way binding\n                with a boolean problematic. The most straightforward solution is to use\n                <a href=\"https://angular.io/guide/template-syntax#two-way-binding---\">\n                    the de-sugarized syntax of the two-way binding\n                </a>, transforming the output to a boolean directly.\n            </p>\n\n            <section class=\"clr-demo\">\n                <clr-boolean-selection-tree-demo></clr-boolean-selection-tree-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h3 id=\"recursive-tree\">Recursive tree</h3>\n\n            <p>\n                If the data you are displaying is recursive or has an unknown depth, you can use our\n                <code class=\"clr-code\">*clrRecursiveFor</code> structural directive to recursively iterate over\n                your data. It has the same syntax as <code class=\"clr-code\">*ngFor</code>, and accepts an additional\n                <code class=\"clr-code\">getChildren</code> parameter that receives a node and should return its\n                children. Please note that it needs to be used inside of a\n                <code class=\"clr-code\">&lt;clr-tree&gt;</code> to function properly.\n            </p>\n\n            <section class=\"clr-demo\">\n                <clr-recursive-tree-demo></clr-recursive-tree-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h3 id=\"lazy-loading\">Lazy-loading children</h3>\n\n            <p>\n                If your tree is too large to be fully build on initialization or getting the children of a node is\n                an expensive operation like an HTTP request, you might want to lazy-load tree nodes, only loading\n                the ones that are currently displayed. To lazy-load children for a simple tree component,\n                you need to combine several features as follows:\n            </p>\n            <ul>\n                <li>\n                    use our <code class=\"clr-code\">&lt;clr-tree&gt;</code> root component, giving it a\n                    <code class=\"clr-code\">[clrLazy]=\"true\"</code> input,\n                </li>\n                <li>\n                    leverage our <code class=\"clr-code\">*clrIfExpanded</code> structural directive to only\n                    instantiate children when they are displayed,\n                </li>\n                <li>\n                    listen to the <code class=\"clr-code\">(clrIfExpandedChange)</code> output\n                    to fetch the children's data,\n                </li>\n                <li>\n                    add a <code class=\"clr-code\">[clrLoading]</code> boolean input to the node if fetching children\n                    is asynchronous, to display a spinner while waiting for the data to be loaded.\n                </li>\n            </ul>\n\n            <section class=\"clr-demo\">\n                <clr-lazy-loading-tree-demo></clr-lazy-loading-tree-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h3 id=\"lazy-loading-selection\">Lazy-loading and selection</h3>\n\n            <p>\n                When lazy-loading nodes in a tree, Clarity only has partial information on the overall data\n                and cannot link parent and children state as it does in the previous cases. For instance,\n                in a lazy-loaded file system tree, our tree component does not know the contents of a folder until\n                it is expanded. This means that if the user selects the folder without expanding it first we cannot\n                output the selection change for the files, only for the folder itself. It is up to the application\n                or up to the server to preserve consistency, ensuring files in the folder are selected if the folder\n                itself is.\n            </p>\n\n            <section class=\"clr-demo\">\n                <clr-lazy-loading-selection-tree-demo></clr-lazy-loading-selection-tree-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h3 id=\"lazy-loading-recursive\">Lazy-loading recursive trees</h3>\n\n            <p>\n                Lazy-loading data for recursive trees is actually the simplest case: as soon as you set\n                <code class=\"clr-code\">[clrLazy]=\"true\"</code> on the parent\n                <code class=\"clr-code\">&lt;clr-tree&gt;</code>, the <code class=\"clr-code\">getChildren</code>\n                function will only be lazily called when a node becomes expanded,\n                and supports both <code class=\"clr-code\">Promise</code> and <code class=\"clr-code\">Observable</code>\n                return types if you need to fetch children asynchronously.\n            </p>\n            <p>\n                By default, recursive trees will pre-load on level ahead to know if the currently displayed nodes are\n                expandable of not. If you do not want this behavior and have a way of knowing if a node is\n                expandable without fetching its children, you can prevent the extra loading by using the\n                <code class=\"clr-code\">[clrExpandable]</code> boolean input on nodes based on your own condition.\n            </p>\n\n            <section class=\"clr-demo\">\n                <clr-lazy-loading-recursive-tree-demo></clr-lazy-loading-recursive-tree-demo>\n            </section>\n\n            <p>\n                <a routerLink=\".\" fragment=\"examples\">Back to navigation</a>\n            </p>\n\n            <h2 id=\"api-tables\">Summary of Options</h2>\n\n            <h4>Tree <code class=\"clr-code\">&lt;clr-tree&gt;</code></h4>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[(clrLazy)]</b>\n                        <div class=\"hidden-sm-up\">Type: boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">boolean</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Indicates to the tree that children nodes should be lazy-loaded\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h4>Tree Node <code class=\"clr-code\">&lt;clr-tree-node&gt;</code></h4>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[(clrSelected)]</b>\n                        <div class=\"hidden-sm-up\">Type: ClrSelectedState</div>\n                        <div class=\"hidden-sm-up\">Default: UNSELECTED</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">ClrSelectedState</td>\n                    <td class=\"hidden-xs-down\">UNSELECTED</td>\n                    <td class=\"left\">\n                        Two-way binding on the state of a Tree Node: UNSELECTED, SELECTED or INDETERMINATE.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[(clrExpanded)]</b>\n                        <div class=\"hidden-sm-up\">Type: boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">boolean</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Two-way binding on the expanded/collapsed state of the node.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrExpandable]</b>\n                        <div class=\"hidden-sm-up\">Type: boolean | undefined</div>\n                        <div class=\"hidden-sm-up\">Default: undefined</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">boolean | undefined</td>\n                    <td class=\"hidden-xs-down\">undefined</td>\n                    <td class=\"left\">\n                        Forces a node to be expandable or node, regardless of its children.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h4>Recursive iterator <code class=\"clr-code\">*clrRecursiveFor</code></h4>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrRecursiveForOf]</b>\n                        <div class=\"hidden-sm-up\">Type: T | T[]</div>\n                        <div class=\"hidden-sm-up\">Default: none</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">T | T[]</td>\n                    <td class=\"hidden-xs-down\">none</td>\n                    <td class=\"left\">\n                        Root node(s) of the recursive tree, to begin the iteration.\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrRecursiveForGetChildren]</b>\n                        <!-- TODO: Use ClrGetChildrenFunction<T> as soon as we have it -->\n                        <div class=\"hidden-sm-up\">Type: T => T[] | Promise&lt;T[]&gt; | Observable&lt;T[]&gt;</div>\n                        <div class=\"hidden-sm-up\">Default: none</div>\n                    </td>\n                    <!-- TODO: Use ClrGetChildrenFunction<T> as soon as we have it -->\n                    <td class=\"hidden-xs-down\">T => T[] | Promise&lt;T[]&gt; | Observable&lt;T[]&gt;</td>\n                    <td class=\"hidden-xs-down\">none</td>\n                    <td class=\"left\">\n                        The function to call in order to iterate over the children of a node. Can return an\n                        asynchronous result in the form of a Promise or an Observable.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h4><code class=\"clr-code\">*clrIfExpanded</code> directive</h4>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[(clrIfExpanded)]</b>\n                        <div class=\"hidden-sm-up\">Type: boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">boolean</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Two-way binding on the expanded/collapsed state of the node.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <h4>Loading directive <code class=\"clr-code\">[clrLoading]</code></h4>\n\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th class=\"left\">Input/Output</th>\n                    <th class=\"hidden-xs-down\">Values</th>\n                    <th class=\"hidden-xs-down\">Default</th>\n                    <th class=\"left\">Effect</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td class=\"left\">\n                        <b>[clrLoading]</b>\n                        <div class=\"hidden-sm-up\">Type: boolean</div>\n                        <div class=\"hidden-sm-up\">Default: false</div>\n                    </td>\n                    <td class=\"hidden-xs-down\">boolean</td>\n                    <td class=\"hidden-xs-down\">false</td>\n                    <td class=\"left\">\n                        Activates a spinner to indicate that children nodes are loading.\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "TreeViewDynamicDemo",
      "id": "component-TreeViewDynamicDemo-e56cb9c00798b182d1206a4fcc02fe89",
      "file": "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-tree-view-dynamic-demo",
      "styleUrls": ["../tree-view.demo.scss"],
      "styles": [],
      "templateUrl": ["./tree-view-dynamic.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "clrDemoShowCode",
          "defaultValue": "false",
          "line": 97,
          "type": "boolean"
        },
        {
          "name": "clrDemoShowHalf",
          "defaultValue": "false",
          "line": 98,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "exampleHtml",
          "defaultValue": "EXAMPLE_HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 100
        },
        {
          "name": "exampleTs",
          "defaultValue": "EXAMPLE_TS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 101
        },
        {
          "name": "rootDirectory",
          "defaultValue":
            "[\n    {\n      name: 'Applications',\n      icon: 'folder',\n      expanded: true,\n      files: [\n        {\n          icon: 'calendar',\n          name: 'Calendar',\n          active: true,\n        },\n        {\n          icon: 'line-chart',\n          name: 'Charts',\n          active: false,\n        },\n        {\n          icon: 'dashboard',\n          name: 'Dashboard',\n          active: false,\n        },\n        {\n          icon: 'map',\n          name: 'Maps',\n          active: false,\n        },\n        {\n          icon: 'email',\n          name: 'Mail',\n          active: false,\n        },\n        {\n          icon: 'bar-chart',\n          name: 'Numbers',\n          active: false,\n        },\n        {\n          icon: 'tasks',\n          name: 'Tasks',\n          active: false,\n        },\n        {\n          icon: 'flag',\n          name: 'Reminders',\n          active: false,\n        },\n      ],\n    },\n    {\n      name: 'Files',\n      icon: 'folder',\n      expanded: false,\n      files: [\n        {\n          icon: 'file',\n          name: 'Cover Letter.doc',\n          active: false,\n        },\n        {\n          icon: 'file',\n          name: 'Flyer.doc',\n          active: false,\n        },\n        {\n          icon: 'file',\n          name: 'Resume.doc',\n          active: false,\n        },\n        {\n          icon: 'file',\n          name: 'Notes.txt',\n          active: false,\n        },\n      ],\n    },\n    {\n      name: 'Images',\n      icon: 'folder',\n      expanded: false,\n      files: [\n        {\n          icon: 'image',\n          name: 'Screenshot.png',\n          active: false,\n        },\n        {\n          icon: 'image',\n          name: 'Pic.png',\n          active: false,\n        },\n        {\n          icon: 'image',\n          name: 'Portfolio.jpg',\n          active: false,\n        },\n      ],\n    },\n  ]",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 103
        }
      ],
      "methodsClass": [
        {
          "name": "openFile",
          "args": [
            {
              "name": "directoryName",
              "type": ""
            },
            {
              "name": "fileName",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 202,
          "jsdoctags": [
            {
              "name": "directoryName",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "fileName",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setFileActive",
          "args": [
            {
              "name": "dir",
              "type": "any"
            },
            {
              "name": "fileName",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 214,
          "jsdoctags": [
            {
              "name": "dir",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "fileName",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\nconst EXAMPLE_HTML = `\n<clr-tree>\n  <clr-tree-node *ngFor=\"let directory of rootDirectory\" [(clrExpanded)]=\"directory.expanded\">\n      <clr-icon [attr.shape]=\"directory.icon\"></clr-icon>\n      {{directory.name}}\n      <clr-tree-node *ngFor=\"let file of directory.files\">\n          <button\n                  (click)=\"openFile(directory.name, file.name)\"\n                  class=\"clr-treenode-link\"\n                  [class.active]=\"file.active\">\n              <clr-icon [attr.shape]=\"file.icon\"></clr-icon>\n              {{file.name}}\n          </button>\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`;\n\nconst EXAMPLE_TS = `\n    rootDirectory: any[] = [\n        {\n            name: \"Applications\",\n            icon: \"folder\",\n            expanded: true,\n            files: [\n                {\n                    icon: \"calendar\",\n                    name: \"Calendar\",\n                    active: true\n                },\n                {\n                    icon: \"line-chart\",\n                    name: \"Charts\",\n                    active: false\n                },\n                {\n                    icon: \"dashboard\",\n                    name: \"Dashboard\",\n                    active: false\n                },\n                {\n                    icon: \"map\",\n                    name: \"Maps\",\n                    active: false\n                },\n                ...\n            ]\n        },\n        {\n            name: \"Files\",\n            icon: \"folder\",\n            expanded: false,\n            files: [\n                {\n                    icon: \"file\",\n                    name: \"Cover Letter.doc\",\n                    active: false\n                },\n                ...\n            ]\n        },\n        {\n            name: \"Images\",\n            icon: \"folder\",\n            expanded: false,\n            files: [\n                {\n                    icon: \"image\",\n                    name: \"Screenshot.png\",\n                    active: false\n                },\n                ...\n            ]\n        }\n    ];\n    \n    openFile(directoryName: string, fileName: string) {\n        ...\n        ...\n    }\n`;\n\n@Component({\n  selector: 'clr-tree-view-dynamic-demo',\n  // Note the .css extension here, not .scss. That's the best we can have at the moment.\n  styleUrls: ['../tree-view.demo.scss'],\n  templateUrl: './tree-view-dynamic.html',\n})\nexport class TreeViewDynamicDemo {\n  @Input('clrDemoShowCode') showCode: boolean = false;\n  @Input('clrDemoShowHalf') showHalf: boolean = false;\n\n  exampleHtml = EXAMPLE_HTML;\n  exampleTs = EXAMPLE_TS;\n\n  rootDirectory: any[] = [\n    {\n      name: 'Applications',\n      icon: 'folder',\n      expanded: true,\n      files: [\n        {\n          icon: 'calendar',\n          name: 'Calendar',\n          active: true,\n        },\n        {\n          icon: 'line-chart',\n          name: 'Charts',\n          active: false,\n        },\n        {\n          icon: 'dashboard',\n          name: 'Dashboard',\n          active: false,\n        },\n        {\n          icon: 'map',\n          name: 'Maps',\n          active: false,\n        },\n        {\n          icon: 'email',\n          name: 'Mail',\n          active: false,\n        },\n        {\n          icon: 'bar-chart',\n          name: 'Numbers',\n          active: false,\n        },\n        {\n          icon: 'tasks',\n          name: 'Tasks',\n          active: false,\n        },\n        {\n          icon: 'flag',\n          name: 'Reminders',\n          active: false,\n        },\n      ],\n    },\n    {\n      name: 'Files',\n      icon: 'folder',\n      expanded: false,\n      files: [\n        {\n          icon: 'file',\n          name: 'Cover Letter.doc',\n          active: false,\n        },\n        {\n          icon: 'file',\n          name: 'Flyer.doc',\n          active: false,\n        },\n        {\n          icon: 'file',\n          name: 'Resume.doc',\n          active: false,\n        },\n        {\n          icon: 'file',\n          name: 'Notes.txt',\n          active: false,\n        },\n      ],\n    },\n    {\n      name: 'Images',\n      icon: 'folder',\n      expanded: false,\n      files: [\n        {\n          icon: 'image',\n          name: 'Screenshot.png',\n          active: false,\n        },\n        {\n          icon: 'image',\n          name: 'Pic.png',\n          active: false,\n        },\n        {\n          icon: 'image',\n          name: 'Portfolio.jpg',\n          active: false,\n        },\n      ],\n    },\n  ];\n\n  openFile(directoryName, fileName): void {\n    for (const dir of this.rootDirectory) {\n      if (directoryName === dir.name) {\n        this.setFileActive(dir, fileName);\n      } else {\n        for (const file of dir.files) {\n          file.active = false;\n        }\n      }\n    }\n  }\n\n  setFileActive(dir: any, fileName: string) {\n    for (const file of dir.files) {\n      if (file.name === fileName) {\n        file.active = true;\n      } else {\n        file.active = false;\n      }\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.example-margin-bottom {\n  margin-bottom: $clr_baselineRem_1;\n}\n\n.example-selected-nodes {\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n\n  &:last-child::after {\n    content: '.';\n  }\n}\n\n.example-display-json {\n  padding: $clr_baselineRem_0_5;\n  margin: 0;\n  max-height: $clr_baselineRem_20;\n  height: $clr_baselineRem_20;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n",
          "styleUrl": "../tree-view.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\" [class.clr-col-md-5]=\"showHalf\">\n        <clr-tree>\n            <clr-tree-node *ngFor=\"let directory of rootDirectory\" [(clrExpanded)]=\"directory.expanded\">\n                <clr-icon [attr.shape]=\"directory.icon\"></clr-icon>\n                {{directory.name}}\n                <clr-tree-node *ngFor=\"let file of directory.files\">\n                    <button\n                            (click)=\"openFile(directory.name, file.name)\"\n                            class=\"clr-treenode-link\"\n                            [class.active]=\"file.active\">\n                        <clr-icon [attr.shape]=\"file.icon\"></clr-icon>\n                        {{file.name}}\n                    </button>\n                </clr-tree-node>\n            </clr-tree-node>\n        </clr-tree>\n    </div>\n</div>\n\n<div *ngIf=\"showCode\">\n    <clr-code-snippet [clrCode]=\"exampleHtml\" clrLanguage=\"html\"></clr-code-snippet>\n    <clr-code-snippet [clrCode]=\"exampleTs\" clrLanguage=\"typescript\"></clr-code-snippet>\n</div>\n"
    },
    {
      "name": "TypographyDemo",
      "id": "component-TypographyDemo-e3b8b9b04073ab0a75dd5bcea05e55a9",
      "file": "src/website/src/app/documentation/demos/typography/typography.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-typography-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./typography.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-typography-demo',\n  templateUrl: './typography.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class TypographyDemo extends ClarityDocComponent {\n  constructor() {\n    super('typography');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"clarity-uses-the-geometric-sans-serif-font-metropolis\">Clarity uses the\n            geometric sans-serif font, Metropolis.</h5>\n\n        <div id=\"code-examples\">\n            <h3 id=\"text-styles\">Text Styles</h3>\n\n            <clr-typography-text></clr-typography-text>\n\n            <h3 id=\"header-styles\">Header Styles</h3>\n\n            <clr-typography-headers></clr-typography-headers>\n\n            <h3 id=\"using-typography\">Using Typography</h3>\n\n            <p>Clarity includes several SASS variables, collections, mixing, and functions for working\n                with typography. These are described below:</p>\n\n            <h6 id=\"clr-font\">$clr-font</h6>\n\n            <p>This SASS variable points to our default text font, Metropolis.</p>\n\n            <h6 id=\"clr-altfont\">$clr-altFont</h6>\n\n            <p>This SASS variable is only used for our headers (H1..H6). Currently, it also points to Metropolis.</p>\n\n            <h6 id=\"clr-font-size\">$clr-font-size</h6>\n\n            <p>This SASS variable sets our default font size to 14px.</p>\n\n            <h6 id=\"clr-font-weights\">$clr-font-weight-light</h6>\n\n            <p>This SASS variable defaults to 200. It is used in very large display text (p0) and headers 1 through 4.</p>\n\n            <h6 id=\"clr-font-weights\">$clr-font-weight-regular</h6>\n\n            <p>This SASS is the default font weight for Clarity. It defaults to 400.</p>\n\n            <h6 id=\"clr-font-weights\">$clr-font-weight-semibold</h6>\n\n            <p>This SASS variable is the default bold font-weight of Clarity. It is Metropolis semi-bold (500).</p>\n\n            <h6 id=\"clr-font-weights\">$clr-font-weight-bold</h6>\n\n            <p>This SASS variable defaults to 600. It is used in very small text (p4 and p6).</p>\n        </div>\n        <div id=\"design-guidelines\">\n            <h3 id=\"guidelines\">The Metropolis Font</h3>\n\n            <p>Metropolis has clear, simple letters with rounded forms. <br/> This gives the font a\n                friendly and modern appearance.</p>\n\n            <p><img src=\"assets/images/documentation/typography/Typography-A-Z.png?1481774870417534000\"\n                    alt=\"Metropolis light, regular, medium, and semibold\"/></p>\n\n            <h3 id=\"font-weights-in-clarity\">Font Weights in Clarity</h3>\n\n            <p>To maintain a light, clean look, Clarity does not use a weight stronger than semibold.</p>\n\n            <p><img src=\"assets/images/documentation/typography/Typography-Metropolis.png?1481774870417534000\"\n                    alt=\"Metropolis light, regular, medium, and semibold\"/></p>\n\n            <h3 id=\"use-the-built-in-styles\">Use the Built-in Styles</h3>\n\n            <p>The Clarity team determined the optimal height and weight of the text for each component. Some\n                components also have line wrapping built-in. If not, text should be kept to a single line.</p>\n\n            <h3 id=\"use-text-links-for-navigation\">Use Text Links for Navigation</h3>\n\n            <clr-typography-links></clr-typography-links>\n\n            <p>Don’t use text links for a call to action. <a routerLink=\"../../buttons\">Buttons</a>\n                are better.</p>\n        </div>\n    </article>\n</clr-doc-wrapper>"
    },
    {
      "name": "TypographyFontCharTestDemo",
      "id": "component-TypographyFontCharTestDemo-8565ed790d797a2acdce0a3d496c8286",
      "file": "src/website/src/app/documentation/demos/typography/typography-font-char-test.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-typography-font-char-test",
      "styleUrls": ["./typography.demo.scss"],
      "styles": [],
      "templateUrl": ["./typography-font-char-test.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-typography-font-char-test',\n  styleUrls: ['./typography.demo.scss'],\n  templateUrl: './typography-font-char-test.html',\n})\nexport class TypographyFontCharTestDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.link-normal {\n  color: $clr-color-action-600;\n  text-decoration: none;\n}\n\n.link-hovered {\n  color: $clr-color-action-600;\n  text-decoration: underline;\n}\n\n.link-clicked {\n  color: $clr-color-secondary-action-500;\n  text-decoration: underline;\n}\n\n.link-visited {\n  color: $clr-color-secondary-action-500;\n  text-decoration: none;\n}\n\n.typography-demo-table {\n  td > * {\n    margin-top: 0;\n  }\n\n  td > ul.list-unstyled {\n    margin-left: 0;\n    list-style-position: 0;\n  }\n}\n",
          "styleUrl": "./typography.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<style>\n    .p0,\n    .p1,\n    .p2,\n    .p3,\n    .p4,\n    .p5,\n    .p6,\n    .p7,\n    .p8 {\n        margin: 0;\n    }\n</style>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P0\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p0\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P1\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p1\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P2\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p2\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P3\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p3\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P4\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p4\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P5\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p5\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P6\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p6\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P7\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p7\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                P8\n            </div>\n            <div class=\"card-block\">\n                <div class=\"p8\">\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                H1\n            </div>\n            <div class=\"card-block\">\n                <h1>\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </h1>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                H2\n            </div>\n            <div class=\"card-block\">\n                <h2>\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </h2>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                H3\n            </div>\n            <div class=\"card-block\">\n                <h3>\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </h3>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                H4\n            </div>\n            <div class=\"card-block\">\n                <h4>\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </h4>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                H1\n            </div>\n            <div class=\"card-block\">\n                <h1>\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </h1>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                H5\n            </div>\n            <div class=\"card-block\">\n                <h5>\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </h5>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                H6\n            </div>\n            <div class=\"card-block\">\n                <h6>\n                    ​‌A​‌B​‌C​‌Ć​‌Č​‌D​‌Đ​‌E​‌F​‌G​‌H​‌I​‌J​‌K​‌L​‌M​‌N​‌O​‌P​‌Q​‌R​‌S​‌Š​‌T​‌U​‌V​‌W​‌X​‌Y​‌Z​‌Ž​‌ a​‌b​‌c​‌č​‌ć​‌d​‌đ​‌e​‌f​‌g​‌h​‌i​‌j​‌k​‌l​‌m​‌n​‌o​‌p​‌q​‌r​‌s​‌š​‌t​‌u​‌v​‌w​‌x​‌y​‌z​‌ž​‌ А​‌Б​‌В​‌Г​‌Ґ​‌Д​‌Ђ​‌Е​‌Ё​‌Є​‌Ж​‌З​‌Ѕ​‌И​‌І​‌Ї​‌Й​‌Ј​‌К ​‌Л​‌Љ​‌М​‌Н​‌Њ​‌О​‌П​‌Р​‌С​‌Т​‌Ћ​‌У​‌Ў​‌Ф​‌Х​‌Ц​‌Ч​‌Џ​‌Ш​‌Щ​‌Ъ​‌Ы​‌Ь​‌Э​‌Ю​‌Я​‌а​‌б​‌в​‌г​‌ґ​\n                    ‌д​‌ђ​‌е​‌ё​‌є​‌ж​‌з​‌ѕ​‌и​‌і​‌ї​‌й​‌ј​‌к​‌л​‌љ​‌м​‌н​‌њ​‌о​‌п​‌р​‌с​‌т​‌ћ​‌у​‌ў​‌ф​‌х​‌ц​‌ч​‌џ​‌ш​‌щ​‌ъ​‌ы​‌ь​‌э​‌ю​‌я​‌ Α​‌Β​‌Γ​‌Δ​‌Ε​‌Ζ​‌Η​‌Θ​‌Ι​‌Κ​‌Λ​‌Μ​‌Ν​‌Ξ​‌Ο​‌Π​‌Ρ​‌Σ​‌Τ​‌Υ​‌Φ​‌Χ​‌Ψ​‌Ω​‌ α​‌β​‌γ​‌δ​‌ε​‌ζ​‌η​‌θ​‌ι​‌κ​‌λ​‌μ​‌ν​‌ξ​‌ο​‌π​‌ρ​‌σ​‌τ​‌υ​‌φ​‌χ​‌ψ​‌ω​‌ά​‌\n                    Ά​‌έ​‌Έ​‌έ​‌Ή​‌ί​‌ϊ​‌ΐ​‌Ί​‌ό​‌Ό​‌ύ​‌ΰ​‌ϋ​‌Ύ​‌Ϋ​‌Ώ​‌Ă​‌Â​‌Ê​‌Ô​‌Ơ​‌Ư​‌ă​‌â​‌ê​‌ô​‌ơ​‌ư​‌ 1​‌2​‌3​‌4​‌5​‌6​‌7​‌8​‌9​‌0​‌‘​‌?​‌’​‌“​‌!​‌”​‌(​‌%​‌)​‌[​‌#​‌]​‌ {{ '{' }} ​‌@ {{ '}' }} ​‌/​‌&amp;​‌&lt;​‌-​‌+​‌÷​‌×​‌=​‌&gt;​‌®​‌©​‌$​‌€​‌£​‌¥​‌¢​‌:​‌;​‌,​‌.​‌*\n                </h6>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Test\n            </div>\n            <div class=\"card-block\">\n                <p class=\"p1\">Příliš žluťoučký kůň úpěl ďábelské ódy</p>\n                <p class=\"p2\">Příliš žluťoučký kůň úpěl ďábelské ódy</p>\n                <p class=\"p3\">Příliš žluťoučký kůň úpěl ďábelské ódy</p>\n                <p class=\"p4\">Příliš žluťoučký kůň úpěl ďábelské ódy</p>\n                <p class=\"p5\">Příliš žluťoučký kůň úpěl ďábelské ódy</p>\n                <p class=\"p6\">Příliš žluťoučký kůň úpěl ďábelské ódy</p>\n                <p class=\"p7\">Příliš žluťoučký kůň úpěl ďábelské ódy</p>\n                <p class=\"p8\">Příliš žluťoučký kůň úpěl ďábelské ódy</p>\n                <h1>Příliš žluťoučký kůň úpěl ďábelské ódy</h1>\n                <h2>Příliš žluťoučký kůň úpěl ďábelské ódy</h2>\n                <h3>Příliš žluťoučký kůň úpěl ďábelské ódy</h3>\n                <h4>Příliš žluťoučký kůň úpěl ďábelské ódy</h4>\n                <h5>Příliš žluťoučký kůň úpěl ďábelské ódy</h5>\n                <h6>Příliš žluťoučký kůň úpěl ďábelské ódy</h6>\n            </div>\n        </div>\n    </div>\n</div>\n"
    },
    {
      "name": "TypographyFontWeightDemo",
      "id": "component-TypographyFontWeightDemo-2b14b1674b0db47c312fb874d13a9384",
      "file": "src/website/src/app/documentation/demos/typography/typography-font-weight.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-typography-font-weight",
      "styleUrls": ["./typography.demo.scss"],
      "styles": [],
      "templateUrl": ["./typography-font-weight.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-typography-font-weight',\n  styleUrls: ['./typography.demo.scss'],\n  templateUrl: './typography-font-weight.html',\n})\nexport class TypographyFontWeightDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.link-normal {\n  color: $clr-color-action-600;\n  text-decoration: none;\n}\n\n.link-hovered {\n  color: $clr-color-action-600;\n  text-decoration: underline;\n}\n\n.link-clicked {\n  color: $clr-color-secondary-action-500;\n  text-decoration: underline;\n}\n\n.link-visited {\n  color: $clr-color-secondary-action-500;\n  text-decoration: none;\n}\n\n.typography-demo-table {\n  td > * {\n    margin-top: 0;\n  }\n\n  td > ul.list-unstyled {\n    margin-left: 0;\n    list-style-position: 0;\n  }\n}\n",
          "styleUrl": "./typography.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Font</th>\n            <th>Font Weight</th>\n            <th class=\"left\">Usage</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\"><span class=\"text-light\">Metropolis Light</span></td>\n            <td><span class=\"text-light\">200</span></td>\n            <td class=\"left\"><span class=\"text-light\">Large headers only</span></td>\n        </tr>\n        <tr>\n            <td class=\"left\">Metropolis Regular</td>\n            <td>400</td>\n            <td class=\"left\">Default font weight. Used for most everything.</td>\n        </tr>\n        <tr>\n            <td class=\"left\"><span style=\"font-weight: 500\">Metropolis Medium</span></td>\n            <td><span style=\"font-weight: 500\">500</span></td>\n            <td class=\"left\"><span style=\"font-weight: 500\">Section headers, small headers</span></td>\n        </tr>\n        <tr>\n            <td class=\"left\"><b>Metropolis Semibold</b></td>\n            <td><b>600</b></td>\n            <td class=\"left\"><b>Small headers</b></td>\n        </tr>\n    </tbody>\n</table>\n"
    },
    {
      "name": "TypographyHeadersDemo",
      "id": "component-TypographyHeadersDemo-4830ca82bbc9a0897adead89628879a9",
      "file": "src/website/src/app/documentation/demos/typography/typography-headers.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-typography-headers",
      "styleUrls": ["./typography.demo.scss"],
      "styles": [],
      "templateUrl": ["./typography-headers.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<h1>Header 1 (Display)</h1>\n<h2>Header 2 (Headline)</h2>\n<h3>Header 3 (Sub Heading)</h3>\n<h4>Header 4 (Section Heading Level 1)</h4>\n<h5>Header 5 (Category / group label, TOC)</h5>\n<h6>Header 6 (Section Heading Level 2 group label)</h6>\n`;\n\n@Component({\n  selector: 'clr-typography-headers',\n  styleUrls: ['./typography.demo.scss'],\n  templateUrl: './typography-headers.html',\n})\nexport class TypographyHeadersDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.link-normal {\n  color: $clr-color-action-600;\n  text-decoration: none;\n}\n\n.link-hovered {\n  color: $clr-color-action-600;\n  text-decoration: underline;\n}\n\n.link-clicked {\n  color: $clr-color-secondary-action-500;\n  text-decoration: underline;\n}\n\n.link-visited {\n  color: $clr-color-secondary-action-500;\n  text-decoration: none;\n}\n\n.typography-demo-table {\n  td > * {\n    margin-top: 0;\n  }\n\n  td > ul.list-unstyled {\n    margin-left: 0;\n    list-style-position: 0;\n  }\n}\n",
          "styleUrl": "./typography.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table typography-demo-table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Style Name</th>\n            <th class=\"left\">Attributes</th>\n            <th class=\"left\">Selectors</th>\n            <th class=\"left\">Used For</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">\n                <h1>Heading 1</h1>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Light</li>\n                    <li>color: #000000</li>\n                    <li>font-size: 32px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">h1</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Login screen product name <em>(login_productName)</em></li>\n                    <li>Large display numbers (charts/data visualization)</li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <h2>Heading 2</h2>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Light</li>\n                    <li>color: #000000</li>\n                    <li>font-size: 28px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n                <td class=\"left\"><code class=\"clr-code\">h2</code></td>\n                <td class=\"left\">\n                    <ul class=\"list compact list-unstyled\">\n                        <li>Main content header <em>(page_mainHeading)</em></li>\n                    </ul>\n                </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <h3>Heading 3</h3>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Light</li>\n                    <li>color: #000000</li>\n                    <li>font-size: 22px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">h3</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Secondary content header <em>(page_secondaryHeading)</em></li>\n                    <li>Modal/Wizard/Dialog header <em>(modal_header)</em></li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <h4>Heading 4</h4>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Light</li>\n                    <li>color: #000000</li>\n                    <li>font-size: 18px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">h4</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Tertiary content header <em>(page_tertiaryHeading)</em></li>\n                    <li>Card header/title <em>(card_title)</em></li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <h5>Heading 5</h5>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Regular</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 16px</li>\n                    <li>letter-spacing: 0.01em</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">h5</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Section header 1 <em>(page_sectionHeader)</em></li>\n                    <li>Introductory paragraph <em>(page_introParagraph)</em></li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <h6>Heading 6</h6>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Medium</li>\n                    <li>color: #313131</li>\n                    <li>font-size: 14px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">h6</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Section header 2</li>\n                    <li>Sidenav section header <em>(sidenav_sectionHeader)</em></li>\n                    <li>TOC header <em>(toc_header)</em></li>\n                </ul>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "TypographyLinksDemo",
      "id": "component-TypographyLinksDemo-23826693a5051942750dea5e0fc48bde",
      "file": "src/website/src/app/documentation/demos/typography/typography-links.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-typography-links",
      "styleUrls": ["./typography.demo.scss"],
      "styles": [],
      "templateUrl": ["./typography-links.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-typography-links',\n  styleUrls: ['./typography.demo.scss'],\n  templateUrl: './typography-links.html',\n})\nexport class TypographyLinksDemo {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.link-normal {\n  color: $clr-color-action-600;\n  text-decoration: none;\n}\n\n.link-hovered {\n  color: $clr-color-action-600;\n  text-decoration: underline;\n}\n\n.link-clicked {\n  color: $clr-color-secondary-action-500;\n  text-decoration: underline;\n}\n\n.link-visited {\n  color: $clr-color-secondary-action-500;\n  text-decoration: none;\n}\n\n.typography-demo-table {\n  td > * {\n    margin-top: 0;\n  }\n\n  td > ul.list-unstyled {\n    margin-left: 0;\n    list-style-position: 0;\n  }\n}\n",
          "styleUrl": "./typography.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Text Links</h4>\n<div><a class=\"link-normal\" href=\"javascript:void(0)\">Normal</a></div>\n<div><a class=\"link-hovered\" href=\"javascript:void(0)\">Hovered</a></div>\n<div><a class=\"link-clicked\" href=\"javascript:void(0)\">Clicked</a></div>\n<div><a class=\"link-visited\" href=\"javascript:void(0)\">Visited</a></div>\n"
    },
    {
      "name": "TypographyTextDemo",
      "id": "component-TypographyTextDemo-c4556fc408c67d4eb778222cfbc22311",
      "file": "src/website/src/app/documentation/demos/typography/typography-text.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-typography-text",
      "styleUrls": ["./typography.demo.scss"],
      "styles": [],
      "templateUrl": ["./typography-text.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "example",
          "defaultValue": "EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst EXAMPLE = `\n<p class=\"p1\">Body text</p>\n<p class=\"p2\">Section header</p>\n<p class=\"p3\">Table, grid, and form text</p>\n<p class=\"p4\">Form labels and column headers</p>\n<p class=\"p5\">Table footers and chart data</p>\n<p class=\"p6\">Mostly buttons</p>\n<p class=\"p7\">Tags and labels</p>\n<p class=\"p8\">Badges</p>\n<pre class=\"language-html\">Monospaced</pre> or <code class=\"language-html\">Monospaced</code>\n`;\n\n@Component({\n  selector: 'clr-typography-text',\n  styleUrls: ['./typography.demo.scss'],\n  templateUrl: './typography-text.html',\n})\nexport class TypographyTextDemo {\n  example = EXAMPLE;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.link-normal {\n  color: $clr-color-action-600;\n  text-decoration: none;\n}\n\n.link-hovered {\n  color: $clr-color-action-600;\n  text-decoration: underline;\n}\n\n.link-clicked {\n  color: $clr-color-secondary-action-500;\n  text-decoration: underline;\n}\n\n.link-visited {\n  color: $clr-color-secondary-action-500;\n  text-decoration: none;\n}\n\n.typography-demo-table {\n  td > * {\n    margin-top: 0;\n  }\n\n  td > ul.list-unstyled {\n    margin-left: 0;\n    list-style-position: 0;\n  }\n}\n",
          "styleUrl": "./typography.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<table class=\"table typography-demo-table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Style Name</th>\n            <th class=\"left\">Attributes</th>\n            <th class=\"left\">Selectors</th>\n            <th class=\"left\">Used For</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">\n                <p class=\"p1\">Body text</p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Regular</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 14px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">p, .p1</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Default text styling <em>(page_bodyText)</em></li>\n                    <li>Sidenav text <em>(sidenav_text)</em></li>\n                    <li>Body text in cards <em>(card_text)</em></li>\n                    <li>Text and dropdowns <em>(dropdown_text)</em></li>\n                    <li>Tab navigation links <em>(tab_text)</em></li>\n                    <li>Wizard steps and table of contents</li>\n                    <li>General paragraphs, sentences, lists</li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <p class=\"p2\">Section header</p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Medium</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 13px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n                <td class=\"left\"><code class=\"clr-code\">.p2</code></td>\n                <td class=\"left\">\n                    <ul class=\"list compact list-unstyled\">\n                        <li>Stack view header <em>(stackview_header)</em></li>\n                        <li>Form headers</li>\n                        <li>Tree view headers</li>\n                    </ul>\n                </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <p class=\"p3\">Table, grid, and form text</p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Regular</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 13px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">.p3</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Text in alerts <em>(alert_text)</em></li>\n                    <li>Stack view text <em>(stackview_text)</em></li>\n                    <li>Datagrid text <em>(table_text)</em></li>\n                    <li>Text in HTML tables <em>(table_text)</em></li>\n                    <li>Text in tooltips and validations <em>(tooltip_text)</em></li>\n                    <li>Form text</li>\n                    <li>Treeview text</li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <p class=\"p4\">Form labels and column headers</p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Semibold</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 12px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">.p4</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Button text (Normal)</li>\n                    <li>Table and datagrid headers <em>(table_header)</em></li>\n                    <li>Dropdown headers <em>(dropdown_header)</em></li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <p class=\"p5\">Table footers and chart data</p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Regular</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 12px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">.p5</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Table and datagrid footers</li>\n                    <li>Chart and data visualization info</li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <p class=\"p6\">Small headers</p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Semibold</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 11px</li>\n                    <li>letter-spacing: 0.03em</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">.p6</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Button text (Small)</li>\n                    <li>Usually used in all caps</li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <p class=\"p7\">Tags and labels</p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Regular</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 11px</li>\n                    <li>letter-spacing: 0.03em</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">.p7</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Text inside tags and labels <em>(label_text)</em></li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <p class=\"p8\">Badges</p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Metropolis Regular</li>\n                    <li>color: #565656</li>\n                    <li>font-size: 10px</li>\n                    <li>letter-spacing: 0.03em</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">.p8</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Text inside badges</li>\n                </ul>\n            </td>\n        </tr>\n        <tr>\n            <td class=\"left\">\n                <p><code>Monospaced</code></p>\n            </td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Consolas Regular</li>\n                    <li>font-size: 14px</li>\n                    <li>letter-spacing: normal</li>\n                </ul>\n            </td>\n            <td class=\"left\"><code class=\"clr-code\">pre.<br>language-*<br>or code.<br>language-*</code></td>\n            <td class=\"left\">\n                <ul class=\"list compact list-unstyled\">\n                    <li>Code or system-type messages like in a terminal or console</li>\n                </ul>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<clr-code-snippet [clrCode]=\"example\"></clr-code-snippet>\n"
    },
    {
      "name": "VersionSwitcherComponent",
      "id": "component-VersionSwitcherComponent-0ac4dd3b34ddd1a3479534498f8ffc97",
      "file": "src/website/src/app/documentation/version-switcher/version-switcher.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "version-switcher",
      "styleUrls": ["./version-switcher.component.scss"],
      "styles": [],
      "templateUrl": ["version-switcher.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "child",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "current",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "environment",
          "defaultValue": "environment",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "subscription",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "versions",
          "defaultValue": "[]",
          "type": "Version[]",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Inject, PLATFORM_ID } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\ninterface Version {\n  version: string;\n  status: string;\n  url: string;\n}\n\n@Component({\n  selector: 'version-switcher',\n  templateUrl: 'version-switcher.component.html',\n  styleUrls: ['./version-switcher.component.scss'],\n})\nexport class VersionSwitcherComponent {\n  versions: Version[] = [];\n  environment = environment;\n  current: string;\n  child: string;\n  subscription: Subscription;\n\n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.subscription = this.router.events.subscribe(e => {\n      if (e instanceof NavigationEnd) {\n        let first = this.route.firstChild;\n        this.child = first.snapshot.url.length ? first.snapshot.url[0].path : '';\n        while (first.firstChild !== null) {\n          if (first.firstChild.snapshot.url.length) {\n            this.child += '/' + first.firstChild.snapshot.url[0].path;\n          }\n          first = first.firstChild;\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.current = environment.version;\n    if (isPlatformBrowser(this.platformId)) {\n      this.http.get<Version[]>(environment.versions_url).subscribe(\n        versions => {\n          this.versions = versions;\n        },\n        error => {\n          console.log(\"couldn't load\", error);\n        }\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../styles/clarity-imports';\n\n:host {\n  width: 100%;\n  padding: $clr_baselineRem_0_25 0 $clr_baselineRem_0_25 $clr_baselineRem_0_5;\n  border-bottom: $clr-global-borderwidth solid $clr-color-neutral-400;\n  display: block;\n}\n",
          "styleUrl": "./version-switcher.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient"
          },
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "router",
            "type": "Router"
          },
          {
            "name": "platformId",
            "type": "Object"
          }
        ],
        "line": 29,
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "platformId",
            "type": "Object",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData":
        "<clr-dropdown>\n  <button type=\"button\" class=\"dropdown-toggle btn btn-link\" clrDropdownTrigger>\n    Version {{environment.version}}\n    <clr-icon shape=\"caret down\"></clr-icon>\n  </button>\n  <clr-dropdown-menu clrPosition=\"bottom-right\" *clrIfOpen>\n    <a href=\"{{version.url}}/{{child}}\" clrDropdownItem *ngFor=\"let version of versions\">{{version.version}}</a>\n  </clr-dropdown-menu>\n</clr-dropdown>\n"
    },
    {
      "name": "VerticalNavDemo",
      "id": "component-VerticalNavDemo-94392c419ed45ee8846db0121afdfcdb",
      "file": "src/website/src/app/documentation/demos/vertical-nav/vertical-nav.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-vertical-nav-demo",
      "styleUrls": ["./vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./vertical-nav.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_subscriptions",
          "defaultValue": "[]",
          "type": "Subscription[]",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [112]
        },
        {
          "name": "childRoutes",
          "type": "Route[]",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "demoView",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'demoView', {static: true}"
            }
          ]
        },
        {
          "name": "next",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "nextRoute",
          "type": "Route",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "parentRoute",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "previous",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "previousRoute",
          "type": "Route",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "initializePagination",
          "args": [
            {
              "name": "url",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "jsdoctags": [
            {
              "name": "url",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "moveNext",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 94
        },
        {
          "name": "movePrevious",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 102
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 110
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        },
        {
          "name": "scrollToDemoView",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 88
        },
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute, NavigationEnd, Route, Router } from '@angular/router';\n\n@Component({\n  selector: 'clr-vertical-nav-demo',\n  templateUrl: './vertical-nav.demo.html',\n  styleUrls: ['./vertical-nav.demo.scss'],\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class VerticalNavDemo extends ClarityDocComponent implements OnInit, OnDestroy {\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super('vertical-nav');\n  }\n\n  // TODO: Whole logic below needs to be extracted from here and datagrid and reused.\n  @ViewChild('demoView', { static: true })\n  demoView;\n\n  private _subscriptions: Subscription[] = [];\n\n  childRoutes: Route[];\n\n  previous: boolean = false;\n  next: boolean = false;\n\n  previousRoute: Route;\n  nextRoute: Route;\n\n  parentRoute: string = '';\n\n  ngOnInit() {\n    const tempArr: any[] = this.route.routeConfig.children;\n    if (tempArr.length > 1) {\n      this.childRoutes = tempArr.slice(1);\n    }\n    this._subscriptions.push(\n      this.router.events.subscribe((change: any) => {\n        if (change instanceof NavigationEnd) {\n          if (change.url.includes('vertical-nav')) {\n            this.initializePagination(change.url);\n          }\n        }\n      })\n    );\n  }\n\n  initializePagination(url: string): void {\n    const tempArr: string[] = url.split('/');\n    this.parentRoute = url.substr(0, url.indexOf('vertical-nav')) + 'vertical-nav/';\n    if (tempArr.length > 1) {\n      const subRoute: string = tempArr[tempArr.length - 1];\n      if (subRoute === 'vertical-nav') {\n        this.nextRoute = this.childRoutes[1];\n        this.next = true;\n      } else {\n        for (let i = 0; i < this.childRoutes.length; i++) {\n          if (this.childRoutes[i].path === subRoute) {\n            if (i === 0) {\n              this.previous = false;\n            } else {\n              this.previousRoute = this.childRoutes[i - 1];\n              this.previous = true;\n            }\n\n            if (i < this.childRoutes.length - 1) {\n              this.nextRoute = this.childRoutes[i + 1];\n              this.next = true;\n            } else {\n              this.next = false;\n            }\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  scrollToDemoView() {\n    if (this.demoView) {\n      this.demoView.nativeElement.scrollIntoView();\n    }\n  }\n\n  moveNext() {\n    if (this.nextRoute) {\n      const tempPath = this.parentRoute + this.nextRoute.path;\n      this.router.navigate([tempPath]);\n      this.scrollToDemoView();\n    }\n  }\n\n  movePrevious() {\n    if (this.previousRoute) {\n      const tempPath = this.parentRoute + this.previousRoute.path;\n      this.router.navigate([tempPath]);\n      this.scrollToDemoView();\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "./vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "router",
            "type": "Router"
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "ClarityDocComponent",
      "implements": ["OnInit", "OnDestroy"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"badges-header\">\n            This is a vertically-aligned navigational component.\n        </h5>\n\n        <div id=\"design-guidelines\">\n            <h3>Design Guidelines</h3>\n            <p>\n                Vertical navigation is a familiar navigation pattern for users. It can fit as many navigation links as\n                needed, scrolling when the content exceeds the viewport.\n            </p>\n\n            <clr-basic-vertical-nav-demo></clr-basic-vertical-nav-demo>\n\n            <h4>Usage</h4>\n            <p>Use the vertical navigation when you need:</p>\n            <ul class=\"list\">\n                <li>to collapse and expand the navigation to free up space for the content area</li>\n                <li>a hierarchical navigation or nested navigation</li>\n                <li>many links in the navigation across a top level of navigation</li>\n                <li>icons to describe navigation items which is helpful when the navigation is collapsed</li>\n            </ul>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-basic-vertical-nav-usage-demo></clr-basic-vertical-nav-usage-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Use vertical navigation with a header.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-basic-vertical-nav-usage-demo\n                                        [demoToggleDont]=\"true\"></clr-basic-vertical-nav-usage-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Use vertical navigation with a header and subnav. Having too many places \n                                for navigation is confusing for users.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Layout</h3>\n\n            <p>\n                Vertical navigation has a few layout options including dividers and section headers. Active \n                links are displayed with a white background. Touch targets are larger for easier interaction \n                and span the entire width of the navigation, similar to the space of the active link indicator.\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-12\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-just-navs-demo></clr-just-navs-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Basic</h6>\n                            <div>\n                                No dividers or section headers.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-just-navs-demo [demoWithDividers]=\"true\"></clr-just-navs-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Dividers</h6>\n                            <div>\n                                Used to separate logical clusters of navigation items. Best used when you \n                                have two or more links in a cluster.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-just-navs-demo [demoWithHeadersAndDividers]=\"true\"></clr-just-navs-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Dividers & Headers</h6>\n                            <div>\n                                Used to separate logical clusters of navigation items. Best used when you \n                                have two or more links in a cluster.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Icons</h3>\n\n            <p>\n                Icons should be placed to the left of the link label. Active links will display a blue icon. \n                Make sure your icons are distinctive and easily recognizable. Touch targets include the \n                entire width of the navigation including the icon.\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-do-block\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-icons-demo></clr-vertical-nav-icons-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Do</h6>\n                            <p>\n                                Use icons across all links if you choose to use them.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia is-dont-block\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-icons-demo [demoHideIcons]=\"true\"></clr-vertical-nav-icons-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6 class=\"clrweb-DoxMedia-do-dont\">Don't</h6>\n                            <p>\n                                Add icons to some links and not to other links. This becomes difficult to scan and read.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Hierarchy</h3>\n\n            <p>\n                Hierarchy is used to show parent-child relationship between links. If a child link is active \n                and the parent item is collapsed, the parent will display as active. When expanded, the active \n                indicator will display on the child link. Clicking on text, carets or icons will expand and \n                collapse the parent item.\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-12\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-groups-demo [demoHideIcons]=\"true\"></clr-vertical-nav-groups-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Basic</h6>\n                            <div>\n                                Top level hierarchy items are semibold font weight and have a caret to the \n                                right. Child links are normal font weight.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-groups-demo [demoExpandedGroup]=\"true\"></clr-vertical-nav-groups-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Icons</h6>\n                            <div>\n                                Icons are only applied to the top level navigation items. They are not applied \n                                to child links.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-groups-demo [demoHideIcons]=\"true\"\n                                 [demoMixedNav]=\"true\"></clr-vertical-nav-groups-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Mixed</h6>\n                            <div>\n                                Top level hierarchy items without child links are semibold. Clicking on one \n                                will navigate a user to a page.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <clr-alert clrAlertType=\"info\" [clrAlertClosable]=\"false\">\n                <clr-alert-item>\n                        <span class=\"alert-text\">\n                            If you need a summary or overview-type landing page for a link group, we recommend \n                            you make it as your first child link.\n                        </span>\n                </clr-alert-item>\n            </clr-alert>\n\n            <h3>Collapse & Expand Navigation</h3>\n\n            <p>\n                Collapsing and expanding navigation is used to create more space in content areas or to bring \n                greater focus to content. The double caret in the upper right corner will collapse and \n                expand the navigation.\n            </p>\n\n            <h5>Basic</h5>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-collapsible-vertical-nav-demo\n                                        [demoHideIcons]=\"true\"></clr-collapsible-vertical-nav-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>No Icons</h6>\n                            <div>\n                                When no icons are present, collapsing the navigation will show a basic bar. The \n                                entire bar is a click target that can expand the navigation.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-collapsible-vertical-nav-demo\n                                        [demoCollapsed]=\"true\"></clr-collapsible-vertical-nav-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Icons</h6>\n                            <div>\n                                When collapsed, text will disappear and only icons will show. Clicking on an icon will\n                                navigate the user. An active link will also show as an active icon when collapsed.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h5>Hierarchy</h5>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-12\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-groups-demo [demoHideIcons]=\"true\"\n                                                            [demoCollapsible]=\"true\"></clr-vertical-nav-groups-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>No Icons</h6>\n                            <div>\n                                When no icons are present, collapsing the navigation will show a basic bar. The \n                                entire bar is a click target that can expand the navigation.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-groups-demo [demoCollapsible]=\"true\"></clr-vertical-nav-groups-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Icons</h6>\n                            <div>\n                                Top level hierarchy items will show a caret next to its icon when the navigation is\n                                collapsed. Clicking one will expand the navigation its top level item.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-groups-demo [demoMixedNavWithIcons]=\"true\"\n                                [demoCollapsible]=\"true\"></clr-vertical-nav-groups-demo>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Mixed</h6>\n                            <div>\n                                Top level items without children will show no caret next to the icon. Clicking on \n                                an icon with no caret will navigate the user to a page.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Long Labels</h3>\n\n            <p>\n                When labels get too long they will be trimmed and followed by an ellipsis (…). We recommend \n                that navigation labels remain short and concise to prevent an ellipsis from showing.\n            </p>\n\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-12\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-just-navs-demo [demoLongLabel]=\"true\"></clr-just-navs-demo>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-icons-demo [demoLongLabel]=\"true\"></clr-vertical-nav-icons-demo>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-6\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clrweb-DoxMedia-img is-left-aligned\">\n                                <clr-vertical-nav-groups-demo [demoLongLabel]=\"true\"\n                                [demoExpandedGroup]=\"true\"></clr-vertical-nav-groups-demo>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3>Smaller Screens - Responsive</h3>\n\n            <p>\n                When screens drop below 768px wide, the navigation will hide completely and can be shown by \n                clicking on one of the header icons. All normal vertical navigation designs and behaviors \n                are the same in the responsive state. Read the Responsive section in Navigation for more \n                information on how this works.\n            </p>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-12\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-block other-color\" style=\"padding: 0\">\n                            <div class=\"clr-row\">\n                                <div class=\"clr-col-md-6 clr-col-12\">\n                                    <div class=\"clrweb-DoxMedia-img\">\n                                        <img\n                                            src=\"assets/images/documentation/vertical-nav/responsive-left.png\"\n                                            alt=\"Responsive Vertical Nav\"\n                                            class=\"img-fluid\">\n                                    </div>\n                                </div>\n                                <div class=\"clr-col-md-6 clr-col-12\">\n                                    <div class=\"clrweb-DoxMedia-img\">\n                                        <img\n                                            src=\"assets/images/documentation/vertical-nav/responsive-right.png\"\n                                            alt=\"Responsive Vertical Nav\"\n                                            class=\"img-fluid\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <h3>Accessibility</h3>\n\n        <p>\n            Applications need to inform users who rely on assistive technologies when a routing change loads new content. \n            For this reason, we offer <code class=\"clr-code\">clrFocusOnViewInit</code> along with the Vertical Nav component. \n            The directive allows you to choose the element for assistive technologies to read first when the new content gets loaded.\n            You will see it in action in the examples below. \n        </p>\n\n        <clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\">\n            <clr-alert-item>\n                    <span class=\"alert-text\">\n                        We have introduced <code class=\"clr-code\">clrFocusOnViewInit</code> in Clarity v2.1.2, thus make sure you are on that or later versions to use the directive.\n                    </span>\n            </clr-alert-item>\n        </clr-alert>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <p>\n                We have {{childRoutes.length}} Vertical Nav demos. Starting with the basics, each demo shows\n                you one or more of the advanced Vertical Nav features.\n            </p>\n\n            <p></p>\n\n            <div class=\"clr-row\">\n\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <ul class=\"list\">\n                        <li><a routerLink=\"./basic-structure\">Basic Structure</a></li>\n                        <li><a routerLink=\"./icon-links\">Icon Links</a></li>\n                        <li><a routerLink=\"./collapsible-nav\">Collapsible Navigation</a></li>\n                        <li><a routerLink=\"./nav-groups\">Vertical Nav Groups</a></li>\n                        <li><a routerLink=\"./lazy-loading-nav-links\">Lazy Loading Nav Links in Nav Groups</a></li>\n                        <!--li><a routerLink=\"./nav-groups\">Nav Groups</a></li>\n                        <li><a routerLink=\"./no-lazy-loading\">Unstructured Routes</a></li-->\n                    </ul>\n                </div>\n            </div>\n\n            <div #demoView></div>\n\n            <router-outlet></router-outlet>\n\n            <div class=\"datagrid-demo-pagination\">\n                <button class=\"btn btn-primary demo-pagination-prev\" *ngIf=\"previous\" (click)=\"movePrevious()\">\n                    <clr-icon shape=\"angle left\"></clr-icon>\n                    {{previousRoute.data.demoName}}\n                </button>\n                <button class=\"btn btn-primary demo-pagination-next\" *ngIf=\"next\" (click)=\"moveNext()\">\n                    {{nextRoute.data.demoName}}\n                    <clr-icon shape=\"angle right\"></clr-icon>\n                </button>\n            </div>\n        </div>\n\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "VerticalNavGroupsDemo",
      "id": "component-VerticalNavGroupsDemo-ff364f4f4d72e3c3a01eb4d8b0e2bca2",
      "file": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-vertical-nav-nav-groups-demo",
      "styleUrls": ["../../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./nav-groups.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "demoCollapsible",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 120
        },
        {
          "name": "htmlExample",
          "defaultValue": "HTML_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 118
        },
        {
          "name": "routesExample",
          "defaultValue": "ROUTES_EXAMPLE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 119
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML_EXAMPLE = `\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n        Normal\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n        Fire\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n        Electric\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`;\n\nconst ROUTES_EXAMPLE = `\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal/pidgey\"\n        },\n        {\n            path: \"normal/snorlax\",\n            component: SnorlaxDemo\n        },\n        {\n            path: \"normal/pidgey\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"electric/pikachu\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/raichu\",\n            component: RaichuDemo\n        },\n        {\n            path: \"fire/charmander\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charizard\",\n            component: CharizardDemo\n        },\n        {\n            path: \"credit\",\n            component: PokedexDemo\n        }\n    ],\n    ...\n}\n...\n`;\n\n@Component({\n  selector: 'clr-vertical-nav-nav-groups-demo',\n  templateUrl: './nav-groups.html',\n  styleUrls: ['../../vertical-nav.demo.scss'],\n})\nexport class VerticalNavGroupsDemo {\n  htmlExample = HTML_EXAMPLE;\n  routesExample = ROUTES_EXAMPLE;\n  demoCollapsible: boolean = true;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<h4>Nav Groups</h4>\n\n<p>\n    The <code class=\"clr-code\">clr-vertical-nav-group</code> component should be used to create\n    nav groups. The links inside of a nav group should be wrapped inside of a\n    <code class=\"clr-code\">clr-vertical-nav-group-children</code> component.\n</p>\n\n<h5>Mixed Navigation</h5>\n\n<p>\n    Navigation Links can also be added directly inside of the\n    <code class=\"clr-code\">clr-vertical-nav</code> without creating a\n    <code class=\"clr-code\">clr-vertical-nav-group</code>\n    to create a mixed navigation.\n</p>\n\n<div class=\"clr-example\">\n    <div class=\"main-container\" style=\"height: 432px\">\n        <header class=\"header\">\n            <div class=\"branding\">\n                <a href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" class=\"is-inverse\"></clr-icon>\n                    <span class=\"title\">Project Pokémon</span>\n                </a>\n            </div>\n        </header>\n        <div class=\"content-container\">\n            <clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n                    Normal\n                    <clr-vertical-nav-group-children>\n                        <a clrVerticalNavLink\n                           routerLink=\"./normal/pidgey\"\n                           routerLinkActive=\"active\">\n                            Pidgey\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./normal/snorlax\"\n                           routerLinkActive=\"active\">\n                            Snorlax\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n                    Fire\n                    <clr-vertical-nav-group-children>\n                        <a clrVerticalNavLink\n                           routerLink=\"./fire/charmander\"\n                           routerLinkActive=\"active\">\n                            Charmander\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./fire/charizard\"\n                           routerLinkActive=\"active\">\n                            Charizard\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <clr-vertical-nav-group\n                        routerLinkActive=\"active\">\n                    <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n                    Electric\n                    <clr-vertical-nav-group-children>\n                        <a clrVerticalNavLink\n                           routerLink=\"./electric/pikachu\"\n                           routerLinkActive=\"active\">\n                            Pikachu\n                        </a>\n                        <a clrVerticalNavLink\n                           routerLink=\"./electric/raichu\"\n                           routerLinkActive=\"active\">\n                            Raichu\n                        </a>\n                    </clr-vertical-nav-group-children>\n                </clr-vertical-nav-group>\n                <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n                    <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n                    Credit\n                </a>\n            </clr-vertical-nav>\n            <div class=\"content-area demo-allow-scroll\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n\n<p></p>\n\n<clr-alert clrAlertType=\"warning\" [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n             We recommend that the application\n            <a target=\"_blank\" href=\"https://angular.io/guide/router\">routing</a> be\n            hierarchical.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n\n<clr-code-snippet [clrCode]=\"htmlExample\" clrLanguage=\"html\"></clr-code-snippet>\n\n<p></p>\n\n<clr-code-snippet [clrCode]=\"routesExample\" clrLanguage=\"typescript\"></clr-code-snippet>\n\n\n\n\n"
    },
    {
      "name": "VerticalNavIconsDemo",
      "id": "component-VerticalNavIconsDemo-26b754b7b27e4b8cdb9992c0d3ba70f4",
      "file": "src/website/src/app/documentation/demos/vertical-nav/icons/icons.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-vertical-nav-icons-demo",
      "styleUrls": ["../vertical-nav.demo.scss"],
      "styles": [],
      "templateUrl": ["./icons.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "demoHideIcons",
          "defaultValue": "false",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "demoLongLabel",
          "defaultValue": "false",
          "line": 15,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'clr-vertical-nav-icons-demo',\n  templateUrl: './icons.html',\n  styleUrls: ['../vertical-nav.demo.scss'],\n})\nexport class VerticalNavIconsDemo {\n  @Input() demoHideIcons: boolean = false;\n  @Input() demoLongLabel: boolean = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data":
            "// Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n// This software is released under MIT license.\n// The full license information can be found in LICENSE in the root directory of this project.\n\n@import '../../../../styles/clarity-imports';\n\n.demo-title {\n  margin-top: $clr_baselineRem_0_5;\n}\n\n.datagrid-demo-pagination {\n  display: flex;\n  justify-content: space-between;\n}\n\n.demo-pagination-next {\n  margin-left: auto;\n}\n\n.content-area.demo-allow-scroll {\n  overflow-y: auto;\n}\n",
          "styleUrl": "../vertical-nav.demo.scss"
        }
      ],
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\" style=\"margin-top: 0\">\n    <div class=\"main-container\" style=\"width: 240px; margin: 12px auto; height: 408px\">\n        <div class=\"content-container\">\n            <clr-vertical-nav>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n                    Normal\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\" class=\"active\">\n                    <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n                    Fire\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"download-cloud\" clrVerticalNavIcon></clr-icon>\n                    Water\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n                    Electric\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"bug\" clrVerticalNavIcon></clr-icon>\n                    Grass\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon shape=\"block\" clrVerticalNavIcon></clr-icon>\n                    Ice\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\" *ngIf=\"!demoLongLabel\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"shield\" clrVerticalNavIcon></clr-icon>\n                    Fighting\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\" *ngIf=\"demoLongLabel\">\n                    <clr-icon *ngIf=\"!demoHideIcons\" shape=\"shield\" clrVerticalNavIcon></clr-icon>\n                    Fighting, Psychic, Dragon, Fairy, Rock, Dark\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon shape=\"sad-face\" clrVerticalNavIcon></clr-icon>\n                    Poison\n                </a>\n                <a clrVerticalNavLink href=\"javascript://\">\n                    <clr-icon shape=\"image\" clrVerticalNavIcon></clr-icon>\n                    Ground\n                </a>\n            </clr-vertical-nav>\n        </div>\n    </div>\n</div>"
    },
    {
      "name": "WizardAltCancelDemo",
      "id": "component-WizardAltCancelDemo-a87f49927b857008ac97b459ff43f202",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-alt-cancel.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "moduleId": "module.id",
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-alt-cancel",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-alt-cancel.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardAltCancelDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    public showCancelConfirm: boolean = false;\n\n    public pageCustomCancel(): void {\n        this.showCancelConfirm = true;\n    }\n\n    public doPageCancel() {\n        this.showCancelConfirm = false;\n        this.wizard.close();\n    }\n\n    public doCancel() {\n        if (confirm(\"Do you really, really want to close the wizard?\")) {\n            this.showCancelConfirm = false;\n            this.wizard.close();\n        }\n    }\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" (clrWizardOnCancel)=\"doCancel()\" [clrWizardPreventDefaultCancel]=\"true\">\n    <clr-wizard-title>Wizard with alternate cancel</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageOnCancel)=\"pageCustomCancel()\" [clrWizardPagePreventDefaultCancel]=\"true\">\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 67
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "showCancelConfirm",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [114]
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 16,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "doCancel",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "modifierKind": [114]
        },
        {
          "name": "doPageCancel",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "modifierKind": [114]
        },
        {
          "name": "pageCustomCancel",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "modifierKind": [114]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  moduleId: module.id,\n  selector: 'clr-wizard-alt-cancel',\n  templateUrl: './wizard-alt-cancel.demo.html',\n})\nexport class WizardAltCancelDemo {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n  open: boolean = false;\n\n  public showCancelConfirm: boolean = false;\n\n  public pageCustomCancel(): void {\n    this.showCancelConfirm = true;\n  }\n\n  public doPageCancel() {\n    this.showCancelConfirm = false;\n    this.wizard.close();\n  }\n\n  public doCancel() {\n    if (confirm('Do you really, really want to close the wizard?')) {\n      this.showCancelConfirm = false;\n      this.wizard.close();\n    }\n  }\n\n  code: string = `\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardAltCancelDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    public showCancelConfirm: boolean = false;\n\n    public pageCustomCancel(): void {\n        this.showCancelConfirm = true;\n    }\n\n    public doPageCancel() {\n        this.showCancelConfirm = false;\n        this.wizard.close();\n    }\n\n    public doCancel() {\n        if (confirm(\"Do you really, really want to close the wizard?\")) {\n            this.showCancelConfirm = false;\n            this.wizard.close();\n        }\n    }\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" (clrWizardOnCancel)=\"doCancel()\" [clrWizardPreventDefaultCancel]=\"true\">\n    <clr-wizard-title>Wizard with alternate cancel</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageOnCancel)=\"pageCustomCancel()\" [clrWizardPagePreventDefaultCancel]=\"true\">\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Alt-Cancel Wizard</button>\n\n<clr-wizard #wizard\n    [(clrWizardOpen)]=\"open\"\n    [clrWizardSize]=\"'md'\"\n    (clrWizardOnCancel)=\"doCancel()\"\n    [clrWizardPreventDefaultCancel]=\"true\"\n    >\n    <clr-wizard-title>Wizard with alternate cancel</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Wizard level alt-cancel</ng-template>\n        <p>Content for step 1</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageOnCancel)=\"pageCustomCancel()\"\n        [clrWizardPagePreventDefaultCancel]=\"true\">\n        <ng-template clrPageTitle>Page level alt-cancel</ng-template> <!-- mandatory -->\n        <p *ngIf=\"!showCancelConfirm\">Content for step 2</p>\n        <p *ngIf=\"showCancelConfirm\">\n            <button type=\"submit\" class=\"btn btn-danger\" (click)=\"doPageCancel()\">\n                Click here if you are sure\n            </button>\n        </p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardAltNextDemo",
      "id": "component-WizardAltNextDemo-57cbdadea8c7ddf193ec559babe84b85",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-alt-next.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "moduleId": "module.id",
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-alt-next",
      "styleUrls": [],
      "styles": [".stress { color: red; }"],
      "templateUrl": ["./wizard-alt-next.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, ViewChild, OnInit } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardAltNextDemo implements OnInit {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    public model: any;\n    public stressText: boolean = false;\n    public errorFlag: boolean = false;\n\n    public ngOnInit() {\n        this.model = {\n            allowNext: false,\n            sequenceOne: \"\",\n            sequenceTwo: \"\",\n            sequenceThree: \"\"\n        };\n    }\n\n    public pageCustomNext(): void {\n        if (confirm(\"Are you sure you got it right?\")) {\n            this.errorFlag = false;\n            this.wizard.forceNext();\n        }\n    }\n\n    public doFinish() {\n        let sequenceOneIsCorrect = this.model.sequenceOne === 3;\n        let sequenceTwoIsCorrect = this.model.sequenceTwo === 5;\n        let sequenceThreeIsCorrect = this.model.sequenceThree === 8;\n        let allAreCorrect = sequenceOneIsCorrect && sequenceTwoIsCorrect && sequenceThreeIsCorrect;\n\n        if (allAreCorrect) {\n            this.wizard.forceFinish();\n            // resetting for another pass through\n            this.model.allowNext = false;\n            this.model.sequenceOne = \"\";\n            this.model.sequenceTwo = \"\";\n            this.model.sequenceThree = \"\";\n            this.wizard.reset();\n            this.errorFlag = false;\n        } else {\n            this.errorFlag = true;\n        }\n    }\n\n    public doNext() {\n        if (this.model.allowNext) {\n            this.wizard.forceNext();\n            this.stressText = false;\n        } else {\n            this.stressText = true;\n        }\n    }\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "errorFlag",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [114]
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard\n    [(clrWizardOpen)]=\"open\"\n    [clrWizardSize]=\"'lg'\"\n    (clrWizardOnNext)=\"doNext()\"\n    (clrWizardOnFinish)=\"doFinish()\"\n    [clrWizardPreventDefaultNext]=\"true\"\n    >\n    <clr-wizard-title>Wizard with alternate next flows</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Wizard level alt-next</ng-template>\n        <p [class.stress]=\"stressText\">Alt-Next means you manually move users to the next page.</p>\n        <p></p>\n        <label>\n            <input #allowNext type=\"checkbox\" name=\"allowNext\" [(ngModel)]=\"model.allowNext\">\n            Check the box if you want to go to the next page\n        </label>\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageNext)=\"pageCustomNext()\"\n        [clrWizardPagePreventDefaultNext]=\"true\">\n        <ng-template clrPageTitle>Page level alt-next</ng-template>\n        <p *ngIf=\"showCancelConfirm\">Complete this fibonacci sequence</p>\n\n        <p>1, 2...</p>\n\n        <form clrForm>\n          <clr-input-container>\n            <label>What comes after 2?</label>\n            <input clrInput type=\"number\" name=\"number\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceOne\" />\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the next number in the sequence?</label>\n            <input clrInput type=\"number\" name=\"number2\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceTwo\" />\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the next number in the sequence?</label>\n            <input clrInput type=\"number\" name=\"number3\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceThree\" />\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Wizard level alt-next and the finish button</ng-template>\n        <clr-alert *ngIf=\"errorFlag\" clrAlertType=\"alert-danger\">\n            <div class=\"alert-item\">\n                Your sequence should be 1, 2, 3, 5, 8.\n            </div>\n        </clr-alert>\n\n        <ng-container *ngIf=\"!errorFlag\">\n            <p>Alt-next at the wizard level also affects the finish button!</p>\n            <p>So make sure to call through to finish when you use it.</p>\n            <p>Click the finish button to test your answers.</p>\n        </ng-container>\n\n        <p *ngIf=\"errorFlag\">Click back to the previous page to change your answers.</p>\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 132
        },
        {
          "name": "model",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 22,
          "modifierKind": [114]
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "showCancelConfirm",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "stressText",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [114]
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 17,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "doFinish",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "modifierKind": [114]
        },
        {
          "name": "doNext",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 62,
          "modifierKind": [114]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "modifierKind": [114]
        },
        {
          "name": "pageCustomNext",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "modifierKind": [114]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild, OnInit } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  moduleId: module.id,\n  selector: 'clr-wizard-alt-next',\n  templateUrl: './wizard-alt-next.demo.html',\n  styles: ['.stress { color: red; }'],\n})\nexport class WizardAltNextDemo implements OnInit {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n\n  open: boolean = false;\n  showCancelConfirm: boolean = false;\n\n  public model: any;\n  public stressText: boolean = false;\n  public errorFlag: boolean = false;\n\n  public ngOnInit() {\n    this.model = {\n      allowNext: false,\n      sequenceOne: '',\n      sequenceTwo: '',\n      sequenceThree: '',\n    };\n  }\n\n  public pageCustomNext(): void {\n    if (confirm('Are you sure you got it right?')) {\n      this.errorFlag = false;\n      this.wizard.forceNext();\n    }\n  }\n\n  public doFinish() {\n    const sequenceOneIsCorrect = this.model.sequenceOne === 3;\n    const sequenceTwoIsCorrect = this.model.sequenceTwo === 5;\n    const sequenceThreeIsCorrect = this.model.sequenceThree === 8;\n    const allAreCorrect = sequenceOneIsCorrect && sequenceTwoIsCorrect && sequenceThreeIsCorrect;\n\n    if (allAreCorrect) {\n      this.wizard.forceFinish();\n      // resetting for another pass through\n      this.model.allowNext = false;\n      this.model.sequenceOne = '';\n      this.model.sequenceTwo = '';\n      this.model.sequenceThree = '';\n      this.wizard.reset();\n      this.errorFlag = false;\n    } else {\n      this.errorFlag = true;\n    }\n  }\n\n  public doNext() {\n    if (this.model.allowNext) {\n      this.wizard.forceNext();\n      this.stressText = false;\n    } else {\n      this.stressText = true;\n    }\n  }\n\n  code: string = `\nimport { Component, ViewChild, OnInit } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardAltNextDemo implements OnInit {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    public model: any;\n    public stressText: boolean = false;\n    public errorFlag: boolean = false;\n\n    public ngOnInit() {\n        this.model = {\n            allowNext: false,\n            sequenceOne: \"\",\n            sequenceTwo: \"\",\n            sequenceThree: \"\"\n        };\n    }\n\n    public pageCustomNext(): void {\n        if (confirm(\"Are you sure you got it right?\")) {\n            this.errorFlag = false;\n            this.wizard.forceNext();\n        }\n    }\n\n    public doFinish() {\n        let sequenceOneIsCorrect = this.model.sequenceOne === 3;\n        let sequenceTwoIsCorrect = this.model.sequenceTwo === 5;\n        let sequenceThreeIsCorrect = this.model.sequenceThree === 8;\n        let allAreCorrect = sequenceOneIsCorrect && sequenceTwoIsCorrect && sequenceThreeIsCorrect;\n\n        if (allAreCorrect) {\n            this.wizard.forceFinish();\n            // resetting for another pass through\n            this.model.allowNext = false;\n            this.model.sequenceOne = \"\";\n            this.model.sequenceTwo = \"\";\n            this.model.sequenceThree = \"\";\n            this.wizard.reset();\n            this.errorFlag = false;\n        } else {\n            this.errorFlag = true;\n        }\n    }\n\n    public doNext() {\n        if (this.model.allowNext) {\n            this.wizard.forceNext();\n            this.stressText = false;\n        } else {\n            this.stressText = true;\n        }\n    }\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard\n    [(clrWizardOpen)]=\"open\"\n    [clrWizardSize]=\"'lg'\"\n    (clrWizardOnNext)=\"doNext()\"\n    (clrWizardOnFinish)=\"doFinish()\"\n    [clrWizardPreventDefaultNext]=\"true\"\n    >\n    <clr-wizard-title>Wizard with alternate next flows</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Wizard level alt-next</ng-template>\n        <p [class.stress]=\"stressText\">Alt-Next means you manually move users to the next page.</p>\n        <p></p>\n        <label>\n            <input #allowNext type=\"checkbox\" name=\"allowNext\" [(ngModel)]=\"model.allowNext\">\n            Check the box if you want to go to the next page\n        </label>\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageNext)=\"pageCustomNext()\"\n        [clrWizardPagePreventDefaultNext]=\"true\">\n        <ng-template clrPageTitle>Page level alt-next</ng-template>\n        <p *ngIf=\"showCancelConfirm\">Complete this fibonacci sequence</p>\n\n        <p>1, 2...</p>\n\n        <form clrForm>\n          <clr-input-container>\n            <label>What comes after 2?</label>\n            <input clrInput type=\"number\" name=\"number\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceOne\" />\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the next number in the sequence?</label>\n            <input clrInput type=\"number\" name=\"number2\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceTwo\" />\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the next number in the sequence?</label>\n            <input clrInput type=\"number\" name=\"number3\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceThree\" />\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Wizard level alt-next and the finish button</ng-template>\n        <clr-alert *ngIf=\"errorFlag\" clrAlertType=\"alert-danger\">\n            <div class=\"alert-item\">\n                Your sequence should be 1, 2, 3, 5, 8.\n            </div>\n        </clr-alert>\n\n        <ng-container *ngIf=\"!errorFlag\">\n            <p>Alt-next at the wizard level also affects the finish button!</p>\n            <p>So make sure to call through to finish when you use it.</p>\n            <p>Click the finish button to test your answers.</p>\n        </ng-container>\n\n        <p *ngIf=\"errorFlag\">Click back to the previous page to change your answers.</p>\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ".stress { color: red; }\n",
      "implements": ["OnInit"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Alt-Next Wizard</button>\n\n<clr-wizard #wizard\n    [(clrWizardOpen)]=\"open\"\n    [clrWizardSize]=\"'lg'\"\n    (clrWizardOnNext)=\"doNext()\"\n    (clrWizardOnFinish)=\"doFinish()\"\n    [clrWizardPreventDefaultNext]=\"true\"\n    >\n    <clr-wizard-title>Wizard with alternate next flows</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Wizard level alt-next</ng-template>\n        <p [class.stress]=\"stressText\">Alt-Next means you manually move users to the next page.</p>\n\n        <clr-checkbox-wrapper>\n          <input #allowNext type=\"checkbox\" clrCheckbox name=\"allowNext\" [(ngModel)]=\"model.allowNext\" />\n          <label>Check the box if you want to go to the next page</label>\n        </clr-checkbox-wrapper>\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageNext)=\"pageCustomNext()\"\n        [clrWizardPagePreventDefaultNext]=\"true\">\n        <ng-template clrPageTitle>Page level alt-next</ng-template>\n        <p *ngIf=\"showCancelConfirm\">Complete this fibonacci sequence</p>\n\n        <p>1, 2...</p>\n\n        <form clrForm>\n          <clr-input-container>\n            <label>What comes after 2?</label>\n            <input clrInput type=\"number\" name=\"number\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceOne\" />\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the next number in the sequence?</label>\n            <input clrInput type=\"number\" name=\"number2\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceTwo\" />\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the next number in the sequence?</label>\n            <input clrInput type=\"number\" name=\"number3\" placeholder=\"Enter a number\" [(ngModel)]=\"model.sequenceThree\" />\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Wizard level alt-next and the finish button</ng-template>\n        <clr-alert *ngIf=\"errorFlag\" clrAlertType=\"danger\">\n            <clr-alert-item>\n                Your sequence should be 1, 2, 3, 5, 8.\n            </clr-alert-item>\n        </clr-alert>\n\n        <ng-container *ngIf=\"!errorFlag\">\n            <p>Alt-next at the wizard level also affects the finish button!</p>\n            <p>So make sure to call through to finish when you use it.</p>\n            <p>Click the finish button to test your answers.</p>\n        </ng-container>\n\n        <p *ngIf=\"errorFlag\">Click back to the previous page to change your answers.</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardAsyncCompletion",
      "id": "component-WizardAsyncCompletion-c370066abbc14e70d0a6ea1ea07ebe00",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-async-completion.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-async-completion",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-async-completion.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "answer",
          "defaultValue": "null",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "checked",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "code",
          "defaultValue":
            "`import { ClrWizard, ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardAsyncCompletion {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    @ViewChild(\"myForm\") formData: any;\n    @ViewChild(\"myFinishPage\") finishPage: ClrWizardPage;\n\n    loadingFlag: boolean = false;\n    errorFlag: boolean = false;\n    checked = false;\n    finished = false;\n    open: boolean = false;\n    answer: number = null;\n\n    // have to define doCancel because page will prevent doCancel from working\n    // if the page had a previous button, you would need to call\n    // this.wizard.previous() manually as well...\n    doCancel(): void {\n        this.wizard.close();\n    }\n\n    get showCongrats(): boolean {\n      return !this.errorFlag && this.checked;\n    }\n\n    resetFinalPage(): void {\n      this.loadingFlag = false;\n      this.errorFlag = false;\n      this.checked = false;\n    }\n\n    goBack(): void {\n      this.wizard.previous();\n    }\n\n    doFinish(): void {\n      this.wizard.forceFinish();\n      this.resetFinalPage();\n    }\n\n    onCommit(): void {\n        let value: any = this.formData.value;\n        this.loadingFlag = true;\n        this.errorFlag = false;\n\n        if (this.finished) {\n          this.doFinish();\n          return;\n        }\n\n        setTimeout(() => {\n            if (value.answer === \"42\") {\n              this.finished = true;\n            } else {\n                this.finishPage.completed = false;\n                this.errorFlag = true;\n            }\n            this.checked = true;\n            this.loadingFlag = false;\n        }, 1000);\n    }\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 76
        },
        {
          "name": "errorFlag",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "finished",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "finishPage",
          "type": "ClrWizardPage",
          "optional": false,
          "description": "",
          "line": 19,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'myFinishPage', {static: true}"
            }
          ]
        },
        {
          "name": "formData",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 17,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'myForm', {static: true}"
            }
          ]
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" (clrWizardCurrentPageChanged)=\"resetFinalPage()\">\n    <clr-wizard-title>Async validation on completion</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">\n      {{ finished ? \"Done\" : \"Check Form\" }}\n    </clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Form question</ng-template> <!-- mandatory -->\n\n        <clr-alert [clrAlertType]=\"'alert-info'\" [clrAlertClosable]=\"false\" [clrCloseButtonAriaLabel]=\"'Close Wiki alert'\">\n            <div class=\"alert-item\">\n                This&nbsp;<a\n                    href=\"https://en.wikipedia.org/wiki/42_(number)#The_Hitchhiker.27s_Guide_to_the_Galaxy\"\n                    target=\"_blank\">wiki article</a>&nbsp;might help you answer the question.\n            </div>\n        </clr-alert>\n        <form clrForm #myForm=\"ngForm\">\n          <clr-input-container>\n            <label>The answer to life, the universe and everything</label>\n            <input clrInput [(ngModel)]=\"answer\" name=\"answer\" />\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page #myFinishPage\n        clrWizardPagePreventDefault=\"true\"\n        (clrWizardPageOnCommit)=\"onCommit()\"\n        (clrWizardPageOnCancel)=\"doCancel()\"\n        (clrWizardPagePrevious)=\"goBack()\">\n        <ng-template clrPageTitle>Async validation on finish</ng-template> <!-- mandatory -->\n\n        <clr-alert *ngIf=\"errorFlag\" [clrAlertType]=\"'alert-danger'\" [clrCloseButtonAriaLabel]=\"'Close Answer alert'\">\n            <div class=\"alert-item\">\n                Your answer is incorrect.\n            </div>\n        </clr-alert>\n\n        <clr-spinner *ngIf=\"loadingFlag\">\n            Loading\n        </clr-spinner>\n\n        <p *ngIf=\"errorFlag && !loadingFlag\">Go back and try again!</p>\n\n        <p *ngIf=\"showCongrats && !loadingFlag\">Congratulations! Now you know the answer to life, the universe and everything!</p>\n\n        <p *ngIf=\"!checked && !loadingFlag\">Click finish to see if you got the answer right.</p>\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 143
        },
        {
          "name": "loadingFlag",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 15,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "doCancel",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31
        },
        {
          "name": "doFinish",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        },
        {
          "name": "goBack",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45
        },
        {
          "name": "onCommit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54
        },
        {
          "name": "resetFinalPage",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard, ClrWizardPage } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-async-completion',\n  templateUrl: './wizard-async-completion.demo.html',\n})\nexport class WizardAsyncCompletion {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n  @ViewChild('myForm', { static: true })\n  formData: any;\n  @ViewChild('myFinishPage', { static: true })\n  finishPage: ClrWizardPage;\n\n  loadingFlag: boolean = false;\n  errorFlag: boolean = false;\n  checked = false;\n  finished = false;\n  open: boolean = false;\n  answer: number = null;\n\n  // have to define doCancel because page will prevent doCancel from working\n  // if the page had a previous button, you would need to call\n  // this.wizard.previous() manually as well...\n  doCancel(): void {\n    this.wizard.close();\n  }\n\n  get showCongrats(): boolean {\n    return !this.errorFlag && this.checked;\n  }\n\n  resetFinalPage(): void {\n    this.loadingFlag = false;\n    this.errorFlag = false;\n    this.checked = false;\n  }\n\n  goBack(): void {\n    this.wizard.previous();\n  }\n\n  doFinish(): void {\n    this.wizard.forceFinish();\n    this.resetFinalPage();\n  }\n\n  onCommit(): void {\n    const value: any = this.formData.value;\n    this.loadingFlag = true;\n    this.errorFlag = false;\n\n    if (this.finished) {\n      this.doFinish();\n      return;\n    }\n\n    setTimeout(() => {\n      if (value.answer === '42') {\n        this.finished = true;\n      } else {\n        this.finishPage.completed = false;\n        this.errorFlag = true;\n      }\n      this.checked = true;\n      this.loadingFlag = false;\n    }, 1000);\n  }\n\n  code: string = `import { ClrWizard, ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardAsyncCompletion {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    @ViewChild(\"myForm\") formData: any;\n    @ViewChild(\"myFinishPage\") finishPage: ClrWizardPage;\n\n    loadingFlag: boolean = false;\n    errorFlag: boolean = false;\n    checked = false;\n    finished = false;\n    open: boolean = false;\n    answer: number = null;\n\n    // have to define doCancel because page will prevent doCancel from working\n    // if the page had a previous button, you would need to call\n    // this.wizard.previous() manually as well...\n    doCancel(): void {\n        this.wizard.close();\n    }\n\n    get showCongrats(): boolean {\n      return !this.errorFlag && this.checked;\n    }\n\n    resetFinalPage(): void {\n      this.loadingFlag = false;\n      this.errorFlag = false;\n      this.checked = false;\n    }\n\n    goBack(): void {\n      this.wizard.previous();\n    }\n\n    doFinish(): void {\n      this.wizard.forceFinish();\n      this.resetFinalPage();\n    }\n\n    onCommit(): void {\n        let value: any = this.formData.value;\n        this.loadingFlag = true;\n        this.errorFlag = false;\n\n        if (this.finished) {\n          this.doFinish();\n          return;\n        }\n\n        setTimeout(() => {\n            if (value.answer === \"42\") {\n              this.finished = true;\n            } else {\n                this.finishPage.completed = false;\n                this.errorFlag = true;\n            }\n            this.checked = true;\n            this.loadingFlag = false;\n        }, 1000);\n    }\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" (clrWizardCurrentPageChanged)=\"resetFinalPage()\">\n    <clr-wizard-title>Async validation on completion</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">\n      {{ finished ? \"Done\" : \"Check Form\" }}\n    </clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Form question</ng-template> <!-- mandatory -->\n\n        <clr-alert [clrAlertType]=\"'alert-info'\" [clrAlertClosable]=\"false\" [clrCloseButtonAriaLabel]=\"'Close Wiki alert'\">\n            <div class=\"alert-item\">\n                This&nbsp;<a\n                    href=\"https://en.wikipedia.org/wiki/42_(number)#The_Hitchhiker.27s_Guide_to_the_Galaxy\"\n                    target=\"_blank\">wiki article</a>&nbsp;might help you answer the question.\n            </div>\n        </clr-alert>\n        <form clrForm #myForm=\"ngForm\">\n          <clr-input-container>\n            <label>The answer to life, the universe and everything</label>\n            <input clrInput [(ngModel)]=\"answer\" name=\"answer\" />\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page #myFinishPage\n        clrWizardPagePreventDefault=\"true\"\n        (clrWizardPageOnCommit)=\"onCommit()\"\n        (clrWizardPageOnCancel)=\"doCancel()\"\n        (clrWizardPagePrevious)=\"goBack()\">\n        <ng-template clrPageTitle>Async validation on finish</ng-template> <!-- mandatory -->\n\n        <clr-alert *ngIf=\"errorFlag\" [clrAlertType]=\"'alert-danger'\" [clrCloseButtonAriaLabel]=\"'Close Answer alert'\">\n            <div class=\"alert-item\">\n                Your answer is incorrect.\n            </div>\n        </clr-alert>\n\n        <clr-spinner *ngIf=\"loadingFlag\">\n            Loading\n        </clr-spinner>\n\n        <p *ngIf=\"errorFlag && !loadingFlag\">Go back and try again!</p>\n\n        <p *ngIf=\"showCongrats && !loadingFlag\">Congratulations! Now you know the answer to life, the universe and everything!</p>\n\n        <p *ngIf=\"!checked && !loadingFlag\">Click finish to see if you got the answer right.</p>\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "showCongrats": {
          "name": "showCongrats",
          "getSignature": {
            "name": "showCongrats",
            "type": "boolean",
            "returnType": "boolean",
            "line": 35
          }
        }
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Wizard + Async Completion</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" (clrWizardCurrentPageChanged)=\"resetFinalPage()\">\n    <clr-wizard-title>Async validation on completion</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">\n      {{ finished ? \"Done\" : \"Check Form\" }}\n    </clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Form question</ng-template> <!-- mandatory -->\n\n        <clr-alert [clrAlertType]=\"'alert-info'\" [clrAlertClosable]=\"false\" [clrCloseButtonAriaLabel]=\"'Close Wiki alert'\">\n            <clr-alert-item>\n                This&nbsp;<a\n                    href=\"https://en.wikipedia.org/wiki/42_(number)#The_Hitchhiker.27s_Guide_to_the_Galaxy\"\n                    target=\"_blank\">wiki article</a>&nbsp;might help you answer the question.\n            </clr-alert-item>\n        </clr-alert>\n        <form clrForm #myForm=\"ngForm\">\n          <clr-input-container>\n            <label>The answer to life, the universe and everything</label>\n            <input clrInput [(ngModel)]=\"answer\" name=\"answer\" />\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page #myFinishPage\n        clrWizardPagePreventDefault=\"true\"\n        (clrWizardPageOnCommit)=\"onCommit()\"\n        (clrWizardPageOnCancel)=\"doCancel()\"\n        (clrWizardPagePrevious)=\"goBack()\">\n        <ng-template clrPageTitle>Async validation on finish</ng-template> <!-- mandatory -->\n\n        <clr-alert *ngIf=\"errorFlag\" [clrAlertType]=\"'alert-danger'\" [clrCloseButtonAriaLabel]=\"'Close Answer alert'\">\n            <clr-alert-item>\n                Your answer is incorrect.\n            </clr-alert-item>\n        </clr-alert>\n\n        <clr-spinner *ngIf=\"loadingFlag\">\n            Loading\n        </clr-spinner>\n\n        <p *ngIf=\"errorFlag && !loadingFlag\">Go back and try again!</p>\n\n        <p *ngIf=\"showCongrats && !loadingFlag\">Congratulations! Now you know the answer to life, the universe and everything!</p>\n\n        <p *ngIf=\"!checked && !loadingFlag\">Click finish to see if you got the answer right.</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>"
    },
    {
      "name": "WizardAsyncValidation",
      "id": "component-WizardAsyncValidation-3f169e900b12570285ae12fe594dfdde",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-async-validation.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-async-validation",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-async-validation.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "answer",
          "defaultValue": "null",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardAsyncValidation {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    @ViewChild(\"myForm\") formData: any;\n\n    loadingFlag: boolean = false;\n    errorFlag: boolean = false;\n\n    // have to define doCancel because page will prevent doCancel from working\n    // if the page had a previous button, you would need to call \n    // this.wizard.previous() manually as well...\n    doCancel(): void {\n        this.wizard.close();\n    }\n\n    onCommit(): void {\n        let value: any = this.formData.value;\n        this.loadingFlag = true;\n        this.errorFlag = false;\n\n        setTimeout(() => {\n            if (value.answer === \"42\") {\n                this.wizard.forceNext();\n            } else {\n                this.errorFlag = true;\n            }\n            this.loadingFlag = false;\n        }, 1000);\n    }\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "errorFlag",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "formData",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 17,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'myForm', {static: true}"
            }
          ]
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n  <clr-wizard-title>Async validation</clr-wizard-title>\n\n  <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n  <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n  <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n  <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n  <clr-wizard-page\n      clrWizardPagePreventDefault=\"true\"\n      (clrWizardPageOnCommit)=\"onCommit()\"\n      (clrWizardPageOnCancel)=\"doCancel()\">\n      <ng-template clrPageTitle>Form with async validation</ng-template> <!-- mandatory -->\n\n      <clr-spinner *ngIf=\"loadingFlag\">\n          Loading\n      </clr-spinner>\n      <clr-alert [clrAlertType]=\"'alert-info'\" [clrAlertClosable]=\"false\" [clrCloseButtonAriaLabel]=\"'Close Wiki alert'\">\n          <clr-alert-item>\n              This&nbsp;<a\n                  href=\"https://en.wikipedia.org/wiki/42_(number)#The_Hitchhiker.27s_Guide_to_the_Galaxy\"\n                  target=\"_blank\">wiki article</a>&nbsp;might help you answer the question.\n          </clr-alert-item>\n      </clr-alert>\n      <clr-alert *ngIf=\"errorFlag\" [clrAlertType]=\"'alert-danger'\" [clrCloseButtonAriaLabel]=\"'Close Answer alert'\">\n          <clr-alert-item>\n              Your answer is incorrect.\n          </clr-alert-item>\n      </clr-alert>\n\n      <form clrForm #myForm=\"ngForm\" [class.hide]=\"loadingFlag\">\n        <clr-input-container>\n          <label>The answer to life, the universe and everything</label>\n          <input clrInput [(ngModel)]=\"answer\" name=\"answer\" />\n        </clr-input-container>\n      </form>\n  </clr-wizard-page>\n  <clr-wizard-page>\n    ...\n  </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 84
        },
        {
          "name": "loadingFlag",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 15,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "doCancel",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27
        },
        {
          "name": "onCommit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-async-validation',\n  templateUrl: './wizard-async-validation.demo.html',\n})\nexport class WizardAsyncValidation {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n  @ViewChild('myForm', { static: true })\n  formData: any;\n\n  loadingFlag: boolean = false;\n  errorFlag: boolean = false;\n  answer: number = null;\n  open: boolean = false;\n\n  // have to define doCancel because page will prevent doCancel from working\n  // if the page had a previous button, you would need to call\n  // this.wizard.previous() manually as well...\n  doCancel(): void {\n    this.wizard.close();\n  }\n\n  onCommit(): void {\n    const value: any = this.formData.value;\n    this.loadingFlag = true;\n    this.errorFlag = false;\n\n    setTimeout(() => {\n      if (value.answer === '42') {\n        this.wizard.forceNext();\n      } else {\n        this.errorFlag = true;\n      }\n      this.loadingFlag = false;\n    }, 1000);\n  }\n\n  code: string = `\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardAsyncValidation {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    @ViewChild(\"myForm\") formData: any;\n\n    loadingFlag: boolean = false;\n    errorFlag: boolean = false;\n\n    // have to define doCancel because page will prevent doCancel from working\n    // if the page had a previous button, you would need to call \n    // this.wizard.previous() manually as well...\n    doCancel(): void {\n        this.wizard.close();\n    }\n\n    onCommit(): void {\n        let value: any = this.formData.value;\n        this.loadingFlag = true;\n        this.errorFlag = false;\n\n        setTimeout(() => {\n            if (value.answer === \"42\") {\n                this.wizard.forceNext();\n            } else {\n                this.errorFlag = true;\n            }\n            this.loadingFlag = false;\n        }, 1000);\n    }\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n  <clr-wizard-title>Async validation</clr-wizard-title>\n\n  <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n  <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n  <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n  <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n  <clr-wizard-page\n      clrWizardPagePreventDefault=\"true\"\n      (clrWizardPageOnCommit)=\"onCommit()\"\n      (clrWizardPageOnCancel)=\"doCancel()\">\n      <ng-template clrPageTitle>Form with async validation</ng-template> <!-- mandatory -->\n\n      <clr-spinner *ngIf=\"loadingFlag\">\n          Loading\n      </clr-spinner>\n      <clr-alert [clrAlertType]=\"'alert-info'\" [clrAlertClosable]=\"false\" [clrCloseButtonAriaLabel]=\"'Close Wiki alert'\">\n          <clr-alert-item>\n              This&nbsp;<a\n                  href=\"https://en.wikipedia.org/wiki/42_(number)#The_Hitchhiker.27s_Guide_to_the_Galaxy\"\n                  target=\"_blank\">wiki article</a>&nbsp;might help you answer the question.\n          </clr-alert-item>\n      </clr-alert>\n      <clr-alert *ngIf=\"errorFlag\" [clrAlertType]=\"'alert-danger'\" [clrCloseButtonAriaLabel]=\"'Close Answer alert'\">\n          <clr-alert-item>\n              Your answer is incorrect.\n          </clr-alert-item>\n      </clr-alert>\n\n      <form clrForm #myForm=\"ngForm\" [class.hide]=\"loadingFlag\">\n        <clr-input-container>\n          <label>The answer to life, the universe and everything</label>\n          <input clrInput [(ngModel)]=\"answer\" name=\"answer\" />\n        </clr-input-container>\n      </form>\n  </clr-wizard-page>\n  <clr-wizard-page>\n    ...\n  </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Wizard + Async Form Validation</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n    <clr-wizard-title>Async validation</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page\n        clrWizardPagePreventDefault=\"true\"\n        (clrWizardPageOnCommit)=\"onCommit()\"\n        (clrWizardPageOnCancel)=\"doCancel()\">\n        <ng-template clrPageTitle>Form with async validation</ng-template> <!-- mandatory -->\n\n        <clr-spinner *ngIf=\"loadingFlag\">\n            Loading\n        </clr-spinner>\n        <clr-alert [clrAlertType]=\"'alert-info'\" [clrAlertClosable]=\"false\" [clrCloseButtonAriaLabel]=\"'Close Wiki alert'\">\n            <clr-alert-item>\n                This&nbsp;<a\n                    href=\"https://en.wikipedia.org/wiki/42_(number)#The_Hitchhiker.27s_Guide_to_the_Galaxy\"\n                    target=\"_blank\">wiki article</a>&nbsp;might help you answer the question.\n            </clr-alert-item>\n        </clr-alert>\n        <clr-alert *ngIf=\"errorFlag\" [clrAlertType]=\"'alert-danger'\" [clrCloseButtonAriaLabel]=\"'Close Answer alert'\">\n            <clr-alert-item>\n                Your answer is incorrect.\n            </clr-alert-item>\n        </clr-alert>\n\n        <form clrForm #myForm=\"ngForm\" [class.hide]=\"loadingFlag\">\n          <clr-input-container>\n            <label>The answer to life, the universe and everything</label>\n            <input clrInput [(ngModel)]=\"answer\" name=\"answer\" />\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Wizard complete</ng-template> <!-- mandatory -->\n        <p>Congratulations! Now you know the answer to life, the universe and everything!</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>"
    },
    {
      "name": "WizardBasic",
      "id": "component-WizardBasic-a3a21ef55f137fb46b76e8ba9a59bb39",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-basic.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-basic",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-basic.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`import {Component, ViewChild} from \"@angular/core\";\nimport {ClrWizard} from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardBasic {\n    @ViewChild(\"wizardmd\") wizardMedium: ClrWizard;\n    @ViewChild(\"wizardlg\") wizardLarge: ClrWizard;\n    @ViewChild(\"wizardxl\") wizardExtraLarge: ClrWizard;\n\n    mdOpen: boolean = false;\n    lgOpen: boolean = false;\n    xlOpen: boolean = false;\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "html",
          "defaultValue":
            "`<clr-wizard #wizardmd [(clrWizardOpen)]=\"mdOpen\" clrWizardSize=\"md\">\n    <clr-wizard-title>Medium-Sized Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-wizard #wizardlg [(clrWizardOpen)]=\"lgOpen\" clrWizardSize=\"lg\">\n    <clr-wizard-title>Large-Sized Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-wizard #wizardxl [(clrWizardOpen)]=\"xlOpen\">\n    <clr-wizard-title>XL Wizard (Default)</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "lgOpen",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "mdOpen",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "wizardExtraLarge",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 19,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizardxl', {static: true}"
            }
          ]
        },
        {
          "name": "wizardLarge",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 17,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizardlg', {static: true}"
            }
          ]
        },
        {
          "name": "wizardMedium",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 15,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizardmd', {static: true}"
            }
          ]
        },
        {
          "name": "xlOpen",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 23
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-basic',\n  templateUrl: './wizard-basic.demo.html',\n})\nexport class WizardBasic {\n  @ViewChild('wizardmd', { static: true })\n  wizardMedium: ClrWizard;\n  @ViewChild('wizardlg', { static: true })\n  wizardLarge: ClrWizard;\n  @ViewChild('wizardxl', { static: true })\n  wizardExtraLarge: ClrWizard;\n\n  mdOpen: boolean = false;\n  lgOpen: boolean = false;\n  xlOpen: boolean = false;\n\n  code: string = `import {Component, ViewChild} from \"@angular/core\";\nimport {ClrWizard} from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardBasic {\n    @ViewChild(\"wizardmd\") wizardMedium: ClrWizard;\n    @ViewChild(\"wizardlg\") wizardLarge: ClrWizard;\n    @ViewChild(\"wizardxl\") wizardExtraLarge: ClrWizard;\n\n    mdOpen: boolean = false;\n    lgOpen: boolean = false;\n    xlOpen: boolean = false;\n`;\n\n  html: string = `<clr-wizard #wizardmd [(clrWizardOpen)]=\"mdOpen\" clrWizardSize=\"md\">\n    <clr-wizard-title>Medium-Sized Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-wizard #wizardlg [(clrWizardOpen)]=\"lgOpen\" clrWizardSize=\"lg\">\n    <clr-wizard-title>Large-Sized Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-wizard #wizardxl [(clrWizardOpen)]=\"xlOpen\">\n    <clr-wizard-title>XL Wizard (Default)</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizardMedium.open()\">Medium Wizard</button>\n<button class=\"btn btn-primary\" (click)=\"wizardLarge.open()\">Large Wizard</button>\n<button class=\"btn btn-primary\" (click)=\"wizardExtraLarge.open()\">X-Large Wizard</button>\n\n<clr-wizard #wizardmd [(clrWizardOpen)]=\"mdOpen\" clrWizardSize=\"md\">\n    <clr-wizard-title>Medium-Sized Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        <p>Content for step 1</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        <p>Content for step 2</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        <p>Content for step 3</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-wizard #wizardlg [(clrWizardOpen)]=\"lgOpen\" clrWizardSize=\"lg\">\n    <clr-wizard-title>Large-Sized Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        <p>Content for step 1</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        <p>Content for step 2</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        <p>Content for step 3</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-wizard #wizardxl [(clrWizardOpen)]=\"xlOpen\">\n    <clr-wizard-title>XL Wizard (Default)</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        <p>Content for step 1</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        <p>Content for step 2</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        <p>Content for step 3</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardCustomButtonsDemo",
      "id": "component-WizardCustomButtonsDemo-8f98f94422d1afb727c12d8bea52cf1e",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-custom-buttons.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-custom-buttons",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-custom-buttons.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardCustomButtonsDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    public handleDangerClick(): void {\n        this.wizard.finish();\n    }\n\n    public showWarning = false;\n\n    public doCustomClick(buttonType: string): void {\n        if (\"custom-next\" === buttonType) {\n            this.wizard.next();\n        }\n\n        if (\"custom-previous\" === buttonType) {\n            this.wizard.previous();\n        }\n\n        if (\"custom-danger\" === buttonType) {\n            this.showWarning = true;\n        }\n    }\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"'lg'\">\n\n    <clr-wizard-title>Custom and default buttons</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Default</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1 with default buttons</ng-template>\n        <ng-template clrPageNavTitle>Default buttons</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageCustomButton)=\"doCustomClick($event)\">\n\n        <ng-template clrPageTitle>Page 2 with custom buttons</ng-template>\n        <ng-template clrPageNavTitle>Custom buttons</ng-template>\n        ...\n\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-previous'\">Custom</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-next'\">Custom</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3 with default buttons</ng-template>\n        <ng-template clrPageNavTitle>Default buttons</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageCustomButton)=\"doCustomClick($event)\">\n        <ng-template clrPageTitle>Page 4 with custom finish</ng-template>\n        <ng-template clrPageNavTitle>Custom buttons</ng-template>\n\n        <p *ngIf=\"!showWarning\">\n            ...\n        </p>\n\n        <p *ngIf=\"showWarning\">\n            <button type=\"submit\" class=\"btn btn-danger\" (click)=\"handleDangerClick()\">\n                Click here if you are sure\n            </button>\n        </p>\n\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-danger'\">Custom</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "showWarning",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [114]
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 16,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "doCustomClick",
          "args": [
            {
              "name": "buttonType",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "buttonType",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleDangerClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "modifierKind": [114]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-custom-buttons',\n  templateUrl: './wizard-custom-buttons.demo.html',\n})\nexport class WizardCustomButtonsDemo {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n\n  open: boolean = false;\n\n  public handleDangerClick(): void {\n    this.wizard.finish();\n  }\n\n  public showWarning = false;\n\n  public doCustomClick(buttonType: string): void {\n    if ('custom-next' === buttonType) {\n      this.wizard.next();\n    }\n\n    if ('custom-previous' === buttonType) {\n      this.wizard.previous();\n    }\n\n    if ('custom-danger' === buttonType) {\n      this.showWarning = true;\n    }\n  }\n\n  code: string = `\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardCustomButtonsDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    public handleDangerClick(): void {\n        this.wizard.finish();\n    }\n\n    public showWarning = false;\n\n    public doCustomClick(buttonType: string): void {\n        if (\"custom-next\" === buttonType) {\n            this.wizard.next();\n        }\n\n        if (\"custom-previous\" === buttonType) {\n            this.wizard.previous();\n        }\n\n        if (\"custom-danger\" === buttonType) {\n            this.showWarning = true;\n        }\n    }\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"'lg'\">\n\n    <clr-wizard-title>Custom and default buttons</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Default</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1 with default buttons</ng-template>\n        <ng-template clrPageNavTitle>Default buttons</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageCustomButton)=\"doCustomClick($event)\">\n\n        <ng-template clrPageTitle>Page 2 with custom buttons</ng-template>\n        <ng-template clrPageNavTitle>Custom buttons</ng-template>\n        ...\n\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-previous'\">Custom</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-next'\">Custom</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3 with default buttons</ng-template>\n        <ng-template clrPageNavTitle>Default buttons</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page (clrWizardPageCustomButton)=\"doCustomClick($event)\">\n        <ng-template clrPageTitle>Page 4 with custom finish</ng-template>\n        <ng-template clrPageNavTitle>Custom buttons</ng-template>\n\n        <p *ngIf=\"!showWarning\">\n            ...\n        </p>\n\n        <p *ngIf=\"showWarning\">\n            <button type=\"submit\" class=\"btn btn-danger\" (click)=\"handleDangerClick()\">\n                Click here if you are sure\n            </button>\n        </p>\n\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-danger'\">Custom</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Wizard + Button Overrides</button>\n\n<clr-wizard #wizard\n    [(clrWizardOpen)]=\"open\"\n    [clrWizardSize]=\"'lg'\">\n\n    <clr-wizard-title>Custom and default buttons</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Default</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Default</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1 with default buttons</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>Default buttons</ng-template> <!-- optional -->\n\n        <p>Content for page 1.</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page \n        (clrWizardPageCustomButton)=\"doCustomClick($event)\">\n\n        <ng-template clrPageTitle>Page 2 with custom buttons</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>Custom buttons</ng-template> <!-- optional -->\n\n        <p>Content for page 2.</p>\n\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-previous'\">Custom</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-next'\">Custom</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3 with default buttons</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>Default buttons</ng-template> <!-- optional -->\n\n        <p>Content for page 3.</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page \n        (clrWizardPageCustomButton)=\"doCustomClick($event)\">\n\n        <ng-template clrPageTitle>Page 4 with custom finish</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>Custom buttons</ng-template> <!-- optional -->\n\n        <p *ngIf=\"!showWarning\">\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae minima inventore quia, \n            officiis rem id explicabo incidunt, illum deleniti qui doloremque voluptatem, saepe tenetur \n            quas! Quaerat explicabo expedita placeat vero.\n        </p>\n\n        <p *ngIf=\"showWarning\">\n            <button type=\"submit\" class=\"btn btn-danger\" (click)=\"handleDangerClick()\">\n                Click here if you are sure\n            </button>\n        </p>\n\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">Page Override</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-danger'\">Custom</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardDefaultButtonsDemo",
      "id": "component-WizardDefaultButtonsDemo-0ae16bba9e46e318a75b678e166b16cd",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-buttons.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-default-buttons",
      "styleUrls": [],
      "styles": [],
      "template": "<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "html",
          "defaultValue":
            "`<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n    <clr-wizard-title>Wizard Title</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        ...\n    </clr-wizard-page>\n\n    ...\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-wizard-default-buttons',\n  template: `\n        <clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n    `,\n})\nexport class WizardDefaultButtonsDemo {\n  html: string = `<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n    <clr-wizard-title>Wizard Title</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        ...\n    </clr-wizard-page>\n\n    ...\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "WizardDemo",
      "id": "component-WizardDemo-c25c57f1ad4b667e1a8494f335e4ad04",
      "file": "src/website/src/app/documentation/demos/wizard/wizard.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "newLayout",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 12,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ng",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        },
        {
          "name": "ui",
          "defaultValue": "-1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "populateComponentDetails",
          "args": [
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "ui",
              "type": "number"
            },
            {
              "name": "ng",
              "type": "number"
            },
            {
              "name": "newLayout",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "title",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ui",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ng",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newLayout",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ClarityDocComponent"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\nimport { ClarityDocComponent } from '../clarity-doc';\n\n@Component({\n  selector: 'clr-wizard-demo',\n  templateUrl: './wizard.demo.html',\n  host: {\n    '[class.content-area]': 'true',\n    '[class.dox-content-panel]': 'true',\n  },\n})\nexport class WizardDemo extends ClarityDocComponent {\n  constructor() {\n    super('wizards');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 17
      },
      "extends": "ClarityDocComponent",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n<clr-doc-wrapper [ng]=\"ng\" [ui]=\"ui\" [title]=\"title\" [newLayout]=\"newLayout\">\n    <article>\n        <h5 class=\"component-summary\" id=\"wizardComponentSummary\">\n            Wizards provide a way to go through a sequence of steps that form an end to end workflow..\n        </h5>\n\n        <div id=\"design-guidelines\">\n            <h2 id=\"guidelines\" style=\"margin-top: 48px\">Design Guidelines</h2>\n\n            <p>\n                Wizards are used to help users walk through a defined step-by-step process. Each step\n                is in the sidebar on the left. As users complete steps, the steps are marked with a\n                green bar to the left.\n            </p>\n            <p>\n                Wizards should have at least 2 steps. If your wizard exceeds 10 steps, consider combining\n                similar steps.\n            </p>\n            <p>Here is when you might want to use a wizard over just a normal form:</p>\n            <ul class=\"list\">\n                <li>if the user is <b>not familiar with the domain knowledge</b> needed to complete a process</li>\n                <li>if the user needs to accomplish a goal that has <b>many steps</b> in it</li>\n                <li>if steps must be completed in a <b>specific sequence</b></li>\n            </ul>\n\n            <h3 id=\"style\">Style</h3>\n\n            <clr-wizard-design-demo></clr-wizard-design-demo>\n\n            <div class=\"clr-row\">\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Titles</h6>\n                            <p>\n                                Titles are <b>concise summaries</b>. The wizard title describes the\n                                overall workflow. The step title describes the task being completed. The content\n                                title should be similar to its step title.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Content</h6>\n                            <p>\n                                The content may differ between different types of wizards. Content can be text, a\n                                form, or both. Be <b>concise</b> and provide a <b>clear explanation</b> of the\n                                task or information a user should focus on.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"clr-col-12 clr-col-md-4\">\n                    <div class=\"clrweb-DoxMedia\">\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <h6>Buttons</h6>\n                            <p>\n                                Default progress buttons are provided, but can be overridden. Buttons are\n                                right-aligned based on the Z Pattern. Read more about it in\n                                <a routerLink=\"../../buttons\">Button Placement</a>.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"sizes\">Sizes</h3>\n\n            <p>\n                There are multiple sizes for wizards. The Clarity wizard defaults to <b>x-large</b> but\n                different sizes could be used based on the content and screen sizes you are planning to\n                support. Always remember to test responsiveness as you design and use wizards. The best size\n                is one that doesn’t feel like there is too much or too little whitespace. If you’re unsure,\n                test different ones to see which looks best.\n            </p>\n\n            <clr-wizard-design-size-demo class=\"modal-size-design-demo\"></clr-wizard-design-size-demo>\n\n            <div class=\"clr-row\" style=\"margin-top: 48px\">\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <h3 id=\"step-indicators\" style=\"margin: 21px 0 24px\">Step Indicators</h3>\n                    <ul class=\"list\">\n                        <li>Current step is indicated by a row-selected blue background</li>\n                        <li>Complete steps are indicated by a green bar to the left</li>\n                    </ul>\n                </div>\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <div class=\"clrweb-DoxMedia is-figure\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 235px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img class=\"clrweb-Img\" src=\"assets/images/documentation/wizards/wizard-steps.png\"\n                                    alt=\"Completed steps are highlighted with a green bar to the left\"/>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                Completed steps are highlighted with a green bar to the left.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"building-steps\">Building Steps</h3>\n\n            <p>\n                When building a step, it’s important to organize related tasks in it. Unrelated tasks should\n                be separate into a new step. This helps preserve context around the step being completed.\n            </p>\n            <p>\n                If a step’s content scrolls, consider splitting the step into two steps or use a larger\n                sized wizard. Scrolling content can sometimes be overlooked and users may try to progress\n                to the next step unintentionally.\n            </p>\n            <p>\n                It’s best to include only the required tasks in a step so users know they need to fill out\n                everything they see. Optional tasks slow the process of filling out a wizard.\n            </p>\n\n            <h3 id=\"conditional-steps\">Conditional Steps</h3>\n\n            <p>\n                Conditional wizards change step content or the number of steps based on the entry from\n                another step. Non-conditional wizards are preferable. However, if a conditional wizard is\n                necessary, it is preferred to update the next step to be completed. Otherwise, users might lose\n                context of what change was made.\n            </p>\n\n            <div class=\"clr-row\" style=\"margin-top: 48px\">\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <h3 id=\"dismissing\" style=\"margin: 21px 0 24px\">Dismissing Wizard</h3>\n                    <ul class=\"list\">\n                        <li>\n                            A user needs to actively dismiss a wizard. A wizard should not disappear on its own\n                        </li>\n                        <li>\n                            Completing all of the steps or cancelling should dismiss the wizard\n                        </li>\n                    </ul>\n                    <div class=\"alert alert-warning\" style=\" margin-top: 21px\">\n                        <div class=\"alert-items\">\n                            <div class=\"alert-item static\">\n                                <div class=\"alert-icon-wrapper\">\n                                    <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                                </div>\n                                <span class=\"alert-text\">\n                                    Clarity Wizards are not dismissed when clicking on the background overlay.\n                                    This prevents losing information or data. An option to override this is available.\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"clr-col-md-6 clr-col-12\">\n                    <div class=\"clrweb-DoxMedia is-figure\">\n                        <div class=\"clrweb-DoxMedia-block\" style=\"height: 235px\">\n                            <div class=\"clrweb-DoxMedia-img\">\n                                <img class=\"clrweb-Img\" src=\"assets/images/documentation/wizards/wizard-dismissing.png\"\n                                    alt=\"There are three ways of closing the wizard\"/>\n                            </div>\n                        </div>\n                        <div class=\"clrweb-DoxMedia-text\">\n                            <p>\n                                The wizard can be closed by clicking the finish button, the cancel button, or\n                                canceling out by clicking the close \"X\" in the top right.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h3 id=\"error-validation\">Error Validation</h3>\n            <p>\n                Enhancement to the wizard component to add an error state to the wizard step states.\n            </p>\n\n            <h6>Wizard step states:</h6>\n            <ul>\n                <li>Inactive</li>\n                <li>Active</li>\n                <li>Complete</li>\n                <li>Error</li>\n            </ul>\n\n            <h6>Use Cases Under Consideration</h6>\n            <ul>\n                <li>When selections in a later step in the wizard invalidate entries in earlier steps</li>\n                <li>When the user resolves an error/errors in the current step</li>\n            </ul>\n\n            <h6>Error Reported</h6>\n            <p>\n                When an error occurs, replace the step number with the error icon. This design is consistent\n                with the stepper design. Change the progress indicator to red and add a one pixel gap above and\n                below the red bar for accessibility.\n            </p>\n            <img class=\"clrweb-Img\" src=\"assets/images/documentation/wizards/wizard-error-reported.png\" alt=\"An error reported to the user via error steps.\"/>\n\n            <h6>Error State Active</h6>\n            <p>Indicate clearly why the error occurs on the error step.</p>\n            <img class=\"clrweb-Img\" src=\"assets/images/documentation/wizards/wizard-error-active.png\" alt=\"An error active reported to the user.\"/>\n\n            <h6>Error Resolved</h6>\n            <p>The progress indicator changed back to green once all errors are resolved.</p>\n            <img class=\"clrweb-Img\" src=\"assets/images/documentation/wizards/wizard-error-resolved.png\" alt=\"An error resolved in wizard.\"/>\n        </div>\n\n        <div id=\"code-examples\">\n            <h3 id=\"examples\">Code &amp; Examples</h3>\n\n            <!--\n\n            <p>Here is an example of the generated wizard markup using just HTML and CSS. Since the interactive\n                functionality of the wizard is not provided in the static version, we recommend using the Angular\n                component.</p>\n\n            <clr-wizard-demo-static></clr-wizard-demo-static>\n\n            <h3 id=\"basic-wizard\">Basic Wizard</h3>\n\n            -->\n            <p id=\"basic-wizard\">\n                The wizard is hidden and shown by toggling a boolean value assigned to the\n                <code class=\"clr-code\">clrWizardOpen</code> input. The toggling of these values is\n                shown in the code examples below.\n            </p>\n\n            <p>\n                Note that you will probably want unique booleans for hiding and showing wizards\n                when you have more than one wizard on a page. If hiding and showing are all assigned\n                to the same boolean, the wizards will all hide and show together. This is probably\n                not the intended experience.\n            </p>\n\n            <p>\n                The wizard comes in three different sizes: medium, large, and extra-large. You can set\n                the size by providing the value as an input &mdash; <code class=\"clr-code\">clrWizardSize</code>.\n                If not specified, the wizard will <b>default to extra-large</b>. Sizing options for\n                <code class=\"clr-code\">clrWizardSize</code> are: <code class=\"clr-code\">md</code>,\n                <code class=\"clr-code\">lg</code>, and <code class=\"clr-code\">xl</code>.\n            </p>\n\n            <clr-wizard-basic></clr-wizard-basic>\n\n            <h3 id=\"skipping-and-unskipping-steps\">Skipping and Unskipping Steps</h3>\n\n            <p>\n                Depending on the flow of the wizard, you may want to skip or add steps in the wizard.\n                In the 0.9.0 wizard, this is accomplished by using the <code class=\"clr-code\">*ngIf</code>\n                Angular directive.\n            </p>\n\n            <clr-wizard-simple></clr-wizard-simple>\n\n            <h4 id=\"skipping-with-ngfor\">Skipping steps and *ngFor</h4>\n\n            <p>\n                If you are using <code class=\"clr-code\">*ngFor</code> to generate your wizard pages and\n                still want to use <code class=\"clr-code\">*ngIf</code> to hide them, you will want to\n                follow <a href=\"https://angular.io/docs/ts/latest/guide/structural-directives.html#!#one-per-element\"\n                target=\"_blank\">the Angular team's recommendations on nested structural directives</a>.\n            </p>\n\n            <p>\n                At a high level, this means wrapping your <code class=\"clr-code\">&lt;clr-wizard-page\n                *ngIf=\"yourCondition\"&gt;</code> inside a <code class=\"clr-code\">&lt;ng-container\n                *ngFor=\"let page of pages\"&gt;</code> element.\n            </p>\n\n            <p>\n                Alternatively, you could add and remove elements from the array of pages you are sending\n                to the <code class=\"clr-code\">*ngFor</code>.\n            </p>\n\n            <clr-wizard-nested-directives></clr-wizard-nested-directives>\n\n            <h3 id=\"jumping-to-a-step\">Programmatically Navigating the Wizard</h3>\n\n            <p>\n                There may be times when you need end-users to jump to a specific step in a wizard. The\n                way to do this is pass the page object to the <code class=\"clr-code\">currentPage</code>\n                property of the wizard's\n                <code class=\"clr-code\">WizardNavigationService</code> provider.\n            </p>\n            <p>\n                The safest way to ensure that end-users do not wind up in a bad state is to make sure\n                that the page to which they are navigating is completed and, if not, send users to the\n                last valid page using the <code class=\"clr-code\">setLastEnabledPageCurrent()</code>\n                method on the same <code class=\"clr-code\">WizardNavigationService</code>\n                provider, as in the example below.\n            </p>\n\n            <clr-wizard-jump-to></clr-wizard-jump-to>\n\n            <h3 id=\"overriding-the-title-in-the-wizard-page\">Different Page Title in the Sidenav</h3>\n\n            <p>\n                By default, the nav item on the right-hand side will display the same title as the title\n                inside the <code class=\"clr-code\">&lt;ng-template clrPageTitle&gt;</code> in your\n                <code class=\"clr-code\">&lt;clr-wizard-page&gt;</code>. In fact, this is the <em>only</em>\n                element that is required inside your <code class=\"clr-code\">&lt;clr-wizard-page&gt;</code>.\n                It provides not only the title at the top of the content area but also the item in the\n                sidenav to the left.\n            </p>\n\n            <p>\n                Sometimes, however, having the title in the content area match the nav item is not a\n                desired behavior. The title in the content area may be too long or the nav item may\n                need to update based on changes elsewhere in the wizard.\n            </p>\n\n            <p>\n                To accomplish this customization, you can use a <code\n                class=\"clr-code\">&lt;ng-template clrPageNavTitle&gt;</code> element. When placed inside,\n                a <code class=\"clr-code\">&lt;clr-wizard-page&gt;</code>, a <code class=\"clr-code\">clrPageNavTitle</code>\n                template reference will be used in the nav sidebar of the wizard instead of the content title.\n            </p>\n\n            <p>\n                As with any Angular content, you can also use projection to change the titles in either a\n                <code class=\"clr-code\">clrPageTitle</code> or <code class=\"clr-code\">clrPageNavTitle</code>\n                whenever you need to.\n            </p>\n\n            <clr-wizard-titles></clr-wizard-titles>\n\n            <h3 id=\"custom-page-buttons\">Overriding Buttons at the Page Level</h3>\n\n            <p>\n                As part of creating a wizard, you need to include a set of default buttons of types finish,\n                next, previous, and cancel as a direct child of your <code\n                class=\"clr-code\">&lt;clr-wizard&gt;</code> element.\n            </p>\n\n            <clr-wizard-default-buttons></clr-wizard-default-buttons>\n\n            <p>\n                These buttons can be overridden at the page level, however, with other buttons of the same\n                type (but with different text) or with completely custom buttons. To override the default\n                buttons, include a new set of buttons inside a <code class=\"clr-code\">&lt;ng-template\n                clrPageButtons&gt;</code>\n                template reference element. Sets of buttons defined at the page level will override the\n                default buttons defined at the wizard level.\n            </p>\n\n            <h3 id=\"custom-buttons\">Custom Buttons and Page-Level Button Overrides</h3>\n\n            <p>\n                A <em>page override</em> is defining a button at the page level in place of a button of the\n                same type at the wizard level. These types include finish, danger, next, previous, and cancel.\n                If you override the click events of these buttons with an output like <code\n                class=\"clr-code\">clrWizardPagePreventDefault</code>, you can also short-circuit the default\n                action of the button to define your own custom action at the page level.\n            </p>\n\n            <p>\n                A <em>custom button</em> is a different beast entirely. Custom buttons are not like\n                page overrides. They have no action assigned to them. So you will need to use the\n                <code class=\"clr-code\">clrWizardPageCustomButton</code> output to assign an action to your custom\n                buttons. The output receives the custom button type which should allow you to route your wizard's\n                behavior based on the type of button it receives.\n            </p>\n\n            <p>\n                You can use specified custom button types such as <code class=\"clr-code\">custom-finish</code>,\n                <code class=\"clr-code\">custom-next</code>,\n                <code class=\"clr-code\">custom-danger</code>,\n                <code class=\"clr-code\">custom-previous</code>, or\n                <code class=\"clr-code\">custom-cancel</code> to have your custom buttons inherit the styling\n                of the button listed in the latter part of the button type. Note, however, that these\n                custom buttons <em>do not</em> kick off the actions associated with their styled types.\n                You have to tell a wizard what you want a button to do.\n            </p>\n\n            <p>\n                By default, a custom button will be styled as an outline button. Meaning it will look like a\n                \"previous\" type of button. For example, you would get an action blue, outlined button with the\n                text \"Wallaby\" inside it if you created a button with the following declaration: <code\n                class=\"clr-code\">&lt;clr-wizard-button [type]=\"'wallaby'\"&gt;Wallaby&lt;/clr-wizard-button&gt;</code>.\n                And if your page was listening to the <code class=\"clr-code\">clrWizardPageCustomButton</code> output,\n                your event handler would receive the button type <code class=\"clr-code\">wallaby</code> as a parameter\n                when the custom button was clicked.\n            </p>\n\n            <p>\n                Reference the following example:\n            </p>\n\n            <clr-wizard-custom-buttons></clr-wizard-custom-buttons>\n\n            <h3 id=\"wizard-with-form-validation\">Wizard with Form Validation</h3>\n\n            <p>\n                You can use form validation with the wizard. If you wish to disable the next button until\n                the form is valid, you can do so by setting the\n                <code class=\"clr-code\">clrWizardPageNextDisabled</code> input of the\n                <code class=\"clr-code\">&lt;clr-wizard-page&gt;</code> to the form’s valid property as shown\n                in the example.\n            </p>\n\n            <p>\n                Note also in the example how the text of the third step nav item changes as the form is\n                validated.\n            </p>\n\n            <clr-wizard-form-validation></clr-wizard-form-validation>\n\n            <h3 id=\"wizard-with-asynchronous-validation\">Wizard with Asynchronous Validation</h3>\n\n            <p>\n                Some applications may need to make an an asynchronous call for server-side\n                validation of form input. The example below demonstrates how you can prevent\n                the wizard from moving forward with the next button by setting the <code class=\"clr-code\">clrWizardPagePreventDefault</code>\n                input to false. Then enable it\n                by programmatically calling next when the asynchronous form validation passes.\n            </p>\n\n            <clr-wizard-async-validation></clr-wizard-async-validation>\n\n            <h3 id=\"wizard-with-asynchronous-completion\">Wizard with Asynchronous Completion</h3>\n\n            <p>\n                While not a recommended pattern, some applications need to validate data before\n                finishing the wizard &mdash; as opposed to the sort of page-to-page validation\n                demonstrated above.\n            </p>\n\n            <p>\n                The approach to doing this on the final page of a wizard is very similar to validating\n                each page with the only twist being where the <code class=\"clr-code\">finish()</code>\n                method should be called.\n            </p>\n\n            <clr-wizard-async-completion></clr-wizard-async-completion>\n\n            <h3 id=\"wizard-stop-navigation\">Preventing Navigation and Disabling the Stepnav</h3>\n\n            <p>\n                If a wizard concludes with a long-running task or validation, preventing a user from\n                closing the wizard, jumping to a new page in the wizard, or navigating forwards or\n                backwards may be required. The Clarity wizard offers two inputs for disabling navigation.\n            </p>\n            <p>\n                The first is the <code class=\"clr-code\">clrWizardPreventNavigation</code> input on\n                the <code class=\"clr-code\">clr-wizard</code> component. When set to\n                <code class=\"clr-code\">true</code>, this input prevents all stepnav links and buttons\n                from navigating away from the current wizard page.\n            </p>\n            <p>\n                The next input on the <code class=\"clr-code\">clr-wizard</code> component is more specific\n                to the stepnav. When <code class=\"clr-code\">clrWizardDisableStepnav</code> is set to\n                <code class=\"clr-code\">true</code>, it only disables the links in the stepnav on the left\n                of the wizard. Buttons still work.\n            </p>\n            <p>\n                Examples of when and how to use both are demonstrated in the following example.\n            </p>\n\n            <clr-wizard-stop-navigation></clr-wizard-stop-navigation>\n\n            <h3 id=\"wizard-reset\">Resetting the Wizard</h3>\n\n            <p>\n                While the easiest way to restore a wizard back to its pristine state is to destroy and\n                recreate it, there are use cases where this is not feasible. If you need to reset\n                the wizard while it is open, destroying and recreating it would be a poor experience\n                for users. Likewise, some applications are architected such that it is less expensive\n                to reuse an instance of a wizard instead of destroying it and making the backend\n                calls necessary to re-initialize a new instance.\n            </p>\n\n            <p>\n                The Clarity wizard includes a <code class=\"clr-code\">reset()</code> convenience method.\n                In order to use it, you would need a reference to the wizard in your host component and\n                can call reset from there. In the example below, we use <code\n                class=\"clr-code\">wizard.reset()</code> which references the ViewChild\n                <code class=\"clr-code\">&lt;clr-wizard #wizard&gt;</code> in the host component's template.\n            </p>\n\n            <p>\n                The <code class=\"clr-code\">reset()</code> method resets the wizard's\n                navigation and page state. So it clears out any pages that were\n                marked completed and sets the active page back to the first page of the wizard.\n            </p>\n\n            <p>\n                When resetting the wizard, it is your responsibility to reset your wizard's\n                model. This can be done either as part of the action that calls the reset, as in\n                the example below, or with an event handler that listens to the\n                <code class=\"clr-code\">clrWizardOnReset</code> output.\n            </p>\n\n            <clr-wizard-reset></clr-wizard-reset>\n\n            <h5 id=\"force-forward\">Making users go back through skipped pages</h5>\n\n            <p>\n                A different kind of wizard reset is one that occurs during navigation. For wizards\n                that use the next button to perform custom validations, users navigating backwards\n                in the wizard using the stepnav is problematic.\n            </p>\n\n            <p>\n                A user could, for instance, navigate from page 5 back to page 2 with the stepnav,\n                make changes on page 2, and then navigate back to page 5 (again using the stepnav).\n                The validation on the wizard would not run until the user clicked next or finish on\n                page 5, at which point they would be surprised with validation errors.\n            </p>\n\n            <p>\n                To avoid this, the Clarity wizard includes an input\n                <code class=\"clr-code\">clrWizardForceForwardNavigation</code> which resets pages\n                when navigating backwards when set to <code class=\"clr-code\">true</code>.\n            </p>\n\n            <p>\n                In the above example, pages 2, 3, and 4 would be reset to incomplete when the\n                user navigated from page 5 to page 2 using the stepnav.\n            </p>\n\n            <p>\n                This functionality is called “force forward” because it prevents users from jumping\n                backwards and forwards. An example is shown in the demo below.\n            </p>\n\n            <clr-wizard-force-forward></clr-wizard-force-forward>\n\n            <h3 id=\"alternative-cancel\">Providing an Alternative Cancel for the Wizard</h3>\n\n            <p>\n                The Clarity wizard allows users to circumvent the default cancel/close action at\n                both the page and wizard level to enable their own functionality to validate,\n                prompt users, or reset their data.\n            </p>\n            <p>\n                At the wizard level, setting the <code class=\"clr-code\">clrWizardPreventDefaultCancel</code>\n                input to true prevents the wizard’s cancel routine from running on any page. When the\n                <code class=\"clr-code\">clrWizardPreventDefaultCancel</code> input is set, users must\n                also assign an event handler to the <code class=\"clr-code\">clrWizardOnCancel</code>\n                output and manually call <code class=\"clr-code\">close()</code> on their instance of\n                the wizard for the cancel action to take effect.\n            </p>\n            <p>\n                That cancel/close functionality of the wizard can also be overridden at the page\n                level. Users must set the <code class=\"clr-code\">clrWizardPagePreventDefaultCancel</code>\n                input to true on the <code class=\"clr-code\">&lt;clr-wizard-page&gt;</code> declaration\n                and likewise supply an event handler to the\n                <code class=\"clr-code\">clrWizardPageOnCancel</code> output. This event handler will\n                also need to manually call <code class=\"clr-code\">close()</code> for the expected\n                wizard cancel functionality to take effect.\n            </p>\n            <p>\n                In the case of a conflict where the cancel action is overridden at both the page and\n                wizard levels, the page level takes precedence.\n                <code class=\"clr-code\">clrWizardOnCancel</code> will never be emitted. The example\n                below demonstrates this.\n            </p>\n\n            <clr-wizard-alt-cancel></clr-wizard-alt-cancel>\n\n            <h5 id=\"no-cancel\">But what if I do not want any cancel buttons?</h5>\n\n            <p>\n                There are times when you may want your end-users to finish hey wizard before\n                they can do anything else. This may include installation routines or set up\n                of your application. In these instances, it makes sense to use a wizard that\n                does not have a cancel button and is also not closable.\n            </p>\n            <p>\n                If you do not want a cancel action in your wizard, do not include a cancel\n                button in your default set of buttons or do not include it in your\n                <code class=\"clr-code\">&lt;ng-template clrPageButtons&gt;</code> template\n                reference at the page level.\n            </p>\n            <p>\n                This also applies to other button types like previous or next. Note, however,\n                that omission of next, previous, and finish buttons is not recommended and\n                could confuse end-users of your application.\n            </p>\n            <p>\n                The example below demonstrates a wizard without cancel buttons that is also\n                set to not be closable. The only way to close it is to the click all the way\n                through it.\n            </p>\n\n            <clr-wizard-no-cancel></clr-wizard-no-cancel>\n\n            <h3 id=\"alternative-cancel\">Providing an Alternative Next for the Wizard</h3>\n\n            <p>\n                Just like with <code class=\"clr-code\">clrWizardPreventDefaultCancel</code>,\n                the Clarity wizard allows users to override the default primary button actions at\n                both the page and wizard level. This includes danger, finish, and next buttons.\n            </p>\n            <p>\n                The use case for this is when you want the wizard to validate its contents\n                whenever the next button is clicked. It is less overt than manipulating the\n                <code class=\"clr-code\">clrWizardPageNextDisabled</code> to enable or disable\n                a wizard page's primary buttons, as demonstrated in the form validation example above.\n            </p>\n            <p>\n                Overriding next, finish, and danger buttons at the wizard level involves setting\n                the <code class=\"clr-code\">clrWizardPreventDefaultNext</code>\n                input to true. This prevents the wizard from executing the built-in methods that finish\n                the wizard and move the wizard to the next page.\n            </p>\n            <p>\n                Using <code class=\"clr-code\">clrWizardPreventDefaultNext</code> requires that you handle\n                the <code class=\"clr-code\">clrWizardOnNext</code> and\n                <code class=\"clr-code\">clrWizardOnFinish</code> event emitters in your host component's\n                code. These routines will need to call\n                <code class=\"clr-code\">wizard.forceNext()</code> and\n                <code class=\"clr-code\">wizard.forceFinish()</code>, respectively.\n                <code class=\"clr-code\">forceNext()</code> and <code class=\"clr-code\">forceFinish()</code>\n                perform the work of finishing the wizard and moving it to the next page without the\n                checks and event emissions involved with calling the default\n                <code class=\"clr-code\">next()</code> and <code class=\"clr-code\">finish()</code>\n                methods in the wizard.\n            </p>\n            <p>\n                You can override the primary button actions at a page level by using the\n                <code class=\"clr-code\">clrWizardPagePreventDefaultNext</code>\n                input.\n            </p>\n            <p>\n                As with wizard level overrides, you will need to provide an event handler for\n                the <code class=\"clr-code\">clrWizardPageNext</code> and\n                <code class=\"clr-code\">clrWizardPageFinish</code> outputs. If your specific page\n                does not have a finish button, there is no need to handle\n                the <code class=\"clr-code\">clrWizardPageFinish</code> event. The same holds true\n                for wizard pages that do not have next buttons.\n            </p>\n            <p>\n                Also similar to the output routines at the wizard level, your page-level methods will\n                need to manually call the <code class=\"clr-code\">wizard.forceNext()</code> and\n                <code class=\"clr-code\">wizard.forceFinish()</code> methods to bring that functionality\n                back to the overridden page.\n            </p>\n            <p>\n                Just like with the cancel overrides, the page level override is used in place of the\n                wizard level override when a specific page has them both set. The example\n                below shows how this happens.\n            </p>\n\n            <clr-wizard-alt-next></clr-wizard-alt-next>\n\n            <h3 id=\"non-closable-wizard\">Non-Closable Wizard</h3>\n\n            <p>In some circumstances, you may want to not show the closing × icon in the top right of the\n                Wizard modal. You can remove this close × icon by setting the\n                <code class=\"clr-code\">clrWizardClosable</code> input to <code class=\"clr-code\">false</code>.</p>\n\n            <clr-wizard-not-closable></clr-wizard-not-closable>\n            <h3 id=\"clarity-wizard-deep-dive\">Clarity Wizard Deep-Dive</h3>\n\n            <p>\n                The Clarity wizard is a complex component made up of a number of subcomponents. Each\n                Clarity wizard also has a number of services whose chief responsibility is handling\n                communication between the wizard and its subcomponents.\n            </p>\n\n            <p>\n                The subcomponents that make up the wizard include a collection of buttons, wizard pages,\n                the “step-nav” to the left of the wizard’s content area, and the “step-nav items” which\n                constitute the links that appear in the step-nav.\n            </p>\n\n            <p>\n                The Clarity wizard also has a number of providers (services). The most important of these\n                services are the <code class=\"clr-code\">WizardNavigationService</code> and the\n                <code class=\"clr-code\">PageCollectionService</code>. At a high-level, the\n                <code class=\"clr-code\">WizardNavigationService</code> (or “nav service”) manages the state\n                of the current page in a wizard, as well as functionality and communication related to\n                making pages current. The <code class=\"clr-code\">PageCollectionService</code> (or “page\n                collection”) handles functionality that treats the pages within a wizard as a group of objects.\n            </p>\n            <p>\n                In the following sections, we will briefly touch upon the most important components and\n                services related to the wizard, as well as their most notable inputs, outputs, and public\n                methods and properties.\n            </p>\n\n            <h5>The wizard</h5>\n\n            <p>\n                The wizard component is a sort of meta-component that brings together a group of services\n                and subcomponents. Most of the time, everything you need to do with the wizard can be done\n                through a reference to the wizard in your host component.\n            </p>\n\n            <pre><code clr-code-highlight=\"language-typescript\">@Component(&#123;\n    ...\n&#125;)\nexport class WizardJumpToDemo &#123;\n    @ViewChild(\"ohai\") wizard: ClrWizard; // makes wizard accessible through this.wizard!!!\n    ...\n</code></pre>\n\n        <pre><code clr-code-highlight=\"language-html\">&lt;clr-wizard #ohai [(clrWizardOpen)]=\"open\">\n    &lt;!-- the '#wizard' up there creates the reference that your ViewChild property looks for --&gt;\n    &lt;clr-wizard-title&gt;Your Wizard&lt;/clr-wizard-title&gt;\n    ...\n</code></pre>\n\n            <p>\n                Because the wizard’s functionality involves mostly monitoring the state and managing\n                communications with child components, the wizard expects some subcomponents to be declared in order for\n                it to avoid an existential crisis.\n            </p>\n\n            <p>\n                Every wizard needs a <code class=\"clr-code\">&lt;clr-wizard-title&gt;</code>,\n                <code class=\"clr-code\">&lt;clr-wizard-button&gt;</code>, and at least one\n                <code class=\"clr-code\">&lt;clr-wizard-page&gt;</code> component to be declared as\n                its children. If these sub-components are not present, the wizard will throw an error.\n            </p>\n\n            <p>\n                As a convenience, wizards give you hooks to all of their services. If you have a reference to\n                the wizard in your host component as in the example above, you can access all of the important\n                nav service and page collection functionality. Specifically, the above example could call\n                <code class=\"clr-code\">this.wizard.navService</code> or\n                <code class=\"clr-code\">this.wizard.pageCollection</code> to access the nav service or page\n                collection, respectively.\n            </p>\n\n            <h6>Inputs of note</h6>\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">clrWizardSize</code> (string) sets the size of the wizard.\n                    Acceptable values are\n                    <code class=\"clr-code\">md</code>, <code class=\"clr-code\">lg</code>, and\n                    <code class=\"clr-code\">xl</code> representing medium, large, and extra-large wizards.\n                    <code class=\"clr-code\">xl</code> is default.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardClosable</code> (boolean) hides or reveals the\n                    close “X” in the top right. If false, the close “X” will not be present. The property\n                    defaults to true.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardOpen</code> (boolean) hides or shows the wizard, in\n                    the same way that <code class=\"clr-code\">clrModalOpen</code> hides or shows a modal.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardPreventDefaultCancel</code> (boolean) prevents a\n                    user’s cancel action from closing the wizard. Defaults to false.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardForceForwardNavigation</code> (boolean)\n                    sets pages to incomplete when they are skipped over because a user navigates\n                    backwards using the stepnav. Most useful when validation is occurring on a page-by-page\n                    basis when the next button is clicked.\n                </li>\n                <li>\n                    When set to true, <code class=\"clr-code\">clrWizardPreventNavigation</code> (boolean)\n                    disables the buttons in the footer, the links in the stepnav to the left, and the close\n                    \"X\" in the top right of the wizard if present.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardDisableStepnav</code> (boolean) disables the links in\n                    the stepnav when set to true.\n                </li>\n            </ul>\n\n            <h6>Outputs of note</h6>\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">clrWizardOpenChange</code> is an output that fires an event\n                    after the wizard has opened.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardOnCancel</code> fires an event after the wizard has\n                    been canceled and, in most cases, closed. This output can be used with the\n                    <code class=\"clr-code\">clrWizardPreventDefaultCancel</code> input to\n                    implement custom functionality when a user wants to close or cancel a wizard.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardOnFinish</code> emits an event after a wizard has\n                    been completed &mdash; once the finish button on the last page has been clicked. If\n                    you wanted to reset the wizard after it was finished, this would be a good output to consider.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardOnReset</code> emits an event after the wizard has\n                    reset all of its pages to incomplete and also reset its navigation to make the first\n                    page in the step nav current.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardCurrentPageChanged</code> is fired after the current\n                    page of the wizard has been changed.\n                </li>\n            </ul>\n\n            <h6>Useful properties on the wizard</h6>\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">wizard.currentPage</code> will retrieve the current page\n                    object (<code class=\"clr-code\">WizardPage</code>) of the wizard.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.isLast</code> returns a boolean telling you if the\n                    current page is the last page in the wizard.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.isFirst</code> will also return a boolean, but this\n                    one will tell you if the current page is the first page in the wizard.\n                </li>\n            </ul>\n\n            <h6>Useful methods on the wizard</h6>\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">wizard.open()</code> opens the wizard.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.close()</code> just closes the wizard but bypasses\n                    event emitters associated with finish and cancel. Use this method on the wizard\n                    to implement custom cancel or finish methods in your host component to avoid any\n                    circular event emission.\n                </li>\n                <li>\n                    You can pass a boolean to <code class=\"clr-code\">wizard.toggle()</code> to hide\n                    or show the wizard. <code class=\"clr-code\">wizard.toggle(false)</code> will hide\n                    the wizard and <code class=\"clr-code\">wizard.toggle(true)</code> will show it.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.previous()</code> will try to move the wizard to the\n                    page immediately before the current page &mdash; if it can. It will fail silently\n                    if the current page has no previous page to which it can move.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.next()</code> will try to move the wizard to the page\n                    immediately after the current page. It will also fail silently if the current page\n                    has no page that follows it.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.finish()</code> will initiate the routines associated\n                    with completing the wizard, as if a finish button had been clicked on the last page.\n                    You can use <code class=\"clr-code\">wizard.finish()</code> in your code if you are\n                    using a custom finish or danger button on the last page in your wizard.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.cancel()</code> will invoke the cancel routines for the\n                    wizard as if the close “X” or cancel button had been clicked. This should probably only\n                    be used if you have a custom cancel button that you need to wire up or if you want to\n                    cancel the wizard programmatically. If you are trying to circumvent the wizard’s cancel\n                    routine altogether, you would be better off using\n                    <code class=\"clr-code\">wizard.close()</code>.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.goTo()</code> accepts a string representing the id of the\n                    page you want the wizard to make current as a parameter. If you have references to\n                    your pages in your host component, the page id can be retrieved with\n                    <code class=\"clr-code\">wizardpage.id</code> and can be passed into\n                    <code class=\"clr-code\">wizard.goTo()</code> &mdash;\n                    <code class=\"clr-code\">this.wizard.goTo(this.wizardpage.id)</code>. Note that\n                    <code class=\"clr-code\">wizard.goTo()</code> checks to see if preceding pages have been\n                    completed before navigating to the specified page. If they have not been, it doesn’t\n                    do anything.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.reset()</code> resets all pages' completed states to false\n                    and makes the first page in the wizard the current page &mdash; as if the wizard had\n                    never been opened before. See the demo below for a more extensive example and explanation.\n                </li>\n            </ul>\n\n            <h5>The wizard page</h5>\n\n            <p>\n                Besides the wizard, the second most important component is the wizard page. This is\n                because users often want to customize at the page level, instead of the wizard level.\n            </p>\n            <p>\n                Just like the wizard, the wizard page needs an expected element within it or it will\n                throw an error. Each wizard page needs a\n                <code class=\"clr-code\">&lt;ng-template clrPageTitle&gt;</code> templateRef inside of\n                it. Without this, the wizard page will have an existential crisis and not know what to\n                call itself.\n            </p>\n            <p>\n                By default, the content of the <code class=\"clr-code\">&lt;ng-template clrPageTitle&gt;</code>\n                templateRef will appear as the title in the content area of the wizard when the page\n                is current as well as in the page's associated link in the step nav to the left.\n            </p>\n            <p>\n                You can also save a reference to a wizard page in your host component if you want.\n                Each page has hooks to the nav service and page collection providers shared between\n                the wizard and its subcomponents.\n            </p>\n\n            <pre><code clr-code-highlight=\"language-typescript\">@Component(&#123;\n    ...\n&#125;)\nexport class WizardJumpToDemo &#123;\n    @ViewChild(\"firstPage\") wizardPage_1: ClrWizardPage;\n    @ViewChild(\"secondPage\") wizardPage_2: ClrWizardPage;\n\n    get pageAreDone(): boolean &123;\n        return this.firstPage.completed &amp;&amp; this.secondPage.completed;\n    &125;\n</code></pre>\n\n            <pre><code clr-code-highlight=\"language-html\">&lt;clr-wizard [(clrWizardOpen)]=\"open\">\n    &lt;clr-wizard-title&gt;Your Wizard&lt;/clr-wizard-title&gt;\n    &lt;clr-wizard-page #firstPage&gt;\n        ...\n    &lt;/clr-wizard-page&gt;\n    &lt;clr-wizard-page #secondPage&gt;\n        ...\n    &lt;/clr-wizard-page&gt;\n    ...\n</code></pre>\n\n            <h6>Inputs of note</h6>\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">clrWizardPageNextDisabled</code> is a boolean that\n                    disables the next button. It can be used to force validation on the current\n                    page before allowing users to move to the next page or finish a wizard.\n                    This is <code class=\"clr-code\">false</code> by default.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardPagePreventDefault</code> is a boolean that\n                    circumvents all actions (cancel, finish, next, and previous) when the page\n                    is current. This can be used in combination with the outputs below to write\n                    your own wizard navigation procedures. This input is\n                    <code class=\"clr-code\">false</code> by default.\n                </li>\n                <li>\n                    Most users, however, only want to monitor or circumvent the cancellation\n                    of the wizard. <code class=\"clr-code\">clrWizardPagePreventDefaultCancel</code>\n                    does that. It is a boolean input that, if set to true, prevents the cancel\n                    action from firing when the page is current. Also\n                    <code class=\"clr-code\">false</code> by default.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardPageHasError</code> is a boolean that \n                    applies the error style on the page. This input is\n                    <code class=\"clr-code\">false</code> by default.\n                </li>\n            </ul>\n\n            <h6>Outputs of note</h6>\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">clrWizardPageOnCommit</code> is an output that emits\n                    after a page is marked completed by user action. Generally, this happens\n                    after danger, finish, or next buttons are clicked. It will not be fired\n                    if the page is marked completed programmatically.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardPageOnLoad</code> is emitted after a page is\n                    made the current page. It cannot circumvent making a page current but it\n                    will notify you when a page has been made current and it delivers the\n                    page’s id as a string.\n                </li>\n                <li>\n                    <code class=\"clr-code\">clrWizardPageOnCancel</code> is an output that fires\n                    when a user's action on a page initiates the wizard’s cancel routine. This\n                    output, combined with the <code class=\"clr-code\">clrWizardPagePreventDefaultCancel</code>\n                    or <code class=\"clr-code\">clrWizardPagePreventDefault</code> inputs, allows you\n                    to customize or rewrite the cancellation of a wizard from a page level.\n                </li>\n                <li>\n                    Wizard pages also have a set of outputs that emit when different buttons\n                    are clicked in the wizard. Note that these events are only emitted for the\n                    page when the page is current. These outputs include:\n                    <code class=\"clr-code\">clrWizardPageFinish</code> when the finish button is\n                    clicked, <code class=\"clr-code\">clrWizardPagePrevious</code> when the previous button\n                    is clicked, <code class=\"clr-code\">clrWizardPageNext</code> when the next button\n                    is clicked, <code class=\"clr-code\">clrWizardPageDanger</code> when a danger button\n                    is clicked, <code class=\"clr-code\">clrWizardPagePrimary</code> when a\n                    next/finish/danger button is clicked, and\n                    <code class=\"clr-code\">clrWizardPageCustomButton</code> when any custom button\n                    is clicked. All of these outputs (and <code class=\"clr-code\">clrWizardPageOnCancel</code>)\n                    can be combined with the <code class=\"clr-code\">clrWizardPagePreventDefault</code>\n                    input to create a unique, page-based behavior. More examples are available\n                    in the demos below.\n                </li>\n            </ul>\n\n            <h6>Useful properties of the wizard page</h6>\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">wizardpage.id</code> returns the id of the page as a string.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizardpage.completed</code> is a boolean that tells you if\n                    the page has been completed or not. If <code class=\"clr-code\">true</code>, the page\n                    has been completed. If <code class=\"clr-code\">false</code>, it has not.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizardpage.current</code> is a boolean tells you if the page\n                    is the current page or not.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizardpage.hasError</code> is a boolean that tells you if the page\n                    has an error or not.\n                </li>\n            </ul>\n\n            <h6>Useful methods of the wizard page</h6>\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">wizardpage.makeCurrent()</code> tells the nav service to make\n                    <code class=\"clr-code\">wizardpage</code> the current page. This method circumvents\n                    checks to see if the page can be made current. Use\n                    <code class=\"clr-code\">wizard.goTo()</code> if you want to nav service to validate\n                    whether the specified page can be made current or not.\n                </li>\n            </ul>\n\n            <h5>Providers (Services)</h5>\n\n            <p>\n                The Clarity wizard has a number of services (providers) that are created by the wizard\n                and shared among all of its subcomponents. The two that you are most likely to interact\n                with are the <code class=\"clr-code\">WizardNavigationService</code> and\n                <code class=\"clr-code\">PageCollectionService</code>.\n            </p>\n\n            <h6>WizardNavigationService</h6>\n\n            <p>\n                The <code class=\"clr-code\">WizardNavigationService</code> or “nav service” is the wizard’s\n                executive assistant. It communicates with the wizard, the pages, and the\n                <code class=\"clr-code\">PageCollectionService</code> to make sure everyone stays in sync.\n                Most of what the nav service does is already available to you through convenience methods\n                on the wizard. Methods like <code class=\"clr-code\">next()</code>,\n                <code class=\"clr-code\">previous()</code>, and <code class=\"clr-code\">finish()</code>.\n            </p>\n            <p>\n                It may have seemed, initially, that the wizard was super-helpful and doing lots of work.\n                But the truth is the nav service does all the work. The wizard just gets all the credit!\n            </p>\n            <p>\n                Because much of what the nav service does is behind-the-scenes, there is really only\n                a couple of methods and properties on the nav service that may interest you:\n            </p>\n\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">wizard.navService.currentPage</code> is a getter/setter\n                    That will return the current page is called on its own or set the current page\n                    to any WizardPage object that is passed to it. This bypasses most of the checks\n                    involved with setting the current page but still emits a\n                    <code class=\"clr-code\">pageOnLoad</code> event.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.navService.goTo()</code> takes either the id of a page\n                    or the page object itself and checks to see if it can make the page current. This is\n                    slightly more flexible than <code class=\"clr-code\">wizard.goTo()</code> which only\n                    takes a page id.\n                </li>\n            </ul>\n\n            <h6>PageCollectionService</h6>\n\n            <p>\n                The <code class=\"clr-code\">PageCollectionService</code> &mdash; or “page collection” &mdash;\n                groups all of the pages in the wizard together and acts as kind of a librarian. If you\n                are looking for a page or even a group of pages, the page collection has you covered.\n                The page collection also handles a small set of bulk actions on the pages in a wizard.\n            </p>\n\n            <p><b>Properties</b></p>\n\n            <ul class=\"list\">\n                <li>\n                    <code class=\"clr-code\">wizard.pageCollection.pages</code> is a\n                    <code class=\"clr-code\">QueryList</code> of all the pages in a wizard.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.pageCollection.pagesAsArray</code> is\n                    a convenient getter that returns\n                    <code class=\"clr-code\">wizard.pageCollection.pages</code> as an array of page objects.\n                </li>\n            </ul>\n\n            <p><b>Methods</b></p>\n            <ul class=\"list\">\n                <li>\n                    If you know a page’s id, you can pass it as a string parameter to\n                    <code class=\"clr-code\">wizard.pageCollection.getPageById()</code> and it will\n                    return the page if it exists in the page collection.\n                </li>\n                <li>\n                    Alternatively, you can pass the page’s index in the list of pages as a number\n                    parameter to <code class=\"clr-code\">wizard.pageCollection.getPageByIndex()</code>\n                    to get the page returned back to you.\n                </li>\n                <li>\n                    If you have a page and you need to know where it is in the list of pages, you\n                    can pass the page object as a parameter to\n                    <code class=\"clr-code\">wizard.pageCollection.getPageIndex()</code>\n                    and it will return the page’s numeric index.\n                </li>\n                <li>\n                    Passing a page object to <code class=\"clr-code\">wizard.pageCollection.getPreviousPage()</code>\n                    as a parameter will return you the page before it in the collection or null\n                    if your page object is the first page in the collection.\n                </li>\n                <li>\n                    Continuing the trend, you can pass a page object as a parameter to\n                    <code class=\"clr-code\">wizard.pageCollection.getNextPage()</code> and it will\n                    return the page after your page object in the collection or null if your\n                    page object is the last page in the collection.\n                </li>\n                <li>\n                    <code class=\"clr-code\">wizard.pageCollection.updateCompletedStates()</code>\n                    is a function that cleans up the page collection by figuring out the first page\n                    marked as incomplete and the collection and then marking every page after\n                    it incomplete as well. This is a useful method if you handle a lot of page\n                    state programmatically.\n                </li>\n            </ul>\n        </div>\n    </article>\n</clr-doc-wrapper>\n"
    },
    {
      "name": "WizardDesignDemo",
      "id": "component-WizardDesignDemo-a7c5f2dcbc86e585efe9b861e326e4c9",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-design.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{ provide: ÇlrFocusTrapTracker, useClass: DisableFocusTrap }"
        }
      ],
      "selector": "clr-wizard-design-demo",
      "styleUrls": [],
      "styles": [
        "\n            .wizdemo-color-block-row {\n                margin-left: 0 !important;\n                margin-right: 0 !important;\n            }\n        ",
        "\n            .wizdemo-color-block {\n                float: left;\n                width: 80px;\n                height: 80px;\n                background-color: black;\n                border: 3px solid white;\n                box-shadow: inset 5px -5px 0px 0px white, inset -5px 5px 0px 0px white;\n                cursor: pointer;\n            }\n        ",
        "\n            .wizdemo-color-block.is-icon {\n                background: none;\n                text-align: center;\n                padding-top: 12px;\n            }\n        ",
        "\n            .wizdemo-color-block.is-icon clr-icon {\n                height: 48px;\n                width: 48px;\n            }\n        ",
        "\n            .wizdemo-color-block.is-icon.active {\n                border-color: #fff;\n                color: #fff;\n                background: #0079B8;\n            }\n        ",
        "\n            .wizdemo-color-block.is-icon.active:hover {\n                border-color: #0079B8;\n            }\n        ",
        "\n            .wizdemo-color-block.is-icon.disabled {\n                opacity: 0.4;\n                cursor: not-allowed;\n            }\n        ",
        "\n            .wizdemo-color-block.is-icon.disabled:hover {\n                border-color: #fff;\n            }\n        ",
        "\n            .wizdemo-color-block:hover {\n                border-color: #D9E4EA;\n            }\n        ",
        "\n            .wizdemo-color-block-wrapper {\n                padding: 5px 0;\n            }\n        ",
        "\n            .wizdemo-color-block.active {\n                border-color: #565656;\n            }\n        ",
        "\n            :host ::ng-deep .clr-wizard.wizard-xl .modal-dialog {\n                max-height: 100%;\n            }\n        "
      ],
      "templateUrl": ["./wizard-design.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "colorLabels",
          "defaultValue": "['Blue', 'Red', 'Black', 'Orange', 'Lime Green', 'Purple', 'Fuchsia', 'Indigo']",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 247
        },
        {
          "name": "colorList",
          "defaultValue": "['blue', 'red', 'black', 'orange', 'limegreen', 'purple', 'fuchsia', 'indigo']",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 123
        },
        {
          "name": "model",
          "defaultValue":
            "{\n    name: '',\n    favorite: '',\n    number: '',\n    ht_feet: '1 ft.',\n    ht_inches: '0 in.',\n    weight: '',\n    gender: 'Male',\n    color: 'blue',\n    power: 'happy-face',\n    weakness: 'lightbulb',\n    ranking: 12,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 145
        },
        {
          "name": "numberField",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 99,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'number', {static: true}"
            }
          ]
        },
        {
          "name": "open",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 101
        },
        {
          "name": "pageFour",
          "type": "ClrWizardPage",
          "optional": false,
          "description": "",
          "line": 310,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'pageFour', {static: true}"
            }
          ]
        },
        {
          "name": "pageOne",
          "type": "ClrWizardPage",
          "optional": false,
          "description": "",
          "line": 280,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'pageOne', {static: true}"
            }
          ]
        },
        {
          "name": "pageThree",
          "type": "ClrWizardPage",
          "optional": false,
          "description": "",
          "line": 300,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'pageThree', {static: true}"
            }
          ]
        },
        {
          "name": "pageTwo",
          "type": "ClrWizardPage",
          "optional": false,
          "description": "",
          "line": 290,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'pageTwo', {static: true}"
            }
          ]
        },
        {
          "name": "powerSources",
          "defaultValue":
            "[\n    'happy-face',\n    'cloud',\n    'lightbulb',\n    'eye',\n    'bolt',\n    'bullseye',\n    'star',\n    'hourglass',\n    'talk-bubbles',\n    'shield-x',\n    'upload-cloud',\n    'sad-face',\n    'balance',\n    'share',\n    'wifi',\n    'dashboard',\n    'flame',\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 125
        },
        {
          "name": "powerText",
          "defaultValue":
            "[\n    'has the power of boundless optimism',\n    'has the power to control the weather',\n    'has light powers',\n    'can shoot lasers out of its eyes',\n    'can control lightning',\n    'has the power of archery',\n    'has the power of fame and likeability',\n    'has the power of time management',\n    'has the power of linguistics',\n    'has protective powers',\n    'can fly',\n    'has the power of ennui',\n    'has a law degree',\n    'can make duplicates of itself',\n    'has the power of wifi',\n    'can run at superspeed',\n    'can shoot flames out of the side of its face',\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 187
        },
        {
          "name": "shortPowerLabels",
          "defaultValue":
            "[\n    'Optimism',\n    'Weather',\n    'Light',\n    'Eye Lasers',\n    'Lightning',\n    'Archery/Marksmanship',\n    'Fame',\n    'Time Management',\n    'Language',\n    'Armor/Protection',\n    'Flight',\n    'Ennui',\n    'Law',\n    'Duplicate',\n    'Wifi',\n    'Speed',\n    'Fire',\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 227
        },
        {
          "name": "showPowerError",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 249
        },
        {
          "name": "weaknessText",
          "defaultValue":
            "[\n    'is hopelessly optimistic',\n    'is afraid of clouds',\n    'is afraid of the dark',\n    'is afraid of eye-lasers',\n    'is afraid of lightning',\n    'has very bad aim',\n    'is consumed with achieving fame and glory',\n    'can only perform one task at a time',\n    'cannot understand what you say',\n    'is squishy',\n    'cannot fly but thinks it can',\n    'suffers from depression',\n    'is a wanted fugitive',\n    'has an evil twin',\n    'requires a wifi connection',\n    'is slower than a turtle',\n    'is afraid of fire',\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 207
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 97,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "createRanking",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 319
        },
        {
          "name": "reset",
          "args": [
            {
              "name": "val",
              "type": "boolean"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 103,
          "jsdoctags": [
            {
              "name": "val",
              "type": "boolean",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setPower",
          "args": [
            {
              "name": "pwrSource",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 251,
          "jsdoctags": [
            {
              "name": "pwrSource",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setWeakness",
          "args": [
            {
              "name": "pwrSource",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 265,
          "jsdoctags": [
            {
              "name": "pwrSource",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard, ClrWizardPage, ÇlrFocusTrapTracker } from '@clr/angular';\nimport { DisableFocusTrap } from '../../utils/disable-focus-trap';\n\n@Component({\n  selector: 'clr-wizard-design-demo',\n  templateUrl: './wizard-design.demo.html',\n  host: {\n    '[class.in-place-takeover]': 'true',\n    '[class.is-large]': 'true',\n  },\n  providers: [{ provide: ÇlrFocusTrapTracker, useClass: DisableFocusTrap }],\n  styles: [\n    `\n            .wizdemo-color-block-row {\n                margin-left: 0 !important;\n                margin-right: 0 !important;\n            }\n        `,\n    `\n            .wizdemo-color-block {\n                float: left;\n                width: 80px;\n                height: 80px;\n                background-color: black;\n                border: 3px solid white;\n                box-shadow: inset 5px -5px 0px 0px white, inset -5px 5px 0px 0px white;\n                cursor: pointer;\n            }\n        `,\n    `\n            .wizdemo-color-block.is-icon {\n                background: none;\n                text-align: center;\n                padding-top: 12px;\n            }\n        `,\n    `\n            .wizdemo-color-block.is-icon clr-icon {\n                height: 48px;\n                width: 48px;\n            }\n        `,\n    `\n            .wizdemo-color-block.is-icon.active {\n                border-color: #fff;\n                color: #fff;\n                background: #0079B8;\n            }\n        `,\n    `\n            .wizdemo-color-block.is-icon.active:hover {\n                border-color: #0079B8;\n            }\n        `,\n    `\n            .wizdemo-color-block.is-icon.disabled {\n                opacity: 0.4;\n                cursor: not-allowed;\n            }\n        `,\n    `\n            .wizdemo-color-block.is-icon.disabled:hover {\n                border-color: #fff;\n            }\n        `,\n    `\n            .wizdemo-color-block:hover {\n                border-color: #D9E4EA;\n            }\n        `,\n    `\n            .wizdemo-color-block-wrapper {\n                padding: 5px 0;\n            }\n        `,\n    `\n            .wizdemo-color-block.active {\n                border-color: #565656;\n            }\n        `,\n    `\n            :host ::ng-deep .clr-wizard.wizard-xl .modal-dialog {\n                max-height: 100%;\n            }\n        `,\n  ],\n})\nexport class WizardDesignDemo {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n  @ViewChild('number', { static: true })\n  numberField: any;\n\n  open: boolean = true;\n\n  reset(val: boolean): void {\n    this.open = val;\n\n    if (val === false) {\n      this.model.name = '';\n      this.model.favorite = '';\n      this.model.number = '';\n      this.model.ht_feet = '1 ft.';\n      this.model.ht_inches = '0 in.';\n      this.model.weight = '';\n      this.model.gender = 'Male';\n      this.model.color = 'blue';\n      this.model.power = 'happy-face';\n      this.model.weakness = 'lightbulb';\n      this.model.ranking = 12;\n\n      this.wizard.reset();\n    }\n  }\n\n  colorList = ['blue', 'red', 'black', 'orange', 'limegreen', 'purple', 'fuchsia', 'indigo'];\n\n  powerSources = [\n    'happy-face',\n    'cloud',\n    'lightbulb',\n    'eye',\n    'bolt',\n    'bullseye',\n    'star',\n    'hourglass',\n    'talk-bubbles',\n    'shield-x',\n    'upload-cloud',\n    'sad-face',\n    'balance',\n    'share',\n    'wifi',\n    'dashboard',\n    'flame',\n  ];\n\n  model = {\n    name: '',\n    favorite: '',\n    number: '',\n    ht_feet: '1 ft.',\n    ht_inches: '0 in.',\n    weight: '',\n    gender: 'Male',\n    color: 'blue',\n    power: 'happy-face',\n    weakness: 'lightbulb',\n    ranking: 12,\n  };\n\n  get formPageOneValid(): boolean {\n    return this.model.name !== '' && this.model.weight !== '';\n  }\n\n  get formPageThreeValid(): boolean {\n    return this.model.power !== this.model.weakness;\n  }\n\n  get textsplanationOfPower(): string {\n    return this.powerText[this.powerSources.indexOf(this.model.power)];\n  }\n\n  get textsplanationOfWeakness(): string {\n    return this.weaknessText[this.powerSources.indexOf(this.model.weakness)];\n  }\n\n  get colorLabel(): string {\n    return this.colorLabels[this.colorList.indexOf(this.model.color)];\n  }\n\n  get powerLabel(): string {\n    return this.shortPowerLabels[this.powerSources.indexOf(this.model.power)];\n  }\n\n  get weaknessLabel(): string {\n    return this.shortPowerLabels[this.powerSources.indexOf(this.model.weakness)];\n  }\n\n  powerText = [\n    'has the power of boundless optimism',\n    'has the power to control the weather',\n    'has light powers',\n    'can shoot lasers out of its eyes',\n    'can control lightning',\n    'has the power of archery',\n    'has the power of fame and likeability',\n    'has the power of time management',\n    'has the power of linguistics',\n    'has protective powers',\n    'can fly',\n    'has the power of ennui',\n    'has a law degree',\n    'can make duplicates of itself',\n    'has the power of wifi',\n    'can run at superspeed',\n    'can shoot flames out of the side of its face',\n  ];\n\n  weaknessText = [\n    'is hopelessly optimistic',\n    'is afraid of clouds',\n    'is afraid of the dark',\n    'is afraid of eye-lasers',\n    'is afraid of lightning',\n    'has very bad aim',\n    'is consumed with achieving fame and glory',\n    'can only perform one task at a time',\n    'cannot understand what you say',\n    'is squishy',\n    'cannot fly but thinks it can',\n    'suffers from depression',\n    'is a wanted fugitive',\n    'has an evil twin',\n    'requires a wifi connection',\n    'is slower than a turtle',\n    'is afraid of fire',\n  ];\n\n  shortPowerLabels = [\n    'Optimism',\n    'Weather',\n    'Light',\n    'Eye Lasers',\n    'Lightning',\n    'Archery/Marksmanship',\n    'Fame',\n    'Time Management',\n    'Language',\n    'Armor/Protection',\n    'Flight',\n    'Ennui',\n    'Law',\n    'Duplicate',\n    'Wifi',\n    'Speed',\n    'Fire',\n  ];\n\n  colorLabels = ['Blue', 'Red', 'Black', 'Orange', 'Lime Green', 'Purple', 'Fuchsia', 'Indigo'];\n\n  showPowerError = false;\n\n  setPower(pwrSource: string): void {\n    if (!pwrSource) {\n      return;\n    }\n\n    if (pwrSource === this.model.weakness) {\n      this.showPowerError = true;\n      return;\n    }\n\n    this.model.power = pwrSource;\n    this.showPowerError = false;\n  }\n\n  setWeakness(pwrSource: string): void {\n    if (!pwrSource) {\n      return;\n    }\n\n    if (pwrSource === this.model.power) {\n      this.showPowerError = true;\n      return;\n    }\n\n    this.model.weakness = pwrSource;\n    this.showPowerError = false;\n  }\n\n  @ViewChild('pageOne', { static: true })\n  pageOne: ClrWizardPage;\n\n  get pageOneTitle(): string {\n    if (this.pageOne.completed) {\n      return 'Name: ' + this.model.name;\n    }\n    return 'Basic Information';\n  }\n\n  @ViewChild('pageTwo', { static: true })\n  pageTwo: ClrWizardPage;\n\n  get pageTwoTitle(): string {\n    if (this.pageTwo.completed) {\n      return 'Color: ' + this.colorLabel;\n    }\n    return 'Color';\n  }\n\n  @ViewChild('pageThree', { static: true })\n  pageThree: ClrWizardPage;\n\n  get pageThreeTitle(): string {\n    if (this.pageThree.completed) {\n      return 'Power: ' + this.powerLabel;\n    }\n    return 'Power';\n  }\n\n  @ViewChild('pageFour', { static: true })\n  pageFour: ClrWizardPage;\n\n  get pageFourTitle(): string {\n    if (this.pageFour.completed) {\n      return 'Weakness: ' + this.weaknessLabel;\n    }\n    return 'Weakness';\n  }\n\n  createRanking(): void {\n    this.model.ranking = Math.floor(Math.random() * (100 - 12)) + 12;\n  }\n\n  get textsplanationOfRanking(): string {\n    const prefix = 'Your pokemon ';\n    const ranking = this.model.ranking;\n    let returnsplain = '';\n\n    switch (true) {\n      case ranking < 15:\n        returnsplain =\n          'is weak and sickly. It will suffer a short lifetime of ' +\n          'exorbitant veterinary bills, humiliation, and defeat.';\n        break;\n      case ranking < 24:\n        returnsplain =\n          'is timid and soft. It will be a lovable pet whose loss will ' +\n          'create a heartbreaking vacuum in your soul when it is destroyed in combat ' +\n          'by its superiors.';\n        break;\n      case ranking < 51:\n        returnsplain =\n          'is average in every way. Its survival depends entirely ' +\n          'on your competency as a trainer and blind luck. Eventually, it will meet ' +\n          'its doom and reveal the weakness of your instruction.';\n        break;\n      case ranking < 63:\n        returnsplain =\n          'has a fighting chance. With proper training, this creature ' +\n          'may be capable of facing greater foes and earning glory for you.';\n        break;\n      case ranking < 79:\n        returnsplain = 'is a superior specimen. It will gain you much glory. ' + 'Victory is assured!';\n        break;\n      case ranking < 91:\n        returnsplain =\n          'is a uniquely powerful creature. It will dominate all but ' +\n          'the most legendary of opponents and crush your enemies! Its innate ' +\n          'superiority will bring you much glory and renown.';\n        break;\n      case ranking < 101:\n      default:\n        returnsplain =\n          'is one of the most powerful creatures of its kind. ' +\n          'It will dominate any and all opponents until such time as it grows ' +\n          'bored of victory. It will annihilate all in its path! Victory is yours ' +\n          'for many lifetimes. Congratulations on creating such a formidable pokemon';\n        break;\n    }\n\n    return prefix + returnsplain;\n  }\n\n  get powerRankingPunctuation(): string {\n    return this.model.ranking > 62 ? '!' : '.';\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData":
        "\n            .wizdemo-color-block-row {\n                margin-left: 0 !important;\n                margin-right: 0 !important;\n            }\n        \n\n            .wizdemo-color-block {\n                float: left;\n                width: 80px;\n                height: 80px;\n                background-color: black;\n                border: 3px solid white;\n                box-shadow: inset 5px -5px 0px 0px white, inset -5px 5px 0px 0px white;\n                cursor: pointer;\n            }\n        \n\n            .wizdemo-color-block.is-icon {\n                background: none;\n                text-align: center;\n                padding-top: 12px;\n            }\n        \n\n            .wizdemo-color-block.is-icon clr-icon {\n                height: 48px;\n                width: 48px;\n            }\n        \n\n            .wizdemo-color-block.is-icon.active {\n                border-color: #fff;\n                color: #fff;\n                background: #0079B8;\n            }\n        \n\n            .wizdemo-color-block.is-icon.active:hover {\n                border-color: #0079B8;\n            }\n        \n\n            .wizdemo-color-block.is-icon.disabled {\n                opacity: 0.4;\n                cursor: not-allowed;\n            }\n        \n\n            .wizdemo-color-block.is-icon.disabled:hover {\n                border-color: #fff;\n            }\n        \n\n            .wizdemo-color-block:hover {\n                border-color: #D9E4EA;\n            }\n        \n\n            .wizdemo-color-block-wrapper {\n                padding: 5px 0;\n            }\n        \n\n            .wizdemo-color-block.active {\n                border-color: #565656;\n            }\n        \n\n            :host ::ng-deep .clr-wizard.wizard-xl .modal-dialog {\n                max-height: 100%;\n            }\n        \n",
      "accessors": {
        "formPageOneValid": {
          "name": "formPageOneValid",
          "getSignature": {
            "name": "formPageOneValid",
            "type": "boolean",
            "returnType": "boolean",
            "line": 159
          }
        },
        "formPageThreeValid": {
          "name": "formPageThreeValid",
          "getSignature": {
            "name": "formPageThreeValid",
            "type": "boolean",
            "returnType": "boolean",
            "line": 163
          }
        },
        "textsplanationOfPower": {
          "name": "textsplanationOfPower",
          "getSignature": {
            "name": "textsplanationOfPower",
            "type": "string",
            "returnType": "string",
            "line": 167
          }
        },
        "textsplanationOfWeakness": {
          "name": "textsplanationOfWeakness",
          "getSignature": {
            "name": "textsplanationOfWeakness",
            "type": "string",
            "returnType": "string",
            "line": 171
          }
        },
        "colorLabel": {
          "name": "colorLabel",
          "getSignature": {
            "name": "colorLabel",
            "type": "string",
            "returnType": "string",
            "line": 175
          }
        },
        "powerLabel": {
          "name": "powerLabel",
          "getSignature": {
            "name": "powerLabel",
            "type": "string",
            "returnType": "string",
            "line": 179
          }
        },
        "weaknessLabel": {
          "name": "weaknessLabel",
          "getSignature": {
            "name": "weaknessLabel",
            "type": "string",
            "returnType": "string",
            "line": 183
          }
        },
        "pageOneTitle": {
          "name": "pageOneTitle",
          "getSignature": {
            "name": "pageOneTitle",
            "type": "string",
            "returnType": "string",
            "line": 282
          }
        },
        "pageTwoTitle": {
          "name": "pageTwoTitle",
          "getSignature": {
            "name": "pageTwoTitle",
            "type": "string",
            "returnType": "string",
            "line": 292
          }
        },
        "pageThreeTitle": {
          "name": "pageThreeTitle",
          "getSignature": {
            "name": "pageThreeTitle",
            "type": "string",
            "returnType": "string",
            "line": 302
          }
        },
        "pageFourTitle": {
          "name": "pageFourTitle",
          "getSignature": {
            "name": "pageFourTitle",
            "type": "string",
            "returnType": "string",
            "line": 312
          }
        },
        "textsplanationOfRanking": {
          "name": "textsplanationOfRanking",
          "getSignature": {
            "name": "textsplanationOfRanking",
            "type": "string",
            "returnType": "string",
            "line": 323
          }
        },
        "powerRankingPunctuation": {
          "name": "powerRankingPunctuation",
          "getSignature": {
            "name": "powerRankingPunctuation",
            "type": "string",
            "returnType": "string",
            "line": 373
          }
        }
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-example\">\n    <div class=\"backdrop-example-container\">\n        <div *ngIf=\"!open\" style=\"margin: 0 auto; text-align: center\">\n            <button class=\"btn btn-outline btn-inverse\" (click)=\"open = true\">Show wizard</button>\n        </div>\n\n        <clr-wizard #wizard [clrWizardOpen]=\"open\" (clrWizardOpenChange)=\"reset($event)\">\n            <clr-wizard-title>New Pok&egrave;mon</clr-wizard-title>\n\n            <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n            <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n            <clr-wizard-button [type]=\"'finish'\">Done</clr-wizard-button>\n\n            <clr-wizard-page #pageOne [clrWizardPageNextDisabled]=\"name.pristine || !formPageOneValid\">\n                <ng-template clrPageTitle>Basic Information</ng-template>\n                <ng-template clrPageNavTitle>{{ pageOneTitle }}</ng-template>\n\n                <form clrForm clrLayout=\"horizontal\" #formPageOne=\"ngForm\">\n                  <clr-input-container>\n                    <label>Name</label>\n                    <input clrInput name=\"name\" required [(ngModel)]=\"model.name\" #name=\"ngModel\" />\n                    <clr-control-error>This field cannot be empty!</clr-control-error>\n                  </clr-input-container>\n\n                  <clr-select-container>\n                    <label>Height (Feet)</label>\n                    <select clrSelect name=\"ht_feet\" [(ngModel)]=\"model.ht_feet\">\n                      <option *ngFor=\"let measure of [ '0 ft.', '1 ft.', '2 ft.', '3 ft.', '4 ft.' ]\" [value]=\"measure\">\n                        {{measure}}\n                      </option>\n                    </select>\n                  </clr-select-container>\n\n                  <clr-select-container>\n                    <label>Height (Inches)</label>\n                    <select clrSelect name=\"ht_inches\" [(ngModel)]=\"model.ht_inches\">\n                      <option\n                        *ngFor=\"let inch of [ '0 in.', '1 in.', '2 in.', '3 in.', '4 in.', '5 in.', '6 in.', '7 in.', '8 in.', '9 in.', '10 in.', '11 in.' ]\"\n                        [value]=\"inch\">\n                        {{inch}}\n                      </option>\n                    </select>\n                  </clr-select-container>\n\n                  <clr-input-container>\n                    <label>Weight</label>\n                    <input clrInput placeholder=\"lbs.\" name=\"weight\" [(ngModel)]=\"model.weight\" />\n                    <clr-control-error>This field cannot be empty!</clr-control-error>\n                  </clr-input-container>\n\n                  <clr-select-container>\n                    <label>Gender</label>\n                    <select clrSelect name=\"gender\" [(ngModel)]=\"model.gender\">\n                      <option *ngFor=\"let g of [ 'Male', 'Female' ]\"\n                        [value]=\"g\">\n                        {{g}}\n                      </option>\n                    </select>\n                  </clr-select-container>\n                </form>\n            </clr-wizard-page>\n\n            <clr-wizard-page #pageTwo>\n                <ng-template clrPageTitle>Color</ng-template>\n                <ng-template clrPageNavTitle>{{ pageTwoTitle }}</ng-template>\n                <form #formPageTwo=\"ngForm\">\n                    <section class=\"form-block\">\n                        <label>Your pok&egrave;mon will be {{ colorLabel }}.</label>\n                        <div class=\"clr-row wizdemo-color-block-row\">\n                            <div *ngFor=\"let color of colorList\"\n                                class=\"wizdemo-color-block-wrapper clr-col-3\">\n                                    <div class=\"wizdemo-color-block\"\n                                         [style.backgroundColor]=\"color\"\n                                         [class.active]=\"color === model.color\"\n                                         (click)=\"model.color = color\">\n                                        &nbsp;\n                                    </div>\n                                </div>\n                        </div>\n                    </section>\n                </form>\n            </clr-wizard-page>\n\n            <clr-wizard-page #pageThree [clrWizardPageNextDisabled]=\"!formPageThreeValid\">\n                <ng-template clrPageTitle>Power</ng-template>\n                <ng-template clrPageNavTitle>{{ pageThreeTitle }}</ng-template>\n\n                <clr-alert [clrAlertClosable]=\"false\" clrAlertType=\"alert-error\" *ngIf=\"showPowerError\"[clrCloseButtonAriaLabel]=\"'Close Wiki alert'\">\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            Your power and weakness cannot be from the same source.\n                        </span>\n                    </clr-alert-item>\n                </clr-alert>\n\n                <form #formPageTwo=\"ngForm\">\n                    <section class=\"form-block\">\n                        <label>Your pok&egrave;mon {{ textsplanationOfPower }}.</label>\n                        <div class=\"clr-row wizdemo-color-block-row\">\n                            <div *ngFor=\"let icon of powerSources\"\n                                class=\"wizdemo-color-block-wrapper clr-col-3\">\n                                    <div class=\"wizdemo-color-block is-icon\"\n                                         [class.active]=\"icon === model.power\"\n                                         [class.disabled]=\"icon === model.weakness\"\n                                         (click)=\"setPower(icon)\">\n                                        <clr-icon [attr.shape]=\"icon\"></clr-icon>\n                                    </div>\n                                </div>\n                        </div>\n                    </section>\n                </form>\n            </clr-wizard-page>\n\n            <clr-wizard-page #pageFour [clrWizardPageNextDisabled]=\"!formPageThreeValid\">\n                <ng-template clrPageTitle>Weakness</ng-template>\n                <ng-template clrPageNavTitle>{{ pageFourTitle }}</ng-template>\n\n                <clr-alert [clrAlertClosable]=\"false\" clrAlertType=\"alert-error\" *ngIf=\"showPowerError\">\n                    <clr-alert-item>\n                        <span class=\"alert-text\">\n                            Your power and weakness cannot be from the same source.\n                        </span>\n                    </clr-alert-item>\n                </clr-alert>\n\n                <form #formPageTwo=\"ngForm\">\n                    <section class=\"form-block\">\n                        <label>Your pok&egrave;mon {{ textsplanationOfWeakness }}.</label>\n                        <div class=\"clr-row wizdemo-color-block-row\">\n                            <div *ngFor=\"let icon of powerSources\"\n                                class=\"wizdemo-color-block-wrapper clr-col-3\">\n                                    <div class=\"wizdemo-color-block is-icon\"\n                                         [class.active]=\"icon === model.weakness\"\n                                         [class.disabled]=\"icon === model.power\"\n                                         (click)=\"setWeakness(icon)\">\n                                        <clr-icon [attr.shape]=\"icon\"></clr-icon>\n                                    </div>\n                                </div>\n                        </div>\n                    </section>\n                </form>\n            </clr-wizard-page>\n\n            <clr-wizard-page #pageFive (clrWizardPageOnLoad)=\"createRanking()\">\n                <ng-template clrPageTitle>Summary</ng-template>\n\n                <p>\n                    Your pok&egrave;mon's name is {{ model.name }}. {{ model.gender === \"Male\" ? \"He\" : \"She\" }}\n                    {{ textsplanationOfPower }} but {{ textsplanationOfWeakness }}.\n                </p>\n\n                <p>\n                    Your pok&egrave;mon's power ranking is: {{ model.ranking }}{{ powerRankingPunctuation }}\n                </p>\n\n                <p>\n                    {{ textsplanationOfRanking }}\n                </p>\n            </clr-wizard-page>\n        </clr-wizard>\n    </div>\n</div>\n"
    },
    {
      "name": "WizardDesignSizeDemo",
      "id": "component-WizardDesignSizeDemo-a7198f0f7318b9a793f439f851d87eb1",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-design-size.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-design-size-demo",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-design-size.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "size",
          "defaultValue": "'xl'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 16,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "openWizard",
          "args": [
            {
              "name": "size",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "jsdoctags": [
            {
              "name": "size",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-design-size-demo',\n  templateUrl: './wizard-design-size.demo.html',\n})\nexport class WizardDesignSizeDemo {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n  open: boolean = false;\n  size: string = 'xl';\n\n  get textSize(): string {\n    let returnVal = 'X-Large';\n\n    switch (this.size) {\n      case 'md':\n        returnVal = 'Medium';\n        break;\n      case 'lg':\n      default:\n        returnVal = 'Large';\n        break;\n    }\n\n    return returnVal;\n  }\n\n  openWizard(size: string): void {\n    this.size = size;\n    this.open = true;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "textSize": {
          "name": "textSize",
          "getSignature": {
            "name": "textSize",
            "type": "string",
            "returnType": "string",
            "line": 20
          }
        }
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"clrweb-DoxMedia is-horizontal\">\n            <div class=\"clrweb-DoxMedia-block is-colorblock\">\n                <div class=\"clrweb-DoxMedia-img\">\n                    M\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n                <h6>Medium Modal</h6>\n                <div>Width: 576px</div>\n                <button type=\"button\" class=\"btn btn-sm btn-link no-margin\" (click)=\"openWizard('md')\">Launch</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"clrweb-DoxMedia is-horizontal\">\n            <div class=\"clrweb-DoxMedia-block is-colorblock\">\n                <div class=\"clrweb-DoxMedia-img\">\n                    L\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n                <h6>Large Modal</h6>\n                <div>Width: 864px</div>\n                <button type=\"button\" class=\"btn btn-sm btn-link no-margin\" (click)=\"openWizard('lg')\">Launch</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"clrweb-DoxMedia is-horizontal\">\n            <div class=\"clrweb-DoxMedia-block is-colorblock\">\n                <div class=\"clrweb-DoxMedia-img\">\n                    XL\n                </div>\n            </div>\n            <div class=\"clrweb-DoxMedia-text\">\n                <h6>X-Large Modal</h6>\n                <div>Width: 1152px</div>\n                <button type=\"button\" class=\"btn btn-sm btn-link no-margin\" (click)=\"openWizard('xl')\">Launch</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"size\">\n    <clr-wizard-title>{{ textSize }} Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        <p>Content for step 1</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        <p>Content for step 2</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        <p>Content for step 3</p>\n    </clr-wizard-page>\n</clr-wizard>\n"
    },
    {
      "name": "WizardForceForwardDemo",
      "id": "component-WizardForceForwardDemo-ff1b855c808607f720c5a91016232228",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-force-forward.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-force-forward",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-force-forward.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "code",
          "defaultValue":
            "`import { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardForceForwardDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    _open: boolean = false;\n\n    open() {\n        this._open = !this.open;\n    }\n}\n    `",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"_open\" [clrWizardForceForwardNavigation]=\"true\">\n    <clr-wizard-title>Wizard, Only Forward Navigation</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page *ngFor=\"let page of [1, 2, 3, 4]\">\n        <ng-template clrPageTitle>Title for page {{ page }}</ng-template>\n        <p>Content for page {{ page }}.</p>\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 16,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-force-forward',\n  templateUrl: './wizard-force-forward.demo.html',\n})\nexport class WizardForceForwardDemo {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n\n  _open: boolean = false;\n\n  open() {\n    this._open = !this.open;\n  }\n\n  code: string = `import { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardForceForwardDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    _open: boolean = false;\n\n    open() {\n        this._open = !this.open;\n    }\n}\n    `;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"_open\" [clrWizardForceForwardNavigation]=\"true\">\n    <clr-wizard-title>Wizard, Only Forward Navigation</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page *ngFor=\"let page of [1, 2, 3, 4]\">\n        <ng-template clrPageTitle>Title for page {{ page }}</ng-template>\n        <p>Content for page {{ page }}.</p>\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Force Forward Wizard</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"_open\" [clrWizardForceForwardNavigation]=\"true\">\n    <clr-wizard-title>Wizard, Only Forward Navigation</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page *ngFor=\"let page of [1, 2, 3, 4]\">\n        <ng-template clrPageTitle>Title for page {{ page }}</ng-template>\n        <p>Content for page {{ page }}.</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardFormValidation",
      "id": "component-WizardFormValidation-bbc13044d5880e18779699dd7c3ba46f",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-form-validation.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-form-validation",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-form-validation.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardFormValidation {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    @ViewChild(\"number\") numberFi: any;\n\n    model = {\n        name: \"\",\n        favorite: \"\",\n        number: \"\"\n    };\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n  <clr-wizard-title>Wizard with form validation</clr-wizard-title>\n\n  <clr-wizard-button [type]=\"'cancel'\">Close</clr-wizard-button>\n  <clr-wizard-button [type]=\"'previous'\">Previous</clr-wizard-button>\n  <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n  <clr-wizard-button [type]=\"'finish'\">Done</clr-wizard-button>\n\n  <clr-wizard-page [clrWizardPageNextDisabled]=\"name.pristine || !formPageOne.valid\">\n      <ng-template clrPageTitle>Form with validation</ng-template> <!-- mandatory -->\n\n      <form clrForm #formPageOne=\"ngForm\">\n        <clr-input-container>\n          <label>Name</label>\n          <input clrInput required [(ngModel)]=\"model.name\" name=\"name\" #name=\"ngModel\" />\n          <clr-control-error>This field is required!</clr-control-error>\n        </clr-input-container>\n\n        <clr-input-container>\n          <label>Favorite food</label>\n          <input clrInput [(ngModel)]=\"model.favorite\" name=\"favorite\" />\n        </clr-input-container>\n      </form>\n  </clr-wizard-page>\n\n  <clr-wizard-page [clrWizardPageNextDisabled]=\"number.pristine || !formPageTwo.valid\">\n      <ng-template clrPageTitle>We need a number</ng-template> <!-- mandatory -->\n      <ng-template clrPageNavTitle>Enter a number</ng-template> <!-- optional -->\n\n      <form #formPageTwo=\"ngForm\">\n        <label>Please your lucky number!</label>\n        <clr-input-container>\n          <label>Your number</label>\n          <input clrInput required type=\"number\" [(ngModel)]=\"model.number\" name=\"number\" #number=\"ngModel\" />\n          <clr-control-error>This field is required!</clr-control-error>\n        </clr-input-container>\n      </form>\n  </clr-wizard-page>\n\n  <clr-wizard-page [clrWizardPageNextDisabled]=\"!formPageOne.valid || !formPageTwo.valid\">\n      <ng-template clrPageTitle>Title for page 3</ng-template> <!-- mandatory -->\n      <ng-template clrPageNavTitle>\n          <span *ngIf=\"formPageOne.valid && formPageTwo.valid\">\n              Ready to go!\n          </span>\n          <span *ngIf=\"!formPageOne.valid || !formPageTwo.valid\">\n              Not ready yet\n          </span>\n      </ng-template> <!-- optional -->\n\n      <div *ngIf=\"formPageOne.valid && formPageTwo.valid\">\n          <p>Congratulations! You are done with this wizard.</p>\n          <label>Your information</label>\n          <section>\n            <p>\n              <label>Your name:</label>\n              <span>{{ this.model.name }}</span>\n            </p>\n            <p>\n              <label>Your favorite food:</label>\n              <span>{{ this.model.favorite }}</span>\n            </p>\n            <p>\n              <label>Your lucky number:</label>\n              <span>{{ this.model.number }}</span>\n            </p>\n          </section>\n      </div>\n\n      <div *ngIf=\"!formPageOne.valid || !formPageTwo.valid\">\n          <p>Not quite there yet.</p>\n      </div>\n\n  </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "model",
          "defaultValue": "{\n    name: '',\n    favorite: '',\n    number: '',\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "numberField",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 18,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'number', {static: true}"
            }
          ]
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 16,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-form-validation',\n  templateUrl: './wizard-form-validation.demo.html',\n})\nexport class WizardFormValidation {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n  @ViewChild('number', { static: true })\n  numberField: any;\n\n  open: boolean = false;\n\n  model = {\n    name: '',\n    favorite: '',\n    number: '',\n  };\n\n  code: string = `\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardFormValidation {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    @ViewChild(\"number\") numberFi: any;\n\n    model = {\n        name: \"\",\n        favorite: \"\",\n        number: \"\"\n    };\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n  <clr-wizard-title>Wizard with form validation</clr-wizard-title>\n\n  <clr-wizard-button [type]=\"'cancel'\">Close</clr-wizard-button>\n  <clr-wizard-button [type]=\"'previous'\">Previous</clr-wizard-button>\n  <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n  <clr-wizard-button [type]=\"'finish'\">Done</clr-wizard-button>\n\n  <clr-wizard-page [clrWizardPageNextDisabled]=\"name.pristine || !formPageOne.valid\">\n      <ng-template clrPageTitle>Form with validation</ng-template> <!-- mandatory -->\n\n      <form clrForm #formPageOne=\"ngForm\">\n        <clr-input-container>\n          <label>Name</label>\n          <input clrInput required [(ngModel)]=\"model.name\" name=\"name\" #name=\"ngModel\" />\n          <clr-control-error>This field is required!</clr-control-error>\n        </clr-input-container>\n\n        <clr-input-container>\n          <label>Favorite food</label>\n          <input clrInput [(ngModel)]=\"model.favorite\" name=\"favorite\" />\n        </clr-input-container>\n      </form>\n  </clr-wizard-page>\n\n  <clr-wizard-page [clrWizardPageNextDisabled]=\"number.pristine || !formPageTwo.valid\">\n      <ng-template clrPageTitle>We need a number</ng-template> <!-- mandatory -->\n      <ng-template clrPageNavTitle>Enter a number</ng-template> <!-- optional -->\n\n      <form #formPageTwo=\"ngForm\">\n        <label>Please your lucky number!</label>\n        <clr-input-container>\n          <label>Your number</label>\n          <input clrInput required type=\"number\" [(ngModel)]=\"model.number\" name=\"number\" #number=\"ngModel\" />\n          <clr-control-error>This field is required!</clr-control-error>\n        </clr-input-container>\n      </form>\n  </clr-wizard-page>\n\n  <clr-wizard-page [clrWizardPageNextDisabled]=\"!formPageOne.valid || !formPageTwo.valid\">\n      <ng-template clrPageTitle>Title for page 3</ng-template> <!-- mandatory -->\n      <ng-template clrPageNavTitle>\n          <span *ngIf=\"formPageOne.valid && formPageTwo.valid\">\n              Ready to go!\n          </span>\n          <span *ngIf=\"!formPageOne.valid || !formPageTwo.valid\">\n              Not ready yet\n          </span>\n      </ng-template> <!-- optional -->\n\n      <div *ngIf=\"formPageOne.valid && formPageTwo.valid\">\n          <p>Congratulations! You are done with this wizard.</p>\n          <label>Your information</label>\n          <section>\n            <p>\n              <label>Your name:</label>\n              <span>{{ this.model.name }}</span>\n            </p>\n            <p>\n              <label>Your favorite food:</label>\n              <span>{{ this.model.favorite }}</span>\n            </p>\n            <p>\n              <label>Your lucky number:</label>\n              <span>{{ this.model.number }}</span>\n            </p>\n          </section>\n      </div>\n\n      <div *ngIf=\"!formPageOne.valid || !formPageTwo.valid\">\n          <p>Not quite there yet.</p>\n      </div>\n\n  </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Wizard + Form Validation</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n    <clr-wizard-title>Wizard with form validation</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Close</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Previous</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Done</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"name.pristine || !formPageOne.valid\">\n        <ng-template clrPageTitle>Form with validation</ng-template> <!-- mandatory -->\n\n        <form clrForm #formPageOne=\"ngForm\">\n          <clr-input-container>\n            <label>Name</label>\n            <input clrInput required [(ngModel)]=\"model.name\" name=\"name\" #name=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>Favorite food</label>\n            <input clrInput [(ngModel)]=\"model.favorite\" name=\"favorite\" />\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"number.pristine || !formPageTwo.valid\">\n        <ng-template clrPageTitle>We need a number</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>Enter a number</ng-template> <!-- optional -->\n\n        <form #formPageTwo=\"ngForm\">\n          <label>Please your lucky number!</label>\n          <clr-input-container>\n            <label>Your number</label>\n            <input clrInput required type=\"number\" [(ngModel)]=\"model.number\" name=\"number\" #number=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"!formPageOne.valid || !formPageTwo.valid\">\n        <ng-template clrPageTitle>Title for page 3</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>\n            <span *ngIf=\"formPageOne.valid && formPageTwo.valid\">\n                Ready to go!\n            </span>\n            <span *ngIf=\"!formPageOne.valid || !formPageTwo.valid\">\n                Not ready yet\n            </span>\n        </ng-template> <!-- optional -->\n\n        <div *ngIf=\"formPageOne.valid && formPageTwo.valid\">\n            <p>Congratulations! You are done with this wizard.</p>\n            <label>Your information</label>\n            <section>\n              <p>\n                <label>Your name:</label>\n                <span>{{ this.model.name }}</span>\n              </p>\n              <p>\n                <label>Your favorite food:</label>\n                <span>{{ this.model.favorite }}</span>\n              </p>\n              <p>\n                <label>Your lucky number:</label>\n                <span>{{ this.model.number }}</span>\n              </p>\n            </section>\n        </div>\n\n        <div *ngIf=\"!formPageOne.valid || !formPageTwo.valid\">\n            <p>Not quite there yet.</p>\n        </div>\n\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardJumpToDemo",
      "id": "component-WizardJumpToDemo-be889d2ef082fd6915736485073fcaa9",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-jump-to.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-jump-to",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-jump-to.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard, ClrWizardPage } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardJumpToDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    @ViewChild(\"pageThree\") pageThree: ClrWizardPage;\n    @ViewChild(\"pageFive\") pageFive: ClrWizardPage;\n\n    public jumpTo(page: ClrWizardPage) {\n        if (page && page.completed) {\n            this.wizard.navService.currentPage = page;\n        } else {\n            this.wizard.navService.setLastEnabledPageCurrent();\n        }\n        this.wizard.open();\n    }\n\n    public jumpToThree(): void {\n        this.jumpTo(this.pageThree);\n    }\n\n    public jumpToFive(): void {\n        this.jumpTo(this.pageFive);\n    }\n}\n    `",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"'md'\">\n    <clr-wizard-title>Jump-To Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Done</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page #pageThree>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 4</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page #pageFive>\n        <ng-template clrPageTitle>Page 5</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "pageFive",
          "type": "ClrWizardPage",
          "optional": false,
          "description": "",
          "line": 20,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'pageFive', {static: true}"
            }
          ]
        },
        {
          "name": "pageThree",
          "type": "ClrWizardPage",
          "optional": false,
          "description": "",
          "line": 18,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'pageThree', {static: true}"
            }
          ]
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 16,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "jumpTo",
          "args": [
            {
              "name": "page",
              "type": "ClrWizardPage"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "page",
              "type": "ClrWizardPage",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "jumpToFive",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "modifierKind": [114]
        },
        {
          "name": "jumpToThree",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "modifierKind": [114]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard, ClrWizardPage } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-jump-to',\n  templateUrl: './wizard-jump-to.demo.html',\n})\nexport class WizardJumpToDemo {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n  @ViewChild('pageThree', { static: true })\n  pageThree: ClrWizardPage;\n  @ViewChild('pageFive', { static: true })\n  pageFive: ClrWizardPage;\n\n  open: boolean = false;\n\n  public jumpTo(page: ClrWizardPage) {\n    if (page && page.completed) {\n      this.wizard.navService.currentPage = page;\n    } else {\n      this.wizard.navService.setLastEnabledPageCurrent();\n    }\n    this.wizard.open();\n  }\n\n  public jumpToThree(): void {\n    this.jumpTo(this.pageThree);\n  }\n\n  public jumpToFive(): void {\n    this.jumpTo(this.pageFive);\n  }\n\n  code: string = `\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard, ClrWizardPage } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardJumpToDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    @ViewChild(\"pageThree\") pageThree: ClrWizardPage;\n    @ViewChild(\"pageFive\") pageFive: ClrWizardPage;\n\n    public jumpTo(page: ClrWizardPage) {\n        if (page && page.completed) {\n            this.wizard.navService.currentPage = page;\n        } else {\n            this.wizard.navService.setLastEnabledPageCurrent();\n        }\n        this.wizard.open();\n    }\n\n    public jumpToThree(): void {\n        this.jumpTo(this.pageThree);\n    }\n\n    public jumpToFive(): void {\n        this.jumpTo(this.pageFive);\n    }\n}\n    `;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"'md'\">\n    <clr-wizard-title>Jump-To Wizard</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Done</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page #pageThree>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 4</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page #pageFive>\n        <ng-template clrPageTitle>Page 5</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Open Wizard</button>\n<button class=\"btn btn-outline\" (click)=\"jumpToThree()\">Try to Open at Step 3</button>\n<button class=\"btn btn-outline\" (click)=\"jumpToFive()\">Try to Open at Step 5</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"'md'\">\n    <clr-wizard-title>Jump-To a Page</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Done</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        <p>\n            If the wizard can navigate to a page, you can click on the buttons \n            above to have it open up at step three or step five. Try clicking through\n            all the pages, closing the wizard, and clicking on the buttons.\n        </p>\n        <p>\n            Enabling a page for navigation entails setting the pages before it as \n            both ready to complete and completed. This can be done programmatically as\n            well.\n        </p>\n        <p>\n            If a page cannot be navigated to, you can either programmatically set the\n            wizard to open on the first page or tell it to open on the last navigable\n            page in the workflow.\n        </p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        <p>Content for step 2</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page #pageThree>\n        <ng-template clrPageTitle>Page 3</ng-template>\n        <p>Content for step 3</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 4</ng-template>\n        <p>Content for step 4</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page #pageFive>\n        <ng-template clrPageTitle>Page 5</ng-template>\n        <p>Content for step 5</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardNestedDirectiveDemo",
      "id": "component-WizardNestedDirectiveDemo-9ea3eaba96102a08b5a7aa5ecfd0d00c",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-nested-directives.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-nested-directives",
      "styleUrls": [],
      "styles": [],
      "template": "<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "html",
          "defaultValue":
            "`<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n    <clr-wizard-title>Wizard Title</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">Finish</clr-wizard-button>\n\n    <ng-container *ngFor=\"let page of pages; let i=index\">\n        <clr-wizard-page *ngIf=\"!page.skipped\">\n            <ng-template clrPageTitle>\n                Page {{index}}\n            </ng-template>\n            Content for page {{index}}\n        </clr-wizard-page>\n    </ng-container>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-wizard-nested-directives',\n  template: `\n        <clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n    `,\n})\nexport class WizardNestedDirectiveDemo {\n  html: string = `<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n    <clr-wizard-title>Wizard Title</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">Finish</clr-wizard-button>\n\n    <ng-container *ngFor=\"let page of pages; let i=index\">\n        <clr-wizard-page *ngIf=\"!page.skipped\">\n            <ng-template clrPageTitle>\n                Page {{index}}\n            </ng-template>\n            Content for page {{index}}\n        </clr-wizard-page>\n    </ng-container>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "WizardNoCancel",
      "id": "component-WizardNoCancel-b08e1f62eae0cde66271e17bd34ac44d",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-no-cancel.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "moduleId": "module.id",
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-no-cancel",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-no-cancel.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\n@Component({\n    ...\n})\nexport class WizardNoCancel {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    open: boolean = false;\n    pageArray: string[] = [ \"1\", \"2\", \"3\" ];\n\n    // adding a reset here for sanity's sake\n    reset(): void {\n        this.wizard.reset();\n    }\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\"\n    [clrWizardClosable]=\"false\"\n    [clrWizardSize]=\"'md'\"\n    (clrWizardOnFinish)=\"reset()\">\n    <clr-wizard-title>Wizard that you can't close</clr-wizard-title>\n\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n\n    <clr-wizard-page *ngFor=\"let page of pageArray\">\n        <ng-template clrPageTitle>Page {{page}}</ng-template> <!-- mandatory -->\n        <p>Page {{ page }} of {{ pageArray.length }}</p>\n\n        <ng-template clrPageButtons *ngIf=\"page === '3'\">\n            <clr-wizard-button type=\"finish\">YAY</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "pageArray",
          "defaultValue": "['1', '2', '3']",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 16,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "reset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  moduleId: module.id,\n  selector: 'clr-wizard-no-cancel',\n  templateUrl: './wizard-no-cancel.demo.html',\n})\nexport class WizardNoCancel {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n\n  open: boolean = false;\n\n  pageArray: string[] = ['1', '2', '3'];\n\n  // adding a reset here for sanity's sake\n  reset(): void {\n    this.wizard.reset();\n  }\n\n  code: string = `\n@Component({\n    ...\n})\nexport class WizardNoCancel {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    open: boolean = false;\n    pageArray: string[] = [ \"1\", \"2\", \"3\" ];\n\n    // adding a reset here for sanity's sake\n    reset(): void {\n        this.wizard.reset();\n    }\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\"\n    [clrWizardClosable]=\"false\"\n    [clrWizardSize]=\"'md'\"\n    (clrWizardOnFinish)=\"reset()\">\n    <clr-wizard-title>Wizard that you can't close</clr-wizard-title>\n\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n\n    <clr-wizard-page *ngFor=\"let page of pageArray\">\n        <ng-template clrPageTitle>Page {{page}}</ng-template> <!-- mandatory -->\n        <p>Page {{ page }} of {{ pageArray.length }}</p>\n\n        <ng-template clrPageButtons *ngIf=\"page === '3'\">\n            <clr-wizard-button type=\"finish\">YAY</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Wizard That You Must Finish</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\"\n    [clrWizardClosable]=\"false\"\n    [clrWizardSize]=\"'md'\"\n    (clrWizardOnFinish)=\"reset()\">\n    <clr-wizard-title>Wizard that you can't close</clr-wizard-title>\n\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n\n    <clr-wizard-page *ngFor=\"let page of pageArray\">\n        <ng-template clrPageTitle>Page {{page}}</ng-template> <!-- mandatory -->\n        <p>Page {{ page }} of {{ pageArray.length }}</p>\n\n        <ng-template clrPageButtons *ngIf=\"page === '3'\">\n            <clr-wizard-button type=\"finish\">YAY</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardNotClosable",
      "id": "component-WizardNotClosable-7b87151b525f680addf058e442ea06e6",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-not-closable.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-not-closable",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-not-closable.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardNotClosableDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    open: boolean = false;\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardClosable]=\"false\">\n    <clr-wizard-title>Wizard, not closable</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 15,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-not-closable',\n  templateUrl: './wizard-not-closable.demo.html',\n})\nexport class WizardNotClosable {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n\n  open: boolean = false;\n\n  code: string = `\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardNotClosableDemo {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    open: boolean = false;\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardClosable]=\"false\">\n    <clr-wizard-title>Wizard, not closable</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template>\n        ...\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Wizard, Not Closable</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardClosable]=\"false\" [clrWizardSize]=\"'md'\">\n    <clr-wizard-title>Wizard, not closable</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template> <!-- mandatory -->\n        <p>Notice there's no close \"X\" in the top right</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template> <!-- mandatory -->\n        <p>Notice there's no close \"X\" in the top right</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardResetDemo",
      "id": "component-WizardResetDemo-eac2408ea0d4b1599ef63b9ef142c47a",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-reset.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-reset",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-reset.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    moduleId: module.id,\n    selector: \"clr-wizard-reset\",\n    templateUrl: \"./wizard-reset.demo.html\"\n})\nexport class WizardResetDemo implements OnInit {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    public open: boolean = false;\n\n    public model: any;\n\n    public ngOnInit() {\n        this.model = {\n            forceReset: false,\n            favoriteColor: \"\",\n            luckyNumber: \"\",\n            flavorOfIceCream: \"\"\n        };\n    }\n\n    public doFinish(): void {\n        this.doReset();\n    }\n\n    public doReset(): void {\n        if (this.model.forceReset) {\n            this.wizard.reset();\n            this.model.forceReset = false;\n            this.model.favoriteColor = \"\";\n            this.model.luckyNumber = \"\";\n            this.model.flavorOfIceCream = \"\";\n        }\n    }\n}\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard \n  [(clrWizardOpen)]=\"open\"\n  [clrWizardSize]=\"'md'\"\n  (clrWizardOnFinish)=\"doFinish()\"\n  (clrWizardOnCancel)=\"doFinish()\">\n\n  <clr-wizard-title>\n      {{ model.forceReset ? \"Wizard resets\" : \"Wizard doesn't reset\" }}\n  </clr-wizard-title>\n\n  <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n  <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n  <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n  <clr-wizard-button [type]=\"'finish'\">OK</clr-wizard-button>\n\n  <clr-wizard-page>\n      <ng-template clrPageTitle>Page 1</ng-template> <!-- mandatory -->\n\n      <p>Check below if you want the wizard to reset when it finishes or closes.</p>\n\n      <clr-checkbox-wrapper>\n        <input #forceReset type=\"checkbox\" clrCheckbox name=\"forceReset\" [(ngModel)]=\"model.forceReset\" />\n        <label>Force reset on close</label>\n      </clr-checkbox-wrapper>\n  </clr-wizard-page>\n\n  <clr-wizard-page>\n      <ng-template clrPageTitle>Page 2</ng-template> <!-- mandatory -->\n      <clr-input-container>\n        <label>What is your favorite color?</label>\n        <input clrInput placeholder=\"Color?\" #stepTwoInput [(ngModel)]=\"model.favoriteColor\" />\n      </clr-input-container>\n  </clr-wizard-page>\n\n  <clr-wizard-page>\n      <ng-template clrPageTitle>Page 3</ng-template> <!-- mandatory -->\n      <clr-input-container>\n        <label>What is your favorite ice cream?</label>\n        <input clrInput placeholder=\"Flavor?\" #stepThreeInput [(ngModel)]=\"model.flavorOfIceCream\" />\n      </clr-input-container>\n  </clr-wizard-page>\n\n  <clr-wizard-page>\n      <ng-template clrPageTitle>Page 4</ng-template> <!-- mandatory -->\n      <clr-input-container>\n        <label>What is your lucky number?</label>\n        <input clrInput placeholder=\"Lucky number?\" #stepFourInput type=\"number\" [(ngModel)]=\"model.luckyNumber\" />\n      </clr-input-container>\n  </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 85
        },
        {
          "name": "model",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [114]
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [114]
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 15,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "doFinish",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "modifierKind": [114]
        },
        {
          "name": "doReset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "modifierKind": [114]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "modifierKind": [114]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-reset',\n  templateUrl: './wizard-reset.demo.html',\n})\nexport class WizardResetDemo implements OnInit {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n\n  public open: boolean = false;\n\n  public model: any;\n\n  public ngOnInit() {\n    this.model = {\n      forceReset: false,\n      favoriteColor: '',\n      luckyNumber: '',\n      flavorOfIceCream: '',\n    };\n  }\n\n  public doFinish(): void {\n    this.doReset();\n  }\n\n  public doReset(): void {\n    if (this.model.forceReset) {\n      this.wizard.reset();\n      this.model.forceReset = false;\n      this.model.favoriteColor = '';\n      this.model.luckyNumber = '';\n      this.model.flavorOfIceCream = '';\n    }\n  }\n\n  code: string = `\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    moduleId: module.id,\n    selector: \"clr-wizard-reset\",\n    templateUrl: \"./wizard-reset.demo.html\"\n})\nexport class WizardResetDemo implements OnInit {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    public open: boolean = false;\n\n    public model: any;\n\n    public ngOnInit() {\n        this.model = {\n            forceReset: false,\n            favoriteColor: \"\",\n            luckyNumber: \"\",\n            flavorOfIceCream: \"\"\n        };\n    }\n\n    public doFinish(): void {\n        this.doReset();\n    }\n\n    public doReset(): void {\n        if (this.model.forceReset) {\n            this.wizard.reset();\n            this.model.forceReset = false;\n            this.model.favoriteColor = \"\";\n            this.model.luckyNumber = \"\";\n            this.model.flavorOfIceCream = \"\";\n        }\n    }\n}\n`;\n\n  html: string = `\n<clr-wizard #wizard \n  [(clrWizardOpen)]=\"open\"\n  [clrWizardSize]=\"'md'\"\n  (clrWizardOnFinish)=\"doFinish()\"\n  (clrWizardOnCancel)=\"doFinish()\">\n\n  <clr-wizard-title>\n      {{ model.forceReset ? \"Wizard resets\" : \"Wizard doesn't reset\" }}\n  </clr-wizard-title>\n\n  <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n  <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n  <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n  <clr-wizard-button [type]=\"'finish'\">OK</clr-wizard-button>\n\n  <clr-wizard-page>\n      <ng-template clrPageTitle>Page 1</ng-template> <!-- mandatory -->\n\n      <p>Check below if you want the wizard to reset when it finishes or closes.</p>\n\n      <clr-checkbox-wrapper>\n        <input #forceReset type=\"checkbox\" clrCheckbox name=\"forceReset\" [(ngModel)]=\"model.forceReset\" />\n        <label>Force reset on close</label>\n      </clr-checkbox-wrapper>\n  </clr-wizard-page>\n\n  <clr-wizard-page>\n      <ng-template clrPageTitle>Page 2</ng-template> <!-- mandatory -->\n      <clr-input-container>\n        <label>What is your favorite color?</label>\n        <input clrInput placeholder=\"Color?\" #stepTwoInput [(ngModel)]=\"model.favoriteColor\" />\n      </clr-input-container>\n  </clr-wizard-page>\n\n  <clr-wizard-page>\n      <ng-template clrPageTitle>Page 3</ng-template> <!-- mandatory -->\n      <clr-input-container>\n        <label>What is your favorite ice cream?</label>\n        <input clrInput placeholder=\"Flavor?\" #stepThreeInput [(ngModel)]=\"model.flavorOfIceCream\" />\n      </clr-input-container>\n  </clr-wizard-page>\n\n  <clr-wizard-page>\n      <ng-template clrPageTitle>Page 4</ng-template> <!-- mandatory -->\n      <clr-input-container>\n        <label>What is your lucky number?</label>\n        <input clrInput placeholder=\"Lucky number?\" #stepFourInput type=\"number\" [(ngModel)]=\"model.luckyNumber\" />\n      </clr-input-container>\n  </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["OnInit"],
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Reset Wizard</button>\n\n<clr-wizard #wizard \n    [(clrWizardOpen)]=\"open\"\n    [clrWizardSize]=\"'md'\"\n    (clrWizardOnFinish)=\"doFinish()\"\n    (clrWizardOnCancel)=\"doFinish()\">\n\n    <clr-wizard-title>\n        {{ model.forceReset ? \"Wizard resets\" : \"Wizard doesn't reset\" }}\n    </clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">OK</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 1</ng-template> <!-- mandatory -->\n\n        <p>Check below if you want the wizard to reset when it finishes or closes.</p>\n\n        <clr-checkbox-wrapper>\n          <input #forceReset type=\"checkbox\" clrCheckbox name=\"forceReset\" [(ngModel)]=\"model.forceReset\" />\n          <label>Force reset on close</label>\n        </clr-checkbox-wrapper>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 2</ng-template> <!-- mandatory -->\n        <clr-input-container>\n          <label>What is your favorite color?</label>\n          <input clrInput placeholder=\"Color?\" #stepTwoInput [(ngModel)]=\"model.favoriteColor\" />\n        </clr-input-container>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 3</ng-template> <!-- mandatory -->\n        <clr-input-container>\n          <label>What is your favorite ice cream?</label>\n          <input clrInput placeholder=\"Flavor?\" #stepThreeInput [(ngModel)]=\"model.flavorOfIceCream\" />\n        </clr-input-container>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Page 4</ng-template> <!-- mandatory -->\n        <clr-input-container>\n          <label>What is your lucky number?</label>\n          <input clrInput placeholder=\"Lucky number?\" #stepFourInput type=\"number\" [(ngModel)]=\"model.luckyNumber\" />\n        </clr-input-container>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardSimple",
      "id": "component-WizardSimple-146b8a53dfb8cc64c3ce10621020ac92",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-simple.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "moduleId": "module.id",
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-simple",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-simple.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "code",
          "defaultValue":
            "`\n@Component({\n    ...\n})\nexport class WizardSimple {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    skipStepTwo: boolean = true;\n    _open: boolean = false;\n\n    toggleStepTwo() {\n        this.skipStepTwo = !this.skipStepTwo;\n    }\n\n    open() {\n        this._open = !this.open;\n    }\n}\n    `",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"_open\">\n    <clr-wizard-title>Skipping Page Two</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Title for page 1</ng-template>\n        <ng-template clrPageNavTitle>Step 1</ng-template>\n        ...\n        <p>\n            <button class=\"btn btn-secondary\" (click)=\"wizard.toggleStepTwo()\">\n                <span *ngIf=\"skipStepTwo\">Show Page 2</span>\n                <span *ngIf=\"!skipStepTwo\">Hide Page 2</span>\n            </button>\n        </p>\n    </clr-wizard-page>\n\n    <clr-wizard-page *ngIf=\"!skipStepTwo\">\n        <ng-template clrPageTitle>Title for page 2</ng-template>\n        <ng-template clrPageNavTitle>Step 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Title for page 3</ng-template>\n        <ng-template clrPageNavTitle>Step 3</ng-template>\n        <p *ngIf=\"skipStepTwo\">Page 3 is the last page because we skipped page 2.</p>\n        <p *ngIf=\"!skipStepTwo\">Now our wizard has three pages/steps.</p>\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "skipStepTwo",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 17,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        },
        {
          "name": "toggleStepTwo",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  moduleId: module.id,\n  selector: 'clr-wizard-simple',\n  templateUrl: './wizard-simple.demo.html',\n})\nexport class WizardSimple {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n  skipStepTwo: boolean = true;\n  _open: boolean = false;\n\n  toggleStepTwo() {\n    this.skipStepTwo = !this.skipStepTwo;\n  }\n\n  open() {\n    this._open = !this.open;\n  }\n\n  code: string = `\n@Component({\n    ...\n})\nexport class WizardSimple {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n    skipStepTwo: boolean = true;\n    _open: boolean = false;\n\n    toggleStepTwo() {\n        this.skipStepTwo = !this.skipStepTwo;\n    }\n\n    open() {\n        this._open = !this.open;\n    }\n}\n    `;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"_open\">\n    <clr-wizard-title>Skipping Page Two</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Title for page 1</ng-template>\n        <ng-template clrPageNavTitle>Step 1</ng-template>\n        ...\n        <p>\n            <button class=\"btn btn-secondary\" (click)=\"wizard.toggleStepTwo()\">\n                <span *ngIf=\"skipStepTwo\">Show Page 2</span>\n                <span *ngIf=\"!skipStepTwo\">Hide Page 2</span>\n            </button>\n        </p>\n    </clr-wizard-page>\n\n    <clr-wizard-page *ngIf=\"!skipStepTwo\">\n        <ng-template clrPageTitle>Title for page 2</ng-template>\n        <ng-template clrPageNavTitle>Step 2</ng-template>\n        ...\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Title for page 3</ng-template>\n        <ng-template clrPageNavTitle>Step 3</ng-template>\n        <p *ngIf=\"skipStepTwo\">Page 3 is the last page because we skipped page 2.</p>\n        <p *ngIf=\"!skipStepTwo\">Now our wizard has three pages/steps.</p>\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Skipping a Page in the Wizard</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"_open\">\n    <clr-wizard-title>Skipping Page Two</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">Cancel</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">Back</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">Next</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Title for page 1</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>Step 1</ng-template> <!-- optional -->\n        <p>Content for step 1</p>\n        <p>\n            <button class=\"btn btn-secondary\" (click)=\"toggleStepTwo()\">\n                <span *ngIf=\"skipStepTwo\">Show Page 2</span>\n                <span *ngIf=\"!skipStepTwo\">Hide Page 2</span>\n            </button>\n        </p>\n    </clr-wizard-page>\n\n    <clr-wizard-page *ngIf=\"!skipStepTwo\">\n        <ng-template clrPageTitle>Title for page 2</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>Step 2</ng-template> <!-- optional -->\n        <p>Content for step 2</p>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>Title for page 3</ng-template> <!-- mandatory -->\n        <ng-template clrPageNavTitle>Step 3</ng-template> <!-- optional -->\n        <p *ngIf=\"skipStepTwo\">Page 3 is the last page because we skipped page 2.</p>\n        <p *ngIf=\"!skipStepTwo\">Now our wizard has three pages/steps.</p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardStaticDemo",
      "id": "component-WizardStaticDemo-107ef1fd39fbaedcceebddf064cfaf4b",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-static.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-demo-static",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-static.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "html",
          "defaultValue": "HTML",
          "type": "",
          "optional": false,
          "description": "",
          "line": 125
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\nconst HTML = `\n<div class=\"clr-wizard\">\n  <div class=\"modal static\">\n    <div class=\"modal-dialog modal-xl\" role=\"dialog\">\n      <div class=\"modal-outer-wrapper\">\n        <div class=\"modal-content-wrapper\">\n          <nav class=\"modal-nav clr-wizard-stepnav-wrapper\">\n            <h3 class=\"clr-wizard-title\">Wizard Title</h3>\n            <div class=\"clr-wizard-stepnav\">\n              <div class=\"clr-wizard-stepnav-list\" role=\"tablist\">\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item active\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-0\"\n                  aria-selected=\"true\"\n                  aria-controls=\"clr-wizard-step-0\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 1\n                  </button>\n                </div>\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-1\"\n                  aria-selected=\"false\"\n                  aria-controls=\"clr-wizard-step-1\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 2\n                  </button>\n                </div>\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-2\"\n                  aria-selected=\"false\"\n                  aria-controls=\"clr-wizard-step-2\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 3\n                  </button>\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n              </button>\n              <h3 class=\"modal-title\">\n                <span class=\"modal-title-text\">Title for page 1</span>\n              </h3>\n            </div>\n            <div class=\"modal-body\">\n              <main class=\"clr-wizard-content\">\n                <div\n                  id=\"clr-wizard-page-0\"\n                  aria-hidden=\"false\"\n                  aria-labelledby=\"clr-wizard-step-0\"\n                  class=\"active clr-wizard-page\"\n                >\n                  <p>Content for step 1</p>\n                </div>\n\n                <div\n                  id=\"clr-wizard-page-1\"\n                  aria-hidden=\"true\"\n                  aria-labelledby=\"clr-wizard-step-1\"\n                  class=\"clr-wizard-page\"\n                >\n                  <p>Content for step 2</p>\n                </div>\n\n                <div\n                  id=\"clr-wizard-page-2\"\n                  aria-hidden=\"true\"\n                  aria-labelledby=\"clr-wizard-step-2\"\n                  class=\"clr-wizard-page\"\n                >\n                  <p>Content for step 3</p>\n                </div>\n              </main>\n            </div>\n\n            <div class=\"modal-footer clr-wizard-footer\">\n              <div class=\"clr-wizard-footer-buttons\">\n                <div class=\"clr-wizard-footer-buttons-wrapper\">\n                  <div class=\"clr-wizard-btn-wrapper\">\n                    <button class=\"btn clr-wizard-btn btn-link clr-wizard-btn--tertiary\">\n                      Cancel\n                    </button>\n                  </div>\n                  <div class=\"clr-wizard-btn-wrapper\">\n                    <button class=\"btn clr-wizard-btn btn-primary clr-wizard-btn--primary\">\n                      Next\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div aria-hidden=\"true\" class=\"modal-backdrop\"></div>\n  </div>\n</div>\n`;\n\n@Component({\n  selector: 'clr-wizard-demo-static',\n  templateUrl: './wizard-static.demo.html',\n})\nexport class WizardStaticDemo {\n  html = HTML;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<div class=\"clr-code-snippet\">\n    <div class=\"backdrop-example-container\">\n        <div class=\"clr-wizard main-container\">\n            <div class=\"modal static\">\n                <div class=\"modal-dialog modal-xl\" role=\"dialog\">\n                    <div class=\"modal-outer-wrapper\">\n                        <div class=\"modal-content-wrapper\">\n                            <nav class=\"modal-nav clr-wizard-stepnav-wrapper\">\n                                <h3 class=\"clr-wizard-title\">Wizard Title</h3>\n                                <div class=\"clr-wizard-stepnav\">\n                                    <div class=\"clr-wizard-stepnav-list\">\n                                        <div class=\"clr-wizard-stepnav-item clr-nav-link nav-item active\" role=\"presentation\" id=\"clr-wizard-step-0\" aria-selected=\"true\" aria-controls=\"clr-wizard-step-0\">\n                                            <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                                                Step 1\n                                            </button>\n                                        </div><div class=\"clr-wizard-stepnav-item clr-nav-link nav-item\" role=\"presentation\" id=\"clr-wizard-step-1\" aria-selected=\"false\" aria-controls=\"clr-wizard-step-1\">\n                                            <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                                                Step 2\n                                            </button>\n                                        </div><div class=\"clr-wizard-stepnav-item clr-nav-link nav-item\" role=\"presentation\" id=\"clr-wizard-step-2\" aria-selected=\"false\" aria-controls=\"clr-wizard-step-2\">\n                                            <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                                                Step 3\n                                            </button>\n                                        </div>\n                                      </div>\n                                </div>\n                            </nav>\n\n                            <div class=\"modal-content\">\n                                <div class=\"modal-header\">\n                                    <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                                        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                                    </button>\n                                    <h3 class=\"modal-title\">\n                                        <span class=\"modal-title-text\">Title for page 1</span>\n                                    </h3>\n                                </div>\n                                <div class=\"modal-body\">\n                                    <main class=\"clr-wizard-content\">\n                                        <div id=\"clr-wizard-page-0\" aria-hidden=\"false\" aria-labelledby=\"clr-wizard-step-0\" class=\"active clr-wizard-page\">\n                                            <p>Content for step 1</p>\n                                        </div>\n\n                                        <div id=\"clr-wizard-page-1\" aria-hidden=\"true\" aria-labelledby=\"clr-wizard-step-1\" class=\"clr-wizard-page\">\n                                            <p>Content for step 2</p>\n                                        </div>\n\n                                        <div id=\"clr-wizard-page-2\" aria-hidden=\"true\" aria-labelledby=\"clr-wizard-step-2\" class=\"clr-wizard-page\">\n                                            <p>Content for step 3</p>\n                                        </div>\n                                    </main>\n                                </div>\n\n                                <div class=\"modal-footer clr-wizard-footer\">\n                                    <div class=\"clr-wizard-footer-buttons\">\n                                        <div class=\"clr-wizard-footer-buttons-wrapper\">\n                                            <div class=\"clr-wizard-btn-wrapper\">\n                                                <button class=\"btn clr-wizard-btn btn-link clr-wizard-btn--tertiary\">\n                                                    Cancel\n                                                </button>\n                                            </div><div class=\"clr-wizard-btn-wrapper\">\n                                                <button class=\"btn clr-wizard-btn btn-primary clr-wizard-btn--primary\">\n                                                    Next\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            <div aria-hidden=\"true\" class=\"modal-backdrop\"></div>\n        </div>\n    </div>\n</div>\n\n<clr-code-snippet clrLanguage=\"html\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardStopNavigation",
      "id": "component-WizardStopNavigation-98fa04112d0b139675854129de308884",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-stop-navigation.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-stop-navigation",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard-stop-navigation.demo.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "code",
          "defaultValue":
            "`\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardStopNavigation {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    untouched: boolean = true;\n    loading: boolean = false;\n    errorFlag: boolean = false;\n    progress: number = 0;\n\n    get readyToFinish(): boolean {\n        return !this.untouched && !this.loading;\n    }\n\n    model = {\n        won: \"\",\n        too: \"\",\n        tree: \"\"\n    };\n\n    // have to define doCancel because page will prevent doCancel from working\n    // if the page had a previous button, you would need to call\n    // this.wizard.previous() manually as well...\n    doCancel(): void {\n        this.wizard.close();\n        this.resetWizard();\n    }\n\n    resetWizard(): void {\n        this.wizard.reset();\n        this.model.won = \"\";\n        this.model.too = \"\";\n        this.model.tree = \"\";\n        this.progress = 0;\n    }\n\n    onCommit(): void {\n        if (this.untouched) {\n            this.untouched = false;\n            this.loading = true;\n            let timer = setInterval(() => {\n                this.progress = this.progress + 14;\n\n                if (this.progress > 99) {\n                    this.progress = 100;\n                    this.loading = false;\n                    clearInterval(timer);\n                }\n            }, 1000);\n        } else {\n            this.wizard.forceFinish();\n            this.resetWizard();\n        }\n    }\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "errorFlag",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "html",
          "defaultValue":
            "`\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"'lg'\"\n    [clrWizardPreventNavigation]=\"loading\"\n    [clrWizardDisableStepnav]=\"readyToFinish\"\n    [clrWizardPreventDefaultCancel]=\"true\"\n    (clrWizardOnCancel)=\"doCancel()\"\n    [clrWizardClosable]=\"!readyToFinish\">\n    <clr-wizard-title>Wizard stops navigating while validating</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\" *ngIf=\"!readyToFinish\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\" *ngIf=\"!readyToFinish\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">\n        <span *ngIf=\"untouched && !loading\">Validate</span>\n        <span *ngIf=\"loading\">Please wait...</span>\n        <span *ngIf=\"readyToFinish\">OK</span>\n    </clr-wizard-button>\n\n    <clr-wizard-page\n        [clrWizardPageNextDisabled]=\"(name.pristine && quest.pristine && velocity.pristine) || !formPage.valid\">\n        <ng-template clrPageTitle>Form to submit</ng-template> <!-- mandatory -->\n\n        <form clrForm #formPage=\"ngForm\">\n          <label>To proceed, you must answer these three questions...</label>\n          <clr-input-container>\n            <label>What is your name?</label>\n            <input clrInput name=\"name\" required [(ngModel)]=\"model.won\" #name=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is your quest?</label>\n            <input clrInput name=\"quest\" required [(ngModel)]=\"model.too\" #quest=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the air-speed velocity of an unladen swallow?</label>\n            <input clrInput name=\"velocity\" required [(ngModel)]=\"model.tree\" #velocity=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page\n        [clrWizardPagePreventDefaultNext]=\"true\"\n        (clrWizardPageOnCommit)=\"onCommit()\">\n        <ng-template clrPageTitle>\n            Validate your information\n        </ng-template>\n        <ng-template clrPageNavTitle>\n            <span *ngIf=\"!readyToFinish\">Validate Info</span>\n            <span *ngIf=\"readyToFinish\">Ready to Go!</span>\n        </ng-template>\n\n        <p *ngIf=\"untouched && !loading\">\n            Click the Validate button to kick off a timed routine. While the validation is running,\n            try clicking buttons and stepnav items. Note that they don't do anything while the\n            validation is running. The validation is just an exercise. It will not fail.\n        </p>\n\n        <ng-container *ngIf=\"loading\">\n            <p>Loading...</p>\n            <div class=\"progress\">\n                <progress [value]=\"progress\" max=\"100\" [attr.data-displayval]=\"progress + '%'\"></progress>\n            </div>\n        </ng-container>\n\n        <p *ngIf=\"readyToFinish\">\n            Click on the OK button to close the wizard.\n        </p>\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 130
        },
        {
          "name": "loading",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "model",
          "defaultValue": "{\n    won: '',\n    too: '',\n    tree: '',\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "open",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "progress",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "untouched",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "wizard",
          "type": "ClrWizard",
          "optional": false,
          "description": "",
          "line": 16,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wizard', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "doCancel",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        },
        {
          "name": "onCommit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50
        },
        {
          "name": "resetWizard",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component, ViewChild } from '@angular/core';\nimport { ClrWizard } from '@clr/angular';\n\n@Component({\n  selector: 'clr-wizard-stop-navigation',\n  templateUrl: './wizard-stop-navigation.demo.html',\n})\nexport class WizardStopNavigation {\n  @ViewChild('wizard', { static: true })\n  wizard: ClrWizard;\n\n  untouched: boolean = true;\n  loading: boolean = false;\n  errorFlag: boolean = false;\n  progress: number = 0;\n  open: boolean = false;\n\n  get readyToFinish(): boolean {\n    return !this.untouched && !this.loading;\n  }\n\n  model = {\n    won: '',\n    too: '',\n    tree: '',\n  };\n\n  // have to define doCancel because page will prevent doCancel from working\n  // if the page had a previous button, you would need to call\n  // this.wizard.previous() manually as well...\n  doCancel(): void {\n    this.wizard.close();\n    this.resetWizard();\n  }\n\n  resetWizard(): void {\n    this.wizard.reset();\n    this.model.won = '';\n    this.model.too = '';\n    this.model.tree = '';\n    this.progress = 0;\n  }\n\n  onCommit(): void {\n    if (this.untouched) {\n      this.untouched = false;\n      this.loading = true;\n      const timer = setInterval(() => {\n        this.progress = this.progress + 14;\n\n        if (this.progress > 99) {\n          this.progress = 100;\n          this.loading = false;\n          clearInterval(timer);\n        }\n      }, 1000);\n    } else {\n      this.wizard.forceFinish();\n      this.resetWizard();\n    }\n  }\n\n  code: string = `\nimport { Component, ViewChild } from \"@angular/core\";\nimport { ClrWizard } from \"@clr/angular\";\n\n@Component({\n    ...\n})\nexport class WizardStopNavigation {\n    @ViewChild(\"wizard\") wizard: ClrWizard;\n\n    untouched: boolean = true;\n    loading: boolean = false;\n    errorFlag: boolean = false;\n    progress: number = 0;\n\n    get readyToFinish(): boolean {\n        return !this.untouched && !this.loading;\n    }\n\n    model = {\n        won: \"\",\n        too: \"\",\n        tree: \"\"\n    };\n\n    // have to define doCancel because page will prevent doCancel from working\n    // if the page had a previous button, you would need to call\n    // this.wizard.previous() manually as well...\n    doCancel(): void {\n        this.wizard.close();\n        this.resetWizard();\n    }\n\n    resetWizard(): void {\n        this.wizard.reset();\n        this.model.won = \"\";\n        this.model.too = \"\";\n        this.model.tree = \"\";\n        this.progress = 0;\n    }\n\n    onCommit(): void {\n        if (this.untouched) {\n            this.untouched = false;\n            this.loading = true;\n            let timer = setInterval(() => {\n                this.progress = this.progress + 14;\n\n                if (this.progress > 99) {\n                    this.progress = 100;\n                    this.loading = false;\n                    clearInterval(timer);\n                }\n            }, 1000);\n        } else {\n            this.wizard.forceFinish();\n            this.resetWizard();\n        }\n    }\n`;\n\n  html: string = `\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"'lg'\"\n    [clrWizardPreventNavigation]=\"loading\"\n    [clrWizardDisableStepnav]=\"readyToFinish\"\n    [clrWizardPreventDefaultCancel]=\"true\"\n    (clrWizardOnCancel)=\"doCancel()\"\n    [clrWizardClosable]=\"!readyToFinish\">\n    <clr-wizard-title>Wizard stops navigating while validating</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\" *ngIf=\"!readyToFinish\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\" *ngIf=\"!readyToFinish\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">\n        <span *ngIf=\"untouched && !loading\">Validate</span>\n        <span *ngIf=\"loading\">Please wait...</span>\n        <span *ngIf=\"readyToFinish\">OK</span>\n    </clr-wizard-button>\n\n    <clr-wizard-page\n        [clrWizardPageNextDisabled]=\"(name.pristine && quest.pristine && velocity.pristine) || !formPage.valid\">\n        <ng-template clrPageTitle>Form to submit</ng-template> <!-- mandatory -->\n\n        <form clrForm #formPage=\"ngForm\">\n          <label>To proceed, you must answer these three questions...</label>\n          <clr-input-container>\n            <label>What is your name?</label>\n            <input clrInput name=\"name\" required [(ngModel)]=\"model.won\" #name=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is your quest?</label>\n            <input clrInput name=\"quest\" required [(ngModel)]=\"model.too\" #quest=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the air-speed velocity of an unladen swallow?</label>\n            <input clrInput name=\"velocity\" required [(ngModel)]=\"model.tree\" #velocity=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page\n        [clrWizardPagePreventDefaultNext]=\"true\"\n        (clrWizardPageOnCommit)=\"onCommit()\">\n        <ng-template clrPageTitle>\n            Validate your information\n        </ng-template>\n        <ng-template clrPageNavTitle>\n            <span *ngIf=\"!readyToFinish\">Validate Info</span>\n            <span *ngIf=\"readyToFinish\">Ready to Go!</span>\n        </ng-template>\n\n        <p *ngIf=\"untouched && !loading\">\n            Click the Validate button to kick off a timed routine. While the validation is running,\n            try clicking buttons and stepnav items. Note that they don't do anything while the\n            validation is running. The validation is just an exercise. It will not fail.\n        </p>\n\n        <ng-container *ngIf=\"loading\">\n            <p>Loading...</p>\n            <div class=\"progress\">\n                <progress [value]=\"progress\" max=\"100\" [attr.data-displayval]=\"progress + '%'\"></progress>\n            </div>\n        </ng-container>\n\n        <p *ngIf=\"readyToFinish\">\n            Click on the OK button to close the wizard.\n        </p>\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "readyToFinish": {
          "name": "readyToFinish",
          "getSignature": {
            "name": "readyToFinish",
            "type": "boolean",
            "returnType": "boolean",
            "line": 24
          }
        }
      },
      "templateData":
        "<!--\n  ~ Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n  ~ This software is released under MIT license.\n  ~ The full license information can be found in LICENSE in the root directory of this project.\n  -->\n\n<button class=\"btn btn-primary\" (click)=\"wizard.open()\">Wizard: Stop Navigation</button>\n\n<clr-wizard #wizard [(clrWizardOpen)]=\"open\" [clrWizardSize]=\"'lg'\"\n    [clrWizardPreventNavigation]=\"loading\"\n    [clrWizardDisableStepnav]=\"readyToFinish\"\n    [clrWizardPreventDefaultCancel]=\"true\"\n    (clrWizardOnCancel)=\"doCancel()\"\n    [clrWizardClosable]=\"!readyToFinish\">\n    <clr-wizard-title>Wizard stops navigating while validating</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\" *ngIf=\"!readyToFinish\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\" *ngIf=\"!readyToFinish\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">\n        <span *ngIf=\"untouched && !loading\">Validate</span>\n        <span *ngIf=\"loading\">Please wait...</span>\n        <span *ngIf=\"readyToFinish\">OK</span>\n    </clr-wizard-button>\n\n    <clr-wizard-page\n        [clrWizardPageNextDisabled]=\"(name.pristine && quest.pristine && velocity.pristine) || !formPage.valid\">\n        <ng-template clrPageTitle>Form to submit</ng-template> <!-- mandatory -->\n\n        <form clrForm #formPage=\"ngForm\">\n          <label>To proceed, you must answer these three questions...</label>\n          <clr-input-container>\n            <label>What is your name?</label>\n            <input clrInput name=\"name\" required [(ngModel)]=\"model.won\" #name=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is your quest?</label>\n            <input clrInput name=\"quest\" required [(ngModel)]=\"model.too\" #quest=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n\n          <clr-input-container>\n            <label>What is the air-speed velocity of an unladen swallow?</label>\n            <input clrInput name=\"velocity\" required [(ngModel)]=\"model.tree\" #velocity=\"ngModel\" />\n            <clr-control-error>This field is required!</clr-control-error>\n          </clr-input-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page\n        [clrWizardPagePreventDefaultNext]=\"true\"\n        (clrWizardPageOnCommit)=\"onCommit()\">\n        <ng-template clrPageTitle>\n            Validate your information\n        </ng-template>\n        <ng-template clrPageNavTitle>\n            <span *ngIf=\"!readyToFinish\">Validate Info</span>\n            <span *ngIf=\"readyToFinish\">Ready to Go!</span>\n        </ng-template>\n\n        <p *ngIf=\"untouched && !loading\">\n            Click the Validate button to kick off a timed routine. While the validation is running,\n            try clicking buttons and stepnav items. Note that they don't do anything while the\n            validation is running. The validation is just an exercise. It will not fail.\n        </p>\n\n        <ng-container *ngIf=\"loading\">\n            <p>Loading...</p>\n            <div class=\"progress\">\n                <progress [value]=\"progress\" max=\"100\" [attr.data-displayval]=\"progress + '%'\"></progress>\n            </div>\n        </ng-container>\n\n        <p *ngIf=\"readyToFinish\">\n            Click on the OK button to close the wizard.\n        </p>\n    </clr-wizard-page>\n</clr-wizard>\n\n<clr-code-snippet [clrLanguage]=\"'typescript'\" [clrCode]=\"code\"></clr-code-snippet>\n<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n"
    },
    {
      "name": "WizardTitlesDemo",
      "id": "component-WizardTitlesDemo-52946235e70fe312d731a64015a948ca",
      "file": "src/website/src/app/documentation/demos/wizard/wizard-titles.demo.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "clr-wizard-titles",
      "styleUrls": [],
      "styles": [],
      "template": "<clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "html",
          "defaultValue":
            "`<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n    <clr-wizard-title>Wizard Title</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>\n            This title will appear in the content area and the sidebar\n        </ng-template>\n        Content for page 1\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>\n            This title will appear in the content area\n        </ng-template>\n        <ng-template clrPageNavTitle>\n            This title in the sidebar\n        </ng-template>\n        Content for page 2\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>\n            {{projectedTitle}}\n        </ng-template>\n        Content for page 3\n    </clr-wizard-page>\n</clr-wizard>\n`",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode":
        "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-wizard-titles',\n  template: `\n        <clr-code-snippet [clrLanguage]=\"'html'\" [clrCode]=\"html\"></clr-code-snippet>\n    `,\n})\nexport class WizardTitlesDemo {\n  html: string = `<clr-wizard #wizard [(clrWizardOpen)]=\"open\">\n    <clr-wizard-title>Wizard Title</clr-wizard-title>\n\n    <clr-wizard-button type=\"cancel\">Cancel</clr-wizard-button>\n    <clr-wizard-button type=\"previous\">Back</clr-wizard-button>\n    <clr-wizard-button type=\"next\">Next</clr-wizard-button>\n    <clr-wizard-button type=\"finish\">Finish</clr-wizard-button>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>\n            This title will appear in the content area and the sidebar\n        </ng-template>\n        Content for page 1\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>\n            This title will appear in the content area\n        </ng-template>\n        <ng-template clrPageNavTitle>\n            This title in the sidebar\n        </ng-template>\n        Content for page 2\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>\n            {{projectedTitle}}\n        </ng-template>\n        Content for page 3\n    </clr-wizard-page>\n</clr-wizard>\n`;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    }
  ],
  "modules": [
    {
      "name": "AccordionDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AccordionDemo"
            },
            {
              "name": "AngularAccordionDemo"
            },
            {
              "name": "ApiAccordionDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "AccordionDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/accordion/accordion.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { AccordionDemo } from './accordion.demo';\nimport { AngularAccordionDemo } from './angular-accordion.demo';\nimport { ApiAccordionDemo } from './api-accordion.demo';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: AccordionDemo }]),\n    UtilsModule,\n  ],\n  declarations: [AccordionDemo, AngularAccordionDemo, ApiAccordionDemo],\n})\nexport class AccordionDemoModule {}\n"
    },
    {
      "name": "AlertsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AlertAngularAppLevelAlertsDemo"
            },
            {
              "name": "AlertAngularAppLevelDemo"
            },
            {
              "name": "AlertAngularCloseEventDemo"
            },
            {
              "name": "AlertAngularNotClosableDemo"
            },
            {
              "name": "AlertAngularSmallDemo"
            },
            {
              "name": "AlertAngularSuccessDemo"
            },
            {
              "name": "AlertAppLevelDemo"
            },
            {
              "name": "AlertCardsDemo"
            },
            {
              "name": "AlertContentAreaDemo"
            },
            {
              "name": "AlertModalsDemo"
            },
            {
              "name": "AlertSizesDemo"
            },
            {
              "name": "AlertStylesDemo"
            },
            {
              "name": "AlertsDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AlertsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "AlertsDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/alert/alerts.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { AlertStylesDemo } from './static/alert-styles';\nimport { AlertContentAreaDemo } from './static/alert-content-area';\nimport { AlertCardsDemo } from './static/alert-cards';\nimport { AlertModalsDemo } from './static/alert-modals';\nimport { AlertSizesDemo } from './static/alert-sizes';\nimport { AlertAppLevelDemo } from './static/alert-app-level';\n\nimport { AlertAngularAppLevelDemo } from './angular/alert-angular-app-level';\nimport { AlertAngularAppLevelAlertsDemo } from './angular/alert-angular-app-level-alerts';\nimport { AlertAngularNotClosableDemo } from './angular/alert-angular-not-closable';\nimport { AlertAngularSuccessDemo } from './angular/alert-angular-success';\nimport { AlertAngularSmallDemo } from './angular/alert-angular-small';\nimport { AlertAngularCloseEventDemo } from './angular/alert-angular-close-event';\nimport { AlertsDemo } from './alerts.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    UtilsModule,\n    RouterModule.forChild([{ path: '', component: AlertsDemo }]),\n  ],\n  declarations: [\n    AlertStylesDemo,\n    AlertContentAreaDemo,\n    AlertCardsDemo,\n    AlertModalsDemo,\n    AlertSizesDemo,\n    AlertAppLevelDemo,\n\n    AlertAngularAppLevelDemo,\n    AlertAngularAppLevelAlertsDemo,\n    AlertAngularNotClosableDemo,\n    AlertAngularSuccessDemo,\n    AlertAngularSmallDemo,\n    AlertAngularCloseEventDemo,\n\n    AlertsDemo,\n  ],\n  exports: [AlertsDemo],\n})\nexport class AlertsDemoModule {}\n"
    },
    {
      "name": "AppLayoutDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppLayoutDemo"
            },
            {
              "name": "LayoutAllDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AppLayoutDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "AppLayoutDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/app-layout/app-layout.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { AppLayoutDemo } from './app-layout.demo';\nimport { RouterModule } from '@angular/router';\nimport { LayoutAllDemo } from './layout-all';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    UtilsModule,\n    RouterModule.forChild([{ path: '', component: AppLayoutDemo }]),\n  ],\n  declarations: [AppLayoutDemo, LayoutAllDemo],\n  exports: [AppLayoutDemo],\n})\nexport class AppLayoutDemoModule {}\n"
    },
    {
      "name": "AppModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            },
            {
              "name": "HomeComponent"
            },
            {
              "name": "PageNotFoundComponent"
            },
            {
              "name": "SkipLinkComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "AppRoutingModule"
            },
            {
              "name": "DocumentationModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "AppModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/app.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { DocumentationModule } from './documentation/documentation.module';\nimport { UtilsModule } from './utils/utils.module';\nimport { SkipLinkComponent } from './utils/skip-link.component';\nimport {DocLibModule} from \"@vcd/ui-doc-lib\";\n\nimport componentsDocumentationJson from '../../gen/components-doc-data.json';\nimport examplesDocumentationJson from '../../gen/examples-doc-data.json';\nimport stackblitzJson from '../../gen/stackblitz-data.json';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent, PageNotFoundComponent, SkipLinkComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'clarity' }),\n    BrowserAnimationsModule,\n    ClarityModule,\n    DocumentationModule,\n    UtilsModule,\n    AppRoutingModule,\n    DocLibModule.forRoot([componentsDocumentationJson, examplesDocumentationJson], stackblitzJson)\n  ],\n  providers: [Title],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n"
    },
    {
      "name": "AppRoutingModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "AppRoutingModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/app-routing.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'icons',\n    loadChildren: () => import('./icons/icons.module').then(m => m.IconsModule),\n    data: {\n      bodyClass: 'layout-icons',\n    },\n  },\n  {\n    path: 'community',\n    loadChildren: () => import('./community/community.module').then(m => m.CommunityModule),\n  },\n  {\n    path: 'news',\n    loadChildren: () => import('./news/news.module').then(m => m.NewsModule),\n  },\n  {\n    path: '',\n    component: HomeComponent,\n    data: {\n      bodyClass: 'layout-home',\n    },\n  },\n\n  // just in case people who may have bookmarked the old iconography url, redirect them to the new url.\n  {\n    path: 'documentation/iconography',\n    redirectTo: '/icons',\n  },\n  {\n    path: 'get-started',\n    redirectTo: `documentation/get-started`,\n  },\n  {\n    path: 'icons/clarity-icons',\n    redirectTo: `icons/get-started`,\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent,\n    data: {\n      bodyClass: 'layout-error',\n      browserTitle: 'Page Not Found',\n    },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n"
    },
    {
      "name": "BadgesDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "BadgeColorsDemo"
            },
            {
              "name": "BadgeStatusesDemo"
            },
            {
              "name": "BadgesDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "BadgesDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "BadgesDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/badges/badges.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { BadgeColorsDemo } from './badge-colors';\nimport { BadgeStatusesDemo } from './badge-statuses';\nimport { BadgesDemo } from './badges.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    UtilsModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: BadgesDemo }]),\n  ],\n  declarations: [BadgeColorsDemo, BadgeStatusesDemo, BadgesDemo],\n  exports: [BadgesDemo],\n})\nexport class BadgesDemoModule {}\n"
    },
    {
      "name": "ButtonGroupDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ButtonGroupAngularBasicStructureDemo"
            },
            {
              "name": "ButtonGroupAngularDirectionsDemo"
            },
            {
              "name": "ButtonGroupAngularTypes"
            },
            {
              "name": "ButtonGroupBasicStructureDemo"
            },
            {
              "name": "ButtonGroupCheckboxDemo"
            },
            {
              "name": "ButtonGroupDemo"
            },
            {
              "name": "ButtonGroupIconsDemo"
            },
            {
              "name": "ButtonGroupRadioDemo"
            },
            {
              "name": "ButtonGroupTypes"
            },
            {
              "name": "MixedButtonGroupDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ButtonGroupDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ButtonGroupDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/button-group/button-group.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { ButtonGroupBasicStructureDemo } from './basic-structure';\nimport { ButtonGroupTypes } from './types';\nimport { MixedButtonGroupDemo } from './mixed';\nimport { ButtonGroupIconsDemo } from './icons';\nimport { ButtonGroupCheckboxDemo } from './checkbox';\nimport { ButtonGroupRadioDemo } from './radio';\nimport { ButtonGroupAngularBasicStructureDemo } from './angular-basic-structure';\nimport { ButtonGroupAngularTypes } from './angular-types';\nimport { ButtonGroupAngularDirectionsDemo } from './angular-directions';\nimport { ButtonGroupDemo } from './button-group.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: ButtonGroupDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    ButtonGroupBasicStructureDemo,\n    ButtonGroupTypes,\n    MixedButtonGroupDemo,\n    ButtonGroupIconsDemo,\n    ButtonGroupCheckboxDemo,\n    ButtonGroupRadioDemo,\n    ButtonGroupAngularBasicStructureDemo,\n    ButtonGroupAngularTypes,\n    ButtonGroupAngularDirectionsDemo,\n    ButtonGroupDemo,\n  ],\n  exports: [ButtonGroupDemo],\n})\nexport class ButtonGroupDemoModule {}\n"
    },
    {
      "name": "ButtonsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ButtonLoadingDemo"
            },
            {
              "name": "ButtonSizesDemo"
            },
            {
              "name": "ButtonStatesDemo"
            },
            {
              "name": "ButtonsDemo"
            },
            {
              "name": "ButtonsIconsDemo"
            },
            {
              "name": "ButtonsIconsSmallDemo"
            },
            {
              "name": "ButtonsTestDemo"
            },
            {
              "name": "IconButtonsDemo"
            },
            {
              "name": "InverseButtonDemo"
            },
            {
              "name": "PrimaryButtonDemo"
            },
            {
              "name": "RealButtonDemo"
            },
            {
              "name": "SecondaryButtonDemo"
            },
            {
              "name": "TertiaryButtonDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ButtonsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ButtonsDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/buttons/buttons.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { RealButtonDemo } from './real-button';\nimport { PrimaryButtonDemo } from './primary-button';\nimport { SecondaryButtonDemo } from './secondary-button';\nimport { TertiaryButtonDemo } from './tertiary-button';\nimport { InverseButtonDemo } from './inverse-button';\nimport { ButtonStatesDemo } from './button-states';\nimport { ButtonSizesDemo } from './button-sizes';\nimport { ButtonsTestDemo } from './buttons-test';\nimport { ButtonsIconsDemo } from './buttons-icons';\nimport { ButtonLoadingDemo } from './button-loading';\nimport { ButtonsDemo } from './buttons.demo';\n\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { ButtonsIconsSmallDemo } from './buttons-icons-sm';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { IconButtonsDemo } from './icon-buttons';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: ButtonsDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    RealButtonDemo,\n    PrimaryButtonDemo,\n    SecondaryButtonDemo,\n    TertiaryButtonDemo,\n    InverseButtonDemo,\n    ButtonStatesDemo,\n    ButtonSizesDemo,\n    ButtonsTestDemo,\n    ButtonsIconsDemo,\n    ButtonsIconsSmallDemo,\n    ButtonLoadingDemo,\n    IconButtonsDemo,\n\n    ButtonsDemo,\n  ],\n  exports: [ButtonsDemo],\n})\nexport class ButtonsDemoModule {}\n"
    },
    {
      "name": "CardsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CardAlertDemo"
            },
            {
              "name": "CardClickableDemo"
            },
            {
              "name": "CardDropdownDemo"
            },
            {
              "name": "CardGridDemo"
            },
            {
              "name": "CardImagesDemo"
            },
            {
              "name": "CardLayoutDemo"
            },
            {
              "name": "CardListGroupDemo"
            },
            {
              "name": "CardMasonryDemo"
            },
            {
              "name": "CardMediaBlockDemo"
            },
            {
              "name": "CardsDemo"
            },
            {
              "name": "ListsInCardsDemo"
            },
            {
              "name": "ProgressBarCardsDemo"
            },
            {
              "name": "ProgressBarInlineCardsDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CardsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "CardsDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/card/cards.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { CardGridDemo } from './card-grid';\nimport { CardClickableDemo } from './card-clickable';\nimport { CardImagesDemo } from './card-images';\nimport { CardLayoutDemo } from './card-layout';\nimport { CardMasonryDemo } from './card-masonry';\nimport { CardMediaBlockDemo } from './card-media-block';\nimport { CardDropdownDemo } from './card-dropdown';\nimport { CardListGroupDemo } from './card-list-group';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { CardsDemo } from './cards.demo';\nimport { CardAlertDemo } from './card-alert';\nimport { ListsInCardsDemo } from './lists-in-cards';\nimport { ProgressBarCardsDemo } from './progress-bar-cards';\nimport { ProgressBarInlineCardsDemo } from './progress-bar-inline-cards';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: CardsDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    CardAlertDemo,\n    CardGridDemo,\n    CardClickableDemo,\n    CardImagesDemo,\n    CardLayoutDemo,\n    CardMasonryDemo,\n    CardMediaBlockDemo,\n    CardDropdownDemo,\n    CardListGroupDemo,\n    ListsInCardsDemo,\n    ProgressBarCardsDemo,\n    ProgressBarInlineCardsDemo,\n\n    CardsDemo,\n  ],\n  exports: [CardsDemo],\n})\nexport class CardsDemoModule {}\n"
    },
    {
      "name": "CheckboxesDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CheckboxesDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CheckboxesDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "CheckboxesDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/checkboxes/checkboxes.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { CheckboxesDemo } from './checkboxes.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: CheckboxesDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [CheckboxesDemo],\n  exports: [CheckboxesDemo],\n})\nexport class CheckboxesDemoModule {}\n"
    },
    {
      "name": "ColorDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": [
            {
              "name": "ClipboardCopyService"
            }
          ]
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ColorDemo"
            },
            {
              "name": "ColorFunctionalDemo"
            },
            {
              "name": "ColorPaletteDemo"
            },
            {
              "name": "ColorSchemeDemo"
            },
            {
              "name": "ColorSchemeDonut"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ColorDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ColorDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/color/color.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { ColorPaletteDemo } from './color-palette/color-palette.demo';\nimport { ColorFunctionalDemo } from './color-palette-functional/color-palette-functional.demo';\nimport { ColorSchemeDemo } from './color-scheme/color-scheme.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { ColorDemo } from './color.demo';\nimport { ClipboardCopyService } from './clipboard-copy.service';\nimport { ColorSchemeDonut } from './color-scheme/color-scheme-donut.demo';\n\n@NgModule({\n  imports: [CommonModule, ClarityModule, RouterModule.forChild([{ path: '', component: ColorDemo }]), DocWrapperModule],\n  declarations: [ColorPaletteDemo, ColorFunctionalDemo, ColorSchemeDemo, ColorDemo, ColorSchemeDonut],\n  providers: [ClipboardCopyService],\n  exports: [ColorDemo],\n})\nexport class ColorDemoModule {}\n"
    },
    {
      "name": "CommunityModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CommunityComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "CommunityModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/community/community.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { UtilsModule } from '../utils/utils.module';\nimport { CommunityComponent } from './community.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst route: Routes = [\n  {\n    path: '',\n    component: CommunityComponent,\n    data: {\n      bodyClass: 'layout-community',\n      browserTitle: 'Community',\n    },\n  },\n];\n\n@NgModule({\n  declarations: [CommunityComponent],\n  imports: [CommonModule, UtilsModule, RouterModule.forChild(route)],\n  providers: [],\n})\nexport class CommunityModule {}\n"
    },
    {
      "name": "DatagridDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ColorFilter"
            },
            {
              "name": "DatagridBasicStructureDemo"
            },
            {
              "name": "DatagridBatchActionDemo"
            },
            {
              "name": "DatagridBindingPropertiesDemo"
            },
            {
              "name": "DatagridBuiltInFiltersDemo"
            },
            {
              "name": "DatagridCompactDemo"
            },
            {
              "name": "DatagridCustomRenderingDemo"
            },
            {
              "name": "DatagridDemo"
            },
            {
              "name": "DatagridDetailPaneDemo"
            },
            {
              "name": "DatagridExpandableRowsDemo"
            },
            {
              "name": "DatagridFilteringDemo"
            },
            {
              "name": "DatagridFixedHeightDemo"
            },
            {
              "name": "DatagridFullDemo"
            },
            {
              "name": "DatagridHideShowColumnsDemo"
            },
            {
              "name": "DatagridPaginationDemo"
            },
            {
              "name": "DatagridPlaceholderDemo"
            },
            {
              "name": "DatagridSelectionDemo"
            },
            {
              "name": "DatagridSelectionSingleDemo"
            },
            {
              "name": "DatagridServerDrivenDemo"
            },
            {
              "name": "DatagridSingleActionDemo"
            },
            {
              "name": "DatagridSmartIteratorDemo"
            },
            {
              "name": "DatagridSortingDemo"
            },
            {
              "name": "DatagridUsageDemo"
            },
            {
              "name": "FakeLoader"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "DatagridDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "DatagridDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/datagrid/datagrid.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ClarityModule } from '@clr/angular';\n\nimport { DatagridBasicStructureDemo } from './basic-structure/basic-structure';\nimport { DatagridUsageDemo } from './usage/usage';\nimport { DatagridBatchActionDemo } from './batch-action/batch-action';\nimport { DatagridBindingPropertiesDemo } from './binding-properties/binding-properties';\nimport { DatagridCustomRenderingDemo } from './custom-rendering/custom-rendering';\nimport { DatagridFilteringDemo } from './filtering/filtering';\nimport { DatagridFullDemo } from './full/full';\nimport { DatagridPaginationDemo } from './pagination/pagination';\nimport { DatagridSelectionDemo } from './selection/selection';\nimport { DatagridSelectionSingleDemo } from './single-selection/single-selection';\nimport { DatagridServerDrivenDemo } from './server-driven/server-driven';\nimport { DatagridSingleActionDemo } from './single-action/single-action';\nimport { DatagridSmartIteratorDemo } from './smart-iterator/smart-iterator';\nimport { DatagridSortingDemo } from './sorting/sorting';\nimport { DatagridBuiltInFiltersDemo } from './built-in-filters/built-in-filters';\nimport { DatagridPlaceholderDemo } from './placeholder/placeholder';\nimport { DatagridExpandableRowsDemo } from './expandable-rows/expandable-rows';\nimport { DatagridFixedHeightDemo } from './fixed-height/fixed-height';\nimport { DatagridHideShowColumnsDemo } from './hide-show-columns/hide-show-columns';\nimport { DatagridCompactDemo } from './compact/compact';\nimport { DatagridDetailPaneDemo } from './detail/detail';\n\nimport { ColorFilter } from './utils/color-filter';\nimport { FakeLoader } from './expandable-rows/fake-loader';\nimport { DatagridDemo } from './datagrid.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DatagridDemo,\n    children: [\n      {\n        path: '',\n        redirectTo: 'structure',\n        pathMatch: 'full',\n      },\n      {\n        path: 'structure',\n        component: DatagridBasicStructureDemo,\n        data: {\n          demoName: 'Basic Structure',\n        },\n      },\n      {\n        path: 'custom-rendering',\n        component: DatagridCustomRenderingDemo,\n        data: {\n          demoName: 'Custom Cell Rendering',\n        },\n      },\n      {\n        path: 'smart-iterator',\n        component: DatagridSmartIteratorDemo,\n        data: {\n          demoName: 'Smart Iterator',\n        },\n      },\n      {\n        path: 'binding-properties',\n        component: DatagridBindingPropertiesDemo,\n        data: {\n          demoName: 'Binding Properties',\n        },\n      },\n      {\n        path: 'custom-sorting',\n        component: DatagridSortingDemo,\n        data: {\n          demoName: 'Custom Sorting',\n        },\n      },\n      {\n        path: 'custom-filtering',\n        component: DatagridFilteringDemo,\n        data: {\n          demoName: 'Custom Filtering',\n        },\n      },\n      {\n        path: 'built-in-filters',\n        component: DatagridBuiltInFiltersDemo,\n        data: {\n          demoName: 'Built-in Filters',\n        },\n      },\n      {\n        path: 'pagination',\n        component: DatagridPaginationDemo,\n        data: {\n          demoName: 'Pagination',\n        },\n      },\n      {\n        path: 'selection',\n        component: DatagridSelectionDemo,\n        data: {\n          demoName: 'Selection',\n        },\n      },\n      {\n        path: 'selection-single',\n        component: DatagridSelectionSingleDemo,\n        data: {\n          demoName: 'Single Selection',\n        },\n      },\n      {\n        path: 'batch-action',\n        component: DatagridBatchActionDemo,\n        data: {\n          demoName: 'Batch Action',\n        },\n      },\n      {\n        path: 'single-action',\n        component: DatagridSingleActionDemo,\n        data: {\n          demoName: 'Single Action',\n        },\n      },\n      {\n        path: 'server-driven',\n        component: DatagridServerDrivenDemo,\n        data: {\n          demoName: 'Server Driven',\n        },\n      },\n      {\n        path: 'placeholder',\n        component: DatagridPlaceholderDemo,\n        data: {\n          demoName: 'Placeholder',\n        },\n      },\n      {\n        path: 'detail-pane',\n        component: DatagridDetailPaneDemo,\n        data: {\n          demoName: 'Detail Pane',\n        },\n      },\n      {\n        path: 'expandable-rows',\n        component: DatagridExpandableRowsDemo,\n        data: {\n          demoName: 'Expandable Rows',\n        },\n      },\n      {\n        path: 'compact',\n        component: DatagridCompactDemo,\n        data: {\n          demoName: 'Compact',\n        },\n      },\n      {\n        path: 'hide-show',\n        component: DatagridHideShowColumnsDemo,\n        data: {\n          demoName: 'Hide/Show',\n        },\n      },\n      {\n        path: 'fixed-height',\n        component: DatagridFixedHeightDemo,\n        data: {\n          demoName: 'Fixed Height',\n        },\n      },\n      {\n        path: 'full',\n        component: DatagridFullDemo,\n        data: {\n          demoName: 'Full Demo',\n        },\n      },\n      {\n        path: 'usage',\n        component: DatagridUsageDemo,\n        data: {\n          demoName: 'Usage',\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClarityModule, DocWrapperModule, RouterModule.forChild(routes), UtilsModule],\n  declarations: [\n    DatagridBasicStructureDemo,\n    DatagridUsageDemo,\n    DatagridBatchActionDemo,\n    DatagridBindingPropertiesDemo,\n    DatagridCompactDemo,\n    DatagridCustomRenderingDemo,\n    DatagridFilteringDemo,\n    DatagridFullDemo,\n    DatagridPaginationDemo,\n    DatagridSelectionDemo,\n    DatagridSelectionSingleDemo,\n    DatagridServerDrivenDemo,\n    DatagridSingleActionDemo,\n    DatagridSmartIteratorDemo,\n    DatagridSortingDemo,\n    DatagridBuiltInFiltersDemo,\n    DatagridPlaceholderDemo,\n    DatagridExpandableRowsDemo,\n    DatagridFixedHeightDemo,\n    DatagridHideShowColumnsDemo,\n    DatagridDetailPaneDemo,\n    ColorFilter,\n    FakeLoader,\n    DatagridDemo,\n  ],\n  exports: [DatagridDemo],\n})\nexport class DatagridDemoModule {}\n"
    },
    {
      "name": "DatalistDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "DatalistBasicDemo"
            },
            {
              "name": "DatalistDemo"
            },
            {
              "name": "DatalistReactiveValidationDemo"
            },
            {
              "name": "DatalistTemplateValidationDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "DatalistDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "DatalistDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/datalist/datalist.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\nimport { DatalistDemo } from './datalist.demo';\nimport { DatalistBasicDemo } from './datalist-basic.demo';\nimport { DatalistTemplateValidationDemo } from './datalist-template-validation.demo';\nimport { DatalistReactiveValidationDemo } from './datalist-reactive-validation.demo';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: DatalistDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [DatalistDemo, DatalistBasicDemo, DatalistTemplateValidationDemo, DatalistReactiveValidationDemo],\n  exports: [DatalistDemo],\n})\nexport class DatalistDemoModule {}\n"
    },
    {
      "name": "DatepickerDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "DatepickerAPIDemo"
            },
            {
              "name": "DatepickerDateIODemo"
            },
            {
              "name": "DatepickerDemo"
            },
            {
              "name": "DatepickerENUSDemo"
            },
            {
              "name": "DatepickerFRDemo"
            },
            {
              "name": "DatepickerIODemo"
            },
            {
              "name": "DatepickerInternationalizationDemo"
            },
            {
              "name": "DatepickerReactiveFormsDemo"
            },
            {
              "name": "DatepickerTemplateDrivenFormsDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "DatepickerDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "DatepickerDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/datepicker/datepicker.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { DatepickerDemo } from './datepicker.demo';\nimport { DatepickerAPIDemo } from './demos/datepicker-api.demo';\nimport { DatepickerFRDemo } from './demos/datepicker-fr.demo';\nimport { DatepickerENUSDemo } from './demos/datepicker-enUS.demo';\nimport { DatepickerInternationalizationDemo } from './demos/datepicker-internationalization.demo';\nimport { DatepickerIODemo } from './demos/datepicker-io.demo';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DatepickerDateIODemo } from './demos/datepicker-date-io.demo';\nimport { DatepickerTemplateDrivenFormsDemo } from './demos/datepicker-template-driven-forms';\nimport { DatepickerReactiveFormsDemo } from './demos/datepicker-reactive-forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    UtilsModule,\n    DocWrapperModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: DatepickerDemo }]),\n  ],\n  declarations: [\n    DatepickerAPIDemo,\n    DatepickerDemo,\n    DatepickerFRDemo,\n    DatepickerENUSDemo,\n    DatepickerInternationalizationDemo,\n    DatepickerIODemo,\n    DatepickerDateIODemo,\n    DatepickerTemplateDrivenFormsDemo,\n    DatepickerReactiveFormsDemo,\n  ],\n  exports: [DatepickerDemo],\n})\nexport class DatepickerDemoModule {}\n"
    },
    {
      "name": "DocumentationModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ComponentStatusComponent"
            },
            {
              "name": "DocumentationComponent"
            },
            {
              "name": "NewLayoutAlertComponent"
            },
            {
              "name": "StatusDotComponent"
            },
            {
              "name": "VersionSwitcherComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocumentationRoutingModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "DocumentationModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/documentation.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ClarityModule } from '@clr/angular';\n\nimport { UtilsModule } from '../utils/utils.module';\nimport { DocumentationRoutingModule } from './documentation-routing.module';\nimport { DocumentationComponent } from './documentation.component';\nimport { ComponentStatusComponent } from './component-status/component-status.component';\nimport { NewLayoutAlertComponent } from './utils/new-layout-alert.component';\nimport { StatusDotComponent } from './component-status/status-dot.component';\nimport { VersionSwitcherComponent } from './version-switcher/version-switcher.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilsModule, ClarityModule, HttpClientModule, DocumentationRoutingModule],\n  declarations: [\n    DocumentationComponent,\n    ComponentStatusComponent,\n    StatusDotComponent,\n    NewLayoutAlertComponent,\n    VersionSwitcherComponent,\n  ],\n})\nexport class DocumentationModule {}\n"
    },
    {
      "name": "DocumentationRoutingModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "DocumentationRoutingModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/documentation-routing.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DocumentationComponent } from './documentation.component';\nimport { ComponentStatusComponent } from './component-status/component-status.component';\n\nconst documentationRoutes: Routes = [\n  {\n    path: `documentation`,\n    component: DocumentationComponent,\n    data: {\n      bodyClass: 'layout-documentation',\n      browserTitle: 'Documentation',\n    },\n    children: [\n      {\n        path: 'get-started',\n        loadChildren: () => import('./get-started/get-started.module').then(m => m.GetStartedModule),\n      },\n      {\n        path: '',\n        component: ComponentStatusComponent,\n        data: {\n          bodyClass: 'page-documentation',\n          browserTitle: 'Documentation',\n        },\n      },\n      {\n        path: 'accordion',\n        loadChildren: () => import('./demos/accordion/accordion.demo.module').then(m => m.AccordionDemoModule),\n        data: {\n          bodyClass: 'page-accordion-view',\n          browserTitle: 'Accordion',\n        },\n      },\n      {\n        path: 'alerts',\n        loadChildren: () => import('./demos/alert/alerts.demo.module').then(m => m.AlertsDemoModule),\n        data: {\n          bodyClass: 'page-alerts',\n          browserTitle: 'Alerts',\n        },\n      },\n      {\n        path: 'app-layout',\n        loadChildren: () => import('./demos/app-layout/app-layout.demo.module').then(m => m.AppLayoutDemoModule),\n        data: {\n          bodyClass: 'page-app-layout',\n          browserTitle: 'Application Layout',\n        },\n      },\n      {\n        path: 'badges',\n        loadChildren: () => import('./demos/badges/badges.demo.module').then(m => m.BadgesDemoModule),\n        data: {\n          bodyClass: 'page-badges',\n          browserTitle: 'Badges',\n        },\n      },\n      {\n        path: 'buttons',\n        loadChildren: () => import('./demos/buttons/buttons.demo.module').then(m => m.ButtonsDemoModule),\n        data: {\n          bodyClass: 'page-buttons',\n          browserTitle: 'Buttons',\n        },\n      },\n      {\n        path: 'button-group',\n        loadChildren: () => import('./demos/button-group/button-group.demo.module').then(m => m.ButtonGroupDemoModule),\n        data: {\n          bodyClass: 'page-button-group',\n          browserTitle: 'Button Group',\n        },\n      },\n      {\n        path: 'cards',\n        loadChildren: () => import('./demos/card/cards.demo.module').then(m => m.CardsDemoModule),\n        data: {\n          bodyClass: 'page-cards',\n          browserTitle: 'Cards',\n        },\n      },\n      {\n        path: 'checkboxes',\n        loadChildren: () => import('./demos/checkboxes/checkboxes.demo.module').then(m => m.CheckboxesDemoModule),\n        data: {\n          bodyClass: 'page-checkboxes',\n          browserTitle: 'Checkboxes',\n        },\n      },\n      {\n        path: 'color',\n        loadChildren: () => import('./demos/color/color.demo.module').then(m => m.ColorDemoModule),\n        data: {\n          bodyClass: 'page-color',\n          browserTitle: 'Color Palette',\n        },\n      },\n      {\n        path: 'datagrid',\n        loadChildren: () => import('./demos/datagrid/datagrid.demo.module').then(m => m.DatagridDemoModule),\n        data: {\n          bodyClass: 'page-datagrid',\n          browserTitle: 'Datagrid',\n        },\n      },\n      {\n        path: 'datalist',\n        loadChildren: () => import('./demos/datalist/datalist.module').then(m => m.DatalistDemoModule),\n        data: {\n          bodyClass: 'page-datalist',\n          browserTitle: 'Datalist',\n        },\n      },\n      {\n        path: 'datepicker',\n        loadChildren: () => import('./demos/datepicker/datepicker.demo.module').then(m => m.DatepickerDemoModule),\n        data: {\n          bodyClass: 'page-datepicker',\n          browserTitle: 'Datepicker',\n        },\n      },\n      {\n        path: 'dropdowns',\n        loadChildren: () => import('./demos/dropdown/dropdown.demo.module').then(m => m.DropdownDemoModule),\n        data: {\n          bodyClass: 'page-dropdowns',\n          browserTitle: 'Dropdowns',\n        },\n      },\n      {\n        path: 'forms',\n        loadChildren: () => import('./demos/forms/forms.demo.module').then(m => m.FormsDemoModule),\n        data: {\n          bodyClass: 'page-forms',\n          browserTitle: 'Forms',\n        },\n      },\n      {\n        path: 'grid',\n        loadChildren: () => import('./demos/grid/grid.demo.module').then(m => m.GridDemoModule),\n        data: {\n          bodyClass: 'page-grid',\n          browserTitle: 'Grid',\n        },\n      },\n      {\n        path: 'header',\n        loadChildren: () => import('./demos/header/header.demo.module').then(m => m.HeaderDemoModule),\n        data: {\n          bodyClass: 'page-header',\n          browserTitle: 'Header',\n        },\n      },\n      {\n        path: 'input',\n        loadChildren: () => import('./demos/input/input.demo.module').then(m => m.InputDemoModule),\n        data: {\n          bodyClass: 'input',\n          browserTitle: 'Inputs',\n        },\n      },\n      {\n        path: 'internationalization',\n        loadChildren: () => import('./demos/i18n/i18n.demo.module').then(m => m.I18nDemoModule),\n        data: {\n          bodyClass: 'i18n',\n          browserTitle: 'Internationalization',\n        },\n      },\n      {\n        path: 'labels',\n        loadChildren: () => import('./demos/labels/labels.demo.module').then(m => m.LabelsDemoModule),\n        data: {\n          bodyClass: 'page-labels',\n          browserTitle: 'Labels',\n        },\n      },\n      {\n        path: 'lists',\n        loadChildren: () => import('./demos/lists/lists.demo.module').then(m => m.ListsDemoModule),\n        data: {\n          bodyClass: 'page-lists',\n          browserTitle: 'Lists',\n        },\n      },\n      {\n        path: 'login',\n        loadChildren: () => import('./demos/login/login.demo.module').then(m => m.LoginDemoModule),\n        data: {\n          bodyClass: 'page-login',\n          browserTitle: 'Login Page',\n        },\n      },\n      {\n        path: 'modals',\n        loadChildren: () => import('./demos/modal/modal.examples.module').then(m => m.ModalExamplesModule),\n        data: {\n          bodyClass: 'page-modals',\n          browserTitle: 'Modals',\n        },\n      },\n      {\n        path: 'navigation',\n        loadChildren: () => import('./demos/nav/nav.demo.module').then(m => m.NavDemoModule),\n        data: {\n          bodyClass: 'page-navigation',\n          browserTitle: 'Navigation',\n        },\n      },\n      {\n        path: 'password',\n        loadChildren: () => import('./demos/password/password.demo.module').then(m => m.PasswordDemoModule),\n        data: {\n          bodyClass: 'page-password',\n          browserTitle: 'Password',\n        },\n      },\n      {\n        path: 'progress',\n        loadChildren: () =>\n          import('./demos/progress-bars/progress-bars.demo.module').then(m => m.ProgressBarsDemoModule),\n        data: {\n          bodyClass: 'page-progress',\n          browserTitle: 'Progress Bars',\n        },\n      },\n      {\n        path: 'radio',\n        loadChildren: () => import('./demos/radio/radio.demo.module').then(m => m.RadioDemoModule),\n        data: {\n          bodyClass: 'page-radio',\n          browserTitle: 'Radio Buttons',\n        },\n      },\n      {\n        path: 'range',\n        loadChildren: () => import('./demos/range/range.module').then(m => m.RangeDemoModule),\n        data: {\n          bodyClass: 'page-range',\n          browserTitle: 'Range Input',\n        },\n      },\n      {\n        path: 'select',\n        loadChildren: () => import('./demos/select/select.demo.module').then(m => m.SelectDemoModule),\n        data: {\n          bodyClass: 'page-select-boxes',\n          browserTitle: 'Select',\n        },\n      },\n      {\n        path: 'sidenav',\n        loadChildren: () => import('./demos/sidenav/sidenav.demo.module').then(m => m.SidenavDemoModule),\n        data: {\n          bodyClass: 'page-sidenav',\n          browserTitle: 'Sidenav',\n        },\n      },\n      {\n        path: 'signposts',\n        loadChildren: () => import('./demos/signposts/signpost.demo.module').then(m => m.SignpostDemoModule),\n        data: {\n          bodyClass: 'page-signposts',\n          browserTitle: 'Signposts',\n        },\n      },\n      {\n        path: 'spinners',\n        loadChildren: () => import('./demos/spinners/spinners.demo.module').then(m => m.SpinnersDemoModule),\n        data: {\n          bodyClass: 'page-spinners',\n          browserTitle: 'Spinners',\n        },\n      },\n      {\n        path: 'stack-view',\n        loadChildren: () => import('./demos/stack-view/stack-view.demo.module').then(m => m.StackViewDemoModule),\n        data: {\n          bodyClass: 'page-stack-view',\n          browserTitle: 'Stack View',\n        },\n      },\n      {\n        path: 'stepper',\n        loadChildren: () => import('./demos/stepper/stepper.demo.module').then(m => m.StepperDemoModule),\n        data: {\n          bodyClass: 'page-stepper-view',\n          browserTitle: 'Stepper',\n        },\n      },\n      {\n        path: 'tables',\n        loadChildren: () => import('./demos/tables/tables.demo.module').then(m => m.TablesDemoModule),\n        data: {\n          bodyClass: 'page-tables',\n          browserTitle: 'Tables',\n        },\n      },\n      {\n        path: 'tabs',\n        loadChildren: () => import('./demos/tabs/tabs.demo.module').then(m => m.TabsDemoModule),\n        data: {\n          bodyClass: 'page-tables',\n          browserTitle: 'Tabs',\n        },\n      },\n      {\n        path: 'textarea',\n        loadChildren: () => import('./demos/textarea/textarea.demo.module').then(m => m.TextareaDemoModule),\n        data: {\n          bodyClass: 'page-textarea',\n          browserTitle: 'Textarea',\n        },\n      },\n      {\n        path: 'themes',\n        loadChildren: () => import('./demos/themes/themes.demo.module').then(m => m.ThemesDemoModule),\n        data: {\n          bodyClass: 'page-tables',\n          browserTitle: 'Clarity Themes',\n        },\n      },\n      {\n        path: 'timeline',\n        loadChildren: () => import('./demos/timeline/timeline.demo.module').then(m => m.TimelineDemoModule),\n        data: {\n          bodyClass: 'page-tables',\n          browserTitle: 'Timeline',\n        },\n      },\n      {\n        path: 'toggle-switches',\n        loadChildren: () => import('./demos/toggles/toggles.demo.module').then(m => m.TogglesDemoModule),\n        data: {\n          bodyClass: 'page-toggle-switches',\n          browserTitle: 'Toggle Switches',\n        },\n      },\n      {\n        path: 'tooltips',\n        loadChildren: () => import('./demos/tooltips/tooltips.demo.module').then(m => m.TooltipsDemoModule),\n        data: {\n          bodyClass: 'page-tooltips',\n          browserTitle: 'Tooltips',\n        },\n      },\n      {\n        path: 'tree-view',\n        loadChildren: () => import('./demos/tree-view/tree-view.demo.module').then(m => m.TreeDemoModule),\n        data: {\n          bodyClass: 'page-tree-view',\n          browserTitle: 'Tree View',\n        },\n      },\n      {\n        path: 'typography',\n        loadChildren: () => import('./demos/typography/typography.demo.module').then(m => m.TypographyDemoModule),\n        data: {\n          bodyClass: 'page-typography',\n          browserTitle: 'Typography',\n        },\n      },\n      {\n        path: 'vertical-nav',\n        loadChildren: () => import('./demos/vertical-nav/vertical-nav.demo.module').then(m => m.VerticalNavDemoModule),\n        data: {\n          bodyClass: 'page-vertical-nav',\n          browserTitle: 'Vertical Nav',\n        },\n      },\n      {\n        path: 'wizards',\n        loadChildren: () => import('./demos/wizard/wizard.demo.module').then(m => m.WizardDemoModule),\n        data: {\n          bodyClass: 'page-wizards',\n          browserTitle: 'Wizards',\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(documentationRoutes)],\n  exports: [RouterModule],\n})\nexport class DocumentationRoutingModule {}\n"
    },
    {
      "name": "DocWrapperModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "DocWrapper"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "DocWrapper"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "DocWrapperModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/_doc-wrapper/doc-wrapper.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapper } from './doc-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClarityModule, UtilsModule, RouterModule],\n  declarations: [DocWrapper],\n  exports: [DocWrapper],\n})\nexport class DocWrapperModule {}\n"
    },
    {
      "name": "DropdownDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "DropdownAngularCloseItemFalseDemo"
            },
            {
              "name": "DropdownAngularPositioningDemo"
            },
            {
              "name": "DropdownStaticButtonLinkToggleDemo"
            },
            {
              "name": "DropdownStaticDefaultDemo"
            },
            {
              "name": "DropdownStaticFontAwesomeToggleDemo"
            },
            {
              "name": "DropdownStaticIconToggleDemo"
            },
            {
              "name": "DropdownStaticPositioningDemo"
            },
            {
              "name": "DropdownsDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "DropdownsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "DropdownDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/dropdown/dropdown.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { DropdownStaticDefaultDemo } from './dropdown-static-default';\nimport { DropdownStaticPositioningDemo } from './dropdown-static-positioning';\nimport { DropdownStaticFontAwesomeToggleDemo } from './dropdown-static-fontawesome-toggle';\nimport { DropdownStaticIconToggleDemo } from './dropdown-static-icon-toggle';\nimport { DropdownStaticButtonLinkToggleDemo } from './dropdown-static-buttonlink-toggle';\nimport { DropdownAngularPositioningDemo } from './dropdown-angular-positioning';\nimport { DropdownAngularCloseItemFalseDemo } from './dropdown-angular-close-item-false';\nimport { DropdownsDemo } from './dropdown.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: DropdownsDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [\n    DropdownStaticDefaultDemo,\n    DropdownStaticPositioningDemo,\n    DropdownStaticFontAwesomeToggleDemo,\n    DropdownStaticIconToggleDemo,\n    DropdownStaticButtonLinkToggleDemo,\n    DropdownAngularPositioningDemo,\n    DropdownAngularCloseItemFalseDemo,\n\n    DropdownsDemo,\n  ],\n  exports: [DropdownsDemo],\n})\nexport class DropdownDemoModule {}\n"
    },
    {
      "name": "FormsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FormsDemo"
            },
            {
              "name": "FormsExampleBlockComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FormsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "FormsDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/forms/forms.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { FormsDemo } from './forms.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { FormsExampleBlockComponent } from './forms-example-block';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: FormsDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [FormsDemo, FormsExampleBlockComponent],\n  exports: [FormsDemo],\n})\nexport class FormsDemoModule {}\n"
    },
    {
      "name": "GetStartedModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "GetStartedComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "GetStartedModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/get-started/get-started.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\n\nimport { UtilsModule } from '../../utils/utils.module';\nimport { GetStartedComponent } from './get-started.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst route: Routes = [\n  {\n    path: '',\n    component: GetStartedComponent,\n    data: {\n      browserTitle: 'Get Started',\n    },\n  },\n];\n\n@NgModule({\n  declarations: [GetStartedComponent],\n  imports: [CommonModule, ClarityModule, UtilsModule, RouterModule.forChild(route)],\n  providers: [],\n})\nexport class GetStartedModule {}\n"
    },
    {
      "name": "GridDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "GridAutoLayout1Demo"
            },
            {
              "name": "GridAutoLayout2Demo"
            },
            {
              "name": "GridAutoLayout3Demo"
            },
            {
              "name": "GridAutoLayout4Demo"
            },
            {
              "name": "GridColumnOffsettingDemo"
            },
            {
              "name": "GridColumnOrderingDemo"
            },
            {
              "name": "GridColumnStackingDemo"
            },
            {
              "name": "GridColumnWrappingDemo"
            },
            {
              "name": "GridColumnsDemo"
            },
            {
              "name": "GridDemo"
            },
            {
              "name": "GridItemsHorizontalAlignmentDemo"
            },
            {
              "name": "GridItemsIndividualVerticalAlignmentDemo"
            },
            {
              "name": "GridItemsVerticalAlignmentDemo"
            },
            {
              "name": "GridNestingDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "GridDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "GridDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/grid/grid.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { GridAutoLayout1Demo } from './grid-auto-layout-1';\nimport { GridAutoLayout2Demo } from './grid-auto-layout-2';\nimport { GridColumnsDemo } from './grid-columns';\nimport { GridColumnStackingDemo } from './grid-column-stacking';\nimport { GridColumnOffsettingDemo } from './grid-column-offsetting';\nimport { GridItemsHorizontalAlignmentDemo } from './grid-items-horizontal-alignment';\nimport { GridItemsIndividualVerticalAlignmentDemo } from './grid-items-individual-vertical-alignment';\nimport { GridItemsVerticalAlignmentDemo } from './grid-items-vertical-alignment';\nimport { GridDemo } from './grid.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { GridColumnOrderingDemo } from './grid-column-ordering';\nimport { GridAutoLayout3Demo } from './grid-auto-layout-3';\nimport { GridAutoLayout4Demo } from './grid-auto-layout-4';\nimport { GridColumnWrappingDemo } from './grid-column-wrapping';\nimport { GridNestingDemo } from './grid-nesting';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: GridDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [\n    GridAutoLayout1Demo,\n    GridAutoLayout2Demo,\n    GridAutoLayout3Demo,\n    GridAutoLayout4Demo,\n    GridColumnsDemo,\n    GridColumnStackingDemo,\n    GridColumnWrappingDemo,\n    GridColumnOffsettingDemo,\n    GridColumnOrderingDemo,\n    GridItemsHorizontalAlignmentDemo,\n    GridItemsIndividualVerticalAlignmentDemo,\n    GridItemsVerticalAlignmentDemo,\n    GridNestingDemo,\n    GridDemo,\n  ],\n  exports: [GridDemo],\n})\nexport class GridDemoModule {}\n"
    },
    {
      "name": "HeaderDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "HeaderColorsDemo"
            },
            {
              "name": "HeaderDemo"
            },
            {
              "name": "HeaderLinksDemo"
            },
            {
              "name": "HeaderTypesDemo"
            },
            {
              "name": "SubNavDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "HeaderDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "HeaderDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/header/header.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { HeaderDemo } from './header.demo';\nimport { HeaderLinksDemo } from './header-links';\nimport { HeaderTypesDemo } from './header-types';\nimport { HeaderColorsDemo } from './header-colors';\nimport { SubNavDemo } from './sub-nav';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: HeaderDemo }]),\n    UtilsModule,\n  ],\n  declarations: [HeaderColorsDemo, HeaderLinksDemo, HeaderTypesDemo, SubNavDemo, HeaderDemo],\n  exports: [HeaderDemo],\n})\nexport class HeaderDemoModule {}\n"
    },
    {
      "name": "I18nDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "I18nDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "I18nDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "I18nDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/i18n/i18n.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { I18nDemo } from './i18n.demo';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    UtilsModule,\n    RouterModule.forChild([{ path: '', component: I18nDemo }]),\n  ],\n  declarations: [I18nDemo],\n  exports: [I18nDemo],\n})\nexport class I18nDemoModule {}\n"
    },
    {
      "name": "IconsModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FragmentContentComponent"
            },
            {
              "name": "FragmentLinkDirective"
            },
            {
              "name": "IconDetailCardComponent"
            },
            {
              "name": "IconsA11yComponent"
            },
            {
              "name": "IconsApiComponent"
            },
            {
              "name": "IconsComponent"
            },
            {
              "name": "IconsGetStartedComponent"
            },
            {
              "name": "IconsHowToUseComponent"
            },
            {
              "name": "IconsSetsComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "IconsModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/icons/icons.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { IconsComponent } from './icons.component';\nimport { ROUTING } from './icons-routing.module';\nimport { IconsGetStartedComponent } from './icons-get-started/icons-get-started.component';\nimport { IconsHowToUseComponent } from './icons-how-to-use/icons-how-to-use.component';\nimport { IconsApiComponent } from './icons-api/icons-api.component';\nimport { UtilsModule } from '../utils/utils.module';\nimport { IconsSetsComponent } from './icons-sets/icons-sets.component';\nimport { FragmentLinkDirective } from './utils/fragment-link.directive';\nimport { FragmentContentComponent } from './utils/fragment-content.component';\nimport { IconDetailCardComponent } from './icons-sets/icon-detail-card/icon-detail-card.component';\nimport { IconsA11yComponent } from './icons-a11y/icons-a11y.component';\n\n@NgModule({\n  imports: [ROUTING, CommonModule, ClarityModule, UtilsModule, FormsModule],\n  declarations: [\n    IconsComponent,\n    IconsGetStartedComponent,\n    IconsHowToUseComponent,\n    IconsApiComponent,\n    IconsSetsComponent,\n    IconsA11yComponent,\n    FragmentLinkDirective,\n    FragmentContentComponent,\n    IconDetailCardComponent,\n  ],\n})\nexport class IconsModule {}\n"
    },
    {
      "name": "InputDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "InputDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "InputDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "InputDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/input/input.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { InputDemo } from './input.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: InputDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [InputDemo],\n  exports: [InputDemo],\n})\nexport class InputDemoModule {}\n"
    },
    {
      "name": "LabelsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "LabelsClickableDemo"
            },
            {
              "name": "LabelsColorOptionsDemo"
            },
            {
              "name": "LabelsDefaultDemo"
            },
            {
              "name": "LabelsDemo"
            },
            {
              "name": "LabelsStatusDemo"
            },
            {
              "name": "LabelsWithBadgesDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "LabelsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "LabelsDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/labels/labels.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { LabelsWithBadgesDemo } from './labels-with-badges';\nimport { LabelsStatusDemo } from './labels-status';\nimport { LabelsClickableDemo } from './labels-clickable';\nimport { LabelsColorOptionsDemo } from './labels-color-options';\nimport { LabelsDefaultDemo } from './labels-default';\nimport { LabelsDemo } from './labels.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: LabelsDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [\n    LabelsWithBadgesDemo,\n    LabelsStatusDemo,\n    LabelsClickableDemo,\n    LabelsColorOptionsDemo,\n    LabelsDefaultDemo,\n    LabelsDemo,\n  ],\n  exports: [LabelsDemo],\n})\nexport class LabelsDemoModule {}\n"
    },
    {
      "name": "ListsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ListsCompactDemo"
            },
            {
              "name": "ListsDemo"
            },
            {
              "name": "ListsInCardsDemo"
            },
            {
              "name": "ListsMixedDemo"
            },
            {
              "name": "ListsOlDemo"
            },
            {
              "name": "ListsUlDemo"
            },
            {
              "name": "ListsUnstyledDemo"
            },
            {
              "name": "OldListsInCardsDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ListsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ListsDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/lists/lists.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { ListsUlDemo } from './lists-ul';\nimport { ListsOlDemo } from './lists-ol';\nimport { ListsUnstyledDemo } from './lists-unstyled';\nimport { ListsCompactDemo } from './lists-compact';\nimport { ListsMixedDemo } from './lists-mixed';\nimport { ListsInCardsDemo } from './lists-in-cards';\nimport { OldListsInCardsDemo } from './old-lists-in-cards';\nimport { ListsDemo } from './lists.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: ListsDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    ListsUlDemo,\n    ListsOlDemo,\n    ListsUnstyledDemo,\n    ListsCompactDemo,\n    ListsMixedDemo,\n    ListsInCardsDemo,\n    OldListsInCardsDemo,\n    ListsDemo,\n  ],\n  exports: [ListsDemo],\n})\nexport class ListsDemoModule {}\n"
    },
    {
      "name": "LoginDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "LoginDemo"
            },
            {
              "name": "LoginExampleDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "LoginDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "LoginDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/login/login.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { LoginDemo } from './login.demo';\nimport { LoginExampleDemo } from './login-example.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: LoginDemo }]),\n    UtilsModule,\n  ],\n  declarations: [LoginExampleDemo, LoginDemo],\n  exports: [LoginDemo],\n})\nexport class LoginDemoModule {}\n"
    },
    {
      "name": "ModalAngularNotClosableExampleModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ModalAngularNotClosableExampleComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ModalAngularNotClosableExampleComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ModalAngularNotClosableExampleModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/modal/modal-angular-not-closable.example.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ModalAngularNotClosableExampleComponent} from \"./modal-angular-not-closable.example.component\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule\n  ],\n  declarations: [ModalAngularNotClosableExampleComponent],\n  entryComponents: [ModalAngularNotClosableExampleComponent],\n  exports: [ModalAngularNotClosableExampleComponent],\n})\nexport class ModalAngularNotClosableExampleModule {}\n"
    },
    {
      "name": "ModalAngularShowExampleModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ModalAngularShowExampleComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ModalAngularShowExampleComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ModalAngularShowExampleModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/modal/modal-angular-show.example.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ModalAngularShowExampleComponent} from \"./modal-angular-show.example.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule\n  ],\n  declarations: [ModalAngularShowExampleComponent],\n  entryComponents: [ModalAngularShowExampleComponent],\n  exports: [ModalAngularShowExampleComponent],\n})\nexport class ModalAngularShowExampleModule {}\n"
    },
    {
      "name": "ModalAngularSizeExampleModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ModalAngularSizeExampleComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ModalAngularSizeExampleComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ModalAngularSizeExampleModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/modal/modal-angular-size.example.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {ModalAngularSizeExampleComponent} from \"./modal-angular-size.example.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule\n  ],\n  declarations: [ModalAngularSizeExampleComponent],\n  entryComponents: [ModalAngularSizeExampleComponent],\n  exports: [ModalAngularSizeExampleComponent],\n})\nexport class ModalAngularSizeExampleModule {}\n"
    },
    {
      "name": "ModalExamplesModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ModalAngularStaticBackdropDemo"
            },
            {
              "name": "ModalAnimationDemo"
            },
            {
              "name": "ModalAnimationDesignDemo"
            },
            {
              "name": "ModalBackdropDemo"
            },
            {
              "name": "ModalDemo"
            },
            {
              "name": "ModalSizeDesignDemo"
            },
            {
              "name": "ModalSizesDemo"
            },
            {
              "name": "ModalStaticDemo"
            },
            {
              "name": "ModalStyleDesignDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "ModalAngularNotClosableExampleModule"
            },
            {
              "name": "ModalAngularShowExampleModule"
            },
            {
              "name": "ModalAngularSizeExampleModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ModalDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ModalExamplesModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/modal/modal.examples.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ClarityModule, ClrModal} from '@clr/angular';\n\nimport { ModalStaticDemo } from './modal-static';\nimport { ModalStyleDesignDemo } from './modal-style-design';\nimport { ModalSizeDesignDemo } from './modal-size-design';\nimport { ModalAnimationDesignDemo } from './modal-animation-design';\nimport { ModalAngularNotClosableExampleComponent } from './modal-angular-not-closable.example.component';\nimport { ModalAngularShowExampleComponent } from './modal-angular-show.example.component';\nimport { ModalAngularSizeExampleComponent } from './modal-angular-size.example.component';\nimport { ModalAngularStaticBackdropDemo } from './modal-angular-static-backdrop';\nimport { ModalAnimationDemo } from './modal-animation';\nimport { ModalBackdropDemo } from './modal-backdrop';\nimport { ModalSizesDemo } from './modal-sizes';\nimport { ModalDemo } from './modal.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport {DocLibModule} from \"@vcd/ui-doc-lib\";\nimport {ModalAngularShowExampleModule} from \"./modal-angular-show.example.module\";\nimport {ModalAngularSizeExampleModule} from \"./modal-angular-size.example.module\";\nimport {ModalAngularNotClosableExampleModule} from \"./modal-angular-not-closable.example.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ModalDemo,\n        data: {\n          documentationEntry: {\n            component: ClrModal,\n            displayName: 'Clr Modal',\n            examples: [\n              {\n                component: ModalAngularShowExampleComponent,\n                title: 'Basic demo showing Clr Angular modal',\n              },\n              {\n                component: ModalAngularSizeExampleComponent,\n                title: 'Demo showing Modals of different sizes',\n              },\n              {\n                component: ModalAngularNotClosableExampleComponent,\n                title: 'Demo showing Modal that is not closable',\n              },\n              {\n                component: ModalAngularStaticBackdropDemo,\n                title: 'Demo showing Modal with static backdrop',\n              }\n            ],\n          }\n        }\n      }\n    ]),\n    UtilsModule,\n    DocLibModule,\n    ModalAngularShowExampleModule,\n    ModalAngularSizeExampleModule,\n    ModalAngularNotClosableExampleModule\n  ],\n  declarations: [\n    ModalStaticDemo,\n    ModalStyleDesignDemo,\n    ModalSizeDesignDemo,\n    ModalAnimationDesignDemo,\n    ModalAngularStaticBackdropDemo,\n    ModalAnimationDemo,\n    ModalBackdropDemo,\n    ModalSizesDemo,\n    ModalDemo,\n  ],\n  exports: [ModalDemo],\n})\nexport class ModalExamplesModule {}\n"
    },
    {
      "name": "NavDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "HeaderColorsDemo"
            },
            {
              "name": "HeaderLinksDemo"
            },
            {
              "name": "HeaderTypesDemo"
            },
            {
              "name": "HeaderTypesOldDemo"
            },
            {
              "name": "LayoutNoSidenavDemo"
            },
            {
              "name": "LayoutNoSubnavDemo"
            },
            {
              "name": "LayoutOnlyHeaderDemo"
            },
            {
              "name": "LayoutSidenavPrimaryDemo"
            },
            {
              "name": "LayoutSubnavPrimaryDemo"
            },
            {
              "name": "NavCodeInfoAlert"
            },
            {
              "name": "NavigationDemo"
            },
            {
              "name": "NavsDemo"
            },
            {
              "name": "ResponsiveNav1Demo"
            },
            {
              "name": "ResponsiveNav2Demo"
            },
            {
              "name": "SidenavDemo"
            },
            {
              "name": "SubNavDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "NavigationDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "NavDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/nav/nav.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { NavsDemo } from './navs';\nimport { SidenavDemo } from './sidenav';\nimport { HeaderColorsDemo } from './header-colors';\nimport { HeaderTypesDemo } from './header-types';\nimport { SubNavDemo } from './sub-nav';\nimport { HeaderTypesOldDemo } from './header-types-old';\nimport { ResponsiveNav1Demo } from './responsive-nav1';\nimport { ResponsiveNav2Demo } from './responsive-nav2';\nimport { HeaderLinksDemo } from './header-links';\nimport { NavigationDemo } from './navigation.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { LayoutNoSidenavDemo } from './layout-no-sidenav';\nimport { LayoutNoSubnavDemo } from './layout-no-subnav';\nimport { LayoutOnlyHeaderDemo } from './layout-only-header';\nimport { LayoutSidenavPrimaryDemo } from './layout-sidenav-primary';\nimport { LayoutSubnavPrimaryDemo } from './layout-subnav-primary';\nimport { NavCodeInfoAlert } from './nav-code-info-alert';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: NavigationDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [\n    NavsDemo,\n    SidenavDemo,\n    HeaderColorsDemo,\n    HeaderTypesDemo,\n    HeaderLinksDemo,\n    SubNavDemo,\n    HeaderTypesOldDemo,\n    ResponsiveNav1Demo,\n    ResponsiveNav2Demo,\n    NavigationDemo,\n    LayoutNoSidenavDemo,\n    LayoutNoSubnavDemo,\n    LayoutOnlyHeaderDemo,\n    LayoutSidenavPrimaryDemo,\n    LayoutSubnavPrimaryDemo,\n    NavCodeInfoAlert,\n  ],\n  exports: [NavigationDemo],\n})\nexport class NavDemoModule {}\n"
    },
    {
      "name": "NewsModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "BreakingChange"
            },
            {
              "name": "BugFix"
            },
            {
              "name": "NewComponent"
            },
            {
              "name": "NewsComponent"
            },
            {
              "name": "Release"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "NewsRoutingModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "NewsModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/news/news.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\n\nimport { UtilsModule } from '../utils/utils.module';\nimport { NewsRoutingModule } from './news-routing.module';\nimport { NewsComponent } from './news.component';\nimport { BreakingChange } from './counters/breaking-change.directive';\nimport { BugFix } from './counters/bug-fix.directive';\nimport { NewComponent } from './counters/new-component.directive';\nimport { Release } from './release/release.directive';\n\n@NgModule({\n  declarations: [NewsComponent, BreakingChange, BugFix, NewComponent, Release],\n  imports: [CommonModule, ClarityModule, UtilsModule, NewsRoutingModule],\n  providers: [],\n})\nexport class NewsModule {}\n"
    },
    {
      "name": "NewsRoutingModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "NewsRoutingModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/news/news-routing.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NewsComponent } from './news.component';\n// tslint:disable no-barrel-imports\n// import { AUTO_GENERATED_ROUTES } from '../../releases/final-template/auto-generated-routes';\n// tslint:enable no-barrel-imports\n\nconst newsRoutes: Routes = [\n  {\n    path: '',\n    component: NewsComponent,\n    data: {\n      bodyClass: 'layout-news',\n      browserTitle: 'Releases',\n    },\n    // children: AUTO_GENERATED_ROUTES,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(newsRoutes)],\n  exports: [RouterModule],\n})\nexport class NewsRoutingModule {}\n"
    },
    {
      "name": "PasswordDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "PasswordDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "PasswordDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "PasswordDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/password/password.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { PasswordDemo } from './password.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: PasswordDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [PasswordDemo],\n  exports: [PasswordDemo],\n})\nexport class PasswordDemoModule {}\n"
    },
    {
      "name": "ProgressBarsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "OldProgressBarCardsDemo"
            },
            {
              "name": "ProgressBarAnimationsDemo"
            },
            {
              "name": "ProgressBarCardsDemo"
            },
            {
              "name": "ProgressBarColorsDemo"
            },
            {
              "name": "ProgressBarComponentDemo"
            },
            {
              "name": "ProgressBarExamplesDemo"
            },
            {
              "name": "ProgressBarInlineCardsDemo"
            },
            {
              "name": "ProgressBarInlineDemo"
            },
            {
              "name": "ProgressBarLoopDemo"
            },
            {
              "name": "ProgressBarSidenavDemo"
            },
            {
              "name": "ProgressBarStaticCardsDemo"
            },
            {
              "name": "ProgressBarStaticDemo"
            },
            {
              "name": "ProgressBarStoryDemo"
            },
            {
              "name": "ProgressBarsDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ProgressBarsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ProgressBarsDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/progress-bars/progress-bars.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { ProgressBarExamplesDemo } from './progress-bar-examples';\nimport { ProgressBarColorsDemo } from './progress-bar-colors';\nimport { ProgressBarAnimationsDemo } from './progress-bar-animations';\nimport { ProgressBarCardsDemo } from './progress-bar-cards';\nimport { ProgressBarSidenavDemo } from './progress-bar-sidenav';\nimport { ProgressBarLoopDemo } from './progress-bar-loop';\nimport { ProgressBarStaticDemo } from './progress-bar-static';\nimport { ProgressBarStaticCardsDemo } from './progress-bar-static-cards';\nimport { ProgressBarInlineDemo } from './progress-bar-inline';\nimport { ProgressBarInlineCardsDemo } from './progress-bar-inline-cards';\nimport { OldProgressBarCardsDemo } from './old-progress-bar-cards';\nimport { ProgressBarsDemo } from './progress-bars.demo';\nimport { ProgressBarComponentDemo } from './progress-bar-component.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { ProgressBarStoryDemo } from './progress-bar-story';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: ProgressBarsDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    ProgressBarExamplesDemo,\n    ProgressBarColorsDemo,\n    ProgressBarAnimationsDemo,\n    ProgressBarCardsDemo,\n    ProgressBarSidenavDemo,\n    ProgressBarLoopDemo,\n    ProgressBarStaticDemo,\n    ProgressBarStaticCardsDemo,\n    ProgressBarInlineDemo,\n    ProgressBarInlineCardsDemo,\n    ProgressBarComponentDemo,\n    OldProgressBarCardsDemo,\n    ProgressBarStoryDemo,\n    ProgressBarsDemo,\n  ],\n  exports: [ProgressBarsDemo],\n})\nexport class ProgressBarsDemoModule {}\n"
    },
    {
      "name": "RadioDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "RadioDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "RadioDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "RadioDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/radio/radio.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { RadioDemo } from './radio.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: RadioDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [RadioDemo],\n  exports: [RadioDemo],\n})\nexport class RadioDemoModule {}\n"
    },
    {
      "name": "RangeDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "RangeBasicDemo"
            },
            {
              "name": "RangeDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "RangeDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "RangeDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/range/range.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\nimport { RangeDemo } from './range.demo';\nimport { RangeBasicDemo } from './range-basic.demo';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: RangeDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [RangeDemo, RangeBasicDemo],\n  exports: [RangeDemo],\n})\nexport class RangeDemoModule {}\n"
    },
    {
      "name": "SelectDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "SelectDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "SelectDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "SelectDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/select/select.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { SelectDemo } from './select.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: SelectDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [SelectDemo],\n  exports: [SelectDemo],\n})\nexport class SelectDemoModule {}\n"
    },
    {
      "name": "SidenavDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "SidenavDemo"
            },
            {
              "name": "SidenavExample"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "SidenavDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/sidenav/sidenav.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { SidenavDemo } from './sidenav.demo';\nimport { SidenavExample } from './sidenav';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: SidenavDemo }]),\n    UtilsModule,\n  ],\n  declarations: [SidenavDemo, SidenavExample],\n  exports: [SidenavDemo],\n})\nexport class SidenavDemoModule {}\n"
    },
    {
      "name": "SignpostDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "SignpostDemo"
            },
            {
              "name": "SignpostParagraphDemo"
            },
            {
              "name": "SignpostPositionsDemo"
            },
            {
              "name": "SignpostTriggersDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "SignpostDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/signposts/signpost.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\n\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\nimport { SignpostDemo } from './signpost.demo';\nimport { SignpostParagraphDemo } from './signpost-paragraph.demo';\nimport { SignpostPositionsDemo } from './signpost-positions.demo';\nimport { SignpostTriggersDemo } from './signpost-triggers.demo';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: SignpostDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [SignpostDemo, SignpostParagraphDemo, SignpostPositionsDemo, SignpostTriggersDemo],\n})\nexport class SignpostDemoModule {}\n"
    },
    {
      "name": "SpinnersDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "SpinnerComponentDemo"
            },
            {
              "name": "SpinnerDemo"
            },
            {
              "name": "SpinnerSizesDemo"
            },
            {
              "name": "SpinnerTypesDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "SpinnerDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "SpinnersDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/spinners/spinners.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { SpinnerSizesDemo } from './spinner-sizes';\nimport { SpinnerTypesDemo } from './spinner-types';\nimport { SpinnerDemo } from './spinner.demo';\nimport { SpinnerComponentDemo } from './spinner-component';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: SpinnerDemo }]),\n    UtilsModule,\n  ],\n  declarations: [SpinnerSizesDemo, SpinnerTypesDemo, SpinnerDemo, SpinnerComponentDemo],\n  exports: [SpinnerDemo],\n})\nexport class SpinnersDemoModule {}\n"
    },
    {
      "name": "StackViewDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "StackViewAngularBasicDemo"
            },
            {
              "name": "StackViewAngularLazyloadDemo"
            },
            {
              "name": "StackViewAngularModalEditDemo"
            },
            {
              "name": "StackViewDemo"
            },
            {
              "name": "StackViewStaticDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "StackViewDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "StackViewDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/stack-view/stack-view.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\nimport { StackViewAngularBasicDemo } from './stack-view-angular-basic';\nimport { StackViewAngularLazyloadDemo } from './stack-view-angular-lazyload';\nimport { StackViewAngularModalEditDemo } from './stack-view-angular-modal-edit';\nimport { StackViewStaticDemo } from './stack-view-static';\nimport { StackViewDemo } from './stack-view.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: StackViewDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [\n    StackViewAngularBasicDemo,\n    StackViewAngularLazyloadDemo,\n    StackViewAngularModalEditDemo,\n    StackViewStaticDemo,\n    StackViewDemo,\n  ],\n  exports: [StackViewDemo],\n})\nexport class StackViewDemoModule {}\n"
    },
    {
      "name": "StepperDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AngularStepperApiDemo"
            },
            {
              "name": "AngularStepperReactiveDemo"
            },
            {
              "name": "AngularStepperTemplateDemo"
            },
            {
              "name": "DesignStepperDemo"
            },
            {
              "name": "StepperDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "StepperDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/stepper/stepper.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { StepperDemo } from './stepper.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { DesignStepperDemo } from './design-stepper.demo';\nimport { AngularStepperReactiveDemo } from './angular-stepper-reactive.demo';\nimport { AngularStepperTemplateDemo } from './angular-stepper-template.demo';\nimport { AngularStepperApiDemo } from './angular-stepper-api.demo';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: StepperDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    StepperDemo,\n    DesignStepperDemo,\n    AngularStepperReactiveDemo,\n    AngularStepperTemplateDemo,\n    AngularStepperApiDemo,\n  ],\n})\nexport class StepperDemoModule {}\n"
    },
    {
      "name": "TablesDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TablesBasicDemo"
            },
            {
              "name": "TablesCompactDemo"
            },
            {
              "name": "TablesCompactNoborderDemo"
            },
            {
              "name": "TablesDemo"
            },
            {
              "name": "TablesLeftcellDemo"
            },
            {
              "name": "TablesMultilineDemo"
            },
            {
              "name": "TablesNoborderDemo"
            },
            {
              "name": "TablesVerticalDemo"
            },
            {
              "name": "TablesVerticalNoborderCompactDemo"
            },
            {
              "name": "TablesWidthDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TablesDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "TablesDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/tables/tables.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { TablesBasicDemo } from './tables-basic';\nimport { TablesLeftcellDemo } from './tables-leftcell';\nimport { TablesMultilineDemo } from './tables-multiline';\nimport { TablesNoborderDemo } from './tables-noborder';\nimport { TablesCompactDemo } from './tables-compact';\nimport { TablesCompactNoborderDemo } from './tables-compact-noborder';\nimport { TablesVerticalDemo } from './tables-vertical';\nimport { TablesVerticalNoborderCompactDemo } from './tables-vertical-noborder-compact';\nimport { TablesWidthDemo } from './tables-width';\nimport { TablesDemo } from './tables.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: TablesDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    TablesBasicDemo,\n    TablesLeftcellDemo,\n    TablesMultilineDemo,\n    TablesNoborderDemo,\n    TablesCompactDemo,\n    TablesCompactNoborderDemo,\n    TablesVerticalDemo,\n    TablesVerticalNoborderCompactDemo,\n    TablesWidthDemo,\n    TablesDemo,\n  ],\n  exports: [TablesDemo],\n})\nexport class TablesDemoModule {}\n"
    },
    {
      "name": "TabsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TabsAngularDemo"
            },
            {
              "name": "TabsAngularOverflowDemo"
            },
            {
              "name": "TabsAngularSimpleDemo"
            },
            {
              "name": "TabsAngularVerticalDemo"
            },
            {
              "name": "TabsDemo"
            },
            {
              "name": "TabsStaticDemo"
            },
            {
              "name": "TabsStaticVerticalDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TabsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "TabsDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/tabs/tabs.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { TabsStaticDemo } from './tabs-static';\nimport { TabsStaticVerticalDemo } from './tabs-static-vertical';\nimport { TabsAngularDemo } from './tabs-angular';\nimport { TabsAngularSimpleDemo } from './tabs-angular-simple';\nimport { TabsAngularVerticalDemo } from './tabs-angular-vertical';\nimport { TabsDemo } from './tabs.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { TabsAngularOverflowDemo } from './tabs-angular-overflow';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: TabsDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [\n    TabsStaticDemo,\n    TabsStaticVerticalDemo,\n    TabsAngularDemo,\n    TabsAngularSimpleDemo,\n    TabsAngularVerticalDemo,\n    TabsAngularOverflowDemo,\n    TabsDemo,\n  ],\n  exports: [TabsDemo],\n})\nexport class TabsDemoModule {}\n"
    },
    {
      "name": "TextareaDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TextareaDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TextareaDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "TextareaDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/textarea/textarea.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { TextareaDemo } from './textarea.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: TextareaDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [TextareaDemo],\n  exports: [TextareaDemo],\n})\nexport class TextareaDemoModule {}\n"
    },
    {
      "name": "ThemesDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ThemesDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "ThemesDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/themes/themes.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\n\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\nimport { ThemesDemo } from './themes.demo';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: ThemesDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [ThemesDemo],\n})\nexport class ThemesDemoModule {}\n"
    },
    {
      "name": "TimelineDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TimelineBodyDemo"
            },
            {
              "name": "TimelineContainerDemo"
            },
            {
              "name": "TimelineDemo"
            },
            {
              "name": "TimelineFullDemo"
            },
            {
              "name": "TimelineStepDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TimelineDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "TimelineDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/timeline/timeline.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { TimelineDemo } from './timeline.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { TimelineFullDemo } from './timeline-full-demo.component';\nimport { TimelineContainerDemo } from './timeline-container-demo';\nimport { TimelineBodyDemo } from './timeline-body-demo';\nimport { TimelineStepDemo } from './timeline-step-demo';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: TimelineDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [TimelineDemo, TimelineFullDemo, TimelineStepDemo, TimelineContainerDemo, TimelineBodyDemo],\n  exports: [TimelineDemo],\n})\nexport class TimelineDemoModule {}\n"
    },
    {
      "name": "TogglesDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TogglesDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TogglesDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "TogglesDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/toggles/toggles.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { TogglesDemo } from './toggles.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: TogglesDemo }]),\n    UtilsModule,\n  ],\n  declarations: [TogglesDemo],\n  exports: [TogglesDemo],\n})\nexport class TogglesDemoModule {}\n"
    },
    {
      "name": "TooltipsDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TooltipsAngularDemo"
            },
            {
              "name": "TooltipsButtonsDemo"
            },
            {
              "name": "TooltipsDemo"
            },
            {
              "name": "TooltipsDirectionsDemo"
            },
            {
              "name": "TooltipsIconDemo"
            },
            {
              "name": "TooltipsSizesDemo"
            },
            {
              "name": "TooltipsTextDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TooltipsDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "TooltipsDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/tooltips/tooltips.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { TooltipsSizesDemo } from './tooltips-sizes';\nimport { TooltipsDirectionsDemo } from './tooltips-directions';\nimport { TooltipsIconDemo } from './tooltips-icons';\nimport { TooltipsTextDemo } from './tooltips-text';\nimport { TooltipsButtonsDemo } from './tooltips-buttons';\nimport { TooltipsAngularDemo } from './tooltips-angular';\nimport { TooltipsDemo } from './tooltips.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: TooltipsDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [\n    TooltipsSizesDemo,\n    TooltipsDirectionsDemo,\n    TooltipsIconDemo,\n    TooltipsTextDemo,\n    TooltipsButtonsDemo,\n    TooltipsAngularDemo,\n    TooltipsDemo,\n  ],\n  exports: [TooltipsDemo],\n})\nexport class TooltipsDemoModule {}\n"
    },
    {
      "name": "TreeDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "BooleanSelectionTreeDemo"
            },
            {
              "name": "GroceryItemsComponent"
            },
            {
              "name": "LazyLoadingRecursiveTreeDemo"
            },
            {
              "name": "LazyLoadingSelectionTreeDemo"
            },
            {
              "name": "LazyLoadingTreeDemo"
            },
            {
              "name": "RecursiveTreeDemo"
            },
            {
              "name": "SelectionTreeDemo"
            },
            {
              "name": "SmallSelectionTreeDemo"
            },
            {
              "name": "TreeBasicDMDemo"
            },
            {
              "name": "TreeBasicDemo"
            },
            {
              "name": "TreeNodeLabelChangeOnExpandDemo"
            },
            {
              "name": "TreeNodeRoutingDemo"
            },
            {
              "name": "TreeViewDemo"
            },
            {
              "name": "TreeViewDynamicDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TreeViewDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "TreeDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/tree-view/tree-view.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { TreeBasicDemo } from './basic-tree/tree-basic';\nimport { BooleanSelectionTreeDemo } from './boolean-selection-tree/boolean-selection-tree';\nimport { TreeViewDynamicDemo } from './tree-view-dynamic/tree-view-dynamic';\nimport { LazyLoadingTreeDemo } from './lazy-loading-tree/lazy-loading-tree';\nimport { TreeNodeLabelChangeOnExpandDemo } from './label-change-on-expand/label-change-on-expand';\nimport { SelectionTreeDemo } from './selection-tree/selection-tree';\nimport { TreeNodeRoutingDemo } from './tree-node-routing/tree-node-routing';\nimport { SmallSelectionTreeDemo } from './small-selection-tree/small-selection-tree';\nimport { TreeBasicDMDemo } from './basic-tree-DM/tree-basic-DM';\nimport { RecursiveTreeDemo } from './recursive-tree/recursive-tree';\nimport { LazyLoadingSelectionTreeDemo } from './lazy-loading-selection-tree/lazy-loading-selection-tree';\nimport { GroceryItemsComponent } from './lazy-loading-selection-tree/grocery-items';\nimport { LazyLoadingRecursiveTreeDemo } from './lazy-loading-recursive-tree/lazy-loading-recursive-tree';\n\nimport { TreeViewDemo } from './tree-view.demo';\nimport { RouterModule } from '@angular/router';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    RouterModule.forChild([{ path: '', component: TreeViewDemo }]),\n    DocWrapperModule,\n    UtilsModule,\n  ],\n  declarations: [\n    TreeBasicDemo,\n    TreeBasicDMDemo,\n    BooleanSelectionTreeDemo,\n    TreeViewDynamicDemo,\n    LazyLoadingTreeDemo,\n    TreeNodeLabelChangeOnExpandDemo,\n    SelectionTreeDemo,\n    TreeNodeRoutingDemo,\n    SmallSelectionTreeDemo,\n    TreeViewDemo,\n    RecursiveTreeDemo,\n    LazyLoadingSelectionTreeDemo,\n    GroceryItemsComponent,\n    LazyLoadingRecursiveTreeDemo,\n  ],\n  exports: [TreeViewDemo],\n})\nexport class TreeDemoModule {}\n"
    },
    {
      "name": "TypographyDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TypographyDemo"
            },
            {
              "name": "TypographyFontCharTestDemo"
            },
            {
              "name": "TypographyFontWeightDemo"
            },
            {
              "name": "TypographyHeadersDemo"
            },
            {
              "name": "TypographyLinksDemo"
            },
            {
              "name": "TypographyTextDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TypographyDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "TypographyDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/typography/typography.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { TypographyFontWeightDemo } from './typography-font-weight';\nimport { TypographyHeadersDemo } from './typography-headers';\nimport { TypographyTextDemo } from './typography-text';\nimport { TypographyLinksDemo } from './typography-links';\nimport { TypographyFontCharTestDemo } from './typography-font-char-test';\nimport { TypographyDemo } from './typography.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: TypographyDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    TypographyFontWeightDemo,\n    TypographyHeadersDemo,\n    TypographyTextDemo,\n    TypographyLinksDemo,\n    TypographyFontCharTestDemo,\n    TypographyDemo,\n  ],\n  exports: [TypographyDemo],\n})\nexport class TypographyDemoModule {}\n"
    },
    {
      "name": "UtilsModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CodeHighlight"
            },
            {
              "name": "CodeSnippet"
            },
            {
              "name": "HashListener"
            },
            {
              "name": "ScrollSpy"
            },
            {
              "name": "SketchTemplateLinkDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CodeHighlight"
            },
            {
              "name": "CodeSnippet"
            },
            {
              "name": "HashListener"
            },
            {
              "name": "ScrollSpy"
            },
            {
              "name": "SketchTemplateLinkDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "UtilsModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/utils/utils.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\n\nimport { SketchTemplateLinkDirective } from './sketch-template-link.directive';\nimport { HashListener } from './hash-listener.directive';\nimport { ScrollSpy } from './scrollspy.directive';\nimport { CodeSnippet } from './code-snippet';\nimport { CodeHighlight } from './code-highlight';\n// import { ExternalLinkDirective } from './external-link.directive';\n\n@NgModule({\n  imports: [CommonModule, ClarityModule],\n  declarations: [\n    SketchTemplateLinkDirective,\n    HashListener,\n    ScrollSpy,\n    CodeSnippet,\n    CodeHighlight,\n    // Not working on production, removing for now.\n    // ExternalLinkDirective,\n  ],\n  exports: [SketchTemplateLinkDirective, HashListener, ScrollSpy, CodeSnippet, CodeHighlight /*ExternalLinkDirective*/],\n})\nexport class UtilsModule {}\n"
    },
    {
      "name": "VerticalNavDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "BasicNavDemo"
            },
            {
              "name": "BasicNavStructureDemo"
            },
            {
              "name": "BasicNavUsage"
            },
            {
              "name": "CharizardDemo"
            },
            {
              "name": "CharmanderDemo"
            },
            {
              "name": "CollapsibleNavDemo"
            },
            {
              "name": "CollapsibleVerticalNavDemo"
            },
            {
              "name": "ElectricPokemonDemo"
            },
            {
              "name": "FightingPokemonDemo"
            },
            {
              "name": "FirePokemonDemo"
            },
            {
              "name": "GrassPokemonDemo"
            },
            {
              "name": "IconLinksDemo"
            },
            {
              "name": "JigglypuffDemo"
            },
            {
              "name": "JustNavsDemo"
            },
            {
              "name": "LazyLoadingNavGroupsVerticalNavDemo"
            },
            {
              "name": "NavGroupsDemo"
            },
            {
              "name": "NavGroupsParentLinksVerticalNavDemo"
            },
            {
              "name": "NoLazyLoadingVerticalNavDemo"
            },
            {
              "name": "NormalPokemonDemo"
            },
            {
              "name": "PidgeyDemo"
            },
            {
              "name": "PikachuDemo"
            },
            {
              "name": "PoisonPokemonDemo"
            },
            {
              "name": "PokedexDemo"
            },
            {
              "name": "PokemonDemo"
            },
            {
              "name": "ProjectPokemonDemo"
            },
            {
              "name": "RaichuDemo"
            },
            {
              "name": "SnorlaxDemo"
            },
            {
              "name": "VerticalNavDemo"
            },
            {
              "name": "VerticalNavGroupsDemo"
            },
            {
              "name": "VerticalNavIconsDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "VerticalNavDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "VerticalNavDemoModule",
      "path":
        "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/vertical-nav/vertical-nav.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { VerticalNavDemo } from './vertical-nav.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\nimport { BasicNavDemo } from './basic-nav/basic-nav';\nimport { BasicNavUsage } from './basic-nav-usage/basic-nav-usage';\nimport { JustNavsDemo } from './just-navs/just-navs';\nimport { VerticalNavIconsDemo } from './icons/icons';\nimport { NavGroupsDemo } from './nav-groups/nav-groups';\nimport { CollapsibleVerticalNavDemo } from './collapsible-nav/collapsible-nav';\nimport { CharmanderDemo } from './routes/pokemon/charmander';\nimport { JigglypuffDemo } from './routes/pokemon/jigglypuff';\nimport { PikachuDemo } from './routes/pokemon/pikachu';\nimport { RaichuDemo } from './routes/pokemon/raichu';\nimport { SnorlaxDemo } from './routes/pokemon/snorlax';\nimport { BasicNavStructureDemo } from './routes/basic-structure/basic-structure';\nimport { ProjectPokemonDemo } from './routes/project-pokemon/project-pokemon';\nimport { PokedexDemo } from './routes/credits/pokedex';\nimport { PokemonDemo } from './routes/credits/pokemon';\nimport { IconLinksDemo } from './routes/icons/icons';\nimport { ElectricPokemonDemo } from './routes/pokemon-types/electric';\nimport { NormalPokemonDemo } from './routes/pokemon-types/normal';\nimport { GrassPokemonDemo } from './routes/pokemon-types/grass';\nimport { PoisonPokemonDemo } from './routes/pokemon-types/poison';\nimport { FightingPokemonDemo } from './routes/pokemon-types/fighting';\nimport { CollapsibleNavDemo } from './routes/collapsible-nav/collapsible-nav';\nimport { CharizardDemo } from './routes/pokemon/charizard';\nimport { PidgeyDemo } from './routes/pokemon/pidgey';\nimport { FirePokemonDemo } from './routes/pokemon-types/fire';\nimport { NavGroupsParentLinksVerticalNavDemo } from './routes/nav-groups-with-parent-links/nav-groups';\nimport { NoLazyLoadingVerticalNavDemo } from './routes/no-lazy-loading-with-parent-links/no-lazy-loading';\nimport { LazyLoadingNavGroupsVerticalNavDemo } from './routes/lazy-loading-nav-groups/lazy-loading-nav-groups';\nimport { VerticalNavGroupsDemo } from './routes/nav-groups/nav-groups';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerticalNavDemo,\n    children: [\n      {\n        path: '',\n        redirectTo: 'basic-structure',\n        pathMatch: 'full',\n      },\n      {\n        path: 'basic-structure',\n        component: BasicNavStructureDemo,\n        children: [\n          {\n            path: '',\n            redirectTo: 'project-pokemon',\n            pathMatch: 'full',\n          },\n          {\n            path: 'project-pokemon',\n            component: ProjectPokemonDemo,\n          },\n          {\n            path: 'charmander',\n            component: CharmanderDemo,\n          },\n          {\n            path: 'jigglypuff',\n            component: JigglypuffDemo,\n          },\n          {\n            path: 'pikachu',\n            component: PikachuDemo,\n          },\n          {\n            path: 'raichu',\n            component: RaichuDemo,\n          },\n          {\n            path: 'snorlax',\n            component: SnorlaxDemo,\n          },\n          {\n            path: 'credit',\n            component: PokedexDemo,\n          },\n        ],\n        data: {\n          demoName: 'Basic Structure',\n        },\n      },\n      {\n        path: 'icon-links',\n        component: IconLinksDemo,\n        children: [\n          {\n            path: '',\n            redirectTo: 'normal',\n            pathMatch: 'full',\n          },\n          {\n            path: 'normal',\n            component: NormalPokemonDemo,\n          },\n          {\n            path: 'electric',\n            component: ElectricPokemonDemo,\n          },\n          {\n            path: 'poison',\n            component: PoisonPokemonDemo,\n          },\n          {\n            path: 'grass',\n            component: GrassPokemonDemo,\n          },\n          {\n            path: 'fighting',\n            component: FightingPokemonDemo,\n          },\n          {\n            path: 'credit',\n            component: PokedexDemo,\n          },\n        ],\n        data: {\n          demoName: 'Icon Links',\n        },\n      },\n      {\n        path: 'collapsible-nav',\n        component: CollapsibleNavDemo,\n        children: [\n          {\n            path: '',\n            redirectTo: 'normal',\n            pathMatch: 'full',\n          },\n          {\n            path: 'normal',\n            component: NormalPokemonDemo,\n          },\n          {\n            path: 'electric',\n            component: ElectricPokemonDemo,\n          },\n          {\n            path: 'poison',\n            component: PoisonPokemonDemo,\n          },\n          {\n            path: 'grass',\n            component: GrassPokemonDemo,\n          },\n          {\n            path: 'fighting',\n            component: FightingPokemonDemo,\n          },\n          {\n            path: 'credit',\n            component: PokedexDemo,\n          },\n        ],\n        data: {\n          demoName: 'Collapsible Vertical Nav',\n        },\n      },\n      {\n        path: 'nav-groups',\n        component: VerticalNavGroupsDemo,\n        children: [\n          {\n            path: '',\n            redirectTo: 'normal/pidgey',\n            pathMatch: 'full',\n          },\n          {\n            path: 'normal/snorlax',\n            component: SnorlaxDemo,\n          },\n          {\n            path: 'normal/pidgey',\n            component: PidgeyDemo,\n          },\n          {\n            path: 'electric/pikachu',\n            component: PikachuDemo,\n          },\n          {\n            path: 'electric/raichu',\n            component: RaichuDemo,\n          },\n          {\n            path: 'fire/charmander',\n            component: CharmanderDemo,\n          },\n          {\n            path: 'fire/charizard',\n            component: CharizardDemo,\n          },\n          {\n            path: 'credit',\n            component: PokedexDemo,\n          },\n        ],\n        data: {\n          demoName: 'Vertical Nav Groups',\n        },\n      },\n      {\n        path: 'lazy-loading-nav-links',\n        component: LazyLoadingNavGroupsVerticalNavDemo,\n        children: [\n          {\n            path: '',\n            redirectTo: 'normal/pidgey',\n            pathMatch: 'full',\n          },\n          {\n            path: 'normal',\n            component: PidgeyDemo,\n          },\n          {\n            path: 'normal/snorlax',\n            component: SnorlaxDemo,\n          },\n          {\n            path: 'normal/pidgey',\n            component: PidgeyDemo,\n          },\n          {\n            path: 'electric',\n            component: PikachuDemo,\n          },\n          {\n            path: 'electric/pikachu',\n            component: PikachuDemo,\n          },\n          {\n            path: 'electric/raichu',\n            component: RaichuDemo,\n          },\n          {\n            path: 'fire',\n            component: CharmanderDemo,\n          },\n          {\n            path: 'fire/charmander',\n            component: CharmanderDemo,\n          },\n          {\n            path: 'fire/charizard',\n            component: CharizardDemo,\n          },\n          {\n            path: 'credit',\n            component: PokedexDemo,\n          },\n        ],\n        data: {\n          demoName: 'Lazy Loading Links In Nav Groups',\n        },\n      },\n      /*,\n                // Commented because these demos are deprecated (Nav Groups with Parent Links)\n                // Keeping them commented just in case we decide to add them back.\n                {\n                    path: \"nav-groups\",\n                    component: NavGroupsParentLinksVerticalNavDemo,\n                    children: [\n                        {\n                            path: \"\",\n                            redirectTo: \"normal\"\n                        },\n                        {\n                            path: \"normal\",\n                            component: NormalPokemonDemo\n                        },\n                        {\n                            path: \"normal/snorlax\",\n                            component: SnorlaxDemo\n                        },\n                        {\n                            path: \"normal/pidgey\",\n                            component: PidgeyDemo\n                        },\n                        {\n                            path: \"electric\",\n                            component: ElectricPokemonDemo\n                        },\n                        {\n                            path: \"electric/pikachu\",\n                            component: PikachuDemo\n                        },\n                        {\n                            path: \"electric/raichu\",\n                            component: RaichuDemo\n                        },\n                        {\n                            path: \"fire\",\n                            component: FirePokemonDemo\n                        },\n                        {\n                            path: \"fire/charmander\",\n                            component: CharmanderDemo\n                        },\n                        {\n                            path: \"fire/charizard\",\n                            component: CharizardDemo\n                        },\n                        {\n                            path: \"credit\",\n                            component: PokedexDemo\n                        }\n                    ],\n                    data: {\n                        demoName: \"Nav Groups\"\n                    }\n                },\n                {\n                    path: \"no-lazy-loading\",\n                    component: NoLazyLoadingVerticalNavDemo,\n                    children: [\n                        {\n                            path: \"\",\n                            redirectTo: \"normal\"\n                        },\n                        {\n                            path: \"normal\",\n                            component: NormalPokemonDemo\n                        },\n                        {\n                            path: \"snorlax\",\n                            component: SnorlaxDemo\n                        },\n                        {\n                            path: \"pidgey\",\n                            component: PidgeyDemo\n                        },\n                        {\n                            path: \"electric\",\n                            component: ElectricPokemonDemo\n                        },\n                        {\n                            path: \"pikachu\",\n                            component: PikachuDemo\n                        },\n                        {\n                            path: \"raichu\",\n                            component: RaichuDemo\n                        },\n                        {\n                            path: \"fire\",\n                            component: FirePokemonDemo\n                        },\n                        {\n                            path: \"charmander\",\n                            component: CharmanderDemo\n                        },\n                        {\n                            path: \"charizard\",\n                            component: CharizardDemo\n                        },\n                        {\n                            path: \"credit\",\n                            component: PokedexDemo\n                        }\n                    ],\n                    data: {\n                        demoName: \"Unstructured Routes\"\n                    }\n                }\n                */\n    ],\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, ClarityModule, DocWrapperModule, RouterModule.forChild(routes), UtilsModule],\n  declarations: [\n    ProjectPokemonDemo,\n    VerticalNavDemo,\n    BasicNavDemo,\n    BasicNavUsage,\n    JustNavsDemo,\n    VerticalNavIconsDemo,\n    NavGroupsDemo,\n    CollapsibleVerticalNavDemo,\n    BasicNavStructureDemo,\n    IconLinksDemo,\n    CollapsibleNavDemo,\n    NavGroupsParentLinksVerticalNavDemo,\n    NoLazyLoadingVerticalNavDemo,\n    LazyLoadingNavGroupsVerticalNavDemo,\n    VerticalNavGroupsDemo,\n\n    CharmanderDemo,\n    JigglypuffDemo,\n    PikachuDemo,\n    RaichuDemo,\n    SnorlaxDemo,\n    PidgeyDemo,\n    CharizardDemo,\n    PokedexDemo,\n    PokemonDemo,\n    ElectricPokemonDemo,\n    NormalPokemonDemo,\n    GrassPokemonDemo,\n    PoisonPokemonDemo,\n    FightingPokemonDemo,\n    FirePokemonDemo,\n  ],\n  exports: [VerticalNavDemo],\n})\nexport class VerticalNavDemoModule {}\n"
    },
    {
      "name": "WizardDemoModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "WizardAltCancelDemo"
            },
            {
              "name": "WizardAltNextDemo"
            },
            {
              "name": "WizardAsyncCompletion"
            },
            {
              "name": "WizardAsyncValidation"
            },
            {
              "name": "WizardBasic"
            },
            {
              "name": "WizardCustomButtonsDemo"
            },
            {
              "name": "WizardDefaultButtonsDemo"
            },
            {
              "name": "WizardDemo"
            },
            {
              "name": "WizardDesignDemo"
            },
            {
              "name": "WizardDesignSizeDemo"
            },
            {
              "name": "WizardForceForwardDemo"
            },
            {
              "name": "WizardFormValidation"
            },
            {
              "name": "WizardJumpToDemo"
            },
            {
              "name": "WizardNestedDirectiveDemo"
            },
            {
              "name": "WizardNoCancel"
            },
            {
              "name": "WizardNotClosable"
            },
            {
              "name": "WizardResetDemo"
            },
            {
              "name": "WizardSimple"
            },
            {
              "name": "WizardStaticDemo"
            },
            {
              "name": "WizardStopNavigation"
            },
            {
              "name": "WizardTitlesDemo"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DocWrapperModule"
            },
            {
              "name": "UtilsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "WizardDemo"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ],
      "className": "WizardDemoModule",
      "path": "/Users/jmendes/git/github/clarity/src/website/src/app/documentation/demos/wizard/wizard.demo.module.ts",
      "sourceCode":
        "/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClarityModule } from '@clr/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { WizardStaticDemo } from './wizard-static.demo';\nimport { WizardSimple } from './wizard-simple.demo';\nimport { WizardBasic } from './wizard-basic.demo';\nimport { WizardFormValidation } from './wizard-form-validation.demo';\nimport { WizardAsyncValidation } from './wizard-async-validation.demo';\nimport { WizardNotClosable } from './wizard-not-closable.demo';\nimport { WizardNestedDirectiveDemo } from './wizard-nested-directives.demo';\nimport { WizardTitlesDemo } from './wizard-titles.demo';\nimport { WizardDefaultButtonsDemo } from './wizard-buttons.demo';\nimport { WizardCustomButtonsDemo } from './wizard-custom-buttons.demo';\nimport { WizardResetDemo } from './wizard-reset.demo';\nimport { WizardAltCancelDemo } from './wizard-alt-cancel.demo';\nimport { WizardAltNextDemo } from './wizard-alt-next.demo';\nimport { WizardNoCancel } from './wizard-no-cancel.demo';\nimport { WizardJumpToDemo } from './wizard-jump-to.demo';\nimport { WizardDesignDemo } from './wizard-design.demo';\nimport { WizardDesignSizeDemo } from './wizard-design-size.demo';\nimport { WizardAsyncCompletion } from './wizard-async-completion.demo';\nimport { WizardForceForwardDemo } from './wizard-force-forward.demo';\nimport { WizardStopNavigation } from './wizard-stop-navigation.demo';\nimport { WizardDemo } from './wizard.demo';\nimport { DocWrapperModule } from '../_doc-wrapper/doc-wrapper.module';\nimport { RouterModule } from '@angular/router';\nimport { UtilsModule } from '../../../utils/utils.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    DocWrapperModule,\n    RouterModule.forChild([{ path: '', component: WizardDemo }]),\n    UtilsModule,\n  ],\n  declarations: [\n    WizardBasic,\n    WizardSimple,\n    WizardFormValidation,\n    WizardAsyncValidation,\n    WizardStaticDemo,\n    WizardNotClosable,\n    WizardNestedDirectiveDemo,\n    WizardTitlesDemo,\n    WizardDefaultButtonsDemo,\n    WizardCustomButtonsDemo,\n    WizardResetDemo,\n    WizardAltCancelDemo,\n    WizardAltNextDemo,\n    WizardNoCancel,\n    WizardJumpToDemo,\n    WizardAsyncCompletion,\n    WizardForceForwardDemo,\n    WizardDemo,\n    WizardDesignDemo,\n    WizardDesignSizeDemo,\n    WizardStopNavigation,\n  ],\n  exports: [WizardDemo],\n})\nexport class WizardDemoModule {}\n"
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "ACCESSIBILITY_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/button-group.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-primary btn-icon\">\n    <button class=\"btn\">\n        <clr-icon shape=\"check\" title=\"Check\"></clr-icon>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"home\" title=\"home\"></clr-icon>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"user\" title=\"user\"></clr-icon>\n    </button>\n</div>\n`"
      },
      {
        "name": "ADD_CUSTOM_ICON",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "",
        "defaultValue": "`ClarityIcons.add({\"my-custom-icon\": \"<svg ... >[your SVG code goes here]</svg>\"});`"
      },
      {
        "name": "ADD_CUSTOM_ICON_RESULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "",
        "defaultValue": "`<clr-icon shape=\"my-custom-icon\" size=\"24\"></clr-icon>`"
      },
      {
        "name": "ALIAS_ICON",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "",
        "defaultValue": "`ClarityIcons.alias({\"bell\": [\"alarm\", \"oh-noehz\"]});`"
      },
      {
        "name": "ALIAS_ICON_RESULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-icon shape=\"bell\"></clr-icon>\n<clr-icon shape=\"alarm\"></clr-icon>\n<clr-icon shape=\"oh-noehz\"></clr-icon>`"
      },
      {
        "name": "ALL_ALIASES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
        "type": "object",
        "defaultValue":
          "{\n  house: 'home',\n  settings: 'cog',\n  success: 'check',\n  close: 'times',\n  warning: 'exclamation-triangle',\n  error: 'exclamation-circle',\n  info: 'info-circle',\n  menu: 'bars',\n  avatar: 'user',\n  caret: 'angle',\n  directory: 'folder',\n  notification: 'bell',\n  edit: 'pencil',\n  'note-edit': 'note',\n  group: 'users',\n  collapse: 'angle-double',\n  document: 'file',\n  add: 'plus',\n  cancel: 'ban',\n  remove: 'times-circle',\n  'eye-show': 'eye',\n  'sign-in': 'login',\n  'sign-out': 'logout',\n  lightning: 'bolt',\n  'flow-chart': 'organization',\n  alert: 'bubble-exclamation',\n  pinned: 'pinboard',\n  favorite: 'star',\n  email: 'envelope',\n  date: 'calendar',\n  analytics: 'line-chart',\n  server: 'host',\n  command: 'terminal',\n  'mobile-phone': 'mobile',\n  license: 'certificate',\n  disconnected: 'no-wifi',\n  receiver: 'phone-handset',\n  design: 'ruler-pencil',\n  plane: 'airplane',\n  auto: 'car',\n}"
      },
      {
        "name": "ALL_GROCERIES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "[]",
        "defaultValue":
          "[\n  new GroupImpl('Dairy', ClrSelectedState.INDETERMINATE, [\n    {\n      name: 'Milk',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Cheese',\n      selected: ClrSelectedState.SELECTED,\n    },\n  ]),\n  new GroupImpl('Vegetables', ClrSelectedState.UNSELECTED, [\n    {\n      name: 'Carrots',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Potatoes',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Beans',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n  ]),\n]"
      },
      {
        "name": "API_IMPORTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "",
        "defaultValue": "`\nimport { ClarityIcons } from '@clr/icons';\n`"
      },
      {
        "name": "basicExample",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n    <clr-range-container>\n        <input type=\"range\" clrRange name=\"two\" [(ngModel)]=\"input.one\" />\n    </clr-range-container>\n</form>\n`"
      },
      {
        "name": "basicHTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n    <clr-datalist-container>\n        <input clrDatalistInput [(ngModel)]=\"vertical\" placeholder=\"No label\" name=\"Option\"/>\n        <datalist>\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n    </clr-datalist-container>\n</form>\n`"
      },
      {
        "name": "basicTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({\n  selector: 'basic-datalist',\n  templateUrl: './basic.html',\n})\nexport class DatalistBasicDemo {\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  vertical = '';\n}\n`"
      },
      {
        "name": "BEGINNING",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "",
        "defaultValue": "new Date(2014, 0, 1).getTime()"
      },
      {
        "name": "blinkEssentialShapes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons.component.ts",
        "type": "",
        "defaultValue": "essentialShapesNames"
      },
      {
        "name": "body",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/timeline/timeline-body-demo.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-timeline-step-body\">\n  <span class=\"clr-timeline-step-title\">Body Title</span>\n  <span class=\"clr-timeline-step-description\">Body Description.</span>\n</div>\n`"
      },
      {
        "name": "CHANGE_EVENT_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "",
        "defaultValue":
          "`\n<ng-template clrIfDetail let-detail (clrIfDetailChange)=\"onDetailOpen($event)\">\n  <clr-dg-detail>\n    <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    <clr-dg-detail-body>\n      <-- ... -->\n    </clr-dg-detail-body>\n  </clr-dg-detail>\n</ng-template>\n`"
      },
      {
        "name": "CHECK_ICON_TEMPLATE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "",
        "defaultValue":
          "`\n<svg xmlns:xlink=\"https://www.w3.org/1999/xlink\" xmlns=\"https://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 36 36\" version=\"1.1\">\n    <title>check</title>\n    <path d=\"M13.72,27.69,3.29,17.27a1,1,0,0,1,1.41-1.41l9,9L31.29,7.29a1,1,0,0,1,1.41,1.41Z\" class=\"clr-i-outline clr-i-outline-path-1\"></path>\n</svg>\n`"
      },
      {
        "name": "CLARITY_PALETTES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/color/color-palette/color-palettes.ts",
        "type": "[]",
        "defaultValue":
          "[\n  {\n    name: 'Neutral',\n    weights: [\n      { weight: 0, hsl: 'hsl(198, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 50, hsl: 'hsl(198, 0%, 98%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 100, hsl: 'hsl(198, 0%, 95%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 200, hsl: 'hsl(198, 0%, 91%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 300, hsl: 'hsl(198, 0%, 87%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 400, hsl: 'hsl(198, 0%, 80%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 500, hsl: 'hsl(198, 0%, 70%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 600, hsl: 'hsl(198, 0%, 55%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 700, hsl: 'hsl(198, 0%, 40%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 800, hsl: 'hsl(198, 0%, 27%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(198, 0%, 20%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 1000, hsl: 'hsl(198, 0%, 0%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n    ],\n  },\n  {\n    name: 'Action',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(198, 83%, 94%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 100, hsl: 'hsl(198, 81%, 88%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 200, hsl: 'hsl(198, 78%, 78%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(198, 69%, 69%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 400, hsl: 'hsl(198, 66%, 57%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(198, 80%, 46%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 600, hsl: 'hsl(198, 100%, 38%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 700, hsl: 'hsl(198, 100%, 34%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 800, hsl: 'hsl(198, 100%, 27%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 900, hsl: 'hsl(198, 100%, 21%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(198, 100%, 15%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n    ],\n  },\n  {\n    name: 'Secondary action',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(282, 100%, 95%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 100, hsl: 'hsl(282, 59%, 87%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 200, hsl: 'hsl(282, 51%, 78%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(282, 45%, 70%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 400, hsl: 'hsl(282, 44%, 62%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(282, 43%, 54%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 600, hsl: 'hsl(282, 50%, 45%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 700, hsl: 'hsl(282, 69%, 37%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 800, hsl: 'hsl(282, 100%, 29%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(282, 100%, 22%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(282, 48%, 14%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n    ],\n  },\n  {\n    name: 'Danger',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(14, 100%, 97%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 100, hsl: 'hsl(14, 95%, 92%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 200, hsl: 'hsl(14, 91%, 86%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(14, 83%, 76%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 400, hsl: 'hsl(14, 85%, 67%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(14, 88%, 61%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 600, hsl: 'hsl(14, 92%, 50%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 700, hsl: 'hsl(14, 100%, 43%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 800, hsl: 'hsl(14, 100%, 38%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(14, 100%, 30%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(14, 100%, 20%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n    ],\n  },\n  {\n    name: 'Warning',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(48, 100%, 95%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 100, hsl: 'hsl(48, 100%, 89%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 200, hsl: 'hsl(48, 100%, 83%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(48, 98%, 72%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 400, hsl: 'hsl(48, 94%, 57%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(48, 95%, 48%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 600, hsl: 'hsl(46, 100%, 45%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 700, hsl: 'hsl(43, 100%, 42%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 800, hsl: 'hsl(41, 100%, 36%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(38, 100%, 28%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(31, 100%, 19%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n    ],\n  },\n  {\n    name: 'Success',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(93, 52%, 88%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 100, hsl: 'hsl(93, 58%, 75%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 200, hsl: 'hsl(93, 76%, 49%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(93, 77%, 44%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 400, hsl: 'hsl(93, 79%, 40%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(93, 67%, 38%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 600, hsl: 'hsl(93, 85%, 32%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 700, hsl: 'hsl(93, 100%, 26%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 800, hsl: 'hsl(93, 100%, 21%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(93, 100%, 16%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(93, 100%, 13%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n    ],\n  },\n]"
      },
      {
        "name": "ClarityIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-sets/icon-detail-card/icon-detail-card.component.ts",
        "type": "any"
      },
      {
        "name": "code",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/timeline/timeline-full-demo.component.ts",
        "type": "object",
        "defaultValue":
          "{\n  staticHorizontal: `\n<ul class=\"clr-timeline clr-timeline-horizontal\">\n  <li class=\"clr-timeline-step disabled\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Add KMS</span>\n      <span class=\"clr-timeline-step-description\">Root CA certificate requested.</span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Add KMS</span>\n      <span class=\"clr-timeline-step-description\">\n    Root CA certificate requested. Upload it to the KMS to complete the connection.\n    <button class=\"btn btn-sm\">Action</button>\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Make vCenter trust KMS</span>\n      <span class=\"clr-timeline-step-description\">\n    Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n    and very long.\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Make KMS trust vCenter</span>\n      <span class=\"clr-timeline-step-description\">Upload it to the KMS to complete the connection. Third\n    sentence.\n    <button class=\"btn btn-sm btn-link\">Action</button>\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Connected</span>\n      <span class=\"clr-timeline-step-description\">No. It's not connected.</span>\n    </div>\n  </li>\n  </ul>`,\n  staticVertical: `\n  <ul class=\"clr-timeline clr-timeline-vertical\">\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Add KMS</span>\n        <span class=\"clr-timeline-step-description\">Root CA certificate requested.</span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Add KMS</span>\n        <span class=\"clr-timeline-step-description\">\n          Root CA certificate requested. Upload it to the KMS to complete the connection.\n          <!-- <img src=\"assets/placeholder_350x150.png\" alt=\"Example of an Image in a Card\" /> -->\n          <img src=\"https://clarity.design/assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of an Image in a Card\" />\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <span class=\"clr-timeline-step-header\">11:59 am</span>\n      <clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n        <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Make vCenter trust KMS</span>\n        <span class=\"clr-timeline-step-description\">\n          Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n          and very long.\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Make KMS trust vCenter</span>\n        <span class=\"clr-timeline-step-description\">Upload it to the KMS to complete the connection. Third\n          sentence.\n          <button class=\"btn btn-sm\">Refresh</button>\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\"></div>\n      <clr-icon shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Connected</span>\n        <span class=\"clr-timeline-step-description\">No. It's not connected.</span>\n      </div>\n    </li>\n  </ul>\n  `,\n}"
      },
      {
        "name": "COLOR_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-icon shape=\"info-circle\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-highlight\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-error\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-warning\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-success\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-info\"></clr-icon>`"
      },
      {
        "name": "COLORS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "string[]",
        "defaultValue":
          "[\n  'Red',\n  'Orange',\n  'Yellow',\n  'Green',\n  'Blue',\n  'Indigo',\n  'Violet',\n  'Purple',\n  'Magenta',\n  'Cyan',\n  'Pink',\n  'Brown',\n  'White',\n  'Gray',\n  'Black',\n]"
      },
      {
        "name": "COMMON_PATH",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons.component.ts",
        "type": "",
        "defaultValue": "`${environment.icons_base_url}/`"
      },
      {
        "name": "COMPACT_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/compact/compact.ts",
        "type": "",
        "defaultValue": "`\n<clr-datagrid class=\"datagrid-compact\">\n    <-- ... -->\n</clr-datagrid>\n`"
      },
      {
        "name": "COMPONENT_MAP",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/utils/component-list.ts",
        "type": "",
        "defaultValue": "new Map()"
      },
      {
        "name": "componentExample",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts",
        "type": "",
        "defaultValue":
          "`\nimport { Component } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'clr-angular-stepper-reactive-demo',\n  templateUrl: './angular-stepper-reactive.demo.html',\n})\nexport class AngularStepperReactiveDemo {\n  form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      name: this.formBuilder.group({\n        first: ['Luke', Validators.required],\n        last: ['Skywalker', Validators.required],\n      }),\n      contact: this.formBuilder.group({\n        email: [],\n        phone: [],\n      }),\n      password: this.formBuilder.group({\n        password: [],\n        confirm: [],\n      }),\n    });\n  }\n\n  submit() {\n    console.log('reactive form submit', this.form.value);\n  }\n}`"
      },
      {
        "name": "componentExample",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts",
        "type": "",
        "defaultValue":
          "`\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-angular-stepper-template-demo',\n  templateUrl: './angular-stepper-template.demo.html',\n})\nexport class AngularStepperTemplateDemo {\n  templateForm = {\n    name: {\n      firstName: '',\n      lastName: '',\n    },\n    contact: {\n      email: '',\n      phone: '',\n    },\n    password: {\n      password: '',\n      confirm: '',\n    },\n  };\n\n  templateFormSubmit(templateFormValues: {}) {\n    console.log('template form submit', templateFormValues);\n  }\n}\n`"
      },
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/test.ts",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "CUSTOM_TOGGLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-dg-column-toggle>\n    <clr-dg-column-toggle-title>Column Toggle Title</clr-dg-column-toggle-title>\n    <clr-dg-column-toggle-button>Select All Button</clr-dg-column-toggle-button>\n</clr-dg-column-toggle>\n`"
      },
      {
        "name": "DARK_THEME_COLOR_PALETTES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/color/color-palette-functional/functional-color-palettes.ts",
        "type": "[]",
        "defaultValue":
          "[\n  {\n    legend: 'Backgrounds and borders',\n    colors: [\n      { value: '#0F171C', text: 'light' },\n      { value: '#17242B', text: 'light' },\n      { value: '#1B2A32', text: 'light' },\n      { value: '#22343C', text: 'light' },\n      { value: '#485764', text: 'light' },\n      { value: '#566572', text: 'light' },\n      { value: '#6D7884', text: 'mid' },\n    ],\n  },\n  {\n    legend: 'Row hover, selection',\n    colors: [{ value: '#29414E', text: 'light' }, { value: '#324F61', text: 'light' }],\n  },\n  {\n    legend: 'Typography',\n    colors: [\n      { value: '#8F9BA3', text: 'dark' },\n      { value: '#ADBBC4', text: 'dark' },\n      { value: '#E9ECEF', text: 'dark' },\n      { value: '#FFFFFF', text: 'dark' },\n      { value: '#000000', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Buttons and app-level alerts',\n    colors: [\n      { value: '#49AFD9', text: 'dark' },\n      { value: '#F54F47', text: 'dark' },\n      { value: '#FDD006', text: 'dark' },\n      { value: '#60B515', text: 'dark' },\n      { value: '#6D7884', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Standard alerts',\n    colors: [\n      { value: '#0F6082', text: 'light' },\n      { value: '#882D31', text: 'light' },\n      { value: '#205522', text: 'light' },\n      { value: '#7F6509', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Labels & badges',\n    colors: [\n      { value: '#0F6082', text: 'light' },\n      { value: '#882D31', text: 'light' },\n      { value: '#205522', text: 'light' },\n      { value: '#7F6509', text: 'light' },\n      { value: '#737373', text: 'light' },\n      { value: '#AD73C8', text: 'dark' },\n      { value: '#0079B8', text: 'light' },\n      { value: '#FF9C32', text: 'dark' },\n      { value: '#89CBDF', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Headers',\n    colors: [\n      { value: '#404E60', text: 'light' },\n      { value: '#165266', text: 'light' },\n      { value: '#1A4C72', text: 'light' },\n      { value: '#5C3552', text: 'light' },\n      { value: '#3E436A', text: 'light' },\n      { value: '#000000', text: 'light' },\n    ],\n  },\n]"
      },
      {
        "name": "DEPRECATED_COLOR_PALETTES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/color/color-palette/color-palettes.ts",
        "type": "[]",
        "defaultValue":
          "[\n  {\n    type: 'Red',\n    colors: [\n      { value: '#F52F22', text: 'dark', primary: true },\n      { value: '#A32100', text: 'light' },\n      { value: '#C92100', text: 'light' },\n      { value: '#e12200', text: 'light', bulleted: true },\n      { value: '#F52F22', text: 'dark' },\n      { value: '#F54F47', text: 'dark' },\n      { value: '#F76F6C', text: 'dark' },\n      { value: '#F89997', text: 'dark' },\n      { value: '#F8B7B6', text: 'dark' },\n      { value: '#F5DBD9', text: 'dark' },\n      { value: '#FFF0EE', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Pink',\n    colors: [\n      { value: '#F1428A', text: 'dark', primary: true },\n      { value: '#9B0D54', text: 'light' },\n      { value: '#B0105B', text: 'light' },\n      { value: '#C41261', text: 'light' },\n      { value: '#D91468', text: 'light' },\n      { value: '#ED186F', text: 'dark' },\n      { value: '#F1428A', text: 'dark' },\n      { value: '#F46CA5', text: 'dark' },\n      { value: '#F897BF', text: 'dark' },\n      { value: '#FBC1DA', text: 'dark' },\n      { value: '#FFEBF5', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Purple',\n    colors: [\n      { value: '#781DA0', text: 'light', primary: true },\n      { value: '#4D007A', text: 'light' },\n      { value: '#660092', text: 'light' },\n      { value: '#781DA0', text: 'light' },\n      { value: '#8939AD', text: 'light' },\n      { value: '#9B56BB', text: 'light' },\n      { value: '#AD73C8', text: 'dark' },\n      { value: '#BE90D6', text: 'dark' },\n      { value: '#D0ACE4', text: 'dark' },\n      { value: '#E1C9F1', text: 'dark' },\n      { value: '#F3E6FF', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Ultramarine',\n    colors: [\n      { value: '#343DAC', text: 'light', primary: true },\n      { value: '#0F1E82', text: 'light' },\n      { value: '#1A23A0', text: 'light' },\n      { value: '#343DAC', text: 'light' },\n      { value: '#4E56B8', text: 'light' },\n      { value: '#6870C4', text: 'dark' },\n      { value: '#838ACF', text: 'dark' },\n      { value: '#9DA3DB', text: 'dark' },\n      { value: '#B7BDE7', text: 'dark' },\n      { value: '#D1D6F3', text: 'dark' },\n      { value: '#EBF0FF', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Blue',\n    colors: [\n      { value: '#0065AB', text: 'light', primary: true },\n      { value: '#003D79', text: 'light' },\n      { value: '#004D8A', text: 'light' },\n      { value: '#0065AB', text: 'light' },\n      { value: '#0079B8', text: 'light', bulleted: true },\n      { value: '#0095D3', text: 'dark' },\n      { value: '#49AFD9', text: 'dark' },\n      { value: '#89CBDF', text: 'dark' },\n      { value: '#A6D8E7', text: 'dark' },\n      { value: '#C5E5EF', text: 'dark' },\n      { value: '#E1F1F6', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Cyan',\n    colors: [\n      { value: '#00B7D6', text: 'dark', primary: true },\n      { value: '#004A70', text: 'light' },\n      { value: '#005680', text: 'light' },\n      { value: '#006690', text: 'light' },\n      { value: '#0081A7', text: 'dark' },\n      { value: '#009CBF', text: 'dark' },\n      { value: '#00B7D6', text: 'dark' },\n      { value: '#36C9E1', text: 'dark' },\n      { value: '#6DDBEB', text: 'dark' },\n      { value: '#A3EDF6', text: 'dark' },\n      { value: '#CCFBFF', text: 'dark' },\n    ],\n  },\n\n  {\n    type: 'Teal',\n    colors: [\n      { value: '#00968B', text: 'dark', primary: true },\n      { value: '#006668', text: 'light' },\n      { value: '#007E7A', text: 'light' },\n      { value: '#00968B', text: 'dark' },\n      { value: '#00AB9A', text: 'dark' },\n      { value: '#00BFA9', text: 'dark' },\n      { value: '#00D4B8', text: 'dark' },\n      { value: '#38DFC8', text: 'dark' },\n      { value: '#6FEAD9', text: 'dark' },\n      { value: '#A7F4E9', text: 'dark' },\n      { value: '#DEFFF9', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Green',\n    colors: [\n      { value: '#48960C', text: 'dark', primary: true },\n      { value: '#1D5100', text: 'light' },\n      { value: '#266900', text: 'light' },\n      { value: '#2F8400', text: 'light', bulleted: true },\n      { value: '#48960C', text: 'dark' },\n      { value: '#62A420', text: 'dark' },\n      { value: '#60B515', text: 'dark' },\n      { value: '#85C81A', text: 'dark' },\n      { value: '#AADB1E', text: 'dark' },\n      { value: '#C7E59C', text: 'dark' },\n      { value: '#DFF0D0', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Yellow',\n    colors: [\n      { value: '#ffdc0B', text: 'dark', primary: true },\n      { value: '#C47D00', text: 'dark' },\n      { value: '#D28F00', text: 'dark' },\n      { value: '#DFA100', text: 'dark' },\n      { value: '#EDB200', text: 'dark' },\n      { value: '#FAC400', text: 'dark' },\n      { value: '#FDD006', text: 'dark' },\n      { value: '#ffdc0B', text: 'dark' },\n      { value: '#FFE860', text: 'dark' },\n      { value: '#FEF3B5', text: 'dark' },\n      { value: '#FFFCE8', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Orange',\n    colors: [\n      { value: '#F57600', text: 'dark', primary: true },\n      { value: '#AA4500', text: 'light' },\n      { value: '#C25400', text: 'mid' },\n      { value: '#D36000', text: 'dark' },\n      { value: '#E46C00', text: 'dark' },\n      { value: '#F57600', text: 'dark' },\n      { value: '#FF8400', text: 'dark' },\n      { value: '#FF9C32', text: 'dark' },\n      { value: '#FFB565', text: 'dark' },\n      { value: '#FFCD97', text: 'dark' },\n      { value: '#FFE5C9', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Red-orange',\n    colors: [\n      { value: '#EE4A08', text: 'dark', primary: true },\n      { value: '#CD3517', text: 'light' },\n      { value: '#DE400F', text: 'dark' },\n      { value: '#EE4A08', text: 'dark' },\n      { value: '#FF5500', text: 'dark' },\n      { value: '#FF681C', text: 'dark' },\n      { value: '#FF8142', text: 'dark' },\n      { value: '#FF9A69', text: 'dark' },\n      { value: '#FFB38F', text: 'dark' },\n      { value: '#FFCCB5', text: 'dark' },\n      { value: '#FFE5DC', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Warm-grey',\n    colors: [\n      { value: '#80746D', text: 'light', primary: true },\n      { value: '#5B4D47', text: 'light' },\n      { value: '#6C5F59', text: 'light' },\n      { value: '#80746D', text: 'mid' },\n      { value: '#948981', text: 'dark' },\n      { value: '#A89E95', text: 'dark' },\n      { value: '#BBB3A9', text: 'dark' },\n      { value: '#CFC8BD', text: 'dark' },\n      { value: '#E3DDD1', text: 'dark' },\n      { value: '#F4F1E6', text: 'dark' },\n      { value: '#FAF9F5', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Neutral-grey',\n    colors: [\n      { value: '#737373', text: 'light', primary: true },\n      { value: '#313131', text: 'light' },\n      { value: '#444444', text: 'light' },\n      { value: '#565656', text: 'light', bulleted: true },\n      { value: '#737373', text: 'light' },\n      { value: '#9A9A9A', text: 'dark' },\n      { value: '#CCCCCC', text: 'dark' },\n      { value: '#DDDDDD', text: 'dark' },\n      { value: '#EEEEEE', text: 'dark' },\n      { value: '#F2F2F2', text: 'dark' },\n      { value: '#FAFAFA', text: 'dark', bulleted: true },\n    ],\n  },\n  {\n    type: 'Cool-grey',\n    colors: [\n      { value: '#61717D', text: 'light', primary: true },\n      { value: '#25333D', text: 'light' },\n      { value: '#314351', text: 'light' },\n      { value: '#495A67', text: 'light' },\n      { value: '#61717D', text: 'light' },\n      { value: '#798893', text: 'dark' },\n      { value: '#919FA8', text: 'dark' },\n      { value: '#A9B6BE', text: 'dark' },\n      { value: '#C1CDD4', text: 'dark' },\n      { value: '#D9E4EA', text: 'dark', bulleted: true },\n      { value: '#F3F6FA', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Black-white',\n    colors: [{ value: '#000000', text: 'light' }, { value: '#FFFFFF', text: 'dark' }],\n  },\n]"
      },
      {
        "name": "DETAIL_PANE_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-dg-detail *clrIfDetail=\"let detail\">\n  <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n  <clr-dg-detail-body>\n    <-- ... -->\n  </clr-dg-detail-body>\n</clr-dg-detail>\n`"
      },
      {
        "name": "DIRECTION_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue":
          "`\n<!--A. SETTING THE ROTATION DIRECTION THROUGH CLR-ICON SHAPE ATTRIBUTE-->\n<clr-icon shape=\"caret up\"></clr-icon>\n<clr-icon shape=\"caret right\"></clr-icon>\n<clr-icon shape=\"caret down\"></clr-icon>\n<clr-icon shape=\"caret left\"></clr-icon>\n\n<!--B. SETTING THE ROTATION DIRECTION THROUGH CLR-ICON DIR ATTRIBUTE-->\n<clr-icon shape=\"caret\" dir=\"up\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"right\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"down\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"left\"></clr-icon>\n\n<!--C. SETTING THE ROTATION DIRECTION IN STYLE ATTRIBUTE-->\n<clr-icon shape=\"caret\" style=\"transform: rotate(0deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(90deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(180deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(270deg);\"></clr-icon>\n`"
      },
      {
        "name": "DIRECTION_EXAMPLE_DIR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-icon shape=\"caret\" dir=\"up\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"right\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"down\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"left\"></clr-icon>\n`"
      },
      {
        "name": "DIRECTION_EXAMPLE_FLIP",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-icon shape=\"floppy\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"horizontal\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"vertical\"></clr-icon>\n`"
      },
      {
        "name": "disabledExample",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Disabled</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.three\" name=\"four\" [disabled]=\"disabled\" />\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/environments/environment.prod.ts",
        "type": "object",
        "defaultValue":
          "{\n  production: true,\n  latest: 'v2',\n  version: 'v3',\n  versions_url: 'https://clarity.design/versions.json',\n  icons_base_url: '/.netlify/functions/download-icon',\n  icons_url: 'https://github.com/vmware/clarity-assets/archive/master.zip',\n  sketch_base_url: 'https://github.com/vmware/clarity-assets/raw/master/sketch',\n  sketch_icons_url:\n    'https://github.com/vmware/clarity-assets/raw/master/sketch/icons/clarity-library-icons-2.2.0.sketch',\n  figma_link_light: 'https://www.figma.com/file/v2mkhzKQdhECXOx8BElgdA/Clarity-UI-Library-light-2.2.0',\n  figma_link_dark: 'https://www.figma.com/file/wRYSrWSffZXcdQuiolwkym/Clarity-UI-Library-dark-2.2.0',\n  figma_icons: 'https://www.figma.com/file/40gaW7S2yP7B0ME6QNDEsR/Clarity-Icons-2.2.0',\n  figma_color: 'https://www.figma.com/file/mxn3xoLg2mkjMqf5GGYUzw/Clarity-Colors-2.2.0',\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/environments/environment.ts",
        "type": "",
        "defaultValue": "prod"
      },
      {
        "name": "essentialShapesNames",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons.component.ts",
        "type": "",
        "defaultValue": "Object.keys(EssentialShapes)"
      },
      {
        "name": "example",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/accordion/angular-accordion.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-accordion>\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 1</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 1</clr-accordion-content>\n  </clr-accordion-panel>\n\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 2</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 2</clr-accordion-content>\n  </clr-accordion-panel>\n\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 3</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 3</clr-accordion-content>\n  </clr-accordion-panel>\n</clr-accordion>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/custom-rendering/custom-rendering.ts",
        "type": "",
        "defaultValue":
          "`\n<-- Inside the full datagrid declaration -->\n<clr-dg-row *ngFor=\"let user of users\">\n    <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <clr-dg-cell>{{user.name}}</clr-dg-cell>\n    <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n    <clr-dg-cell>\n        <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n    </clr-dg-cell>\n</clr-dg-row>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/typography/typography-headers.ts",
        "type": "",
        "defaultValue":
          "`\n<h1>Header 1 (Display)</h1>\n<h2>Header 2 (Headline)</h2>\n<h3>Header 3 (Sub Heading)</h3>\n<h4>Header 4 (Section Heading Level 1)</h4>\n<h5>Header 5 (Category / group label, TOC)</h5>\n<h6>Header 6 (Section Heading Level 2 group label)</h6>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/basic-tree-DM/tree-basic-DM.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree>\n    <clr-tree-node [clrExpanded]=\"true\">\n        David Wallace (CFO)\n        <clr-tree-node [clrExpanded]=\"true\">\n            Michael Scott (Regional Manager)\n\n            <clr-tree-node>Dwight K. Schrute (Assistant to the Regional Manager)</clr-tree-node>\n\n            <clr-tree-node>\n                Jim Halpert (Head of Sales)\n                <clr-tree-node>Andy Bernard</clr-tree-node>\n                <clr-tree-node>Stanley Hudson</clr-tree-node>\n                <clr-tree-node>Phyllis Vance</clr-tree-node>\n                <clr-tree-node>Todd Packer</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Angela Martin (Head of Accounting)\n                <clr-tree-node>Kevin Malone</clr-tree-node>\n                <clr-tree-node>Oscar Martinez</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Kelly Kapoor (Head of Customer Service)\n                <clr-tree-node>Ryan Howard (Temp)</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Creed Bratton (Quality Assurance)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Meredith Palmer (Supplier Relations)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Toby Flenderson (Human Resources)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Pam Beesly (Reception)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Darryl Philbin (Warehouse)\n            </clr-tree-node>\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/binding-properties/binding-properties.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon.name'\">Pokemon</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'color'\">Favorite color</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'wins'\" [clrDgColType]=\"'number'\">Wins</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n        <clr-dg-cell>{{user.wins}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-width.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Language</th>\n                    <th>Foo</th>\n                    <th>Bar</th>\n                    <th>Baz</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Pig Latin</td>\n                    <td>Oofay</td>\n                    <td>Arbay</td>\n                    <td>Azbay</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Bizarro</td>\n                    <td>Bar</td>\n                    <td>Foo</td>\n                    <td>Bang</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Hodor</td>\n                    <td>Hodor</td>\n                    <td>Hodor</td>\n                    <td>Hodor</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Color</th>\n                    <th>R</th>\n                    <th>G</th>\n                    <th>B</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Black</td>\n                    <td>0</td>\n                    <td>0</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">New Black</td>\n                    <td>255</td>\n                    <td>165</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Pantone 292</td>\n                    <td>98</td>\n                    <td>168</td>\n                    <td>229</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Name</th>\n                    <th class=\"left\">Weakness</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Frankenstein</td>\n                    <td class=\"left\">Fire</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Dracula</td>\n                    <td class=\"left\">Garlic</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Wolfman</td>\n                    <td class=\"left\">Squirrels</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/sidenav/sidenav.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"main-container\">\n    <header class=\"header header-6\">\n        ...\n    </header>\n    <div class=\"content-container\">\n        <nav class=\"sidenav\">\n            <section class=\"sidenav-content\">\n                <a href=\"...\" class=\"nav-link active\">\n                    Nav Element 1\n                </a>\n                <a href=\"...\" class=\"nav-link\">\n                    Nav Element 2\n                </a>\n                <section class=\"nav-group collapsible\">\n                    <input id=\"tabexample1\" type=\"checkbox\">\n                    <label for=\"tabexample1\">Collapsible Nav Element</label>\n                    <ul class=\"nav-list\">\n                        <li><a class=\"nav-link\">Link 1</a></li>\n                        <li><a class=\"nav-link\">Link 2</a></li>\n                    </ul>\n                </section>\n                <section class=\"nav-group\">\n                    <input id=\"tabexample2\" type=\"checkbox\">\n                    <label for=\"tabexample2\">Default Nav Element</label>\n                    <ul class=\"nav-list\">\n                        <li><a class=\"nav-link\">Link 1</a></li>\n                        <li><a class=\"nav-link\">Link 2</a></li>\n                        <li><a class=\"nav-link active\">Link 3</a></li>\n                        <li><a class=\"nav-link\">Link 4</a></li>\n                        <li><a class=\"nav-link\">Link 5</a></li>\n                        <li><a class=\"nav-link\">Link 6</a></li>\n                    </ul>\n                </section>\n            </section>\n        </nav>\n        <div class=\"content-area\">\n            ...\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-basic.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-stack-view>\n    <clr-stack-header>Angular stack view</clr-stack-header>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"1\">\n        <clr-stack-label>Label 1</clr-stack-label>\n        <clr-stack-content>Content 1</clr-stack-content>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"2\">\n        <clr-stack-label>Label 2</clr-stack-label>\n        <clr-stack-content>Content 2</clr-stack-content>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"1\">\n            <clr-stack-label>Sub-label 1</clr-stack-label>\n            <clr-stack-content>Sub-content 1</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"2\">\n            <clr-stack-label>Sub-label 2</clr-stack-label>\n            <clr-stack-content>Sub-content 2</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"3\">\n            <clr-stack-label>Sub-label 3</clr-stack-label>\n            <clr-stack-content>Sub-content 3</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"3\">\n        <clr-stack-label>Label 3</clr-stack-label>\n        <clr-stack-content>Content 3</clr-stack-content>\n        <clr-stack-block>\n            <clr-stack-label>Sub-label 4</clr-stack-label>\n            <clr-stack-content>Sub-content 4</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block>\n            <clr-stack-label>Sub-label 5</clr-stack-label>\n            <clr-stack-content>Sub-content 5</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n</clr-stack-view>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/smart-iterator/smart-iterator.ts",
        "type": "",
        "defaultValue":
          "`\n<-- Inside the full datagrid declaration -->\n<clr-dg-row *clrDgItems=\"let user of users\">\n    <-- Cells declarations -->\n</clr-dg-row>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected user: <span class=\"username\" *ngIf=\"selectedUser\">{{selectedUser.name}}</span>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-vertical.ts",
        "type": "",
        "defaultValue":
          "`\n<table class=\"table table-vertical\">\n    <tbody>\n        <tr>\n            <th>Basic table</th>\n            <td>.table</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Left-aligned table cells</th>\n            <td>.left</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Tables without borders</th>\n            <td>.table-noborder</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Compact tables</th>\n            <td>.table-compact</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Vertical tables</th>\n            <td>.table-vertical</td>\n            <td>...</td>\n        </tr>\n    </tbody>\n</table>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/placeholder/placeholder.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid>\n    <-- ... -->\n    <clr-dg-placeholder>We couldn't find any users!</clr-dg-placeholder>\n    \n    <clr-dg-row *ngFor=\"let user of users\">\n        <-- ... -->\n    </clr-dg-row>\n    <-- ... -->\n</clr-datagrid>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/pagination/pagination.ts",
        "type": "",
        "defaultValue":
          "`\n<-- Inside the full datagrid declaration -->\n<clr-dg-footer>\n    <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n        <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Users per page</clr-dg-page-size>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{pagination.totalItems}} users\n    </clr-dg-pagination>\n</clr-dg-footer>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-positioning.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-dropdown>\n    <button class=\"btn btn-outline-primary\" clrDropdownTrigger>\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <clr-dropdown-menu clrPosition=\"top-left\" *clrIfOpen>\n        <label class=\"dropdown-header\" aria-hidden=\"true\">Dropdown header</label>\n        <div aria-label=\"Dropdown header Action 1\" clrDropdownItem>Action 1</div>\n        <div aria-label=\"Dropdown header Disabled Action\" [clrDisabled]=\"true\" clrDropdownItem>Disabled Action</div>\n        <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\n        <clr-dropdown>\n            <button clrDropdownTrigger>Link 1</button>\n            <clr-dropdown-menu>\n                <button clrDropdownItem>Foo</button>\n                <clr-dropdown>\n                    <button clrDropdownTrigger>Bar</button>\n                    <clr-dropdown-menu clrPosition=\"left-top\">\n                        <button clrDropdownItem>Baz</button>\n                    </clr-dropdown-menu>\n                </clr-dropdown>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n        <div clrDropdownItem>Link 2</div>\n    </clr-dropdown-menu>\n</clr-dropdown>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-buttonlink-toggle.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"dropdown open\">\n    <button class=\"dropdown-toggle btn btn-link\">\n        Dropdown Toggle\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div aria-label=\"Dropdown header Lorem\" class=\"dropdown-item\">Lorem.</div>\n        <div aria-label=\"Dropdown header Lorem ipsum\" class=\"dropdown-item\">Lorem ipsum.</div>\n        <div aria-label=\"Dropdown header Lorem ipsum dolor\" class=\"dropdown-item\">Lorem ipsum dolor.</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link</div>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-fontawesome-toggle.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"dropdown bottom-right open\">\n    <button class=\"dropdown-toggle\">\n        <span class=\"fa fa-home fa-fw\"></span>\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item\">Action 1</div>\n        <div class=\"dropdown-item\">Action 2</div>\n        <div class=\"dropdown-item\">Action 3</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link 1</div>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-icon-toggle.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"dropdown bottom-left open\">\n    <button class=\"dropdown-toggle\">\n        <clr-icon shape=\"error\" class=\"is-error\" size=\"24\"></clr-icon>\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item\">Lorem.</div>\n        <div class=\"dropdown-item\">Lorem ipsum.</div>\n        <div class=\"dropdown-item\">Lorem ipsum dolor.</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Action 1</div>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-positioning.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"dropdown bottom-right open\">\n    <button class=\"dropdown-toggle btn btn-primary\">\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item active\">First Action</div>\n        <div class=\"dropdown-item disabled\">Disabled Action</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link 1</div>\n        <div class=\"dropdown-item\">Link 2</div>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/header/header-colors.ts",
        "type": "",
        "defaultValue":
          "`\n<header class=\"header header-1\">\n    ...\n</header>\n\n<header class=\"header header-2\">\n    ...\n</header>\n\n<header class=\"header header-3\">\n    ...\n</header>\n\n<header class=\"header header-4\">\n    ...\n</header>\n\n<header class=\"header header-5\">\n    ...\n</header>\n\n<header class=\"header header-6\">\n    ...\n</header>\n\n<header class=\"header header-7\">\n    ...\n</header>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/header/header-links.ts",
        "type": "",
        "defaultValue":
          "`\n<header class=\"header-6\">\n    <div class=\"branding\">\n        ...\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"javascript://\" class=\"active nav-link nav-text\">Dashboard</a>\n        <a href=\"javascript://\" class=\"nav-link nav-text\">Interactive Analytics</a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/header/header-types.ts",
        "type": "",
        "defaultValue":
          "`\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"...\" class=\"active nav-link\"><span class=\"nav-text\">Dashboard</span></a>\n        <a href=\"...\" class=\"nav-link\"><span class=\"nav-text\">Interactive Analytics</span></a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <form class=\"search\">\n        <label for=\"search_input\">\n            <input id=\"search_input\" type=\"text\" placeholder=\"Search for keywords...\">\n        </label>\n    </form>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <clr-dropdown>\n            <button class=\"nav-icon\" clrDropdownTrigger aria-label=\"toggle settings menu\">\n                <clr-icon shape=\"cog\"></clr-icon>\n                <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n                <a href=\"...\" clrDropdownItem>About</a>\n                <a href=\"...\" clrDropdownItem>Preferences</a>\n                <a href=\"...\" clrDropdownItem>Log out</a>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-text\">\n            Log Out\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <clr-dropdown>\n            <button class=\"nav-text\" clrDropdownTrigger aria-label=\"open user profile\">\n                john.doe@vmware.com\n                <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n                <a href=\"...\" clrDropdownItem>Preferences</a>\n                <a href=\"...\" clrDropdownItem>Log out</a>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"javascript://\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon-text\">\n            <clr-icon shape=\"user\"></clr-icon>\n            <span class=\"nav-text\">username</span>\n        </a>\n    </div>\n</header>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/header/sub-nav.ts",
        "type": "",
        "defaultValue":
          "`\n<header>\n    ...\n</header>\n<nav class=\"subnav\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" href=\"#\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Management</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Cloud</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Tenants</a>\n        </li>\n    </ul>\n</nav>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-1.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-vertical-noborder-compact.ts",
        "type": "",
        "defaultValue":
          "`\n<table class=\"table table-vertical table-noborder table-compact\">\n    <tbody>\n        <tr>\n            <th>Basic table</th>\n            <td>.table</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Left-aligned table cells</th>\n            <td>.left</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Tables without borders</th>\n            <td>.table-noborder</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Compact tables</th>\n            <td>.table-compact</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Vertical tables</th>\n            <td>.table-vertical</td>\n            <td>...</td>\n        </tr>\n    </tbody>\n</table>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-noborder.ts",
        "type": "",
        "defaultValue":
          "`\n<table class=\"table table-noborder\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-multiline.ts",
        "type": "",
        "defaultValue":
          "`\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Name</th>\n            <th>A/B</th>\n            <th class=\"left\">Comment</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Beetlejuice</td>\n            <td>B</td>\n            <td class=\"left\">...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mytzlplk</td>\n            <td>A</td>\n            <td class=\"left\">...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Q</td>\n            <td>A</td>\n            <td class=\"left\">...</td>\n        </tr>\n    </tbody>\n</table>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-leftcell.ts",
        "type": "",
        "defaultValue":
          "`\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Wizard</th>\n            <th>Allegiance</th>\n            <th>Triwizard Champion?</th>\n            <th>Can Cast Fireball</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Harry</td>\n            <td>Gryffindor</td>\n            <td>Yes</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Gandalf</td>\n            <td>Hobbits</td>\n            <td>Maybe?</td>\n            <td>I don&apos;t think so...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Obi-Wan Kenobi</td>\n            <td>Republic/Rebellion</td>\n            <td>No</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Merlin</td>\n            <td>King Arthur</td>\n            <td>Probably invented the tournament</td>\n            <td>Solid maybe</td>\n        </tr>\n    </tbody>\n</table>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-column-offsetting.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-sm-4\">\n        <span>clr-col-sm-4</span>\n    </div>\n    <div class=\"clr-col-sm-6 clr-offset-sm-2\">\n        <span>clr-col-sm-6 clr-offset-sm-2</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-column-ordering.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1st, Unordered</span>\n    </div>\n    <div class=\"clr-col clr-order-3\">\n        <span>2nd, Order 3</span>\n    </div>\n    <div class=\"clr-col clr-order-2\">\n        <span>3rd, Order 2</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-column-stacking.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-sm-12 clr-col-md-6\">\n        <span>clr-col-sm-12 clr-col-md-6</span>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-6\">\n        <span>clr-col-sm-12 clr-col-md-6</span>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n        <span>clr-col-sm-12 clr-col-md-12</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-column-wrapping.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-6\">\n        <span>clr-col-7</span>\n    </div>\n    <div class=\"clr-col-8\">\n        <span>clr-col-8</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-columns.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-4\">\n        <span>4</span>\n    </div>\n    <div class=\"clr-col-6\">\n        <span>6</span>\n    </div>\n    <div class=\"clr-col-2\">\n        <span>2</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-compact.ts",
        "type": "",
        "defaultValue":
          "`\n<table class=\"table table-compact\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-compact-noborder.ts",
        "type": "",
        "defaultValue":
          "`\n<table class=\"table table-compact table-noborder\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tables/tables-basic.ts",
        "type": "",
        "defaultValue":
          "`\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Decimal</th>\n            <th>Hexadecimal</th>\n            <th>Binary</th>\n            <th>Roman Numeral</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1</td>\n            <td>1</td>\n            <td>1</td>\n            <td>I</td>\n        </tr>\n        <tr>\n            <td>5</td>\n            <td>5</td>\n            <td>101</td>\n            <td>V</td>\n        </tr>\n        <tr>\n            <td>10</td>\n            <td>A</td>\n            <td>1010</td>\n            <td>X</td>\n        </tr>\n        <tr>\n            <td>15</td>\n            <td>F</td>\n            <td>1111</td>\n            <td>XV</td>\n        </tr>\n    </tbody>\n</table>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tabs/tabs-static.ts",
        "type": "",
        "defaultValue":
          "`\n<ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab1\" class=\"btn btn-link nav-link active\" aria-controls=\"panel1\"\n                aria-selected=\"true\" type=\"button\">Dashboard</button>\n    </li>\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab2\" class=\"btn btn-link nav-link\" aria-controls=\"panel2\"\n                aria-selected=\"false\" type=\"button\">Management</button>\n    </li>\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab3\" class=\"btn btn-link nav-link\" aria-controls=\"panel3\"\n                aria-selected=\"false\" type=\"button\">Cloud</button>\n    </li>\n</ul>\n<section id=\"panel1\" role=\"tabpanel\" aria-labelledby=\"tab1\">\n    ...\n</section>\n<section id=\"panel2\" role=\"tabpanel\" aria-labelledby=\"tab2\" aria-hidden=\"true\">\n    ...\n</section>\n<section id=\"panel3\" role=\"tabpanel\" aria-labelledby=\"tab3\" aria-hidden=\"true\">\n    ...\n</section>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"limit-height\">\n    <clr-datagrid>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                User ID\n            </ng-container>\n        </clr-dg-column>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Name\n            </ng-container>\n        </clr-dg-column>\n        ...\n\n        <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n            <clr-dg-cell>{{user.id}}</clr-dg-cell>\n            <clr-dg-cell>{{user.name}}</clr-dg-cell>\n            ...\n        </clr-dg-row>\n\n        <clr-dg-footer>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            of {{pagination.totalItems}} users\n            <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n        </clr-dg-footer>\n    </clr-datagrid>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-individual-vertical-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col clr-align-self-start\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col clr-align-self-center\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col clr-align-self-end\">\n        <span>1/3</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row clr-align-items-start\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tabs/tabs-static-vertical.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"tabs-vertical\">\n    <ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab1\" class=\"btn btn-link nav-link active\" aria-controls=\"panel1\"\n                    aria-selected=\"true\" type=\"button\">Dashboard</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab2\" class=\"btn btn-link nav-link\" aria-controls=\"panel2\"\n                    aria-selected=\"false\" type=\"button\">Management</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab3\" class=\"btn btn-link nav-link\" aria-controls=\"panel3\"\n                    aria-selected=\"false\" type=\"button\">Cloud</button>\n        </li>\n    </ul>\n    <section id=\"panel1\" role=\"tabpanel\" aria-labelledby=\"tab1\">\n        ...\n    </section>\n    <section id=\"panel2\" role=\"tabpanel\" aria-labelledby=\"tab2\" aria-hidden=\"true\">\n        ...\n    </section>\n    <section id=\"panel3\" role=\"tabpanel\" aria-labelledby=\"tab3\" aria-hidden=\"true\">\n        ...\n    </section>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tabs/tabs-angular.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>Dashboard</button>\n        <ng-template [(clrIfActive)]=\"dashboardActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Management</button>\n        <ng-template [(clrIfActive)]=\"managementActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Cloud</button>\n        <ng-template [(clrIfActive)]=\"cloudActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Infrastructure</button>\n        <ng-template [(clrIfActive)]=\"infrastructureActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n</clr-tabs>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-nesting.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-9\">\n        <span>9</span>\n        <div class=\"clr-row\">\n            <div class=\"clr-col-3\">\n                <span>3</span>\n            </div>\n            <div class=\"clr-col-9\">\n                <span>9</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-3\">\n        <span>3</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/login/login-example.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"login-wrapper\">\n    <form class=\"login\">\n        <section class=\"title\">\n            <h3 class=\"welcome\">Welcome to</h3>\n            Company Product Name\n            <h5 class=\"hint\">Use your Company ID to sign in or create one now</h5>\n        </section>\n        <div class=\"login-group\">\n            <clr-select-container>\n                <label class=\"clr-sr-only\">User Role</label>\n                <select clrSelect name=\"type\" [(ngModel)]=\"form.type\">\n                    <option value=\"local\">Local Users</option>\n                    <option value=\"admin\">Administrator</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label class=\"clr-sr-only\">Username</label>\n                <input type=\"text\" name=\"username\" clrInput placeholder=\"Username\" [(ngModel)]=\"form.username\"/>\n            </clr-input-container>\n            <clr-password-container>\n                <label class=\"clr-sr-only\">Password</label>\n                <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" [(ngModel)]=\"form.password\"/>\n            </clr-password-container>\n            <clr-checkbox-wrapper>\n                <label>Remember me</label>\n                <input type=\"checkbox\" name=\"rememberMe\" clrCheckbox [(ngModel)]=\"form.rememberMe\"/>\n            </clr-checkbox-wrapper>\n            <div class=\"error active\">\n                Invalid user name or password\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">NEXT</button>\n            <a href=\"javascript://\" class=\"signup\">Sign up for a Company ID</a>\n        </div>\n    </form>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/labels/labels-clickable.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" class=\"label label-purple clickable\">\n    Austin\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    New York\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Palo Alto\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    San Francisco\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Seattle\n</a>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/labels/labels-color-options.ts",
        "type": "",
        "defaultValue":
          "`\n<span class=\"label\">Seattle</span>\n<span class=\"label label-purple\">Austin</span>\n<span class=\"label label-blue\">New York</span>\n<span class=\"label label-orange\">Palo Alto</span>\n<span class=\"label label-light-blue\">San Francisco</span>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/labels/labels-default.ts",
        "type": "",
        "defaultValue":
          "`\n<span class=\"label\">Austin</span>\n<span class=\"label\">New York</span>\n<span class=\"label\">Palo Alto</span>\n<span class=\"label\">San Francisco</span>\n<span class=\"label\">Seattle</span>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/labels/labels-status.ts",
        "type": "",
        "defaultValue":
          "`\n<span class=\"label label-info\">Info</span>\n<span class=\"label label-success\">Success</span>\n<span class=\"label label-warning\">Warning</span>\n<span class=\"label label-danger\">Error</span>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/labels/labels-with-badges.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" class=\"label label-purple clickable\">\n    Austin\n    <span class=\"badge\">1</span>\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    New York\n    <span class=\"badge\">2</span>\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Palo Alto\n    <span class=\"badge\">3</span>\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    San Francisco\n    <span class=\"badge\">12</span>\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Seattle\n    <span class=\"badge\">15</span>\n</a>\n<a href=\"...\" class=\"label label-purple clickable\">\n    Chicago\n    <span class=\"badge\">55</span>\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    San Jose\n    <span class=\"badge\">66</span>\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Charlotte\n    <span class=\"badge\">88</span>\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    Atlanta\n    <span class=\"badge\">99+</span>\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Philadephia<span class=\"badge\">0</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/lists/lists-in-cards.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Ordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ol class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ol class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ol class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                </ol>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unstyled Lists\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </p>\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list-unstyled\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/lists/lists-compact.ts",
        "type": "",
        "defaultValue":
          "`\n<ul class=\"list compact\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>Mollit anim id</li>\n</ul>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/stack-view/stack-view-static.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 class=\"stack-header\">\n    <span class=\"stack-title\">Static stack view</span>\n    <span class=\"stack-actions\">\n        <button class=\"stack-action btn btn-sm btn-link\" type=\"button\">Edit</button>\n    </span>\n</h4>\n<dl class=\"stack-view\">\n    <div class=\"stack-block\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"1\" aria-setsize=\"3\">Label 1</dt>\n        <dd class=\"stack-block-content\">Content 1</dd>\n    </div>\n    <div class=\"stack-block stack-block-expandable stack-block-expanded\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"2\" aria-setsize=\"3\">Label 2</dt>\n        <dd class=\"stack-block-content\">Content 2</dd>\n        <div class=\"stack-children\">\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"1\" aria-setsize=\"3\">Sub-label 1</dt>\n                <dd class=\"stack-block-content\">Sub-content 1</dd>\n            </div>\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"2\" aria-setsize=\"3\">Sub-label 2</dt>\n                <dd class=\"stack-block-content\">Sub-content 2</dd>\n            </div>\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"3\" aria-setsize=\"3\">Sub-label 3</dt>\n                <dd class=\"stack-block-content\">Sub-content 3</dd>\n            </div>\n        </div>\n    </div>\n    <div class=\"stack-block stack-block-expandable\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"3\" aria-setsize=\"3\">Label 3</dt>\n        <dd class=\"stack-block-content\">Content 3</dd>\n        <div class=\"stack-children\"></div>\n    </div>\n</dl>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/lists/lists-ol.ts",
        "type": "",
        "defaultValue":
          "`\n<ol class=\"list\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>\n        Mollit anim id\n        <ol class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ol>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n</ol>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/lists/lists-ul.ts",
        "type": "",
        "defaultValue":
          "`\n<ul class=\"list\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>Mollit anim id</li>\n</ul>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/lists/lists-unstyled.ts",
        "type": "",
        "defaultValue":
          "`\n<ul class=\"list-unstyled\">\n    <li>Id est laborum</li>\n    <li>Dolore eu fugiat</li>\n    <li>Occaecat cupidatat</li>\n    <li>Deserunt mollit anim</li>\n</ul>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/modal/modal-animation.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"modal\">\n    <div class=\"modal-dialog fadeDown in\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop fade in\" aria-hidden=\"true\"></div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/modal/modal-backdrop.ts",
        "type": "",
        "defaultValue": "`\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-sm\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-modal-edit.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-stack-view>\n    <clr-stack-header>\n        Modal editor\n        <button\n            class=\"stack-action btn btn-sm btn-link\"\n            (click)=\"editModal = true\"\n            type=\"button\">Edit</button>\n    </clr-stack-header>\n\n    <clr-stack-block\n        *ngFor=\"let block of blocks; let i = index\"\n        [clrStackViewLevel]=\"1\"\n        [clrStackViewSetsize]=\"blocks.length\"\n        [clrStackViewPosinset]=\"i\"\n        >\n        <clr-stack-label>{{block.title}}</clr-stack-label>\n        <clr-stack-content>{{block.content}}</clr-stack-content>\n\n        <clr-stack-block\n            *ngFor=\"let child of block.children; let j = index\"\n            [clrStackViewLevel]=\"2\"\n            [clrStackViewSetsize]=\"block.children.length\"\n            [clrStackViewPosinset]=\"j\"\n            >\n            <clr-stack-label>{{child.title}}</clr-stack-label>\n            <clr-stack-content>{{child.content}}</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n</clr-stack-view>\n\n<clr-modal [(clrModalOpen)]=\"editModal\">\n    <h3 class=\"modal-title\">Edit mode</h3>\n    <div class=\"modal-body\">\n        <clr-stack-view>\n            <clr-stack-block\n                *ngFor=\"let block of blocks; let blockIndex = index\"\n                [clrSbNotifyChange]=\"block.content!=='Content '+ (blockIndex)\"\n                [clrStackViewLevel]=\"1\"\n                [clrStackViewSetsize]=\"blocks.length\"\n                [clrStackViewPosinset]=\"blockIndex + 1\"\n                >\n                <clr-stack-label>{{block.title}}</clr-stack-label>\n                <clr-stack-content>\n                    <input type=\"text\" [(ngModel)]=\"block.content\" class=\"clr-input\"/>\n                </clr-stack-content>\n\n                <clr-stack-block\n                    *ngFor=\"let child of block.children; let blockChildIndex = index\"\n                    [clrSbNotifyChange]=\"child.content!=='Sub-content '+ (blockChildIndex)\"\n                    [clrStackViewLevel]=\"2\"\n                    [clrStackViewSetsize]=\"block.children.length\"\n                    [clrStackViewPosinset]=\"blockChildIndex + 1\"\n                    >\n                    <clr-stack-label>{{child.title}}</clr-stack-label>\n                    <clr-stack-content>\n                        <input type=\"text\" [(ngModel)]=\"child.content\" class=\"clr-input\"/>\n                    </clr-stack-content>\n                </clr-stack-block>\n            </clr-stack-block>\n        </clr-stack-view>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"editModal = false\">Done</button>\n    </div>\n</clr-modal>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-lazyload.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-stack-view>\n    <clr-stack-header>\n        Lazily loaded children\n        <button class=\"stack-action btn btn-sm btn-link\" (click)=\"resetChildren()\" type=\"button\">Reset</button>\n    </clr-stack-header>\n\n    <clr-stack-block\n      #lazyBlock\n      [clrSbExpandable]=\"true\"\n      (clrSbExpandedChange)=\"fetchChildren()\"\n      [clrStackViewLevel]=\"1\"\n      [clrStackViewSetsize]=\"2\"\n      [clrStackViewPosinset]=\"1\"\n      >\n        <clr-stack-label>Label 1</clr-stack-label>\n        <clr-stack-content>Content 1</clr-stack-content>\n\n        <clr-stack-block *ngIf=\"children.length == 0\" [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"0\" [clrStackViewPosinset]=\"1\">\n            <clr-spinner clrAssertive clrInline>\n              Loading...\n            </clr-spinner>\n        </clr-stack-block>\n\n        <clr-stack-block\n          *ngFor=\"let child of children; let i = index\"\n          [clrStackViewLevel]=\"2\"\n          [clrStackViewSetsize]=\"children.length\"\n          [clrStackViewPosinset]=\"i + 1\"\n          >\n            <clr-stack-label>{{child.title}}</clr-stack-label>\n            <clr-stack-content>{{child.content}}</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"2\" [clrStackViewPosinset]=\"2\">\n        <clr-stack-label>Label 2</clr-stack-label>\n        <clr-stack-content>Content 2</clr-stack-content>\n    </clr-stack-block>\n</clr-stack-view>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/modal/modal-static.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"modal\">\n    <div class=\"modal-dialog\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n                <h3 class=\"modal-title\">I have a nice title</h3>\n            </div>\n            <div class=\"modal-body\">\n                <p>But not much to say...</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "",
        "defaultValue": "`<clr-progress-bar clrValue=\"40\" clrMax=\"100\"></clr-progress-bar>`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/typography/typography-text.ts",
        "type": "",
        "defaultValue":
          "`\n<p class=\"p1\">Body text</p>\n<p class=\"p2\">Section header</p>\n<p class=\"p3\">Table, grid, and form text</p>\n<p class=\"p4\">Form labels and column headers</p>\n<p class=\"p5\">Table footers and chart data</p>\n<p class=\"p6\">Mostly buttons</p>\n<p class=\"p7\">Tags and labels</p>\n<p class=\"p8\">Badges</p>\n<pre class=\"language-html\">Monospaced</pre> or <code class=\"language-html\">Monospaced</code>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
        "type": "",
        "defaultValue": "`\n<span class=\"spinner\">\n    Loading...\n</span>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
        "type": "",
        "defaultValue": "`\n<span class=\"spinner spinner-sm\">\n    Loading...\n</span>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
        "type": "",
        "defaultValue": "`\n<clr-spinner *ngIf=\"fetchingUserInformation\">Loading data</clr-spinner>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-vertical.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tabs clrLayout=\"vertical\">\n    <clr-tab>\n        <button clrTabLink id=\"link1\">Tab1</button>\n        <clr-tab-content id=\"content1\" *clrIfActive>\n        ...\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>Tab2</button>\n        <clr-tab-content *clrIfActive=\"true\">\n        ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-simple.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink id=\"link1\">Tab1</button>\n        <clr-tab-content id=\"content1\" *clrIfActive>\n        ...\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>Tab2</button>\n        <clr-tab-content *clrIfActive=\"true\">\n        ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            User ID\n        </ng-container>\n    </clr-dg-column>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Name\n        </ng-container>\n    </clr-dg-column>\n    ...\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        ...\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{pagination.totalItems}} users\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-overflow.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>Dashboard</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Management</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Cloud</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink [clrTabLinkInOverflow]=\"inOverflow\">Settings</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n    \n    <clr-tab>\n        <button clrTabLink [clrTabLinkInOverflow]=\"inOverflow\">Alerts</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/basic-structure/basic-structure.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.color}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`"
      },
      {
        "name": "EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/lists/lists-mixed.ts",
        "type": "",
        "defaultValue":
          "`\n<ul class=\"list-unstyled\">\n    <li>Consectetur adipisicing elit</li>\n    <li>\n        Sed do eiusmod tempor\n        <ul class=\"list\">\n            <li>Dolore magna</li>\n            <li>...</li>\n            <li>\n                Incididunt ut labore\n                <ul class=\"list-unstyled\">\n                    <li>Ad minim veniam</li>\n                    <li>...</li>\n                    <li>Exercitation ullamco</li>\n                    <li>\n                        Laboris nisi ut\n                        <ul class=\"list\">\n                            <li>Aliquip ex ea commodo</li>\n                            <li>Consequat duis</li>\n                            <li>..</li>\n                        </ul>\n                    </li>\n                    <li>In reprehenderit</li>\n                </ul>\n            </li>\n        </ul>\n    </li>\n    <li>In voluptate velit esse cillum dolore</li>\n    <li>Eu fugiat nulla pariatur</li>\n</ul>\n`"
      },
      {
        "name": "EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-lg\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
      },
      {
        "name": "EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row clr-justify-content-start\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-xl\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
      },
      {
        "name": "EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row clr-justify-content-center\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE_3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row clr-justify-content-end\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE_4",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row clr-justify-content-around\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE_5",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row clr-justify-content-between\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree>\n  <clr-tree-node *ngFor=\"let directory of rootDirectory\" [(clrExpanded)]=\"directory.expanded\">\n      <clr-icon [attr.shape]=\"directory.icon\"></clr-icon>\n      {{directory.name}}\n      <clr-tree-node *ngFor=\"let file of directory.files\">\n          <button\n                  (click)=\"openFile(directory.name, file.name)\"\n                  class=\"clr-treenode-link\"\n                  [class.active]=\"file.active\">\n              <clr-icon [attr.shape]=\"file.icon\"></clr-icon>\n              {{file.name}}\n          </button>\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree>\n    <clr-tree-node *clrRecursiveFor=\"let file of root; getChildren: getChildren\"\n                   [(clrSelected)]=\"file.selected\">\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree>\n    <clr-tree-node *ngFor=\"let group of groceries\"\n                   [(clrSelected)]=\"group.selected\"\n                   [clrExpanded]=\"true\">\n        {{group.name}}\n        <clr-tree-node *ngFor=\"let item of group.items\" [(clrSelected)]=\"item.selected\">\n            {{item.name}}\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>\n\n<button class=\"btn btn-sm\" type=\"button\" (click)=\"selectVegetables()\">Select all vegetables</button>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node [clrLoading]=\"loading\">\n        <clr-icon shape=\"building\"></clr-icon>\n        Office Locations\n        <ng-template clrIfExpanded (clrIfExpandedChange)=\"$event ? fetchLocations() : null\">\n            <clr-tree-node *ngFor=\"let location of locations$ | async\">\n                {{location}}\n            </clr-tree-node>\n        </ng-template>\n    </clr-tree-node>\n</clr-tree>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree>\n  <clr-tree-node [clrExpanded]=\"true\">\n      Permissions\n      <clr-tree-node *ngFor=\"let permission of permissions\" [clrExpanded]=\"true\">\n          {{permission.type}}\n          <clr-tree-node *ngFor=\"let right of permission.rights\" \n                        [clrSelected]=\"right.enable\" (clrSelectedChange)=\"right.enable = !!$event\">\n              {{right.name}}\n          </clr-tree-node>\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/tree-node-routing/tree-node-routing.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree>\n  <clr-tree-node [clrExpanded]=\"true\">\n    The Beatles\n    <clr-tree-node>\n        <a [routerLink]=\"['./album1']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Abbey Road</a>\n    </clr-tree-node>\n    <clr-tree-node>\n        <a [routerLink]=\"['./album2']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Revolver</a>\n    </clr-tree-node>\n    <clr-tree-node>\n        <a [routerLink]=\"['./album3']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Rubber Soul</a>\n    </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n<router-outlet></router-outlet>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *clrRecursiveFor=\"let file of root$ | async; getChildren: getChildren\"\n                   [clrExpandable]=\"file.isFolder\">\n        <clr-icon [attr.shape]=\"file.isFolder ? 'folder' : 'file'\"></clr-icon>\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree>\n  <clr-tree-node [(clrExpanded)]=\"expanded\">\n      {{expanded ? \"I am expanded\" : \"I am collapsed\"}}\n      <clr-tree-node>\n          Child Tree Node\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`"
      },
      {
        "name": "EXAMPLE_HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *ngFor=\"let group of groceries$ | async\" [(clrSelected)]=\"group.selected\">\n        {{group.name}}\n        <ng-template clrIfExpanded>\n            <my-grocery-items [group]=\"group\"></my-grocery-items>\n        </ng-template>\n    </clr-tree-node>\n</clr-tree>\n`"
      },
      {
        "name": "EXAMPLE_TS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts",
        "type": "",
        "defaultValue":
          "`\nexport class RecursiveSelection {\n    root = [\n        {\n            name: \"src\",\n            selected: ClrSelectedState.INDETERMINATE,\n            files: [\n                {\n                    name: \"app\",\n                    selected: ClrSelectedState.INDETERMINATE,\n                    files: [\n                        {\n                            name: \"app.component.html\",\n                            selected: ClrSelectedState.UNSELECTED\n                        },\n                        {\n                            name: \"app.component.ts\",\n                            selected: ClrSelectedState.UNSELECTED\n                        },\n                        {\n                            name: \"app.module.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        },\n                        {\n                            name: \"app.routing.ts\",\n                            selected: ClrSelectedState.UNSELECTED\n                        }\n                    ]\n                },\n                {\n                    name: \"environments\",\n                    selected: ClrSelectedState.SELECTED,\n                    files: [\n                        {\n                            name: \"environments.prod.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        },\n                        {\n                            name: \"environment.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        }\n                    ]\n                },\n                {\n                    name: \"index.html\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"main.ts\",\n                    selected: ClrSelectedState.UNSELECTED,\n                }\n            ]\n        },\n        {\n            name: \"package.json\",\n            selected: ClrSelectedState.UNSELECTED\n        },\n        {\n            name: \"tsconfig.json\",\n            selected: ClrSelectedState.UNSELECTED\n        }\n    ];\n\n    getChildren = (folder) => folder.files;\n}\n`"
      },
      {
        "name": "EXAMPLE_TS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts",
        "type": "",
        "defaultValue": "`\nexport class TreeNodeLabelChangeOnExpandDemo {\n    expanded: boolean = true;\n}\n`"
      },
      {
        "name": "EXAMPLE_TS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts",
        "type": "",
        "defaultValue":
          "`\nexport class GroceryList {\n    groceries = [\n        {\n            name: \"Dairy\",\n            selected: ClrSelectedState.INDETERMINATE,\n            items: [\n                {\n                    name: \"Milk\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Cheese\",\n                    selected: ClrSelectedState.SELECTED,\n                }\n            ]\n        },\n        {\n            name: \"Vegetables\",\n            selected: ClrSelectedState.UNSELECTED,\n            items: [\n                {\n                    name: \"Carrots\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Potatoes\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Beans\",\n                    selected: ClrSelectedState.UNSELECTED,\n                }\n            ]\n        }\n    ];\n\n    selectVegetables() {\n        this.groceries[1].selected = ClrSelectedState.SELECTED;\n    }\n}\n`"
      },
      {
        "name": "EXAMPLE_TS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({\n    selector: \"my-grocery-items\",\n    template: \\`\n        <ng-container [clrLoading]=\"loading\">\n            <clr-tree-node *ngFor=\"let item of items$ | async\" [(clrSelected)]=\"item.selected\">\n                {{item.name}}\n            </clr-tree-node>\n        </ng-container>\n    \\`\n})\nexport class GroceryItemsComponent implements OnInit {\n    constructor(private itemsService: ItemsService) {}\n    \n    @Input() group: Group;\n    items$: Observable<Item[]>;\n    loading = false;\n\n    ngOnInit() {\n        this.loading = true;\n        this.items$ = this.itemsService.getItems(this.group).pipe(tap(() => this.loading = false));\n    }\n}\n`"
      },
      {
        "name": "EXAMPLE_TS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts",
        "type": "",
        "defaultValue":
          "`\n    rootDirectory: any[] = [\n        {\n            name: \"Applications\",\n            icon: \"folder\",\n            expanded: true,\n            files: [\n                {\n                    icon: \"calendar\",\n                    name: \"Calendar\",\n                    active: true\n                },\n                {\n                    icon: \"line-chart\",\n                    name: \"Charts\",\n                    active: false\n                },\n                {\n                    icon: \"dashboard\",\n                    name: \"Dashboard\",\n                    active: false\n                },\n                {\n                    icon: \"map\",\n                    name: \"Maps\",\n                    active: false\n                },\n                ...\n            ]\n        },\n        {\n            name: \"Files\",\n            icon: \"folder\",\n            expanded: false,\n            files: [\n                {\n                    icon: \"file\",\n                    name: \"Cover Letter.doc\",\n                    active: false\n                },\n                ...\n            ]\n        },\n        {\n            name: \"Images\",\n            icon: \"folder\",\n            expanded: false,\n            files: [\n                {\n                    icon: \"image\",\n                    name: \"Screenshot.png\",\n                    active: false\n                },\n                ...\n            ]\n        }\n    ];\n    \n    openFile(directoryName: string, fileName: string) {\n        ...\n        ...\n    }\n`"
      },
      {
        "name": "EXAMPLE_TS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({...})\nexport class FileBrowser implements OnInit {\n    constructor(private folderService: FolderService) {}\n\n    root$: Observable<File[]>;\n\n    getChildren = (folder: File) => {\n        if (folder.isFolder) {\n            return this.folderService.getFiles(folder);\n        } else {\n            return null;\n        }\n    };\n\n    ngOnInit(): void {\n        this.root$ = this.folderService.getFiles('/');\n    }\n}\n`"
      },
      {
        "name": "EXAMPLE_TS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({\n    selector: \"...\",\n    templateUrl: \"...\"\n})\nexport class Permissions {\n    permissions: any = [\n        {\n            type: \"Authenticated Users\",\n            rights: [\n                {\n                    name: \"Read\",\n                    enable: true\n                },\n                {\n                    name: \"Modify\",\n                    enable: true\n                },\n                {\n                    name: \"Create\",\n                    enable: false\n                },\n                {\n                    name: \"Delete\",\n                    enable: false\n                }\n            ]\n        },\n        {\n            type: \"Owners\",\n            rights: [\n                {\n                    name: \"Read\",\n                    enable: true\n                },\n                {\n                    name: \"Modify\",\n                    enable: true\n                },\n                {\n                    name: \"Create\",\n                    enable: true\n                },\n                {\n                    name: \"Delete\",\n                    enable: true\n                }\n            ]\n        }\n    ];\n}\n`"
      },
      {
        "name": "EXAMPLE_TS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({...})\nexport class OfficeLocations {\n    constructor(private locationService: LocationService) {}\n\n    locations$: Observable<string[]>;\n    loading = false;\n\n    fetchLocations() {\n        this.loading = true;\n        this.locations$ = this.locationService.getLocations().pipe(tap(() => this.loading = false));\n    }\n}\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
        "type": "",
        "defaultValue": "`\n<span class=\"spinner spinner-md\">\n    Loading...\n</span>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 1\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"top-right\" clrSize=\"xs\" *clrIfOpen>\n        <span>Lorem</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-xs\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-3.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>1 of 3</span>\n    </div>\n    <div class=\"clr-col-lg-auto\">\n        <span>Variable width content</span>\n    </div>\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>3 of 3</span>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1 of 3</span>\n    </div>\n    <div class=\"clr-col-md-auto\">\n        <span>Variable Width Content</span>\n    </div>\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>3 of 3</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-top-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-4.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-break-row\">\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row clr-align-items-center\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
        "type": "",
        "defaultValue":
          "`\n<div *ngIf=\"downloadingFile\">\n  <clr-spinner clrInline>\n    Downloading\n  </clr-spinner>\n  <span>\n      Downloading\n  </span>\n</div>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-4\">\n        <span>1/3 (auto)</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>Remaining</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
        "type": "",
        "defaultValue":
          "`\n<span class=\"spinner spinner-inline\">\n    Loading...\n</span>\n<span>\n    Loading...\n</span>\n`"
      },
      {
        "name": "EXAMPLE1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "",
        "defaultValue": "`<clr-progress-bar clrValue=\"65\" clrSuccess clrLabeled></clr-progress-bar>`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
        "type": "",
        "defaultValue": "`\n<span class=\"spinner spinner-inverse\">\n    Loading...\n</span>\n`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-spinner *ngIf=\"downloadinInvoice\" clrMedium clrAssertive>Downloading</clr-spinner>\n`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"progress-block\">\n  <label for=\"demoProgressBar\">Text on the left</label>\n  <clr-progress-bar id=\"demoProgressBar\" clrValue=\"85\"></clr-progress-bar>\n  <span>Text on the right</span>\n</div>\n`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
        "type": "",
        "defaultValue": "`\n<span class=\"spinner spinner-lg\">\n    Loading...\n</span>\n`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row clr-align-items-end\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 2\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"top-left\" clrSize=\"sm\" *clrIfOpen>\n        <span>Lorem ipsum</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/4 (auto)</span>\n    </div>\n    <div class=\"clr-col-6\">\n        <span>1/2 (fixed)</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/4 (auto)</span>\n    </div>\n</div>\n`"
      },
      {
        "name": "EXAMPLE2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-top-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "",
        "defaultValue": "`<clr-progress-bar clrValue=\"75\" clrLoop></clr-progress-bar>`"
      },
      {
        "name": "EXAMPLE3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-bottom-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, ipsum</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 3\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"bottom-right\" clrSize=\"md\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
      },
      {
        "name": "EXAMPLE4",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "",
        "defaultValue": "`<clr-progress-bar clrValue=\"65\" clrLabeled clrDisplayval=\"65$\"></clr-progress-bar>`"
      },
      {
        "name": "EXAMPLE4",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-lg tooltip-bottom-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE4",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 4\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"bottom-left\" clrSize=\"lg\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
      },
      {
        "name": "EXAMPLE4",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-lg\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE5",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, ipsum</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLE5",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 5\"></clr-icon>\n    <clr-tooltip-content *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
      },
      {
        "name": "EXAMPLE6",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 6\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"left\" clrSize=\"sm\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
      },
      {
        "name": "EXAMPLE6",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "",
        "defaultValue":
          "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`"
      },
      {
        "name": "EXAMPLES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/expandable-rows/examples.ts",
        "type": "object",
        "defaultValue":
          "{\n  basic: `\n<clr-dg-row *ngFor=\"let user of users\">\n    <-- Cells declarations -->\n    <clr-dg-cell>...</clr-dg-cell>\n\n    <clr-dg-row-detail *clrIfExpanded>\n        Lorem ipsum...\n    </clr-dg-row-detail>\n</clr-dg-row>\n`,\n\n  replace: `\n<clr-dg-row-detail *clrIfExpanded [clrDgReplace]=\"true\">\n    Lorem ipsum...\n</clr-dg-row-detail>\n`,\n\n  lazyLoadingRow: `\n<clr-dg-row *ngFor=\"let user of users\">\n    <-- Cells declarations -->\n    <clr-dg-cell>...</clr-dg-cell>\n\n    <my-detail *clrIfExpanded [user]=\"user\" ngProjectAs=\"clr-dg-row-detail\"></my-detail>\n</clr-dg-row>\n`,\n\n  lazyLoadingDetail: `\n@Component({\n    selector: \"my-detail\",\n    template: \\`\n        <div [clrLoading]=\"loading\">...</div>\n    \\`\n})\nclass MyDetailComponent implements OnInit {\n    @Input() user: User;\n\n    loading: boolean;\n\n    ngOnInit() {\n        this.loading = true;\n        // Make the server call\n        fetchRemoteDetail(user).then(() => this.loading = false));\n    }\n}\n`,\n\n  conditional: `\n<ng-container ngProjectAs=\"clr-dg-row-detail\" *ngIf=\"true\">\n  <clr-dg-row-detail *clrIfExpanded>\n    Lorem ipsum...\n  </clr-dg-row-detail>\n</ng-container>\n`,\n}"
      },
      {
        "name": "EXAMPLES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/built-in-filters/examples.ts",
        "type": "object",
        "defaultValue":
          "{\n  stringFilterInterface: `\ninterface ClrDatagridStringFilterInterface<T> {\n    accepts(item: T, search: string): boolean;\n}\n`,\n\n  stringFilterInput: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    My column\n    <clr-dg-string-filter [clrDgStringFilter]=\"myFilter\"></clr-dg-string-filter>\n</clr-dg-column>\n`,\n\n  stringFilterTS: `\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nclass PokemonFilter implements ClrDatagridStringFilterInterface<User> {\n    accepts(user: User, search: string):boolean {\n        return \"\" + user.pokemon.number == search\n            || user.pokemon.name.toLowerCase().indexOf(search) >= 0;\n    }\n}\n\n@Component({ /* ... */ })\nclass MyComponent {\n    private pokemonFilter = new PokemonFilter();\n}\n`,\n  stringFilterHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    Pokemon\n    <clr-dg-string-filter [clrDgStringFilter]=\"pokemonFilter\"></clr-dg-string-filter>\n</clr-dg-column>\n`,\n  filterPresetHTML: `\n<-- Using clrFilterValue declaration -->\n<clr-dg-string-filter [clrDgStringFilter]=\"pokemonFilter\"\n                      [(clrFilterValue)]=\"myFilterValue\">\n</clr-dg-string-filter>\n<clr-dg-numeric-filter [clrDgNumericFilter]=\"winsFilter\"\n                       [clrFilterValue]=\"[10, null]\">\n</clr-dg-numeric-filter>\n`,\n  numericFilterInterface: `\ninterface ClrDatagridNumericFilterInterface<T> {\n  accepts(item: T, low: number, high: number): boolean;\n}\n`,\n  numericFilterInput: `\n<clr-dg-column>\n  Wins\n  <clr-dg-numeric-filter [clrDgNumericFilter]=\"winsFilter\"></clr-dg-numeric-filter>\n</clr-dg-column>\n`,\n}"
      },
      {
        "name": "EXAMPLES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/sorting/examples.ts",
        "type": "object",
        "defaultValue":
          "{\n  sortingTS: `\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\n\nclass PokemonComparator implements ClrDatagridComparatorInterface<User> {\n    compare(a: User, b: User) {\n        return a.pokemon.number - b.pokemon.number;\n    }\n}\n\n@Component({ /* ... */ })\nclass MyComponent {\n    public pokemonComparator = new PokemonComparator();\n}\n`,\n  sortingHTML: `\n<-- In the columns declaration -->\n<clr-dg-column [clrDgField]=\"'pokemon.name'\"\n               [clrDgSortBy]=\"pokemonComparator\">Pokemon</clr-dg-column>\n`,\n  preSortTS: `\nimport {ClrDatagridSortOrder} from '@clr/angular';\n...\n@Component({ /* ... */ })\nclass MyComponent {\n    this.descSort = ClrDatagridSortOrder.DESC;\n}\n`,\n  preSortHTML: `\n    <clr-dg-column [clrDgField]=\"'name'\" [clrDgSortOrder]=\"descSort\">Name</clr-dg-column>\n`,\n}"
      },
      {
        "name": "EXAMPLES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/server-driven/examples.ts",
        "type": "object",
        "defaultValue":
          "{\n  stateInterface: `\ninterface ClrDatagridStateInterface<T = any> {\n    page?: {\n        from?: number;\n        to?: number;\n        size?: number;\n        current?: number;\n    }\n    sort?: {\n        by: string | ClrDatagridComparatorInterface<T>;\n        reverse: boolean;\n    };\n    filters?: any[];\n}\n`,\n\n  serverDrivenTS: `\nimport {ClrDatagridStateInterface} from \"@clr/angular\";\n\nclass MyComponent {\n    users: User[];\n    total: number;\n    loading: boolean = true;\n\n    refresh(state: ClrDatagridStateInterface) {\n        this.loading = true;\n        // We convert the filters from an array to a map,\n        // because that's what our backend-calling service is expecting\n        let filters:{[prop:string]: any[]} = {};\n        if (state.filters) {\n            for (let filter of state.filters) {\n                let {property, value} = <{property: string, value: string}>filter;\n                filters[property] = [value];\n            }\n        }\n        this.inventory.filter(filters)\n            .sort(<{by: string, reverse: boolean}>state.sort)\n            .fetch(state.page.from, state.page.size)\n            .then((result: FetchResult) => {\n                this.users = result.users;\n                this.total = result.length;\n                this.loading = false;\n            });\n    }\n}\n`,\n\n  serverDrivenHTML: `\n<clr-datagrid (clrDgRefresh)=\"refresh($event)\" [clrDgLoading]=\"loading\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon'\">Pokemon</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'color'\">Favorite color</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{total}} users\n        <clr-dg-pagination #pagination [clrDgTotalItems]=\"total\"></clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n`,\n}"
      },
      {
        "name": "EXAMPLES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/filtering/examples.ts",
        "type": "object",
        "defaultValue":
          "{\n  filterInterface: `\ninterface ClrDatagridFilterInterface<T, S=any> {\n    isActive(): boolean;\n    accepts(item: T): boolean;\n    changes: Observable<any>;\n    readonly state?: S;\n    equals?(other: ClrDatagridFilterInterface<T, any>): boolean;\n}\n`,\n\n  inlineFilterTS: `\nimport {ClrDatagridFilterInterface} from \"@clr/angular\";\n\nclass MyFilter implements ClrDatagridFilterInterface<User> {\n    changes = new Subject<any>();\n    isActive(): boolean { /* ... */ }\n    accepts(user: User) { /* ... */ }\n}\n\n@Component({ /* ... */ })\nclass MyComponent {\n    public myFilter = new MyFilter();\n}\n`,\n\n  inlineFilterHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    My column\n    <clr-dg-filter [clrDgFilter]=\"myFilter\">\n        <-- The HTML from your custom filter: inputs, checkboxes, ... -->\n    </clr-dg-filter>\n</clr-dg-column>\n`,\n\n  customFilterComponentTS: `\nimport {ClrDatagridFilterInterface, ClrDatagridFilter} from \"@clr/angular\";\n\n@Component({\n    selector: \"my-filter\",\n    /* ... */\n})\nclass MyFilter implements ClrDatagridFilterInterface<User> {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n    changes = new Subject<any>();\n    isActive(): boolean { /* ... */ }\n    accepts(user: User) { /* ... */ }\n}\n`,\n\n  customFilterComponentHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    My column\n    <clr-dg-filter>\n        <my-filter></my-filter>\n    </clr-dg-filter>\n</clr-dg-column>\n`,\n\n  templateVariableTS: `\n@Component({\n    selector: \"my-reusable-filter\",\n    /* ... */\n})\nclass MyReusableFilter {\n    changes = new Subject<any>();\n    isActive(): boolean { /* ... */ }\n    accepts(user: User) { /* ... */ }\n}\n`,\n\n  templateVariableHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    My column\n    <clr-dg-filter [clrDgFilter]=\"myFilter\">\n        <my-reusable-filter #myFilter></my-reusable-filter>\n    </clr-dg-filter>\n</clr-dg-column>\n`,\n\n  colorFilterTS: `\nimport {ClrDatagridFilterInterface} from \"@clr/angular\";\n\n@Component({\n    selector: \"color-filter\",\n    /* The rest of the filter component's declaration */\n})\nclass ColorFilter implements ClrDatagridFilterInterface<User> {\n    changes = new Subject<any>();\n    isActive(): boolean { /* ... */ }\n    accepts(user: User) { /* ... */ }\n}\n`,\n\n  colorFilterHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    Favorite color\n    <clr-dg-filter [clrDgFilter]=\"colorFilter\">\n        <color-filter #colorFilter></color-filter>\n    </clr-dg-filter>\n</clr-dg-column>\n`,\n  stringFilterColumnPresetHTML: `\n<-- Using clrFilterValue declaration -->\n<clr-dg-column [clrDgField]=\"'name'\" [(clrFilterValue)]=\"myFilterValue\">\n    Name\n</clr-dg-column>\n`,\n  filterSearchResults: `\n<clr-datagrid>\n    <-- \n      This will search into user.creation (a Date object) and not the result\n      of the pipe (the string 'Jan 6, 2018').\n    -->\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation Date</clr-dg-column>\n\n    <-- \n      This will search into user.name and will not include user.id -- \n      searching for user.id will not return any results.\n    -->\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{ user.id }} : {{ user.name }}</clr-dg-cell>\n    </clr-dg-row>\n</clr-datagrid>\n  `,\n}"
      },
      {
        "name": "FLIP_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-icon shape=\"floppy\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"horizontal\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"vertical\"></clr-icon>\n`"
      },
      {
        "name": "fullExample",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Full example</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.two\" name=\"three\" />\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`"
      },
      {
        "name": "ga",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/app.component.ts",
        "type": "Function"
      },
      {
        "name": "GROCERY_SERVICE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "object",
        "defaultValue": "{\n  getGroups: () => of(ALL_GROCERIES),\n}"
      },
      {
        "name": "horizontal",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts",
        "type": "",
        "defaultValue": "`\n<ul class=\"clr-timeline clr-timeline-horizontal\">\n  ...\n</ul>\n`"
      },
      {
        "name": "HTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/wizard/wizard-static.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-wizard\">\n  <div class=\"modal static\">\n    <div class=\"modal-dialog modal-xl\" role=\"dialog\">\n      <div class=\"modal-outer-wrapper\">\n        <div class=\"modal-content-wrapper\">\n          <nav class=\"modal-nav clr-wizard-stepnav-wrapper\">\n            <h3 class=\"clr-wizard-title\">Wizard Title</h3>\n            <div class=\"clr-wizard-stepnav\">\n              <div class=\"clr-wizard-stepnav-list\" role=\"tablist\">\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item active\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-0\"\n                  aria-selected=\"true\"\n                  aria-controls=\"clr-wizard-step-0\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 1\n                  </button>\n                </div>\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-1\"\n                  aria-selected=\"false\"\n                  aria-controls=\"clr-wizard-step-1\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 2\n                  </button>\n                </div>\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-2\"\n                  aria-selected=\"false\"\n                  aria-controls=\"clr-wizard-step-2\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 3\n                  </button>\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n              </button>\n              <h3 class=\"modal-title\">\n                <span class=\"modal-title-text\">Title for page 1</span>\n              </h3>\n            </div>\n            <div class=\"modal-body\">\n              <main class=\"clr-wizard-content\">\n                <div\n                  id=\"clr-wizard-page-0\"\n                  aria-hidden=\"false\"\n                  aria-labelledby=\"clr-wizard-step-0\"\n                  class=\"active clr-wizard-page\"\n                >\n                  <p>Content for step 1</p>\n                </div>\n\n                <div\n                  id=\"clr-wizard-page-1\"\n                  aria-hidden=\"true\"\n                  aria-labelledby=\"clr-wizard-step-1\"\n                  class=\"clr-wizard-page\"\n                >\n                  <p>Content for step 2</p>\n                </div>\n\n                <div\n                  id=\"clr-wizard-page-2\"\n                  aria-hidden=\"true\"\n                  aria-labelledby=\"clr-wizard-step-2\"\n                  class=\"clr-wizard-page\"\n                >\n                  <p>Content for step 3</p>\n                </div>\n              </main>\n            </div>\n\n            <div class=\"modal-footer clr-wizard-footer\">\n              <div class=\"clr-wizard-footer-buttons\">\n                <div class=\"clr-wizard-footer-buttons-wrapper\">\n                  <div class=\"clr-wizard-btn-wrapper\">\n                    <button class=\"btn clr-wizard-btn btn-link clr-wizard-btn--tertiary\">\n                      Cancel\n                    </button>\n                  </div>\n                  <div class=\"clr-wizard-btn-wrapper\">\n                    <button class=\"btn clr-wizard-btn btn-primary clr-wizard-btn--primary\">\n                      Next\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div aria-hidden=\"true\" class=\"modal-backdrop\"></div>\n  </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMLPE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/progress-bar-inline-cards.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-sm-6\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">Here is a progress bar at the very top of a card.</p>\n                <div class=\"progress-block\">\n                    <label>Label</label>\n                    <div class=\"progress-static\">\n                        <div class=\"progress-meter\" data-value=\"...\"></div>\n                    </div>\n                </div>\n                <div class=\"progress-block\">\n                    <label>Longer Label</label>\n                    <div class=\"progress-static\">\n                        <div class=\"progress-meter\" data-value=\"...\"></div>\n                    </div>\n                </div>\n                <div class=\"progress-block\">\n                    <label>Really, Really, Really Long Label</label>\n                    <div class=\"progress success\">\n                        <progress value=\"...\" max=\"100\" data-displayval=\"...%\"></progress>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"progress-static top\">\n                    <div class=\"progress-meter\" data-value=\"...\"></div>\n                </div>\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/snorlax.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Snorlax</h4>\n<p>\n    Snorlax's typical day consists of nothing more than eating and sleeping.\n    It is such a docile Pokémon that there are children who use its expansive belly as a place to play.\n</p>`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/basic-structure/basic-structure.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"main-container\">\n    <header class=\"header\">\n        ...\n    </header>\n    <div class=\"content-container\">\n        <clr-vertical-nav>\n            <a clrVerticalNavLink routerLink=\"./charmander\" routerLinkActive=\"active\">Charmander</a>\n            <a clrVerticalNavLink routerLink=\"./jigglypuff\" routerLinkActive=\"active\">Jigglypuff</a>\n            <a clrVerticalNavLink routerLink=\"./pikachu\" routerLinkActive=\"active\">Pikachu</a>\n            <a clrVerticalNavLink routerLink=\"./raichu\" routerLinkActive=\"active\">Raichu</a>\n            <a clrVerticalNavLink routerLink=\"./snorlax\" routerLinkActive=\"active\">Snorlax</a>\n            <div class=\"nav-divider\"></div>\n            <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">Credit</a>\n        </clr-vertical-nav>\n        <div class=\"content-area\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/raichu.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Raichu</h4>\n<p>\n    If the electrical sacs become excessively charged,\n    Raichu plants its tail in the ground and discharges.\n    Scorched patches of ground will be found near this Pokémon's nest.\n</p>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pikachu.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Pikachu</h4>\n<p>\n    Whenever Pikachu comes across something new, it blasts it with a jolt of electricity.\n    If you come across a blackened berry, it's evidence that\n    this Pokémon mistook the intensity of its charge.\n</p>`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" [(clrVerticalNavCollapsed)]=\"collapsed\">\n    <a clrVerticalNavLink routerLink=\"./normal\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"./electric\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n    <a clrVerticalNavLink routerLink=\"./poison\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"sad-face\"></clr-icon>\n        Poison\n    </a>\n    <a clrVerticalNavLink routerLink=\"./grass\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bug\"></clr-icon>\n        Grass\n    </a>\n    <a clrVerticalNavLink routerLink=\"./fighting\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"shield\"></clr-icon>\n        Fighting\n    </a>\n    <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"certificate\"></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pidgey.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Pidgey</h4>\n<p>\n    Pidgey has an extremely sharp sense of direction. \n    It is capable of unerringly returning home to its nest, \n    however far it may be removed from its familiar surroundings.\n</p>`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/jigglypuff.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Jiggpuff</h4>\n<p>\n    Jigglypuff's vocal cords can freely adjust the wavelength of its voice.\n    This Pokémon uses this ability to sing at precisely the right wavelength to\n    make its foes most drowsy.\n</p>`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charmander.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Charmander</h4>\n<p>\n  The flame that burns at the tip of its tail is an indication of its emotions.\n  The flame wavers when Charmander is enjoying itself.\n  If the Pokémon becomes enraged, the flame burns fiercely.\n</p>`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm #simpleForm=\"ngForm\">\n    <h4>Template Driven Form Demo</h4>\n    <clr-date-container>\n        <label>Enter Date</label>\n        <input type=\"date\" name=\"date\" [(ngModel)]=\"date\" clrDate>\n    </clr-date-container>\n</form>\n<pre class=\"datepicker-output\">\n{{simpleForm.value | json}}\n</pre>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm [formGroup]=\"dateForm\" novalidate>\n    <h4>Reactive Form Demo</h4>\n    <clr-date-container>\n        <label>Date</label>\n        <input type=\"date\" clrDate formControlName=\"date\"/>\n    </clr-date-container>\n</form>\n<pre class=\"datepicker-output\">\n    {{dateForm.value | json}}\n</pre>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/button-states.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-info-outline\">Info</button>\n<button class=\"btn btn-success-outline\">Success</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-danger\">Danger</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/buttons-icons-sm.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"home\"></clr-icon>\n    Home\n</button>\n\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"directory\"></clr-icon>\n    Directory\n</button>\n\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"cog\"></clr-icon>\n    Settings\n</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/buttons-icons.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"home\"></clr-icon>\n    Home\n</button>\n\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"directory\"></clr-icon>\n    Directory\n</button>\n\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"cog\"></clr-icon>\n    Settings\n</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/icon-buttons.ts",
        "type": "",
        "defaultValue":
          "`\n<button type=\"button\" class=\"btn btn-icon\" aria-label=\"home\">\n    <clr-icon shape=\"home\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-primary\" aria-label=\"settings\">\n    <clr-icon shape=\"cog\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-warning\" aria-label=\"warning\">\n    <clr-icon shape=\"warning-standard\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-danger\" aria-label=\"error\">\n    <clr-icon shape=\"error-standard\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-success\" aria-label=\"done\">\n    <clr-icon shape=\"check\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon\" disabled aria-label=\"home\">\n    <clr-icon shape=\"home\"></clr-icon>\n</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/inverse-button.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-inverse\">Inverse</button>\n<button class=\"btn btn-inverse\" disabled>Disabled Inverse</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/primary-button.ts",
        "type": "",
        "defaultValue": "`\n<button class=\"btn btn-primary\">Primary</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-date-io.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm clrLayout=\"vertical\">\n  <clr-date-container>\n    <label>Date Object</label>\n    <input type=\"date\" [(clrDate)]=\"date\">\n  </clr-date-container>\n</form>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n    <clr-date-container>\n        <label>Basic Demo</label>\n        <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\">\n    </clr-date-container>\n</form>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charizard.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Charizard</h4>\n<p>\n  Charizard flies around the sky in search of powerful opponents. \n  It breathes fire of such great heat that it melts anything. \n  However, it never turns its fiery breath on any opponent weaker than itself.\n</p>`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/secondary-button.ts",
        "type": "",
        "defaultValue": "`\n<button class=\"btn\">Secondary</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/tertiary-button.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-link\">Tertiary</button>\n<button class=\"btn btn-link\" disabled>Disabled</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-alert.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"card\">\n    <div class=\"card-block\">\n        <div class=\"alert alert-warning alert-sm\">\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n            <div class=\"alert-item static\">\n                <span class=\"alert-text\">\n                    Use small alerts in a card.\n                </span>\n            </div>\n        </div>\n        <div class=\"card-media-block wrap\">\n            <img class=\"card-media-image\" src=\"//placehold.it/60x60\" />\n            <div class=\"card-media-description\">\n                <span class=\"card-media-title\">Project B</span>\n                <span class=\"card-media-text\">Owner: Jane Doe</span>\n            </div>\n        </div>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card-footer\">\n        <a class=\"card-link\">Button One</a>\n        <a class=\"card-link\">Button Two</a>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-clickable.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\">\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-dropdown.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-title\">\n                    Block\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">\n                    Action 1\n                </button>\n                <button class=\"btn btn-sm btn-link\">\n                    Action 2\n                </button>\n                <div class=\"dropdown top-left open\">\n                    <button class=\"dropdown-toggle btn btn-sm btn-link\">\n                        Dropdown 1\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a href=\"...\" class=\"dropdown-item\">Item 1</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 2</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 3</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 4</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-grid.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 1</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 1</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 2</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 2</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 3</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 3</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-images.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n        </a>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable card-img\">\n            <img src=\"...\" alt=\"...\" />\n        </a>\n    </div>\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n        </a>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-layout.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-5 clr-col-md-8 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-title\">\n                    Block\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Footer Action 1</button>\n                <button class=\"btn btn-sm btn-link\">Footer Action 2</button>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-list-group.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"card\">\n    <div class=\"card-img\">\n        <img src=\"...\">\n    </div>\n    <div class=\"card-block\">\n        <h4 class=\"card-title\">Title</h4>\n        <p class=\"card-text\">\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea, aut.\n        Nihil nemo, necessitatibus earum.\n        </p>\n    </div>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Lorem ipsum dolor.</li>\n        <li class=\"list-group-item\">Lorem ipsum dolor sit.</li>\n        <li class=\"list-group-item\">Lorem ipsum.</li>\n    </ul>\n    <div class=\"card-footer\">\n        <a href=\"...\" class=\"btn btn-sm btn-link\">Action 1</a>\n        <a href=\"...\" class=\"btn btn-sm btn-link\">Action 2</a>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-masonry.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"card-columns\">\n    <div class=\"card\">\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div href=\"...\" class=\"card\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <h3 class=\"card-title\">Title</h3>\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-footer\">\n            <a href=\"...\" class=\"btn btn-primary\">Action</a>\n        </div>\n    </div>\n    <a href=\"...\" class=\"card clickable\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n    </a>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/card-media-block.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-media-block\">\n                    <img src=\"...\" class=\"card-media-image\">\n                    <div class=\"card-media-description\">\n                        <span class=\"card-media-title\">\n                            Project A\n                        </span>\n                        <span class=\"card-media-text\">\n                            Owner: John Doe\n                        </span>\n                    </div>\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Action</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-media-block wrap\">\n                    <img src=\"...\" class=\"card-media-image\">\n                    <div class=\"card-media-description\">\n                        <span class=\"card-media-title\">\n                            Project B\n                        </span>\n                        <span class=\"card-media-text\">\n                            Owner: Jane Doe\n                        </span>\n                    </div>\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Action</button>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/lists-in-cards.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Ordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ol class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ol class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ol class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                </ol>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unstyled Lists\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </p>\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list-unstyled\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/card/progress-bar-cards.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"progress top\">\n                    <progress value=\"...\" max=\"100\"></progress>\n                </div>\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">...</p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">...</p>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"progress\">\n                    <progress value=\"...\" max=\"100\"></progress>\n                </div>\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/normal.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Normal</h4>\n<p>\n    The Normal type is the most basic type of Pokémon. \n    They are very common and appear from the very first route you visit. \n    Most Normal Pokémon are single type, but there is a large contingent having a second type of Flying.\n</p>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/poison.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Poison</h4>\n<p>\n    The Poison type is regarded as one of the weakest offensively. \n    Prior to Pokémon X/Y it was super-effective only against Grass \n    (many of which are dual Poison so neutralizes the effect). It now has an \n    extra advantage against the new Fairy type. In the first generation it was \n    also super-effective against Bug but this was changed. It fares a little better \n    defensively but its best advantage is through status moves like Toxic.\n</p>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/grass.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Grass</h4>\n<p>\n  Grass is one of the three basic elemental types along with Fire and Water, \n  which constitute the three starter Pokémon. This creates a simple triangle \n  to explain the type concept easily to new players.\n</p>            \n<p>\n  Grass is one of the weakest types statistically, with 5 defensive weaknesses \n  and 7 types that are resistant to Grass moves. Furthermore, many Grass Pokémon \n  have Poison as their secondary type, adding a Psychic vulnerability. \n  The type combination with the most weaknesses is Grass/Psychic.\n</p>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/electric.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Electric</h4>\n<p>\n    There are relatively few Electric Pokémon; in fact only four were added in the third generation. \n    Most are based on rodents or inanimate objects.\n</p>\n<p>\n    Electric Pokémon are very good defensively, being weak only to Ground moves.\n</p>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/app-layout/app-layout.demo.ts",
        "type": "",
        "defaultValue":
          "`\nhtml {\n    /* the following line of CSS would change Clarity to a 20px vertical rhythm with a 5px grid */\n    font-size: 20px;\n}\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/app-layout/layout-all.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level\">\n        ...\n    </div>\n    <header class=\"header header-6\">\n        ...\n    </header>\n    <nav class=\"subnav\">\n        ...\n    </nav>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            ...\n        </div>\n        <nav class=\"sidenav\">\n            ...\n        </nav>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/badges/badge-colors.ts",
        "type": "",
        "defaultValue":
          "`\n<span class=\"badge\">1</span>\n<span class=\"badge badge-purple\">15</span>\n<span class=\"badge badge-blue\">2</span>\n<span class=\"badge badge-orange\">3</span>\n<span class=\"badge badge-light-blue\">12</span>\n<span class=\"badge badge-1\">90</span>\n<span class=\"badge badge-2\">51</span>\n<span class=\"badge badge-3\">25</span>\n<span class=\"badge badge-4\">32</span>\n<span class=\"badge badge-5\">57</span>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/badges/badge-statuses.ts",
        "type": "",
        "defaultValue":
          "`\n<span class=\"badge badge-info\">2</span>\n<span class=\"badge badge-success\">3</span>\n<span class=\"badge badge-warning\">12</span>\n<span class=\"badge badge-danger\">15</span>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-close-item-false.ts",
        "type": "",
        "defaultValue":
          "`\n    <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\n        <button clrDropdownTrigger aria-label=\"Dropdown demo button\">\n            <clr-icon shape=\"error\" class=\"is-error\" size=\"24\"></clr-icon>\n            <clr-icon shape=\"caret down\"></clr-icon>\n        </button>\n        <clr-dropdown-menu *clrIfOpen>\n            <label class=\"dropdown-header\" aria-hidden=\"true\">Dropdown header</label>\n            <div aria-label=\"Dropdown header Action 1\" clrDropdownItem>Action 1</div>\n            <div aria-label=\"Dropdown header Action 2\"  clrDropdownItem>Action 2</div>\n            <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\n            <div clrDropdownItem>Link 1</div>\n            <div clrDropdownItem>Link 2</div>\n        </clr-dropdown-menu>\n    </clr-dropdown>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/angular-basic-structure.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-button-group class=\"btn-primary\">\n    <clr-button>Create</clr-button>\n    <clr-button>Favorite</clr-button>\n    <clr-button [clrInMenu]=\"true\">Assign</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/angular-directions.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-button-group [clrMenuPosition]=\"'bottom-right'\">\n    <clr-button class=\"btn\">Add</clr-button>\n    <clr-button class=\"btn\">Edit</clr-button>\n    <clr-button class=\"btn\">Download</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Assign</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-default.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"dropdown open\">\n    <button class=\"dropdown-toggle btn btn-primary\" type=\"button\">\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item active\">Action</div>\n        <div class=\"dropdown-item disabled\">Disabled Link</div>\n        <div class=\"dropdown-divider\" role=\"separator\"></div>\n        <button class=\"dropdown-item\">Lorem.</button>\n        <div class=\"dropdown open right-bottom\">\n            <button class=\"dropdown-item active expandable\">Lorem ipsum.</button>\n            <div class=\"dropdown-menu\">\n                <div class=\"dropdown-item\">Foo.</div>\n                <div class=\"dropdown open right-top\">\n                    <button class=\"dropdown-item active expandable\">Bar.</button>\n                    <div class=\"dropdown-menu\">\n                        <div class=\"dropdown-item\">Baz.</div>\n                    </div>\n                </div>\n                <div class=\"dropdown-item\">Foo 2.</div>\n            </div>\n        </div>\n        <button class=\"dropdown-item\">Ipsum.</button>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fire.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Fire</h4>\n<p>\n    Fire is one of the three basic elemental types along with Water and Grass, \n    which constitute the three starter Pokémon. This creates a \n    simple triangle to explain the type concept easily to new players. \n    Fire types are notoriously rare in the early stages of the games \n    so choosing the Fire variation starter is often a plus.\n</p>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fighting.ts",
        "type": "",
        "defaultValue":
          "`\n<h4 clrFocusOnViewInit>Fighting</h4>\n<p>\n    Fighting Pokémon are strong and muscle-bound, often based on martial artists. \n    Fighting moves are super-effective against five other types (as is Ground), \n    making them very good offensively. Most Fighting type moves are in the Physical category, \n    for obvious reasons.\n</p>  \n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"collapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./normal\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n            Normal\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./fire\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n            Fire\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./electric\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n            Electric\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n        Normal\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n        Fire\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n        Electric\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"collapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./normal\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n            Normal\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./fire\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n            Fire\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./electric\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n            Electric\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/icons/icons.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-vertical-nav>\n    <a clrVerticalNavLink routerLink=\"./normal\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"./electric\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n    <a clrVerticalNavLink routerLink=\"./poison\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"sad-face\"></clr-icon>\n        Poison\n    </a>\n    <a clrVerticalNavLink routerLink=\"./grass\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bug\"></clr-icon>\n        Grass\n    </a>\n    <a clrVerticalNavLink routerLink=\"./fighting\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"shield\"></clr-icon>\n        Fighting\n    </a>\n    <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"certificate\"></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./normal\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n        Normal\n        <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./fire\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n        Fire\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./electric\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n        Electric\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/icons.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-primary btn-icon\">\n    <button class=\"btn\">\n        <clr-icon shape=\"home\"></clr-icon>\n        <span class=\"clr-icon-title\">Home</span>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"cog\"></clr-icon>\n        <span class=\"clr-icon-title\">Settings</span>\n    </button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">\n                <clr-icon shape=\"user\"></clr-icon>\n                <span class=\"clr-icon-title\">User</span>\n            </button>\n            <button class=\"btn\">\n                <clr-icon shape=\"cloud\"></clr-icon>\n                <span class=\"clr-icon-title\">Cloud</span>\n            </button>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokemon.ts",
        "type": "",
        "defaultValue":
          "`\n<b clrFocusOnViewInit>Credit: </b>\n<a target=\"_blank\" href=\"https://www.pokemon.com/us/\">Pokémon</a>`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/mixed.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Favorite</button>\n    <button class=\"btn btn-success\">Add</button>\n    <button class=\"btn btn-danger\">Delete</button>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-app-level.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-alert [clrAlertType]=\"'danger'\" [clrAlertAppLevel]=\"true\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is an app level alert.\n        </span>\n        <div class=\"alert-actions\">\n            <button class=\"btn alert-action\">Fix</button>\n        </div>\n    </clr-alert-item>\n</clr-alert>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-alert [clrAlertType]=\"'success'\" (clrAlertClosedChange)=\"onClose()\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert indicates a success!\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<div>{{closeMessage}}</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/radio.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group\">\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-1\">\n        <label for=\"btn-demo-radio-1\">Apples</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-2\">\n        <label for=\"btn-demo-radio-2\">Oranges</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\">\n        <label for=\"btn-demo-radio-3\">Kiwis</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-4\" checked>\n        <label for=\"btn-demo-radio-4\">Pears</label>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-not-closable.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-alert [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert cannot be dismissed.\n        </span>\n        <div class=\"alert-actions\">\n            <clr-dropdown>\n                <button class=\"dropdown-toggle\" clrDropdownTrigger>\n                    Actions\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-right\">\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Shutdown</a>\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Delete</a>\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Reboot</a>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n        </div>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert [clrAlertType]=\"'warning'\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            Try closing this alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-small.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-alert [clrAlertSizeSmall]=\"true\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a small alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert>\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a regular alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-success.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-alert [clrAlertType]=\"'success'\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert indicates success.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert>\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a default info alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokedex.ts",
        "type": "",
        "defaultValue":
          "`\n<b clrFocusOnViewInit>Credit: </b>\n<a target=\"_blank\" href=\"https://www.pokemon.com/us/pokedex/\">Pokédex</a> and \n<a target=\"_blank\" href=\"https://pokemondb.net\">PokémonDB</a>`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/static/alert-styles.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"alert alert-danger\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"alert alert-warning\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right open\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-info\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <a href=\"...\" class=\"alert-action\">Acknowledge</a>\n                <a href=\"...\" class=\"alert-action\">Reset to green</a>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-success\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/static/alert-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"alert alert-danger\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\" role=\"alert\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                This is an alert with 36px height.\n            </span>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-success alert-sm\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                This is an alert with 24px height.\n            </span>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/static/alert-cards.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"card\">\n    <div class=\"card-block\">\n        <div class=\"alert alert-warning alert-sm\" role=\"alert\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        Use small alerts in a card.\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n        <div class=\"card-media-block wrap\">\n            <img class=\"card-media-image\" src=\"//placehold.it/60x60\" />\n            <div class=\"card-media-description\">\n                <span class=\"card-media-title\">Project B</span>\n                <span class=\"card-media-text\">Owner: Jane Doe</span>\n            </div>\n        </div>\n        <p class=\"card-text\">...</p>\n    </div>\n    <div class=\"card-footer\">\n        <a class=\"card-link\">Button One</a>\n        <a class=\"card-link\">Button Two</a>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/static/alert-content-area.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"content-area\">\n    <div class=\"alert alert-danger\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">\n                    This alert is at the top of the page.\n                </span>\n            </div>\n        </div>\n    </div>\n    <p>...</p>\n    <div class=\"alert alert-success\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">\n                    This alert is in the middle of the page.\n                </span>\n            </div>\n        </div>\n    </div>\n    <p>...</p>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/static/alert-modals.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"modal static bump-down\">\n    <div class=\"modal-dialog\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            Alert in a modal.\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-header\">\n                <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n                <h3 class=\"modal-title\">I have a nice title</h3>\n            </div>\n            <div class=\"modal-body\">\n                <p>But not much to say...</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n            </div>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-button-group class=\"btn-primary\">\n    <clr-button>Add</clr-button>\n    <clr-button>Edit</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`"
      },
      {
        "name": "HTML_EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/basic-structure.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/checkbox.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group\">\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-1\">\n        <label for=\"btn-demo-check-1\">Apples</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-2\" checked>\n        <label for=\"btn-demo-check-2\">Oranges</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-3\">\n        <label for=\"btn-demo-check-3\">Kiwis</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-4 checked\">\n        <label for=\"btn-demo-check-4\">Pears</label>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" class=\"nav-trigger--bottom\">\n    <a clrVerticalNavLink routerLink=\"...\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"...\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n</clr-vertical-nav>\n`"
      },
      {
        "name": "HTML_EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"alert alert-app-level alert-danger\" style=\"margin-bottom:24px\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Danger\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-app-level alert-warning\" style=\"margin-bottom:24px\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Warning\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-app-level alert-info\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Info\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn\">Regular</button>\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-info\">Info</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn\" disabled>Disabled</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE_1",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/real-button.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn btn-danger\" disabled>Disabled</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/icons.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">\n        <clr-icon shape=\"home\"></clr-icon>\n        Home\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"cog\"></clr-icon>\n        Settings\n    </button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">\n                <clr-icon shape=\"user\"></clr-icon>\n                User\n            </button>\n            <button class=\"btn\">\n                <clr-icon shape=\"cloud\"></clr-icon>\n                Cloud\n            </button>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-button-group>\n    <clr-button>Add</clr-button>\n    <clr-button>Edit</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`"
      },
      {
        "name": "HTML_EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/real-button.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-outline\">Regular</button>\n<button class=\"btn btn-success-outline\">Success-Outline</button>\n<button class=\"btn btn-info-outline\">Info</button>\n<button class=\"btn btn-warning-outline\">Warning</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n<button class=\"btn btn-outline\" disabled>Disabled</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-sm\">Regular</button>\n<button class=\"btn btn-primary btn-sm\">Primary</button>\n<button class=\"btn btn-success btn-sm\">Success</button>\n<button class=\"btn btn-info btn-sm\">Info</button>\n<button class=\"btn btn-warning btn-sm\">Warning</button>\n<button class=\"btn btn-danger btn-sm\">Danger</button>\n<button class=\"btn btn-sm\" disabled>Disabled</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/basic-structure.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">Download</button>\n            <button class=\"btn\">Delete</button>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level alert-info\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                </div>\n                <div class=\"alert-text\">\n                    A new update is now available. Upgrade to v.1234.\n                </div>\n                <div class=\"alert-actions\">\n                    <button class=\"btn alert-action\">Install Update</button>\n                </div>\n            </div>\n        </div>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\">\n            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n        </button>\n    </div>\n    <header class=\"header header-6\">\n        <div class=\"branding\">\n            <span class=\"title\">Header</span>\n        </div>\n    </header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <p>...</p>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-link\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-primary btn-block\">Primary</button>\n<button class=\"btn btn-success btn-block\">Success</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE_3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level alert-warning\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"download\"></clr-icon>\n                </div>\n                <div class=\"alert-text\">\n                    A new update is now available. Upgrade to v.1234.\n                </div>\n                <div class=\"alert-actions\">\n                    <button class=\"btn alert-action\">Install Update</button>\n                </div>\n            </div>\n        </div>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\">\n            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n        </button>\n    </div>\n    <header class=\"header header-6\">\n        <div class=\"branding\">\n            <span class=\"title\">Header</span>\n        </div>\n    </header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <p>...</p>\n        </div>\n    </div>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
        "type": "",
        "defaultValue":
          "`\n&lt;clr-button-group class=&quot;btn-link&quot;&gt;\n    &lt;clr-button&gt;Add&lt;/clr-button&gt;\n    &lt;clr-button&gt;Edit&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Download&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Move&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Delete&lt;/clr-button&gt;\n&lt;/clr-button-group&gt;\n`"
      },
      {
        "name": "HTML_EXAMPLE_3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/real-button.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-link\">Regular</button>\n<button class=\"btn btn-link\" disabled>Disabled</button>\n<button class=\"btn btn-sm btn-link\">Regular</button>\n<button class=\"btn btn-sm btn-link\" disabled>Disabled</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE_4",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-link\">Flat Regular</button>\n<button class=\"btn btn-link\" disabled>Flat Disabled</button>\n`"
      },
      {
        "name": "HTML_EXAMPLE_4",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "",
        "defaultValue":
          "`\n<div class=\"btn-group btn-outline-primary btn-sm\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
      },
      {
        "name": "HTML_EXAMPLE_5",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-link btn-sm\">Flat Regular</button>\n<button class=\"btn btn-link btn-sm\" disabled>Flat Disabled</button>\n`"
      },
      {
        "name": "HTML_IMPORTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "",
        "defaultValue":
          "`\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/ui/clr-ui.min.css\">\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n<script src=\"path/to/node_modules/@clr/icons/clr-icons.min.js\"></script>\n`"
      },
      {
        "name": "ICONS_IMPORTS_ALL",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "",
        "defaultValue":
          "`\n<!--CLARITY ICONS STYLE-->\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n\n<!--CLARITY ICONS DEPENDENCY: CUSTOM ELEMENTS POLYFILL-->\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n\n<!--CLARITY ICONS API & ALL ICON SETS-->\n<script src=\"path/to/node_modules/@clr/icons/clr-icons.min.js\"></script>\n`"
      },
      {
        "name": "ICONS_IMPORTS_SOME",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "",
        "defaultValue":
          "`\n<!--CLARITY ICONS STYLE-->\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n\n<!--CLARITY ICONS DEPENDENCY: CUSTOM ELEMENTS POLYFILL-->\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n\n<!--CLARITY ICONS API & CORE SHAPES SET-->\n<script src=\"path/to/node_modules/@clr/icons/clr-icons-lite.min.js\"></script>\n\n<!--ICON SETS-->\n<script src=\"path/to/node_modules/@clr/icons/shapes/social-shapes.min.js\"></script>\n<script src=\"path/to/node_modules/@clr/icons/shapes/travel-shapes.min.js\"></script>\n`"
      },
      {
        "name": "ICONS_IMPORTS_TS_ALL",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "",
        "defaultValue": "`\nimport '@clr/icons';\nimport '@clr/icons/shapes/all-shapes';\n`"
      },
      {
        "name": "ICONS_IMPORTS_TS_CORE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "",
        "defaultValue": "`\nimport '@clr/icons';\n`"
      },
      {
        "name": "ICONS_IMPORTS_TS_SOME",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "",
        "defaultValue":
          "`\nimport '@clr/icons';\nimport '@clr/icons/shapes/essential-shapes';\nimport '@clr/icons/shapes/technology-shapes';\n`"
      },
      {
        "name": "ICONS_INVENTORY",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
        "type": "object",
        "defaultValue":
          "{\n  'core-shapes': {\n    searchableIcons: makeSetSearchable(CoreShapes, [], ['vm-bug']),\n  },\n  'commerce-shapes': {\n    searchableIcons: makeSetSearchable(CommerceShapes, []),\n  },\n  'essential-shapes': {\n    searchableIcons: makeSetSearchable(EssentialShapes, [], ['angle-double']),\n  },\n  'media-shapes': {\n    searchableIcons: makeSetSearchable(MediaShapes, [], ['wand']),\n  },\n  'social-shapes': {\n    searchableIcons: makeSetSearchable(SocialShapes, [], ['calendar', 'event']),\n  },\n  'travel-shapes': {\n    searchableIcons: makeSetSearchable(TravelShapes, []),\n  },\n  'chart-shapes': {\n    searchableIcons: makeSetSearchable(ChartShapes, []),\n  },\n  'text-edit-shapes': {\n    searchableIcons: makeSetSearchable(TextEditShapes, []),\n  },\n  'technology-shapes': {\n    searchableIcons: makeSetSearchable(TechnologyShapes, [], ['process-on-vm', 'bar-chart', 'line-chart']),\n  },\n}"
      },
      {
        "name": "ICONS_TAGS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-sets/icons-tags.ts",
        "type": "object",
        "defaultValue":
          "{\n  cog: ['gear'],\n  check: ['status', 'ok', 'normal', 'enable'],\n  'check-circle': ['status', 'ok', 'normal', 'success'],\n  'success-standard': ['check', 'status', 'normal', 'ok'],\n  'unknown-status': ['help', 'question'],\n  'plus-circle': ['add'],\n  help: ['question'],\n  floppy: ['disk', 'save'],\n  image: ['graphic'],\n  envelope: ['letter'],\n  times: ['multiply', 'x', 'delete'],\n  'times-circle': ['delete'],\n  power: ['on'],\n  heart: ['love'],\n  'thumbs-up': ['like'],\n  'thumbs-down': ['dislike'],\n  'happy-face': ['emoji'],\n  'neutral-face': ['emoji'],\n  'sad-face': ['emoji'],\n  angle: ['arrow', 'collapse', 'expand', 'chevron'],\n  'angle-double': ['arrow'],\n  flame: ['fire'],\n  'talk-bubbles': ['chat'],\n  truck: ['shipping'],\n  trash: ['delete', 'remove'],\n  'step-forward-2': ['first', 'last', 'start', 'end'],\n  sync: ['update'],\n}"
      },
      {
        "name": "id",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/forms/forms-example-block.ts",
        "type": "",
        "defaultValue": "-2"
      },
      {
        "name": "indicator",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "",
        "defaultValue":
          "`\n<p>\n  <clr-icon shape=\"exclamation-triangle\" title=\"Usage Warning\"></clr-icon>\n  CPU usage is at 99% use.\n</p>\n`"
      },
      {
        "name": "interactive",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "",
        "defaultValue": "`\n<button class=\"btn\">\n  <clr-icon shape=\"bars\"></clr-icon> Menu\n</button>`"
      },
      {
        "name": "interactiveNoLabel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "",
        "defaultValue":
          "`\n<button class=\"btn btn-icon\" aria-label=\"main menu\">\n  <clr-icon shape=\"bars\"></clr-icon>\n</button>\n`"
      },
      {
        "name": "INTRO_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue": "`\n<clr-icon shape=\"info-circle\"></clr-icon>\n`"
      },
      {
        "name": "INVERSE_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue": "`\n<clr-icon shape=\"info-circle\" class=\"is-inverse\"></clr-icon>`"
      },
      {
        "name": "ITEMS_SERVICE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "object",
        "defaultValue": "{\n  getItems: (group: Group) => timer(1000).pipe(map(() => (<any>group).items)),\n}"
      },
      {
        "name": "LATENCY",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/expandable-rows/fake-loader.ts",
        "type": "number",
        "defaultValue": "2000"
      },
      {
        "name": "LIGHT_THEME_COLOR_PALETTES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/color/color-palette-functional/functional-color-palettes.ts",
        "type": "[]",
        "defaultValue":
          "[\n  {\n    legend: 'Backgrounds and borders',\n    colors: [\n      { weight: '0', value: 'hsl(198, 0%, 100%)', text: 'dark' },\n      { weight: '50', value: 'hsl(198, 0%, 98%)', text: 'dark' },\n      { weight: '200', value: 'hsl(198, 0%, 93%)', text: 'dark' },\n      { weight: '400', value: 'hsl(198, 0%, 80%)', text: 'dark' },\n      { weight: '500', value: 'hsl(198, 0%, 60%)', text: 'dark' },\n      { weight: '600', value: 'hsl(198, 0%, 45%)', text: 'light' },\n      { weight: '700', value: 'hsl(198, 0%, 34%)', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Row hover, selection',\n    colors: [\n      { weight: '200', value: 'hsl(198, 0%, 93%)', text: 'dark' },\n      { weight: 'n/a', value: 'hsl(201, 29%, 88%) ', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Typography',\n    colors: [\n      { weight: '700', value: 'hsl(198, 0%, 34%)', text: 'light' },\n      { weight: '900', value: 'hsl(198, 0%, 19%)', text: 'light' },\n      { weight: '1000', value: 'hsl(198, 0%, 0%)', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Buttons and app-level alerts',\n    colors: [\n      { weight: '600', value: 'hsl(198, 100%, 36%)', text: 'light' },\n      { weight: '700', value: 'hsl(14, 100%, 39%)', text: 'light' },\n      { weight: '500', value: 'hsl(93, 67%, 38%)', text: 'dark' },\n      { weight: '700', value: 'hsl(93, 100%, 26%)', text: 'light' },\n      { weight: '400', value: 'hsl(198, 0%, 80%)', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Standard alerts',\n    colors: [\n      { weight: '50', value: 'hsl(198, 54%, 92%)', text: 'dark' },\n      { weight: '50', value: 'hsl(93, 52%, 88%)', text: 'dark' },\n      { weight: '100', value: 'hsl(14, 83%, 84%)', text: 'dark' },\n      { weight: '100', value: 'hsl(48, 97%, 85%)', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Headers',\n    colors: [\n      { weight: '900', value: 'hsl(198, 0%, 19%)', text: 'light' },\n      { weight: '1000', value: 'hsl(282, 48%, 14%)', text: 'light' },\n      { weight: '700', value: 'hsl(198, 100%, 34%)', text: 'light' },\n      { weight: '800', value: 'hsl(198, 100%, 27%)', text: 'light' },\n      { weight: '1000', value: 'hsl(198, 100%, 11%)', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Labels & badges',\n    colors: [\n      { weight: '600', value: 'hsl(198, 0%, 45%)', text: 'light' },\n      { weight: '50', value: 'hsl(198, 54%, 92%)', text: 'dark' },\n      { weight: '300', value: 'hsl(198, 57%, 71%)', text: 'dark' },\n      { weight: '600', value: 'hsl(198, 100%, 36%)', text: 'light' },\n      { weight: '800', value: 'hsl(198, 100%, 27%)', text: 'light' },\n      { weight: '500', value: 'hsl(282, 43%, 54%)', text: 'light' },\n      { weight: '100', value: 'hsl(14, 83%, 84%)', text: 'dark' },\n      { weight: '700', value: 'hsl(14, 100%, 39%)', text: 'light' },\n      { weight: '100', value: 'hsl(48, 100%, 83%)', text: 'dark' },\n      { weight: '300', value: 'hsl(48, 94%, 57%)', text: 'dark' },\n      { weight: '500', value: 'hsl(46, 100%, 45%)', text: 'dark' },\n      { weight: '50', value: 'hsl(93, 52%, 88%)', text: 'dark' },\n      { weight: '700', value: 'hsl(93, 100%, 26%)', text: 'light' },\n      { weight: '600', value: 'hsl(198, 0%, 45%)', text: 'light' },\n    ],\n  },\n]"
      },
      {
        "name": "MAIN_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n\n    <clr-dg-detail *clrIfDetail=\"let detail\">\n        <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    </clr-dg-detail>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`"
      },
      {
        "name": "MAIN_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/batch-action/batch-action.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onAdd()\"><clr-icon shape=\"plus\"></clr-icon> Add\n                to group</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" ><clr-icon shape=\"close\"></clr-icon> Delete</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onEdit()\" *ngIf=\"selected.length == 1\"><clr-icon shape=\"pencil\"></clr-icon> Edit</button>\n        </div>\n        <div class=\"btn-group\">\n            <clr-dropdown>\n                <button type=\"button\" class=\"btn btn-sm btn-secondary\" clrDropdownTrigger>\n                    Export\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\n                    <button type=\"button\" (click)=\"onExportAll()\" clrDropdownItem>Export All</button>\n                    <button type=\"button\" (click)=\"onExportSelected()\" [disabled]=\"selected.length === 0\" clrDropdownItem>Export Selected Items</button>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n        </div>\n    </clr-dg-action-bar>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`"
      },
      {
        "name": "MAIN_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`"
      },
      {
        "name": "MAIN_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/single-action/single-action.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-action-overflow>\n            <button class=\"action-item\" (click)=\"onEdit(user)\">Edit</button>\n            <button class=\"action-item\" (click)=\"onDelete(user)\">Delete</button>\n        </clr-dg-action-overflow>\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`"
      },
      {
        "name": "MAIN_HTML_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/button-loading.ts",
        "type": "",
        "defaultValue":
          "`\n<button [clrLoading]=\"validateBtnState\" class=\"btn btn-info-outline\" (click)=\"validateDemo()\">Validate</button>\n<button [clrLoading]=\"submitBtnState\" type=\"submit\" class=\"btn btn-success-outline\" (click)=\"submitDemo()\">Submit</button>\n`"
      },
      {
        "name": "MAIN_TS_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/buttons/button-loading.ts",
        "type": "",
        "defaultValue":
          "`\nimport { ClrLoadingState } from '@clr/angular';\n\nexport class ButtonLoadingDemo {\n  validateBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n  submitBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  validateDemo() {\n    this.validateBtnState = ClrLoadingState.LOADING;\n    //Validating Logic\n    this.validateBtnState = ClrLoadingState.SUCCESS;\n  }\n\n  submitDemo() {\n    this.submitBtnState = ClrLoadingState.LOADING;\n    //Submit Logic\n    this.submitBtnState = ClrLoadingState.DEFAULT;\n  }\n}\n    \n`"
      },
      {
        "name": "MAX_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n  <clr-date-container>\n    <label>Max date: 2019-11-19</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" max=\"2019-11-19\">\n  </clr-date-container>\n</form>\n`"
      },
      {
        "name": "MIN_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n  <clr-date-container>\n    <label>Min date: 2019-11-17</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" min=\"2019-11-17\">\n  </clr-date-container>\n</form>\n`"
      },
      {
        "name": "MIN_MAX_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n  <clr-date-container>\n    <label>Min date: 2019-11-17 AND Max date: 2019-11-19</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" min=\"2019-11-17\" max=\"2019-11-19\">\n  </clr-date-container>\n</form>\n`"
      },
      {
        "name": "MONOCHROME_NEUTRAL_SCHEMES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/color/color-scheme/color-schemes.ts",
        "type": "[]",
        "defaultValue":
          "[\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 19%)' },\n      { hex: 'hsl(198, 57%, 85%)' },\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(198, 66%, 56%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(198, 100%, 34%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(198, 0%, 34%)' },\n      { hex: 'hsl(14, 83%, 84%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(14, 91%, 55%)' },\n      { hex: 'hsl(14, 100%, 44%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 45%)' },\n      { hex: 'hsl(93, 52%, 88%)' },\n      { hex: 'hsl(93, 100%, 21%)' },\n      { hex: 'hsl(93, 100%, 16%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(93, 76%, 49%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(48, 100%, 69%)' },\n      { hex: 'hsl(282, 44%, 62%)' },\n      { hex: 'hsl(198, 0%, 45%)' },\n      { hex: 'hsl(282, 59%, 87%)' },\n      { hex: 'hsl(282, 43%, 54%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(93, 76%, 49%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(93, 85%, 32%)' },\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(198, 0%, 45%)' },\n      { hex: 'hsl(93, 79%, 40%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(282, 43%, 54%)' },\n      { hex: 'hsl(282, 44%, 62%)' },\n      { hex: 'hsl(198, 0%, 34%)' },\n      { hex: 'hsl(282, 51%, 78%)' },\n      { hex: 'hsl(282, 100%, 24%)' },\n    ],\n  },\n]"
      },
      {
        "name": "MULTI_COLOR_SCHEMES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/color/color-scheme/color-schemes.ts",
        "type": "[]",
        "defaultValue":
          "[\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 27%)' },\n      { hex: 'hsl(282, 43%, 54%)' },\n      { hex: 'hsl(198, 54%, 92%)' },\n      { hex: 'hsl(198, 58%, 78%)' },\n      { hex: 'hsl(198, 0%, 45%)' },\n      { hex: 'hsl(198, 100%, 36%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(14, 91%, 55%)' },\n      { hex: 'hsl(198, 100%, 41%)' },\n      { hex: 'hsl(198, 100%, 34%)' },\n      { hex: 'hsl(14, 83%, 84%)' },\n      { hex: 'hsl(198, 100%, 24%)' },\n      { hex: 'hsl(198, 57%, 85%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(93, 76%, 49%)' },\n      { hex: 'hsl(198, 100%, 41%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(93, 85%, 32%)' },\n      { hex: 'hsl(198, 100%, 24%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(14, 91%, 55%)' },\n      { hex: 'hsl(198, 0%, 27%)' },\n      { hex: 'hsl(93, 85%, 32%)' },\n      { hex: '#FFB38F' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(93, 77%, 44%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(93, 85%, 32%)' },\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(93, 77%, 44%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(282, 100%, 24%)' },\n      { hex: 'hsl(282, 50%, 45%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(14, 91%, 55%)' },\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(14, 87%, 78%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(282, 100%, 24%)' },\n      { hex: 'hsl(282, 50%, 45%)' },\n    ],\n  },\n]"
      },
      {
        "name": "NAMES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "string[]",
        "defaultValue":
          "[\n  'Nelson',\n  'Graham',\n  'Olene',\n  'Dorian',\n  'Nidia',\n  'Keenan',\n  'Luna',\n  'Letisha',\n  'Lenny',\n  'Jeana',\n  'Alica',\n  'Sheridan',\n  'Georgia',\n  'Brad',\n  'Ellen',\n  'Brynn',\n  'Roslyn',\n  'Rhona',\n  'Marcella',\n  'Sibyl',\n  'Shenika',\n  'Desirae',\n  'Beverly',\n  'Johnson',\n  'Kaitlin',\n  'Lucius',\n  'Darla',\n  'Debby',\n  'Lottie',\n  'Genoveva',\n]"
      },
      {
        "name": "NG_MODULE_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "",
        "defaultValue":
          "`\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ClarityModule } from \"@clr/angular\";\nimport { AppComponent } from \"./app.component\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        ClarityModule,\n        ...\n     ],\n     declarations: [ AppComponent ],\n     bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n`"
      },
      {
        "name": "NODE_IMPORTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "",
        "defaultValue":
          "`\n\"styles\": [\n      \"node_modules/@clr/icons/clr-icons.min.css\",\n      \"node_modules/@clr/ui/clr-ui.min.css\",\n      ... any other styles\n],\n\"scripts\": [\n  ... any existing scripts\n  \"node_modules/@webcomponents/custom-elements/custom-elements.min.js\",\n  \"node_modules/@clr/icons/clr-icons.min.js\"\n]\n`"
      },
      {
        "name": "NOW",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "",
        "defaultValue": "new Date().getTime()"
      },
      {
        "name": "OPTIONAL_PERCENTAGE_LABEL",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/progress-bars/progress-bars.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<!-- Visual Presentation -->\n<div aria-hidden=\"true\"\n  <div>Container 1 loading Progress </div>\n  <progress  max=\"100\" value=\"65\" data-displayval=\"65%\"></progress>\n</div>\n\n<!-- Screen Reader Presentation -->\n<!-- Screen reader users will be interrupted and hear \"Container 1 Loading Progress is 65%\" when the progress bar appears -->\n<!-- Screen reader users will also be able to read this text with the screen reader's cursor --> \n<span  aria-live=\"polite\">\n  <span class=\"clr-sr-only\">\n    Container 1 Loading Progress is\n  </span>\n  65%\n</span>\n`"
      },
      {
        "name": "PLATFORM_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/app.component.ts",
        "type": "",
        "defaultValue": "new InjectionToken<string>('clarity')"
      },
      {
        "name": "POKEMON",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "Pokemon[]",
        "defaultValue":
          "[\n  { number: 1, name: 'Bulbasaur' },\n  { number: 2, name: 'Ivysaur' },\n  { number: 3, name: 'Venusaur' },\n  { number: 4, name: 'Charmander' },\n  { number: 5, name: 'Charmeleon' },\n  { number: 6, name: 'Charizard' },\n  { number: 7, name: 'Squirtle' },\n  { number: 8, name: 'Wartortle' },\n  { number: 9, name: 'Blastoise' },\n  { number: 10, name: 'Caterpie' },\n  { number: 11, name: 'Metapod' },\n  { number: 12, name: 'Butterfree' },\n  { number: 13, name: 'Weedle' },\n  { number: 14, name: 'Kakuna' },\n  { number: 15, name: 'Beedrill' },\n  { number: 16, name: 'Pidgey' },\n  { number: 17, name: 'Pidgeotto' },\n  { number: 18, name: 'Pidgeot' },\n  { number: 19, name: 'Rattata' },\n  { number: 20, name: 'Raticate' },\n  { number: 21, name: 'Spearow' },\n  { number: 22, name: 'Fearow' },\n  { number: 23, name: 'Ekans' },\n  { number: 24, name: 'Arbok' },\n  { number: 25, name: 'Pikachu' },\n  { number: 26, name: 'Raichu' },\n  { number: 27, name: 'Sandshrew' },\n  { number: 28, name: 'Sandslash' },\n  { number: 29, name: 'Nidoran-f' },\n  { number: 30, name: 'Nidorina' },\n  { number: 31, name: 'Nidoqueen' },\n  { number: 32, name: 'Nidoran-m' },\n  { number: 33, name: 'Nidorino' },\n  { number: 34, name: 'Nidoking' },\n  { number: 35, name: 'Clefairy' },\n  { number: 36, name: 'Clefable' },\n  { number: 37, name: 'Vulpix' },\n  { number: 38, name: 'Ninetales' },\n  { number: 39, name: 'Jigglypuff' },\n  { number: 40, name: 'Wigglytuff' },\n  { number: 41, name: 'Zubat' },\n  { number: 42, name: 'Golbat' },\n  { number: 43, name: 'Oddish' },\n  { number: 44, name: 'Gloom' },\n  { number: 45, name: 'Vileplume' },\n  { number: 46, name: 'Paras' },\n  { number: 47, name: 'Parasect' },\n  { number: 48, name: 'Venonat' },\n  { number: 49, name: 'Venomoth' },\n  { number: 50, name: 'Diglett' },\n  { number: 51, name: 'Dugtrio' },\n  { number: 52, name: 'Meowth' },\n  { number: 53, name: 'Persian' },\n  { number: 54, name: 'Psyduck' },\n  { number: 55, name: 'Golduck' },\n  { number: 56, name: 'Mankey' },\n  { number: 57, name: 'Primeape' },\n  { number: 58, name: 'Growlithe' },\n  { number: 59, name: 'Arcanine' },\n  { number: 60, name: 'Poliwag' },\n  { number: 61, name: 'Poliwhirl' },\n  { number: 62, name: 'Poliwrath' },\n  { number: 63, name: 'Abra' },\n  { number: 64, name: 'Kadabra' },\n  { number: 65, name: 'Alakazam' },\n  { number: 66, name: 'Machop' },\n  { number: 67, name: 'Machoke' },\n  { number: 68, name: 'Machamp' },\n  { number: 69, name: 'Bellsprout' },\n  { number: 70, name: 'Weepinbell' },\n  { number: 71, name: 'Victreebel' },\n  { number: 72, name: 'Tentacool' },\n  { number: 73, name: 'Tentacruel' },\n  { number: 74, name: 'Geodude' },\n  { number: 75, name: 'Graveler' },\n  { number: 76, name: 'Golem' },\n  { number: 77, name: 'Ponyta' },\n  { number: 78, name: 'Rapidash' },\n  { number: 79, name: 'Slowpoke' },\n  { number: 80, name: 'Slowbro' },\n  { number: 81, name: 'Magnemite' },\n  { number: 82, name: 'Magneton' },\n  { number: 83, name: \"Farfetch'd\" },\n  { number: 84, name: 'Doduo' },\n  { number: 85, name: 'Dodrio' },\n  { number: 86, name: 'Seel' },\n  { number: 87, name: 'Dewgong' },\n  { number: 88, name: 'Grimer' },\n  { number: 89, name: 'Muk' },\n  { number: 90, name: 'Shellder' },\n  { number: 91, name: 'Cloyster' },\n  { number: 92, name: 'Gastly' },\n  { number: 93, name: 'Haunter' },\n  { number: 94, name: 'Gengar' },\n  { number: 95, name: 'Onix' },\n  { number: 96, name: 'Drowzee' },\n  { number: 97, name: 'Hypno' },\n  { number: 98, name: 'Krabby' },\n  { number: 99, name: 'Kingler' },\n  { number: 100, name: 'Voltorb' },\n  { number: 101, name: 'Electrode' },\n  { number: 102, name: 'Exeggcute' },\n  { number: 103, name: 'Exeggutor' },\n  { number: 104, name: 'Cubone' },\n  { number: 105, name: 'Marowak' },\n  { number: 106, name: 'Hitmonlee' },\n  { number: 107, name: 'Hitmonchan' },\n  { number: 108, name: 'Lickitung' },\n  { number: 109, name: 'Koffing' },\n  { number: 110, name: 'Weezing' },\n  { number: 111, name: 'Rhyhorn' },\n  { number: 112, name: 'Rhydon' },\n  { number: 113, name: 'Chansey' },\n  { number: 114, name: 'Tangela' },\n  { number: 115, name: 'Kangaskhan' },\n  { number: 116, name: 'Horsea' },\n  { number: 117, name: 'Seadra' },\n  { number: 118, name: 'Goldeen' },\n  { number: 119, name: 'Seaking' },\n  { number: 120, name: 'Staryu' },\n  { number: 121, name: 'Starmie' },\n  { number: 122, name: 'Mr. Mime' },\n  { number: 123, name: 'Scyther' },\n  { number: 124, name: 'Jynx' },\n  { number: 125, name: 'Electabuzz' },\n  { number: 126, name: 'Magmar' },\n  { number: 127, name: 'Pinsir' },\n  { number: 128, name: 'Tauros' },\n  { number: 129, name: 'Magikarp' },\n  { number: 130, name: 'Gyarados' },\n  { number: 131, name: 'Lapras' },\n  { number: 132, name: 'Ditto' },\n  { number: 133, name: 'Eevee' },\n  { number: 134, name: 'Vaporeon' },\n  { number: 135, name: 'Jolteon' },\n  { number: 136, name: 'Flareon' },\n  { number: 137, name: 'Porygon' },\n  { number: 138, name: 'Omanyte' },\n  { number: 139, name: 'Omastar' },\n  { number: 140, name: 'Kabuto' },\n  { number: 141, name: 'Kabutops' },\n  { number: 142, name: 'Aerodactyl' },\n  { number: 143, name: 'Snorlax' },\n  { number: 144, name: 'Articuno' },\n  { number: 145, name: 'Zapdos' },\n  { number: 146, name: 'Moltres' },\n  { number: 147, name: 'Dratini' },\n  { number: 148, name: 'Dragonair' },\n  { number: 149, name: 'Dragonite' },\n  { number: 150, name: 'Mewtwo' },\n  { number: 151, name: 'Mew' },\n]"
      },
      {
        "name": "presentational",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "",
        "defaultValue": "`<clr-icon shape=\"info-circle\"></clr-icon>`"
      },
      {
        "name": "previewClasses",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-view.service.ts",
        "type": "any",
        "defaultValue": "{\n  'is-solid': false,\n  'has-alert': false,\n  'has-badge': false,\n}"
      },
      {
        "name": "Prism",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/utils/code-highlight.ts",
        "type": "any"
      },
      {
        "name": "PROVIDE_LOCALE_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts",
        "type": "",
        "defaultValue": "`\nproviders: [\n    {provide: LOCALE_ID, useValue: 'fr'}\n]\n`"
      },
      {
        "name": "rangeChangeHTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "",
        "defaultValue":
          "`\n  <form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Value change example</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.two\" name=\"three\" (change)=\"rangeChange($event)\"/>\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`"
      },
      {
        "name": "rangeChangeTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({\n  selector: 'range-change',\n  templateUrl: './range-change.html',\n})\nexport class RangeBasicDemo {\n  rangeInput = 36;\n\n  rangeChange(event) {\n    console.log(event.target.value);\n  }\n}\n`"
      },
      {
        "name": "reactiveHTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm [formGroup]=\"model\">\n    <clr-datalist-container>\n        <label>Reactive Datalist</label>\n        <input clrDatalistInput placeholder=\"Option\" name=\"Option\" formControlName=\"item\" />\n        <datalist id=\"clr-custom-datalistid-1\">\n            <option *ngFor=\"let item of items\" [value]=\"item + ' dl 1'\"></option>\n        </datalist>\n    </clr-datalist-container>\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"model.invalid\" (click)=\"submit()\">\n        Submit\n    </button>\n</form>\n`"
      },
      {
        "name": "reactiveTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({\n  selector: 'reactive-form',\n  templateUrl: './reactive.html',\n})\nexport class ReactiveForm {\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  model = new FormGroup({\n    item: new FormControl('', [ Validators.required, Validators.minLength(4)]),\n  });\n  submit() {\n    console.log('Form submit', this.model);\n  }\n}\n`"
      },
      {
        "name": "REGISTER_LOCALE_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts",
        "type": "",
        "defaultValue":
          "`\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\n\nregisterLocaleData(localeFr);\n`"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/test.ts",
        "type": "any"
      },
      {
        "name": "ROOT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
        "type": "[]",
        "defaultValue":
          "[\n  {\n    name: 'src',\n    isFolder: true,\n    files: [\n      {\n        name: 'app',\n        isFolder: true,\n        files: [\n          {\n            name: 'app.component.html',\n            isFolder: false,\n          },\n          {\n            name: 'app.component.ts',\n            isFolder: false,\n          },\n          {\n            name: 'app.module.ts',\n            isFolder: false,\n          },\n          {\n            name: 'app.routing.ts',\n            isFolder: false,\n          },\n        ],\n      },\n      {\n        name: 'environments',\n        isFolder: true,\n        files: [\n          {\n            name: 'environments.prod.ts',\n            isFolder: false,\n          },\n          {\n            name: 'environment.ts',\n            isFolder: false,\n          },\n        ],\n      },\n      {\n        name: 'index.html',\n        isFolder: false,\n      },\n      {\n        name: 'main.ts',\n        isFolder: false,\n      },\n    ],\n  },\n  {\n    name: 'package.json',\n    isFolder: false,\n  },\n  {\n    name: 'tsconfig.json',\n    isFolder: false,\n  },\n]"
      },
      {
        "name": "ROUTES_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts",
        "type": "",
        "defaultValue":
          "`\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal/pidgey\"\n        },\n        {\n            path: \"normal\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"normal/snorlax\",\n            component: SnorlaxDemo\n        },\n        {\n            path: \"normal/pidgey\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"electric\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/pikachu\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/raichu\",\n            component: RaichuDemo\n        },\n        {\n            path: \"fire\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charmander\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charizard\",\n            component: CharizardDemo\n        },\n        {\n            path: \"credit\",\n            component: PokedexDemo\n        }\n    ],\n    ...\n}\n...\n`"
      },
      {
        "name": "ROUTES_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts",
        "type": "",
        "defaultValue":
          "`\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal/pidgey\"\n        },\n        {\n            path: \"normal/snorlax\",\n            component: SnorlaxDemo\n        },\n        {\n            path: \"normal/pidgey\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"electric/pikachu\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/raichu\",\n            component: RaichuDemo\n        },\n        {\n            path: \"fire/charmander\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charizard\",\n            component: CharizardDemo\n        },\n        {\n            path: \"credit\",\n            component: PokedexDemo\n        }\n    ],\n    ...\n}\n...\n`"
      },
      {
        "name": "ROUTES_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts",
        "type": "",
        "defaultValue":
          "`\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal\"\n        },\n        {\n            path: \"normal\",\n            component: NormalPokemon\n        },\n        {\n            path: \"snorlax\",\n            component: Snorlax\n        },\n        {\n            path: \"pidgey\",\n            component: Pidgey\n        },\n        {\n            path: \"electric\",\n            component: ElectricPokemon\n        },\n        {\n            path: \"pikachu\",\n            component: Pikachu\n        },\n        {\n            path: \"raichu\",\n            component: Raichu\n        },\n        {\n            path: \"fire\",\n            component: FirePokemon\n        },\n        {\n            path: \"charmander\",\n            component: Charmander\n        },\n        {\n            path: \"charizard\",\n            component: Charizard\n        },\n        {\n            path: \"credit\",\n            component: Pokedex\n        }\n    ],\n}\n...\n`"
      },
      {
        "name": "ROUTES_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file":
          "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts",
        "type": "",
        "defaultValue":
          "`\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal\"\n        },\n        {\n            path: \"normal\",\n            component: NormalPokemon\n        },\n        {\n            path: \"normal/snorlax\",\n            component: Snorlax\n        },\n        {\n            path: \"normal/pidgey\",\n            component: Pidgey\n        },\n        {\n            path: \"electric\",\n            component: ElectricPokemon\n        },\n        {\n            path: \"electric/pikachu\",\n            component: Pikachu\n        },\n        {\n            path: \"electric/raichu\",\n            component: Raichu\n        },\n        {\n            path: \"fire\",\n            component: FirePokemon\n        },\n        {\n            path: \"fire/charmander\",\n            component: Charmander\n        },\n        {\n            path: \"fire/charizard\",\n            component: Charizard\n        },\n        {\n            path: \"credit\",\n            component: Pokedex\n        }\n    ],\n}\n...\n`"
      },
      {
        "name": "ROUTING",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-routing.module.ts",
        "type": "ModuleWithProviders",
        "defaultValue": "RouterModule.forChild(routes)"
      },
      {
        "name": "ROW_SELECTION_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid [(clrDgSelected)]=\"rowSelected\" [clrDgRowSelection]=\"true\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <-- ... -->\n    </clr-dg-row>\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`"
      },
      {
        "name": "ROW_SELECTION_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\" [clrDgRowSelection]=\"true\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected user: <span class=\"username\" *ngIf=\"selectedUser\">{{selectedUser.name}}</span>\n`"
      },
      {
        "name": "SELECTION_CHANGE_EVENT_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid [clrDgSingleSelected]=\"selected\"\n              (clrDgSingleSelectedChange)=\"selectionChanged($event)\">\n    <-- ... -->\n</clr-datagrid>\n`"
      },
      {
        "name": "SELECTION_CHANGE_EVENT_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-datagrid [clrDgSelected]=\"selected\"\n              (clrDgSelectedChange)=\"selectionChanged($event)\">\n    <-- ... -->\n</clr-datagrid>\n`"
      },
      {
        "name": "SINGLE_ROW_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\" [(clrDgSelected)]=\"item.selected\">\n    <-- ... -->\n</clr-dg-row>\n`"
      },
      {
        "name": "SIZE_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue":
          "`\n<!--A. SETTING THE SIZE THROUGH CLR-ICON SIZE ATTRIBUTE-->\n<clr-icon shape=\"info-circle\" size=\"12\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"16\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"36\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"48\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"64\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"72\"></clr-icon>\n\n<!--B. SETTING THE SIZE IN STYLE ATTRIBUTE-->\n<clr-icon shape=\"info-circle\" style=\"width: 12px; height: 12px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 16px; height: 16px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 36px; height: 36px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 48px; height: 48px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 64px; height: 64px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 72px; height: 72px;\"></clr-icon>\n`"
      },
      {
        "name": "spinner",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts",
        "type": "",
        "defaultValue": "`\n<clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n`"
      },
      {
        "name": "STYLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts",
        "type": "",
        "defaultValue": "`\n.limit-height clr-datagrid {\n    height: 286px;\n}\n`"
      },
      {
        "name": "templateExample",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrStepper [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <clr-stepper-panel formGroupName=\"name\">\n    <clr-step-title>Legal Name</clr-step-title>\n    <clr-step-description>Description goes here.</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      <clr-input-container>\n        <label>First Name</label>\n        <input clrInput formControlName=\"first\" />\n        <clr-control-error *clrIfError=\"'required'\">First Name Required</clr-control-error>\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Last Name</label>\n        <input clrInput formControlName=\"last\" />\n        <clr-control-error *clrIfError=\"'required'\">Last Name Required</clr-control-error>\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel formGroupName=\"contact\">\n    <clr-step-title>Contact Information</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      ...\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel formGroupName=\"password\">\n    <clr-step-title>Password</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      ...\n      <button clrStepButton=\"submit\">submit</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n</form>\n`"
      },
      {
        "name": "templateExample",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrStepper #contactForm=\"ngForm\" (ngSubmit)=\"templateFormSubmit(contactForm.value)\">\n  <clr-stepper-panel ngModelGroup=\"name\">\n    <clr-step-title>Legal Name</clr-step-title>\n    <clr-step-description>Description goes here.</clr-step-description>\n    <clr-step-content>\n      <clr-input-container>\n        <label>First Name</label>\n        <input clrInput [ngModel]=\"templateForm.name.firstName\" name=\"firstName\" required />\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Last Name</label>\n        <input clrInput [ngModel]=\"templateForm.name.lastName\" name=\"lastName\" required />\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel ngModelGroup=\"contact\">\n    <clr-step-title>Contact Information</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content>\n      ...\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel ngModelGroup=\"password\">\n    <clr-step-title>Password</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content>\n      ...\n      <button clrStepButton=\"submit\">submit</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n</form>\n`"
      },
      {
        "name": "templateHTML",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts",
        "type": "",
        "defaultValue":
          "`\n<form clrForm>\n    <clr-datalist-container>\n        <label>Template Datalist</label>\n        <input minlength=\"4\" name=\"Option\" required \n               clrDatalistInput [disabled]=\"disabled\" [(ngModel)]=\"vertical\"/>\n        <datalist>\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n        <clr-control-helper>Helper text</clr-control-helper>\n        <clr-control-error>There was an error</clr-control-error>\n    </clr-datalist-container>\n</form>\n`"
      },
      {
        "name": "templateTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({\n  selector: 'template-form',\n  templateUrl: './template.html',\n})\nexport class TemplateForm {\n  disabled = false;\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  vertical = '';\n}\n`"
      },
      {
        "name": "timelineStep",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts",
        "type": "",
        "defaultValue":
          "`\n<li class=\"clr-timeline-step\">\n  <div class=\"clr-timeline-step-header\">11:59 am</div>\n  <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n  <div class=\"clr-timeline-step-body\">\n    ...\n  </div>\n</li>\n`"
      },
      {
        "name": "TITLE_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue": "`\n<clr-icon shape=\"copy\" title=\"Copy Document\"></clr-icon>\n`"
      },
      {
        "name": "TS_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts",
        "type": "",
        "defaultValue":
          "`\nexport class AlertAngularDemo  {\n    closeMessage: string = \"\";\n\n    onClose() {\n        this.closeMessage = \"The alert has been closed\";\n    }\n}\n`"
      },
      {
        "name": "TS_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({\n    selector: \"clr-form-demo\",\n    templateUrl: \"./form-demo.html\"\n})\nexport class DatepickerReactiveFormsDemo {\n    dateForm = new FormGroup({date: new FormControl()});\n}\n`"
      },
      {
        "name": "TS_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts",
        "type": "",
        "defaultValue":
          "`\n@Component({\n    selector: \"clr-form-demo\",\n    templateUrl: \"./form-demo.html\"\n})\nexport class DatepickerTemplateDrivenFormsDemo {\n    date: string = \"01/02/2015\";\n}\n`"
      },
      {
        "name": "TWO_WAY_BINDING_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "",
        "defaultValue":
          "`\n<ng-template [(clrIfDetail)]=\"detailState\" let-detail>\n  <clr-dg-detail>\n    <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    <clr-dg-detail-body>\n      <!-- ... -->\n    </clr-dg-detail-body>\n  </clr-dg-detail>\n</ng-template>\n`"
      },
      {
        "name": "UI_CDN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "",
        "defaultValue":
          "`\n<!-- Load the latest version -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@clr/ui/clr-ui.min.css\" />\n<!-- Or load a specific version -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@clr/ui@0.12.5/clr-ui.min.css\" />\n`"
      },
      {
        "name": "UI_CUSTOM_CLARITY_DARK_SCSS_FILE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "",
        "defaultValue":
          "`\n@import \"../node_modules/@clr/ui/src/utils/theme.dark.clarity\"; // Overwrites with dark theme\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`"
      },
      {
        "name": "UI_CUSTOM_CLARITY_DARK_THEME_SCSS_FILE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "",
        "defaultValue":
          "`\n@import \"../node_modules/@clr/ui/src/utils/theme.dark.clarity\"; // Dark theme variables\n\n// Your Application Theme File\n@import \"./theme.scss\";\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`"
      },
      {
        "name": "UI_CUSTOM_CLARITY_LIGHT_SCSS_FILE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "",
        "defaultValue":
          "`\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`"
      },
      {
        "name": "UI_CUSTOM_CLARITY_LIGHT_THEME_SCSS_FILE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "",
        "defaultValue":
          "`\n// Your Application Theme File\n@import \"./theme.scss\";\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`"
      },
      {
        "name": "UI_NO_NODE_IMPORTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "",
        "defaultValue":
          "`\n\"styles\": [\n      ...\n      \"./node_modules/@clr/icons/clr-icons.min.css\",\n      ...\n  ]\n`"
      },
      {
        "name": "UI_NODE_IMPORTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "",
        "defaultValue":
          "`\n\"styles\": [\n      ...\n      \"../node_modules/@clr/icons/clr-icons.min.css\",\n      \"../node_modules/@clr/ui/clr-ui-dark.min.css\",\n      ...\n  ]\n`"
      },
      {
        "name": "UI_WEBPACK_IMPORTS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "",
        "defaultValue":
          "`\n  \"entry\": {\n    \"main\": [\n      \"./src/main.ts\"\n    ],\n    \"styles\": [\n      \"./node_modules/@clr/icons/clr-icons.min.css\",\n      \"./node_modules/@clr/ui/clr-ui-dark.min.css\",\n      \"./src/styles.css\"\n    ]\n  },\n`"
      },
      {
        "name": "UNSELECTABLE_ROW",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-dg-row [clrDgSelectable]=\"!user.locked\" *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n  <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <-- ... -->\n  </clr-dg-row>\n</clr-dg-row>\n`"
      },
      {
        "name": "UNSELECTABLE_ROW",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-dg-row [clrDgSelectable]=\"!user.locked\" *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n  <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <-- ... -->\n  </clr-dg-row>\n</clr-dg-row>\n`"
      },
      {
        "name": "VARIANTS_EXAMPLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "",
        "defaultValue":
          "`\n<clr-icon shape=\"user\"></clr-icon>\n<clr-icon shape=\"user\" class=\"has-alert\"></clr-icon>\n<clr-icon shape=\"user\" class=\"has-badge\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-alert\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-badge\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-badge--success\"></clr-icon>\n`"
      },
      {
        "name": "VERSIONS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/news/release-page/release-organizer.ts",
        "type": "object",
        "defaultValue": "{}"
      },
      {
        "name": "vertical",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts",
        "type": "",
        "defaultValue": "`\n<ul class=\"clr-timeline clr-timeline-vertical\">\n  ...\n</ul>\n`"
      }
    ],
    "functions": [
      {
        "name": "compareReleases",
        "file": "src/website/src/app/news/release-page/release-organizer.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "rA",
            "type": ""
          },
          {
            "name": "rB",
            "type": ""
          }
        ],
        "jsdoctags": [
          {
            "name": "rA",
            "type": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "rB",
            "type": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "componentList",
        "file": "src/website/src/app/utils/component-list.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "type": ""
          }
        ],
        "jsdoctags": [
          {
            "type": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "makeSetSearchable",
        "file": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "set",
            "type": "any"
          },
          {
            "name": "defaultTags"
          },
          {
            "name": "hideIcons"
          }
        ],
        "returnType": "any[]",
        "jsdoctags": [
          {
            "name": "set",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "defaultTags",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "hideIcons",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "organize",
        "file": "src/website/src/app/news/release-page/release-organizer.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": []
      },
      {
        "name": "randomInt",
        "file": "src/website/src/app/documentation/demos/datagrid/inventory/inventory.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "max"
          }
        ],
        "returnType": "number",
        "jsdoctags": [
          {
            "name": "max",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "reverseAliases",
        "file": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "originalKeyValue",
            "type": "any"
          }
        ],
        "jsdoctags": [
          {
            "name": "originalKeyValue",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [],
    "enumerations": [],
    "groupedVariables": {
      "src/website/src/app/documentation/demos/button-group/button-group.demo.ts": [
        {
          "name": "ACCESSIBILITY_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/button-group.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-primary btn-icon\">\n    <button class=\"btn\">\n        <clr-icon shape=\"check\" title=\"Check\"></clr-icon>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"home\" title=\"home\"></clr-icon>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"user\" title=\"user\"></clr-icon>\n    </button>\n</div>\n`"
        }
      ],
      "src/website/src/app/icons/icons-api/icons-api.component.ts": [
        {
          "name": "ADD_CUSTOM_ICON",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
          "type": "",
          "defaultValue": "`ClarityIcons.add({\"my-custom-icon\": \"<svg ... >[your SVG code goes here]</svg>\"});`"
        },
        {
          "name": "ADD_CUSTOM_ICON_RESULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
          "type": "",
          "defaultValue": "`<clr-icon shape=\"my-custom-icon\" size=\"24\"></clr-icon>`"
        },
        {
          "name": "ALIAS_ICON",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
          "type": "",
          "defaultValue": "`ClarityIcons.alias({\"bell\": [\"alarm\", \"oh-noehz\"]});`"
        },
        {
          "name": "ALIAS_ICON_RESULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-icon shape=\"bell\"></clr-icon>\n<clr-icon shape=\"alarm\"></clr-icon>\n<clr-icon shape=\"oh-noehz\"></clr-icon>`"
        },
        {
          "name": "API_IMPORTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
          "type": "",
          "defaultValue": "`\nimport { ClarityIcons } from '@clr/icons';\n`"
        },
        {
          "name": "CHECK_ICON_TEMPLATE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-api/icons-api.component.ts",
          "type": "",
          "defaultValue":
            "`\n<svg xmlns:xlink=\"https://www.w3.org/1999/xlink\" xmlns=\"https://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 36 36\" version=\"1.1\">\n    <title>check</title>\n    <path d=\"M13.72,27.69,3.29,17.27a1,1,0,0,1,1.41-1.41l9,9L31.29,7.29a1,1,0,0,1,1.41,1.41Z\" class=\"clr-i-outline clr-i-outline-path-1\"></path>\n</svg>\n`"
        }
      ],
      "src/website/src/app/icons/icons-sets/icons-inventory.ts": [
        {
          "name": "ALL_ALIASES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
          "type": "object",
          "defaultValue":
            "{\n  house: 'home',\n  settings: 'cog',\n  success: 'check',\n  close: 'times',\n  warning: 'exclamation-triangle',\n  error: 'exclamation-circle',\n  info: 'info-circle',\n  menu: 'bars',\n  avatar: 'user',\n  caret: 'angle',\n  directory: 'folder',\n  notification: 'bell',\n  edit: 'pencil',\n  'note-edit': 'note',\n  group: 'users',\n  collapse: 'angle-double',\n  document: 'file',\n  add: 'plus',\n  cancel: 'ban',\n  remove: 'times-circle',\n  'eye-show': 'eye',\n  'sign-in': 'login',\n  'sign-out': 'logout',\n  lightning: 'bolt',\n  'flow-chart': 'organization',\n  alert: 'bubble-exclamation',\n  pinned: 'pinboard',\n  favorite: 'star',\n  email: 'envelope',\n  date: 'calendar',\n  analytics: 'line-chart',\n  server: 'host',\n  command: 'terminal',\n  'mobile-phone': 'mobile',\n  license: 'certificate',\n  disconnected: 'no-wifi',\n  receiver: 'phone-handset',\n  design: 'ruler-pencil',\n  plane: 'airplane',\n  auto: 'car',\n}"
        },
        {
          "name": "ICONS_INVENTORY",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
          "type": "object",
          "defaultValue":
            "{\n  'core-shapes': {\n    searchableIcons: makeSetSearchable(CoreShapes, [], ['vm-bug']),\n  },\n  'commerce-shapes': {\n    searchableIcons: makeSetSearchable(CommerceShapes, []),\n  },\n  'essential-shapes': {\n    searchableIcons: makeSetSearchable(EssentialShapes, [], ['angle-double']),\n  },\n  'media-shapes': {\n    searchableIcons: makeSetSearchable(MediaShapes, [], ['wand']),\n  },\n  'social-shapes': {\n    searchableIcons: makeSetSearchable(SocialShapes, [], ['calendar', 'event']),\n  },\n  'travel-shapes': {\n    searchableIcons: makeSetSearchable(TravelShapes, []),\n  },\n  'chart-shapes': {\n    searchableIcons: makeSetSearchable(ChartShapes, []),\n  },\n  'text-edit-shapes': {\n    searchableIcons: makeSetSearchable(TextEditShapes, []),\n  },\n  'technology-shapes': {\n    searchableIcons: makeSetSearchable(TechnologyShapes, [], ['process-on-vm', 'bar-chart', 'line-chart']),\n  },\n}"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts": [
        {
          "name": "ALL_GROCERIES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
          "type": "[]",
          "defaultValue":
            "[\n  new GroupImpl('Dairy', ClrSelectedState.INDETERMINATE, [\n    {\n      name: 'Milk',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Cheese',\n      selected: ClrSelectedState.SELECTED,\n    },\n  ]),\n  new GroupImpl('Vegetables', ClrSelectedState.UNSELECTED, [\n    {\n      name: 'Carrots',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Potatoes',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n    {\n      name: 'Beans',\n      selected: ClrSelectedState.UNSELECTED,\n    },\n  ]),\n]"
        },
        {
          "name": "GROCERY_SERVICE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
          "type": "object",
          "defaultValue": "{\n  getGroups: () => of(ALL_GROCERIES),\n}"
        },
        {
          "name": "ITEMS_SERVICE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
          "type": "object",
          "defaultValue": "{\n  getItems: (group: Group) => timer(1000).pipe(map(() => (<any>group).items)),\n}"
        }
      ],
      "src/website/src/app/documentation/demos/range/range-basic.demo.ts": [
        {
          "name": "basicExample",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n    <clr-range-container>\n        <input type=\"range\" clrRange name=\"two\" [(ngModel)]=\"input.one\" />\n    </clr-range-container>\n</form>\n`"
        },
        {
          "name": "disabledExample",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Disabled</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.three\" name=\"four\" [disabled]=\"disabled\" />\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`"
        },
        {
          "name": "fullExample",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Full example</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.two\" name=\"three\" />\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`"
        },
        {
          "name": "rangeChangeHTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
          "type": "",
          "defaultValue":
            "`\n  <form clrForm>\n    <clr-range-container [clrRangeHasProgress]=\"true\">\n        <label>Value change example</label>\n        <input type=\"range\" clrRange [(ngModel)]=\"input.two\" name=\"three\" (change)=\"rangeChange($event)\"/>\n        <clr-control-helper>Helper text</clr-control-helper>\n    </clr-range-container>\n</form>\n`"
        },
        {
          "name": "rangeChangeTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({\n  selector: 'range-change',\n  templateUrl: './range-change.html',\n})\nexport class RangeBasicDemo {\n  rangeInput = 36;\n\n  rangeChange(event) {\n    console.log(event.target.value);\n  }\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts": [
        {
          "name": "basicHTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n    <clr-datalist-container>\n        <input clrDatalistInput [(ngModel)]=\"vertical\" placeholder=\"No label\" name=\"Option\"/>\n        <datalist>\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n    </clr-datalist-container>\n</form>\n`"
        },
        {
          "name": "basicTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({\n  selector: 'basic-datalist',\n  templateUrl: './basic.html',\n})\nexport class DatalistBasicDemo {\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  vertical = '';\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/inventory/values.ts": [
        {
          "name": "BEGINNING",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
          "type": "",
          "defaultValue": "new Date(2014, 0, 1).getTime()"
        },
        {
          "name": "COLORS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
          "type": "string[]",
          "defaultValue":
            "[\n  'Red',\n  'Orange',\n  'Yellow',\n  'Green',\n  'Blue',\n  'Indigo',\n  'Violet',\n  'Purple',\n  'Magenta',\n  'Cyan',\n  'Pink',\n  'Brown',\n  'White',\n  'Gray',\n  'Black',\n]"
        },
        {
          "name": "NAMES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
          "type": "string[]",
          "defaultValue":
            "[\n  'Nelson',\n  'Graham',\n  'Olene',\n  'Dorian',\n  'Nidia',\n  'Keenan',\n  'Luna',\n  'Letisha',\n  'Lenny',\n  'Jeana',\n  'Alica',\n  'Sheridan',\n  'Georgia',\n  'Brad',\n  'Ellen',\n  'Brynn',\n  'Roslyn',\n  'Rhona',\n  'Marcella',\n  'Sibyl',\n  'Shenika',\n  'Desirae',\n  'Beverly',\n  'Johnson',\n  'Kaitlin',\n  'Lucius',\n  'Darla',\n  'Debby',\n  'Lottie',\n  'Genoveva',\n]"
        },
        {
          "name": "NOW",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
          "type": "",
          "defaultValue": "new Date().getTime()"
        },
        {
          "name": "POKEMON",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
          "type": "Pokemon[]",
          "defaultValue":
            "[\n  { number: 1, name: 'Bulbasaur' },\n  { number: 2, name: 'Ivysaur' },\n  { number: 3, name: 'Venusaur' },\n  { number: 4, name: 'Charmander' },\n  { number: 5, name: 'Charmeleon' },\n  { number: 6, name: 'Charizard' },\n  { number: 7, name: 'Squirtle' },\n  { number: 8, name: 'Wartortle' },\n  { number: 9, name: 'Blastoise' },\n  { number: 10, name: 'Caterpie' },\n  { number: 11, name: 'Metapod' },\n  { number: 12, name: 'Butterfree' },\n  { number: 13, name: 'Weedle' },\n  { number: 14, name: 'Kakuna' },\n  { number: 15, name: 'Beedrill' },\n  { number: 16, name: 'Pidgey' },\n  { number: 17, name: 'Pidgeotto' },\n  { number: 18, name: 'Pidgeot' },\n  { number: 19, name: 'Rattata' },\n  { number: 20, name: 'Raticate' },\n  { number: 21, name: 'Spearow' },\n  { number: 22, name: 'Fearow' },\n  { number: 23, name: 'Ekans' },\n  { number: 24, name: 'Arbok' },\n  { number: 25, name: 'Pikachu' },\n  { number: 26, name: 'Raichu' },\n  { number: 27, name: 'Sandshrew' },\n  { number: 28, name: 'Sandslash' },\n  { number: 29, name: 'Nidoran-f' },\n  { number: 30, name: 'Nidorina' },\n  { number: 31, name: 'Nidoqueen' },\n  { number: 32, name: 'Nidoran-m' },\n  { number: 33, name: 'Nidorino' },\n  { number: 34, name: 'Nidoking' },\n  { number: 35, name: 'Clefairy' },\n  { number: 36, name: 'Clefable' },\n  { number: 37, name: 'Vulpix' },\n  { number: 38, name: 'Ninetales' },\n  { number: 39, name: 'Jigglypuff' },\n  { number: 40, name: 'Wigglytuff' },\n  { number: 41, name: 'Zubat' },\n  { number: 42, name: 'Golbat' },\n  { number: 43, name: 'Oddish' },\n  { number: 44, name: 'Gloom' },\n  { number: 45, name: 'Vileplume' },\n  { number: 46, name: 'Paras' },\n  { number: 47, name: 'Parasect' },\n  { number: 48, name: 'Venonat' },\n  { number: 49, name: 'Venomoth' },\n  { number: 50, name: 'Diglett' },\n  { number: 51, name: 'Dugtrio' },\n  { number: 52, name: 'Meowth' },\n  { number: 53, name: 'Persian' },\n  { number: 54, name: 'Psyduck' },\n  { number: 55, name: 'Golduck' },\n  { number: 56, name: 'Mankey' },\n  { number: 57, name: 'Primeape' },\n  { number: 58, name: 'Growlithe' },\n  { number: 59, name: 'Arcanine' },\n  { number: 60, name: 'Poliwag' },\n  { number: 61, name: 'Poliwhirl' },\n  { number: 62, name: 'Poliwrath' },\n  { number: 63, name: 'Abra' },\n  { number: 64, name: 'Kadabra' },\n  { number: 65, name: 'Alakazam' },\n  { number: 66, name: 'Machop' },\n  { number: 67, name: 'Machoke' },\n  { number: 68, name: 'Machamp' },\n  { number: 69, name: 'Bellsprout' },\n  { number: 70, name: 'Weepinbell' },\n  { number: 71, name: 'Victreebel' },\n  { number: 72, name: 'Tentacool' },\n  { number: 73, name: 'Tentacruel' },\n  { number: 74, name: 'Geodude' },\n  { number: 75, name: 'Graveler' },\n  { number: 76, name: 'Golem' },\n  { number: 77, name: 'Ponyta' },\n  { number: 78, name: 'Rapidash' },\n  { number: 79, name: 'Slowpoke' },\n  { number: 80, name: 'Slowbro' },\n  { number: 81, name: 'Magnemite' },\n  { number: 82, name: 'Magneton' },\n  { number: 83, name: \"Farfetch'd\" },\n  { number: 84, name: 'Doduo' },\n  { number: 85, name: 'Dodrio' },\n  { number: 86, name: 'Seel' },\n  { number: 87, name: 'Dewgong' },\n  { number: 88, name: 'Grimer' },\n  { number: 89, name: 'Muk' },\n  { number: 90, name: 'Shellder' },\n  { number: 91, name: 'Cloyster' },\n  { number: 92, name: 'Gastly' },\n  { number: 93, name: 'Haunter' },\n  { number: 94, name: 'Gengar' },\n  { number: 95, name: 'Onix' },\n  { number: 96, name: 'Drowzee' },\n  { number: 97, name: 'Hypno' },\n  { number: 98, name: 'Krabby' },\n  { number: 99, name: 'Kingler' },\n  { number: 100, name: 'Voltorb' },\n  { number: 101, name: 'Electrode' },\n  { number: 102, name: 'Exeggcute' },\n  { number: 103, name: 'Exeggutor' },\n  { number: 104, name: 'Cubone' },\n  { number: 105, name: 'Marowak' },\n  { number: 106, name: 'Hitmonlee' },\n  { number: 107, name: 'Hitmonchan' },\n  { number: 108, name: 'Lickitung' },\n  { number: 109, name: 'Koffing' },\n  { number: 110, name: 'Weezing' },\n  { number: 111, name: 'Rhyhorn' },\n  { number: 112, name: 'Rhydon' },\n  { number: 113, name: 'Chansey' },\n  { number: 114, name: 'Tangela' },\n  { number: 115, name: 'Kangaskhan' },\n  { number: 116, name: 'Horsea' },\n  { number: 117, name: 'Seadra' },\n  { number: 118, name: 'Goldeen' },\n  { number: 119, name: 'Seaking' },\n  { number: 120, name: 'Staryu' },\n  { number: 121, name: 'Starmie' },\n  { number: 122, name: 'Mr. Mime' },\n  { number: 123, name: 'Scyther' },\n  { number: 124, name: 'Jynx' },\n  { number: 125, name: 'Electabuzz' },\n  { number: 126, name: 'Magmar' },\n  { number: 127, name: 'Pinsir' },\n  { number: 128, name: 'Tauros' },\n  { number: 129, name: 'Magikarp' },\n  { number: 130, name: 'Gyarados' },\n  { number: 131, name: 'Lapras' },\n  { number: 132, name: 'Ditto' },\n  { number: 133, name: 'Eevee' },\n  { number: 134, name: 'Vaporeon' },\n  { number: 135, name: 'Jolteon' },\n  { number: 136, name: 'Flareon' },\n  { number: 137, name: 'Porygon' },\n  { number: 138, name: 'Omanyte' },\n  { number: 139, name: 'Omastar' },\n  { number: 140, name: 'Kabuto' },\n  { number: 141, name: 'Kabutops' },\n  { number: 142, name: 'Aerodactyl' },\n  { number: 143, name: 'Snorlax' },\n  { number: 144, name: 'Articuno' },\n  { number: 145, name: 'Zapdos' },\n  { number: 146, name: 'Moltres' },\n  { number: 147, name: 'Dratini' },\n  { number: 148, name: 'Dragonair' },\n  { number: 149, name: 'Dragonite' },\n  { number: 150, name: 'Mewtwo' },\n  { number: 151, name: 'Mew' },\n]"
        }
      ],
      "src/website/src/app/icons/icons.component.ts": [
        {
          "name": "blinkEssentialShapes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons.component.ts",
          "type": "",
          "defaultValue": "essentialShapesNames"
        },
        {
          "name": "COMMON_PATH",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons.component.ts",
          "type": "",
          "defaultValue": "`${environment.icons_base_url}/`"
        },
        {
          "name": "essentialShapesNames",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons.component.ts",
          "type": "",
          "defaultValue": "Object.keys(EssentialShapes)"
        }
      ],
      "src/website/src/app/documentation/demos/timeline/timeline-body-demo.ts": [
        {
          "name": "body",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/timeline/timeline-body-demo.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-timeline-step-body\">\n  <span class=\"clr-timeline-step-title\">Body Title</span>\n  <span class=\"clr-timeline-step-description\">Body Description.</span>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/detail/detail.ts": [
        {
          "name": "CHANGE_EVENT_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
          "type": "",
          "defaultValue":
            "`\n<ng-template clrIfDetail let-detail (clrIfDetailChange)=\"onDetailOpen($event)\">\n  <clr-dg-detail>\n    <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    <clr-dg-detail-body>\n      <-- ... -->\n    </clr-dg-detail-body>\n  </clr-dg-detail>\n</ng-template>\n`"
        },
        {
          "name": "DETAIL_PANE_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-dg-detail *clrIfDetail=\"let detail\">\n  <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n  <clr-dg-detail-body>\n    <-- ... -->\n  </clr-dg-detail-body>\n</clr-dg-detail>\n`"
        },
        {
          "name": "MAIN_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n\n    <clr-dg-detail *clrIfDetail=\"let detail\">\n        <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    </clr-dg-detail>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`"
        },
        {
          "name": "TWO_WAY_BINDING_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
          "type": "",
          "defaultValue":
            "`\n<ng-template [(clrIfDetail)]=\"detailState\" let-detail>\n  <clr-dg-detail>\n    <clr-dg-detail-header>{{detail.name}}</clr-dg-detail-header>\n    <clr-dg-detail-body>\n      <!-- ... -->\n    </clr-dg-detail-body>\n  </clr-dg-detail>\n</ng-template>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/color/color-palette/color-palettes.ts": [
        {
          "name": "CLARITY_PALETTES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/color/color-palette/color-palettes.ts",
          "type": "[]",
          "defaultValue":
            "[\n  {\n    name: 'Neutral',\n    weights: [\n      { weight: 0, hsl: 'hsl(198, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 50, hsl: 'hsl(198, 0%, 98%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 100, hsl: 'hsl(198, 0%, 95%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 200, hsl: 'hsl(198, 0%, 91%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 300, hsl: 'hsl(198, 0%, 87%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 400, hsl: 'hsl(198, 0%, 80%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 500, hsl: 'hsl(198, 0%, 70%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 600, hsl: 'hsl(198, 0%, 55%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 700, hsl: 'hsl(198, 0%, 40%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 800, hsl: 'hsl(198, 0%, 27%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(198, 0%, 20%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 1000, hsl: 'hsl(198, 0%, 0%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n    ],\n  },\n  {\n    name: 'Action',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(198, 83%, 94%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 100, hsl: 'hsl(198, 81%, 88%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 200, hsl: 'hsl(198, 78%, 78%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(198, 69%, 69%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 400, hsl: 'hsl(198, 66%, 57%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(198, 80%, 46%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 600, hsl: 'hsl(198, 100%, 38%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 700, hsl: 'hsl(198, 100%, 34%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 800, hsl: 'hsl(198, 100%, 27%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 900, hsl: 'hsl(198, 100%, 21%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(198, 100%, 15%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n    ],\n  },\n  {\n    name: 'Secondary action',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(282, 100%, 95%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 100, hsl: 'hsl(282, 59%, 87%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 200, hsl: 'hsl(282, 51%, 78%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(282, 45%, 70%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 400, hsl: 'hsl(282, 44%, 62%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(282, 43%, 54%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 600, hsl: 'hsl(282, 50%, 45%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 700, hsl: 'hsl(282, 69%, 37%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 800, hsl: 'hsl(282, 100%, 29%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(282, 100%, 22%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(282, 48%, 14%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n    ],\n  },\n  {\n    name: 'Danger',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(14, 100%, 97%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 100, hsl: 'hsl(14, 95%, 92%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 200, hsl: 'hsl(14, 91%, 86%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(14, 83%, 76%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 400, hsl: 'hsl(14, 85%, 67%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(14, 88%, 61%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 600, hsl: 'hsl(14, 92%, 50%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 700, hsl: 'hsl(14, 100%, 43%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 800, hsl: 'hsl(14, 100%, 38%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(14, 100%, 30%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(14, 100%, 20%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n    ],\n  },\n  {\n    name: 'Warning',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(48, 100%, 95%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 100, hsl: 'hsl(48, 100%, 89%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 200, hsl: 'hsl(48, 100%, 83%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(48, 98%, 72%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 400, hsl: 'hsl(48, 94%, 57%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(48, 95%, 48%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 600, hsl: 'hsl(46, 100%, 45%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 700, hsl: 'hsl(43, 100%, 42%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 800, hsl: 'hsl(41, 100%, 36%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(38, 100%, 28%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(31, 100%, 19%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n    ],\n  },\n  {\n    name: 'Success',\n    weights: [\n      { weight: null, hsl: 'hsl(0, 0%, 100%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 50, hsl: 'hsl(93, 52%, 88%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 100, hsl: 'hsl(93, 58%, 75%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 200, hsl: 'hsl(93, 76%, 49%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 300, hsl: 'hsl(93, 77%, 44%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 400, hsl: 'hsl(93, 79%, 40%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 500, hsl: 'hsl(93, 67%, 38%)', on: 'hsl(198, 0%, 0%)', baseColor: true },\n      { weight: 600, hsl: 'hsl(93, 85%, 32%)', on: 'hsl(198, 0%, 0%)', baseColor: false },\n      { weight: 700, hsl: 'hsl(93, 100%, 26%)', on: 'hsl(198, 0%, 100%)', baseColor: true },\n      { weight: 800, hsl: 'hsl(93, 100%, 21%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 900, hsl: 'hsl(93, 100%, 16%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n      { weight: 1000, hsl: 'hsl(93, 100%, 13%)', on: 'hsl(198, 0%, 100%)', baseColor: false },\n    ],\n  },\n]"
        },
        {
          "name": "DEPRECATED_COLOR_PALETTES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/color/color-palette/color-palettes.ts",
          "type": "[]",
          "defaultValue":
            "[\n  {\n    type: 'Red',\n    colors: [\n      { value: '#F52F22', text: 'dark', primary: true },\n      { value: '#A32100', text: 'light' },\n      { value: '#C92100', text: 'light' },\n      { value: '#e12200', text: 'light', bulleted: true },\n      { value: '#F52F22', text: 'dark' },\n      { value: '#F54F47', text: 'dark' },\n      { value: '#F76F6C', text: 'dark' },\n      { value: '#F89997', text: 'dark' },\n      { value: '#F8B7B6', text: 'dark' },\n      { value: '#F5DBD9', text: 'dark' },\n      { value: '#FFF0EE', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Pink',\n    colors: [\n      { value: '#F1428A', text: 'dark', primary: true },\n      { value: '#9B0D54', text: 'light' },\n      { value: '#B0105B', text: 'light' },\n      { value: '#C41261', text: 'light' },\n      { value: '#D91468', text: 'light' },\n      { value: '#ED186F', text: 'dark' },\n      { value: '#F1428A', text: 'dark' },\n      { value: '#F46CA5', text: 'dark' },\n      { value: '#F897BF', text: 'dark' },\n      { value: '#FBC1DA', text: 'dark' },\n      { value: '#FFEBF5', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Purple',\n    colors: [\n      { value: '#781DA0', text: 'light', primary: true },\n      { value: '#4D007A', text: 'light' },\n      { value: '#660092', text: 'light' },\n      { value: '#781DA0', text: 'light' },\n      { value: '#8939AD', text: 'light' },\n      { value: '#9B56BB', text: 'light' },\n      { value: '#AD73C8', text: 'dark' },\n      { value: '#BE90D6', text: 'dark' },\n      { value: '#D0ACE4', text: 'dark' },\n      { value: '#E1C9F1', text: 'dark' },\n      { value: '#F3E6FF', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Ultramarine',\n    colors: [\n      { value: '#343DAC', text: 'light', primary: true },\n      { value: '#0F1E82', text: 'light' },\n      { value: '#1A23A0', text: 'light' },\n      { value: '#343DAC', text: 'light' },\n      { value: '#4E56B8', text: 'light' },\n      { value: '#6870C4', text: 'dark' },\n      { value: '#838ACF', text: 'dark' },\n      { value: '#9DA3DB', text: 'dark' },\n      { value: '#B7BDE7', text: 'dark' },\n      { value: '#D1D6F3', text: 'dark' },\n      { value: '#EBF0FF', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Blue',\n    colors: [\n      { value: '#0065AB', text: 'light', primary: true },\n      { value: '#003D79', text: 'light' },\n      { value: '#004D8A', text: 'light' },\n      { value: '#0065AB', text: 'light' },\n      { value: '#0079B8', text: 'light', bulleted: true },\n      { value: '#0095D3', text: 'dark' },\n      { value: '#49AFD9', text: 'dark' },\n      { value: '#89CBDF', text: 'dark' },\n      { value: '#A6D8E7', text: 'dark' },\n      { value: '#C5E5EF', text: 'dark' },\n      { value: '#E1F1F6', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Cyan',\n    colors: [\n      { value: '#00B7D6', text: 'dark', primary: true },\n      { value: '#004A70', text: 'light' },\n      { value: '#005680', text: 'light' },\n      { value: '#006690', text: 'light' },\n      { value: '#0081A7', text: 'dark' },\n      { value: '#009CBF', text: 'dark' },\n      { value: '#00B7D6', text: 'dark' },\n      { value: '#36C9E1', text: 'dark' },\n      { value: '#6DDBEB', text: 'dark' },\n      { value: '#A3EDF6', text: 'dark' },\n      { value: '#CCFBFF', text: 'dark' },\n    ],\n  },\n\n  {\n    type: 'Teal',\n    colors: [\n      { value: '#00968B', text: 'dark', primary: true },\n      { value: '#006668', text: 'light' },\n      { value: '#007E7A', text: 'light' },\n      { value: '#00968B', text: 'dark' },\n      { value: '#00AB9A', text: 'dark' },\n      { value: '#00BFA9', text: 'dark' },\n      { value: '#00D4B8', text: 'dark' },\n      { value: '#38DFC8', text: 'dark' },\n      { value: '#6FEAD9', text: 'dark' },\n      { value: '#A7F4E9', text: 'dark' },\n      { value: '#DEFFF9', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Green',\n    colors: [\n      { value: '#48960C', text: 'dark', primary: true },\n      { value: '#1D5100', text: 'light' },\n      { value: '#266900', text: 'light' },\n      { value: '#2F8400', text: 'light', bulleted: true },\n      { value: '#48960C', text: 'dark' },\n      { value: '#62A420', text: 'dark' },\n      { value: '#60B515', text: 'dark' },\n      { value: '#85C81A', text: 'dark' },\n      { value: '#AADB1E', text: 'dark' },\n      { value: '#C7E59C', text: 'dark' },\n      { value: '#DFF0D0', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Yellow',\n    colors: [\n      { value: '#ffdc0B', text: 'dark', primary: true },\n      { value: '#C47D00', text: 'dark' },\n      { value: '#D28F00', text: 'dark' },\n      { value: '#DFA100', text: 'dark' },\n      { value: '#EDB200', text: 'dark' },\n      { value: '#FAC400', text: 'dark' },\n      { value: '#FDD006', text: 'dark' },\n      { value: '#ffdc0B', text: 'dark' },\n      { value: '#FFE860', text: 'dark' },\n      { value: '#FEF3B5', text: 'dark' },\n      { value: '#FFFCE8', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Orange',\n    colors: [\n      { value: '#F57600', text: 'dark', primary: true },\n      { value: '#AA4500', text: 'light' },\n      { value: '#C25400', text: 'mid' },\n      { value: '#D36000', text: 'dark' },\n      { value: '#E46C00', text: 'dark' },\n      { value: '#F57600', text: 'dark' },\n      { value: '#FF8400', text: 'dark' },\n      { value: '#FF9C32', text: 'dark' },\n      { value: '#FFB565', text: 'dark' },\n      { value: '#FFCD97', text: 'dark' },\n      { value: '#FFE5C9', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Red-orange',\n    colors: [\n      { value: '#EE4A08', text: 'dark', primary: true },\n      { value: '#CD3517', text: 'light' },\n      { value: '#DE400F', text: 'dark' },\n      { value: '#EE4A08', text: 'dark' },\n      { value: '#FF5500', text: 'dark' },\n      { value: '#FF681C', text: 'dark' },\n      { value: '#FF8142', text: 'dark' },\n      { value: '#FF9A69', text: 'dark' },\n      { value: '#FFB38F', text: 'dark' },\n      { value: '#FFCCB5', text: 'dark' },\n      { value: '#FFE5DC', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Warm-grey',\n    colors: [\n      { value: '#80746D', text: 'light', primary: true },\n      { value: '#5B4D47', text: 'light' },\n      { value: '#6C5F59', text: 'light' },\n      { value: '#80746D', text: 'mid' },\n      { value: '#948981', text: 'dark' },\n      { value: '#A89E95', text: 'dark' },\n      { value: '#BBB3A9', text: 'dark' },\n      { value: '#CFC8BD', text: 'dark' },\n      { value: '#E3DDD1', text: 'dark' },\n      { value: '#F4F1E6', text: 'dark' },\n      { value: '#FAF9F5', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Neutral-grey',\n    colors: [\n      { value: '#737373', text: 'light', primary: true },\n      { value: '#313131', text: 'light' },\n      { value: '#444444', text: 'light' },\n      { value: '#565656', text: 'light', bulleted: true },\n      { value: '#737373', text: 'light' },\n      { value: '#9A9A9A', text: 'dark' },\n      { value: '#CCCCCC', text: 'dark' },\n      { value: '#DDDDDD', text: 'dark' },\n      { value: '#EEEEEE', text: 'dark' },\n      { value: '#F2F2F2', text: 'dark' },\n      { value: '#FAFAFA', text: 'dark', bulleted: true },\n    ],\n  },\n  {\n    type: 'Cool-grey',\n    colors: [\n      { value: '#61717D', text: 'light', primary: true },\n      { value: '#25333D', text: 'light' },\n      { value: '#314351', text: 'light' },\n      { value: '#495A67', text: 'light' },\n      { value: '#61717D', text: 'light' },\n      { value: '#798893', text: 'dark' },\n      { value: '#919FA8', text: 'dark' },\n      { value: '#A9B6BE', text: 'dark' },\n      { value: '#C1CDD4', text: 'dark' },\n      { value: '#D9E4EA', text: 'dark', bulleted: true },\n      { value: '#F3F6FA', text: 'dark' },\n    ],\n  },\n  {\n    type: 'Black-white',\n    colors: [{ value: '#000000', text: 'light' }, { value: '#FFFFFF', text: 'dark' }],\n  },\n]"
        }
      ],
      "src/website/src/app/icons/icons-sets/icon-detail-card/icon-detail-card.component.ts": [
        {
          "name": "ClarityIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-sets/icon-detail-card/icon-detail-card.component.ts",
          "type": "any"
        }
      ],
      "src/website/src/app/documentation/demos/timeline/timeline-full-demo.component.ts": [
        {
          "name": "code",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/timeline/timeline-full-demo.component.ts",
          "type": "object",
          "defaultValue":
            "{\n  staticHorizontal: `\n<ul class=\"clr-timeline clr-timeline-horizontal\">\n  <li class=\"clr-timeline-step disabled\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Add KMS</span>\n      <span class=\"clr-timeline-step-description\">Root CA certificate requested.</span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Add KMS</span>\n      <span class=\"clr-timeline-step-description\">\n    Root CA certificate requested. Upload it to the KMS to complete the connection.\n    <button class=\"btn btn-sm\">Action</button>\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Make vCenter trust KMS</span>\n      <span class=\"clr-timeline-step-description\">\n    Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n    and very long.\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Make KMS trust vCenter</span>\n      <span class=\"clr-timeline-step-description\">Upload it to the KMS to complete the connection. Third\n    sentence.\n    <button class=\"btn btn-sm btn-link\">Action</button>\n  </span>\n    </div>\n  </li>\n  <li class=\"clr-timeline-step\">\n    <div class=\"clr-timeline-step-header\">11:59 am</div>\n    <clr-icon shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n    <div class=\"clr-timeline-step-body\">\n      <span class=\"clr-timeline-step-title\">Connected</span>\n      <span class=\"clr-timeline-step-description\">No. It's not connected.</span>\n    </div>\n  </li>\n  </ul>`,\n  staticVertical: `\n  <ul class=\"clr-timeline clr-timeline-vertical\">\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Add KMS</span>\n        <span class=\"clr-timeline-step-description\">Root CA certificate requested.</span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"dot-circle\" aria-current=\"true\" aria-label=\"Current\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Add KMS</span>\n        <span class=\"clr-timeline-step-description\">\n          Root CA certificate requested. Upload it to the KMS to complete the connection.\n          <!-- <img src=\"assets/placeholder_350x150.png\" alt=\"Example of an Image in a Card\" /> -->\n          <img src=\"https://clarity.design/assets/images/documentation/cards/placeholder_350x150.png\" alt=\"Example of an Image in a Card\" />\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <span class=\"clr-timeline-step-header\">11:59 am</span>\n      <clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n        <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Make vCenter trust KMS</span>\n        <span class=\"clr-timeline-step-description\">\n          Root CA certificate requested. Upload it to the KMS to complete the connection. Third sentence is very long\n          and very long.\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\">11:59 am</div>\n      <clr-icon shape=\"success-standard\" aria-label=\"Completed\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Make KMS trust vCenter</span>\n        <span class=\"clr-timeline-step-description\">Upload it to the KMS to complete the connection. Third\n          sentence.\n          <button class=\"btn btn-sm\">Refresh</button>\n        </span>\n      </div>\n    </li>\n    <li class=\"clr-timeline-step\">\n      <div class=\"clr-timeline-step-header\"></div>\n      <clr-icon shape=\"error-standard\" aria-label=\"Error\"></clr-icon>\n      <div class=\"clr-timeline-step-body\">\n        <span class=\"clr-timeline-step-title\">Connected</span>\n        <span class=\"clr-timeline-step-description\">No. It's not connected.</span>\n      </div>\n    </li>\n  </ul>\n  `,\n}"
        }
      ],
      "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts": [
        {
          "name": "COLOR_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-icon shape=\"info-circle\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-highlight\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-error\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-warning\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-success\"></clr-icon>\n<clr-icon shape=\"info-circle\" class=\"is-info\"></clr-icon>`"
        },
        {
          "name": "DIRECTION_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue":
            "`\n<!--A. SETTING THE ROTATION DIRECTION THROUGH CLR-ICON SHAPE ATTRIBUTE-->\n<clr-icon shape=\"caret up\"></clr-icon>\n<clr-icon shape=\"caret right\"></clr-icon>\n<clr-icon shape=\"caret down\"></clr-icon>\n<clr-icon shape=\"caret left\"></clr-icon>\n\n<!--B. SETTING THE ROTATION DIRECTION THROUGH CLR-ICON DIR ATTRIBUTE-->\n<clr-icon shape=\"caret\" dir=\"up\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"right\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"down\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"left\"></clr-icon>\n\n<!--C. SETTING THE ROTATION DIRECTION IN STYLE ATTRIBUTE-->\n<clr-icon shape=\"caret\" style=\"transform: rotate(0deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(90deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(180deg);\"></clr-icon>\n<clr-icon shape=\"caret\" style=\"transform: rotate(270deg);\"></clr-icon>\n`"
        },
        {
          "name": "DIRECTION_EXAMPLE_DIR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-icon shape=\"caret\" dir=\"up\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"right\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"down\"></clr-icon>\n<clr-icon shape=\"caret\" dir=\"left\"></clr-icon>\n`"
        },
        {
          "name": "DIRECTION_EXAMPLE_FLIP",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-icon shape=\"floppy\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"horizontal\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"vertical\"></clr-icon>\n`"
        },
        {
          "name": "FLIP_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-icon shape=\"floppy\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"horizontal\"></clr-icon>\n<clr-icon shape=\"floppy\" flip=\"vertical\"></clr-icon>\n`"
        },
        {
          "name": "INTRO_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue": "`\n<clr-icon shape=\"info-circle\"></clr-icon>\n`"
        },
        {
          "name": "INVERSE_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue": "`\n<clr-icon shape=\"info-circle\" class=\"is-inverse\"></clr-icon>`"
        },
        {
          "name": "SIZE_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue":
            "`\n<!--A. SETTING THE SIZE THROUGH CLR-ICON SIZE ATTRIBUTE-->\n<clr-icon shape=\"info-circle\" size=\"12\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"16\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"36\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"48\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"64\"></clr-icon>\n<clr-icon shape=\"info-circle\" size=\"72\"></clr-icon>\n\n<!--B. SETTING THE SIZE IN STYLE ATTRIBUTE-->\n<clr-icon shape=\"info-circle\" style=\"width: 12px; height: 12px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 16px; height: 16px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 36px; height: 36px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 48px; height: 48px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 64px; height: 64px;\"></clr-icon>\n<clr-icon shape=\"info-circle\" style=\"width: 72px; height: 72px;\"></clr-icon>\n`"
        },
        {
          "name": "TITLE_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue": "`\n<clr-icon shape=\"copy\" title=\"Copy Document\"></clr-icon>\n`"
        },
        {
          "name": "VARIANTS_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-icon shape=\"user\"></clr-icon>\n<clr-icon shape=\"user\" class=\"has-alert\"></clr-icon>\n<clr-icon shape=\"user\" class=\"has-badge\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-alert\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-badge\"></clr-icon>\n<clr-icon shape=\"user\" class=\"is-solid has-badge--success\"></clr-icon>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/compact/compact.ts": [
        {
          "name": "COMPACT_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/compact/compact.ts",
          "type": "",
          "defaultValue": "`\n<clr-datagrid class=\"datagrid-compact\">\n    <-- ... -->\n</clr-datagrid>\n`"
        }
      ],
      "src/website/src/app/utils/component-list.ts": [
        {
          "name": "COMPONENT_MAP",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/utils/component-list.ts",
          "type": "",
          "defaultValue": "new Map()"
        }
      ],
      "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts": [
        {
          "name": "componentExample",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts",
          "type": "",
          "defaultValue":
            "`\nimport { Component } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'clr-angular-stepper-reactive-demo',\n  templateUrl: './angular-stepper-reactive.demo.html',\n})\nexport class AngularStepperReactiveDemo {\n  form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      name: this.formBuilder.group({\n        first: ['Luke', Validators.required],\n        last: ['Skywalker', Validators.required],\n      }),\n      contact: this.formBuilder.group({\n        email: [],\n        phone: [],\n      }),\n      password: this.formBuilder.group({\n        password: [],\n        confirm: [],\n      }),\n    });\n  }\n\n  submit() {\n    console.log('reactive form submit', this.form.value);\n  }\n}`"
        },
        {
          "name": "templateExample",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrStepper [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n  <clr-stepper-panel formGroupName=\"name\">\n    <clr-step-title>Legal Name</clr-step-title>\n    <clr-step-description>Description goes here.</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      <clr-input-container>\n        <label>First Name</label>\n        <input clrInput formControlName=\"first\" />\n        <clr-control-error *clrIfError=\"'required'\">First Name Required</clr-control-error>\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Last Name</label>\n        <input clrInput formControlName=\"last\" />\n        <clr-control-error *clrIfError=\"'required'\">Last Name Required</clr-control-error>\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel formGroupName=\"contact\">\n    <clr-step-title>Contact Information</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      ...\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel formGroupName=\"password\">\n    <clr-step-title>Password</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content *clrIfExpanded>\n      ...\n      <button clrStepButton=\"submit\">submit</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n</form>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts": [
        {
          "name": "componentExample",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts",
          "type": "",
          "defaultValue":
            "`\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-angular-stepper-template-demo',\n  templateUrl: './angular-stepper-template.demo.html',\n})\nexport class AngularStepperTemplateDemo {\n  templateForm = {\n    name: {\n      firstName: '',\n      lastName: '',\n    },\n    contact: {\n      email: '',\n      phone: '',\n    },\n    password: {\n      password: '',\n      confirm: '',\n    },\n  };\n\n  templateFormSubmit(templateFormValues: {}) {\n    console.log('template form submit', templateFormValues);\n  }\n}\n`"
        },
        {
          "name": "templateExample",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrStepper #contactForm=\"ngForm\" (ngSubmit)=\"templateFormSubmit(contactForm.value)\">\n  <clr-stepper-panel ngModelGroup=\"name\">\n    <clr-step-title>Legal Name</clr-step-title>\n    <clr-step-description>Description goes here.</clr-step-description>\n    <clr-step-content>\n      <clr-input-container>\n        <label>First Name</label>\n        <input clrInput [ngModel]=\"templateForm.name.firstName\" name=\"firstName\" required />\n      </clr-input-container>\n\n      <clr-input-container>\n        <label>Last Name</label>\n        <input clrInput [ngModel]=\"templateForm.name.lastName\" name=\"lastName\" required />\n      </clr-input-container>\n\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel ngModelGroup=\"contact\">\n    <clr-step-title>Contact Information</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content>\n      ...\n      <button clrStepButton=\"next\">next</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n\n  <clr-stepper-panel ngModelGroup=\"password\">\n    <clr-step-title>Password</clr-step-title>\n    <clr-step-description>...</clr-step-description>\n    <clr-step-content>\n      ...\n      <button clrStepButton=\"submit\">submit</button>\n    </clr-step-content>\n  </clr-stepper-panel>\n</form>\n`"
        }
      ],
      "src/website/src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/test.ts",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/test.ts",
          "type": "any"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts": [
        {
          "name": "CUSTOM_TOGGLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-dg-column-toggle>\n    <clr-dg-column-toggle-title>Column Toggle Title</clr-dg-column-toggle-title>\n    <clr-dg-column-toggle-button>Select All Button</clr-dg-column-toggle-button>\n</clr-dg-column-toggle>\n`"
        },
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            User ID\n        </ng-container>\n    </clr-dg-column>\n    <clr-dg-column>\n        <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n            Name\n        </ng-container>\n    </clr-dg-column>\n    ...\n\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        ...\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{pagination.totalItems}} users\n        <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/color/color-palette-functional/functional-color-palettes.ts": [
        {
          "name": "DARK_THEME_COLOR_PALETTES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/color/color-palette-functional/functional-color-palettes.ts",
          "type": "[]",
          "defaultValue":
            "[\n  {\n    legend: 'Backgrounds and borders',\n    colors: [\n      { value: '#0F171C', text: 'light' },\n      { value: '#17242B', text: 'light' },\n      { value: '#1B2A32', text: 'light' },\n      { value: '#22343C', text: 'light' },\n      { value: '#485764', text: 'light' },\n      { value: '#566572', text: 'light' },\n      { value: '#6D7884', text: 'mid' },\n    ],\n  },\n  {\n    legend: 'Row hover, selection',\n    colors: [{ value: '#29414E', text: 'light' }, { value: '#324F61', text: 'light' }],\n  },\n  {\n    legend: 'Typography',\n    colors: [\n      { value: '#8F9BA3', text: 'dark' },\n      { value: '#ADBBC4', text: 'dark' },\n      { value: '#E9ECEF', text: 'dark' },\n      { value: '#FFFFFF', text: 'dark' },\n      { value: '#000000', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Buttons and app-level alerts',\n    colors: [\n      { value: '#49AFD9', text: 'dark' },\n      { value: '#F54F47', text: 'dark' },\n      { value: '#FDD006', text: 'dark' },\n      { value: '#60B515', text: 'dark' },\n      { value: '#6D7884', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Standard alerts',\n    colors: [\n      { value: '#0F6082', text: 'light' },\n      { value: '#882D31', text: 'light' },\n      { value: '#205522', text: 'light' },\n      { value: '#7F6509', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Labels & badges',\n    colors: [\n      { value: '#0F6082', text: 'light' },\n      { value: '#882D31', text: 'light' },\n      { value: '#205522', text: 'light' },\n      { value: '#7F6509', text: 'light' },\n      { value: '#737373', text: 'light' },\n      { value: '#AD73C8', text: 'dark' },\n      { value: '#0079B8', text: 'light' },\n      { value: '#FF9C32', text: 'dark' },\n      { value: '#89CBDF', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Headers',\n    colors: [\n      { value: '#404E60', text: 'light' },\n      { value: '#165266', text: 'light' },\n      { value: '#1A4C72', text: 'light' },\n      { value: '#5C3552', text: 'light' },\n      { value: '#3E436A', text: 'light' },\n      { value: '#000000', text: 'light' },\n    ],\n  },\n]"
        },
        {
          "name": "LIGHT_THEME_COLOR_PALETTES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/color/color-palette-functional/functional-color-palettes.ts",
          "type": "[]",
          "defaultValue":
            "[\n  {\n    legend: 'Backgrounds and borders',\n    colors: [\n      { weight: '0', value: 'hsl(198, 0%, 100%)', text: 'dark' },\n      { weight: '50', value: 'hsl(198, 0%, 98%)', text: 'dark' },\n      { weight: '200', value: 'hsl(198, 0%, 93%)', text: 'dark' },\n      { weight: '400', value: 'hsl(198, 0%, 80%)', text: 'dark' },\n      { weight: '500', value: 'hsl(198, 0%, 60%)', text: 'dark' },\n      { weight: '600', value: 'hsl(198, 0%, 45%)', text: 'light' },\n      { weight: '700', value: 'hsl(198, 0%, 34%)', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Row hover, selection',\n    colors: [\n      { weight: '200', value: 'hsl(198, 0%, 93%)', text: 'dark' },\n      { weight: 'n/a', value: 'hsl(201, 29%, 88%) ', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Typography',\n    colors: [\n      { weight: '700', value: 'hsl(198, 0%, 34%)', text: 'light' },\n      { weight: '900', value: 'hsl(198, 0%, 19%)', text: 'light' },\n      { weight: '1000', value: 'hsl(198, 0%, 0%)', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Buttons and app-level alerts',\n    colors: [\n      { weight: '600', value: 'hsl(198, 100%, 36%)', text: 'light' },\n      { weight: '700', value: 'hsl(14, 100%, 39%)', text: 'light' },\n      { weight: '500', value: 'hsl(93, 67%, 38%)', text: 'dark' },\n      { weight: '700', value: 'hsl(93, 100%, 26%)', text: 'light' },\n      { weight: '400', value: 'hsl(198, 0%, 80%)', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Standard alerts',\n    colors: [\n      { weight: '50', value: 'hsl(198, 54%, 92%)', text: 'dark' },\n      { weight: '50', value: 'hsl(93, 52%, 88%)', text: 'dark' },\n      { weight: '100', value: 'hsl(14, 83%, 84%)', text: 'dark' },\n      { weight: '100', value: 'hsl(48, 97%, 85%)', text: 'dark' },\n    ],\n  },\n  {\n    legend: 'Headers',\n    colors: [\n      { weight: '900', value: 'hsl(198, 0%, 19%)', text: 'light' },\n      { weight: '1000', value: 'hsl(282, 48%, 14%)', text: 'light' },\n      { weight: '700', value: 'hsl(198, 100%, 34%)', text: 'light' },\n      { weight: '800', value: 'hsl(198, 100%, 27%)', text: 'light' },\n      { weight: '1000', value: 'hsl(198, 100%, 11%)', text: 'light' },\n    ],\n  },\n  {\n    legend: 'Labels & badges',\n    colors: [\n      { weight: '600', value: 'hsl(198, 0%, 45%)', text: 'light' },\n      { weight: '50', value: 'hsl(198, 54%, 92%)', text: 'dark' },\n      { weight: '300', value: 'hsl(198, 57%, 71%)', text: 'dark' },\n      { weight: '600', value: 'hsl(198, 100%, 36%)', text: 'light' },\n      { weight: '800', value: 'hsl(198, 100%, 27%)', text: 'light' },\n      { weight: '500', value: 'hsl(282, 43%, 54%)', text: 'light' },\n      { weight: '100', value: 'hsl(14, 83%, 84%)', text: 'dark' },\n      { weight: '700', value: 'hsl(14, 100%, 39%)', text: 'light' },\n      { weight: '100', value: 'hsl(48, 100%, 83%)', text: 'dark' },\n      { weight: '300', value: 'hsl(48, 94%, 57%)', text: 'dark' },\n      { weight: '500', value: 'hsl(46, 100%, 45%)', text: 'dark' },\n      { weight: '50', value: 'hsl(93, 52%, 88%)', text: 'dark' },\n      { weight: '700', value: 'hsl(93, 100%, 26%)', text: 'light' },\n      { weight: '600', value: 'hsl(198, 0%, 45%)', text: 'light' },\n    ],\n  },\n]"
        }
      ],
      "src/website/src/environments/environment.prod.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/environments/environment.prod.ts",
          "type": "object",
          "defaultValue":
            "{\n  production: true,\n  latest: 'v2',\n  version: 'v3',\n  versions_url: 'https://clarity.design/versions.json',\n  icons_base_url: '/.netlify/functions/download-icon',\n  icons_url: 'https://github.com/vmware/clarity-assets/archive/master.zip',\n  sketch_base_url: 'https://github.com/vmware/clarity-assets/raw/master/sketch',\n  sketch_icons_url:\n    'https://github.com/vmware/clarity-assets/raw/master/sketch/icons/clarity-library-icons-2.2.0.sketch',\n  figma_link_light: 'https://www.figma.com/file/v2mkhzKQdhECXOx8BElgdA/Clarity-UI-Library-light-2.2.0',\n  figma_link_dark: 'https://www.figma.com/file/wRYSrWSffZXcdQuiolwkym/Clarity-UI-Library-dark-2.2.0',\n  figma_icons: 'https://www.figma.com/file/40gaW7S2yP7B0ME6QNDEsR/Clarity-Icons-2.2.0',\n  figma_color: 'https://www.figma.com/file/mxn3xoLg2mkjMqf5GGYUzw/Clarity-Colors-2.2.0',\n}"
        }
      ],
      "src/website/src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/environments/environment.ts",
          "type": "",
          "defaultValue": "prod"
        }
      ],
      "src/website/src/app/documentation/demos/accordion/angular-accordion.demo.ts": [
        {
          "name": "example",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/accordion/angular-accordion.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-accordion>\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 1</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 1</clr-accordion-content>\n  </clr-accordion-panel>\n\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 2</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 2</clr-accordion-content>\n  </clr-accordion-panel>\n\n  <clr-accordion-panel>\n    <clr-accordion-title>Item 3</clr-accordion-title>\n    <clr-accordion-content *clrIfExpanded>Content 3</clr-accordion-content>\n  </clr-accordion-panel>\n</clr-accordion>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/custom-rendering/custom-rendering.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/custom-rendering/custom-rendering.ts",
          "type": "",
          "defaultValue":
            "`\n<-- Inside the full datagrid declaration -->\n<clr-dg-row *ngFor=\"let user of users\">\n    <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <clr-dg-cell>{{user.name}}</clr-dg-cell>\n    <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n    <clr-dg-cell>\n        <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n    </clr-dg-cell>\n</clr-dg-row>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/typography/typography-headers.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/typography/typography-headers.ts",
          "type": "",
          "defaultValue":
            "`\n<h1>Header 1 (Display)</h1>\n<h2>Header 2 (Headline)</h2>\n<h3>Header 3 (Sub Heading)</h3>\n<h4>Header 4 (Section Heading Level 1)</h4>\n<h5>Header 5 (Category / group label, TOC)</h5>\n<h6>Header 6 (Section Heading Level 2 group label)</h6>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/basic-tree-DM/tree-basic-DM.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/basic-tree-DM/tree-basic-DM.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree>\n    <clr-tree-node [clrExpanded]=\"true\">\n        David Wallace (CFO)\n        <clr-tree-node [clrExpanded]=\"true\">\n            Michael Scott (Regional Manager)\n\n            <clr-tree-node>Dwight K. Schrute (Assistant to the Regional Manager)</clr-tree-node>\n\n            <clr-tree-node>\n                Jim Halpert (Head of Sales)\n                <clr-tree-node>Andy Bernard</clr-tree-node>\n                <clr-tree-node>Stanley Hudson</clr-tree-node>\n                <clr-tree-node>Phyllis Vance</clr-tree-node>\n                <clr-tree-node>Todd Packer</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Angela Martin (Head of Accounting)\n                <clr-tree-node>Kevin Malone</clr-tree-node>\n                <clr-tree-node>Oscar Martinez</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Kelly Kapoor (Head of Customer Service)\n                <clr-tree-node>Ryan Howard (Temp)</clr-tree-node>\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Creed Bratton (Quality Assurance)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Meredith Palmer (Supplier Relations)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Toby Flenderson (Human Resources)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Pam Beesly (Reception)\n            </clr-tree-node>\n\n            <clr-tree-node>\n                Darryl Philbin (Warehouse)\n            </clr-tree-node>\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/binding-properties/binding-properties.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/binding-properties/binding-properties.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon.name'\">Pokemon</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'color'\">Favorite color</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'wins'\" [clrDgColType]=\"'number'\">Wins</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n        <clr-dg-cell>{{user.wins}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-width.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-width.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Language</th>\n                    <th>Foo</th>\n                    <th>Bar</th>\n                    <th>Baz</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Pig Latin</td>\n                    <td>Oofay</td>\n                    <td>Arbay</td>\n                    <td>Azbay</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Bizarro</td>\n                    <td>Bar</td>\n                    <td>Foo</td>\n                    <td>Bang</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Hodor</td>\n                    <td>Hodor</td>\n                    <td>Hodor</td>\n                    <td>Hodor</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Color</th>\n                    <th>R</th>\n                    <th>G</th>\n                    <th>B</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Black</td>\n                    <td>0</td>\n                    <td>0</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">New Black</td>\n                    <td>255</td>\n                    <td>165</td>\n                    <td>0</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Pantone 292</td>\n                    <td>98</td>\n                    <td>168</td>\n                    <td>229</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"clr-col-12 clr-col-lg-6 clr-col-xl-4\">\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th class=\"left\">Name</th>\n                    <th class=\"left\">Weakness</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td class=\"left\">Frankenstein</td>\n                    <td class=\"left\">Fire</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Dracula</td>\n                    <td class=\"left\">Garlic</td>\n                </tr>\n                <tr>\n                    <td class=\"left\">Wolfman</td>\n                    <td class=\"left\">Squirrels</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/sidenav/sidenav.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/sidenav/sidenav.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"main-container\">\n    <header class=\"header header-6\">\n        ...\n    </header>\n    <div class=\"content-container\">\n        <nav class=\"sidenav\">\n            <section class=\"sidenav-content\">\n                <a href=\"...\" class=\"nav-link active\">\n                    Nav Element 1\n                </a>\n                <a href=\"...\" class=\"nav-link\">\n                    Nav Element 2\n                </a>\n                <section class=\"nav-group collapsible\">\n                    <input id=\"tabexample1\" type=\"checkbox\">\n                    <label for=\"tabexample1\">Collapsible Nav Element</label>\n                    <ul class=\"nav-list\">\n                        <li><a class=\"nav-link\">Link 1</a></li>\n                        <li><a class=\"nav-link\">Link 2</a></li>\n                    </ul>\n                </section>\n                <section class=\"nav-group\">\n                    <input id=\"tabexample2\" type=\"checkbox\">\n                    <label for=\"tabexample2\">Default Nav Element</label>\n                    <ul class=\"nav-list\">\n                        <li><a class=\"nav-link\">Link 1</a></li>\n                        <li><a class=\"nav-link\">Link 2</a></li>\n                        <li><a class=\"nav-link active\">Link 3</a></li>\n                        <li><a class=\"nav-link\">Link 4</a></li>\n                        <li><a class=\"nav-link\">Link 5</a></li>\n                        <li><a class=\"nav-link\">Link 6</a></li>\n                    </ul>\n                </section>\n            </section>\n        </nav>\n        <div class=\"content-area\">\n            ...\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/stack-view/stack-view-angular-basic.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-basic.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-stack-view>\n    <clr-stack-header>Angular stack view</clr-stack-header>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"1\">\n        <clr-stack-label>Label 1</clr-stack-label>\n        <clr-stack-content>Content 1</clr-stack-content>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"2\">\n        <clr-stack-label>Label 2</clr-stack-label>\n        <clr-stack-content>Content 2</clr-stack-content>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"1\">\n            <clr-stack-label>Sub-label 1</clr-stack-label>\n            <clr-stack-content>Sub-content 1</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"2\">\n            <clr-stack-label>Sub-label 2</clr-stack-label>\n            <clr-stack-content>Sub-content 2</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"3\">\n            <clr-stack-label>Sub-label 3</clr-stack-label>\n            <clr-stack-content>Sub-content 3</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"3\" [clrStackViewPosinset]=\"3\">\n        <clr-stack-label>Label 3</clr-stack-label>\n        <clr-stack-content>Content 3</clr-stack-content>\n        <clr-stack-block>\n            <clr-stack-label>Sub-label 4</clr-stack-label>\n            <clr-stack-content>Sub-content 4</clr-stack-content>\n        </clr-stack-block>\n        <clr-stack-block>\n            <clr-stack-label>Sub-label 5</clr-stack-label>\n            <clr-stack-content>Sub-content 5</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n</clr-stack-view>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/smart-iterator/smart-iterator.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/smart-iterator/smart-iterator.ts",
          "type": "",
          "defaultValue":
            "`\n<-- Inside the full datagrid declaration -->\n<clr-dg-row *clrDgItems=\"let user of users\">\n    <-- Cells declarations -->\n</clr-dg-row>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected user: <span class=\"username\" *ngIf=\"selectedUser\">{{selectedUser.name}}</span>\n`"
        },
        {
          "name": "ROW_SELECTION_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\" [clrDgRowSelection]=\"true\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected user: <span class=\"username\" *ngIf=\"selectedUser\">{{selectedUser.name}}</span>\n`"
        },
        {
          "name": "SELECTION_CHANGE_EVENT_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid [clrDgSingleSelected]=\"selected\"\n              (clrDgSingleSelectedChange)=\"selectionChanged($event)\">\n    <-- ... -->\n</clr-datagrid>\n`"
        },
        {
          "name": "UNSELECTABLE_ROW",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-dg-row [clrDgSelectable]=\"!user.locked\" *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n  <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <-- ... -->\n  </clr-dg-row>\n</clr-dg-row>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-vertical.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-vertical.ts",
          "type": "",
          "defaultValue":
            "`\n<table class=\"table table-vertical\">\n    <tbody>\n        <tr>\n            <th>Basic table</th>\n            <td>.table</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Left-aligned table cells</th>\n            <td>.left</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Tables without borders</th>\n            <td>.table-noborder</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Compact tables</th>\n            <td>.table-compact</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Vertical tables</th>\n            <td>.table-vertical</td>\n            <td>...</td>\n        </tr>\n    </tbody>\n</table>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/placeholder/placeholder.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/placeholder/placeholder.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid>\n    <-- ... -->\n    <clr-dg-placeholder>We couldn't find any users!</clr-dg-placeholder>\n    \n    <clr-dg-row *ngFor=\"let user of users\">\n        <-- ... -->\n    </clr-dg-row>\n    <-- ... -->\n</clr-datagrid>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/pagination/pagination.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/pagination/pagination.ts",
          "type": "",
          "defaultValue":
            "`\n<-- Inside the full datagrid declaration -->\n<clr-dg-footer>\n    <clr-dg-pagination #pagination [clrDgPageSize]=\"10\">\n        <clr-dg-page-size [clrPageSizeOptions]=\"[10,20,50,100]\">Users per page</clr-dg-page-size>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{pagination.totalItems}} users\n    </clr-dg-pagination>\n</clr-dg-footer>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/dropdown/dropdown-angular-positioning.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-positioning.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-dropdown>\n    <button class=\"btn btn-outline-primary\" clrDropdownTrigger>\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <clr-dropdown-menu clrPosition=\"top-left\" *clrIfOpen>\n        <label class=\"dropdown-header\" aria-hidden=\"true\">Dropdown header</label>\n        <div aria-label=\"Dropdown header Action 1\" clrDropdownItem>Action 1</div>\n        <div aria-label=\"Dropdown header Disabled Action\" [clrDisabled]=\"true\" clrDropdownItem>Disabled Action</div>\n        <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\n        <clr-dropdown>\n            <button clrDropdownTrigger>Link 1</button>\n            <clr-dropdown-menu>\n                <button clrDropdownItem>Foo</button>\n                <clr-dropdown>\n                    <button clrDropdownTrigger>Bar</button>\n                    <clr-dropdown-menu clrPosition=\"left-top\">\n                        <button clrDropdownItem>Baz</button>\n                    </clr-dropdown-menu>\n                </clr-dropdown>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n        <div clrDropdownItem>Link 2</div>\n    </clr-dropdown-menu>\n</clr-dropdown>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/dropdown/dropdown-static-buttonlink-toggle.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-buttonlink-toggle.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"dropdown open\">\n    <button class=\"dropdown-toggle btn btn-link\">\n        Dropdown Toggle\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div aria-label=\"Dropdown header Lorem\" class=\"dropdown-item\">Lorem.</div>\n        <div aria-label=\"Dropdown header Lorem ipsum\" class=\"dropdown-item\">Lorem ipsum.</div>\n        <div aria-label=\"Dropdown header Lorem ipsum dolor\" class=\"dropdown-item\">Lorem ipsum dolor.</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link</div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/dropdown/dropdown-static-fontawesome-toggle.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-fontawesome-toggle.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"dropdown bottom-right open\">\n    <button class=\"dropdown-toggle\">\n        <span class=\"fa fa-home fa-fw\"></span>\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item\">Action 1</div>\n        <div class=\"dropdown-item\">Action 2</div>\n        <div class=\"dropdown-item\">Action 3</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link 1</div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/dropdown/dropdown-static-icon-toggle.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-icon-toggle.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"dropdown bottom-left open\">\n    <button class=\"dropdown-toggle\">\n        <clr-icon shape=\"error\" class=\"is-error\" size=\"24\"></clr-icon>\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item\">Lorem.</div>\n        <div class=\"dropdown-item\">Lorem ipsum.</div>\n        <div class=\"dropdown-item\">Lorem ipsum dolor.</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Action 1</div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/dropdown/dropdown-static-positioning.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-positioning.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"dropdown bottom-right open\">\n    <button class=\"dropdown-toggle btn btn-primary\">\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item active\">First Action</div>\n        <div class=\"dropdown-item disabled\">Disabled Action</div>\n        <div class=\"dropdown-divider\"></div>\n        <div class=\"dropdown-item\">Link 1</div>\n        <div class=\"dropdown-item\">Link 2</div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/header/header-colors.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/header/header-colors.ts",
          "type": "",
          "defaultValue":
            "`\n<header class=\"header header-1\">\n    ...\n</header>\n\n<header class=\"header header-2\">\n    ...\n</header>\n\n<header class=\"header header-3\">\n    ...\n</header>\n\n<header class=\"header header-4\">\n    ...\n</header>\n\n<header class=\"header header-5\">\n    ...\n</header>\n\n<header class=\"header header-6\">\n    ...\n</header>\n\n<header class=\"header header-7\">\n    ...\n</header>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/header/header-links.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/header/header-links.ts",
          "type": "",
          "defaultValue":
            "`\n<header class=\"header-6\">\n    <div class=\"branding\">\n        ...\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"javascript://\" class=\"active nav-link nav-text\">Dashboard</a>\n        <a href=\"javascript://\" class=\"nav-link nav-text\">Interactive Analytics</a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/header/header-types.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/header/header-types.ts",
          "type": "",
          "defaultValue":
            "`\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-nav\">\n        <a href=\"...\" class=\"active nav-link\"><span class=\"nav-text\">Dashboard</span></a>\n        <a href=\"...\" class=\"nav-link\"><span class=\"nav-text\">Interactive Analytics</span></a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <form class=\"search\">\n        <label for=\"search_input\">\n            <input id=\"search_input\" type=\"text\" placeholder=\"Search for keywords...\">\n        </label>\n    </form>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-icon\" aria-label=\"settings\">\n            <clr-icon shape=\"cog\"></clr-icon>\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <clr-dropdown>\n            <button class=\"nav-icon\" clrDropdownTrigger aria-label=\"toggle settings menu\">\n                <clr-icon shape=\"cog\"></clr-icon>\n                <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n                <a href=\"...\" clrDropdownItem>About</a>\n                <a href=\"...\" clrDropdownItem>Preferences</a>\n                <a href=\"...\" clrDropdownItem>Log out</a>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"...\" class=\"nav-link nav-text\">\n            Log Out\n        </a>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"...\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <clr-dropdown>\n            <button class=\"nav-text\" clrDropdownTrigger aria-label=\"open user profile\">\n                john.doe@vmware.com\n                <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <clr-dropdown-menu *clrIfOpen clrPosition=\"bottom-right\">\n                <a href=\"...\" clrDropdownItem>Preferences</a>\n                <a href=\"...\" clrDropdownItem>Log out</a>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n</header>\n\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <a href=\"javascript://\" class=\"nav-link\">\n            <clr-icon shape=\"vm-bug\"></clr-icon>\n            <span class=\"title\">Project Clarity</span>\n        </a>\n    </div>\n    <div class=\"header-actions\">\n        <a href=\"javascript://\" class=\"nav-link nav-icon-text\">\n            <clr-icon shape=\"user\"></clr-icon>\n            <span class=\"nav-text\">username</span>\n        </a>\n    </div>\n</header>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/header/sub-nav.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/header/sub-nav.ts",
          "type": "",
          "defaultValue":
            "`\n<header>\n    ...\n</header>\n<nav class=\"subnav\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" href=\"#\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Management</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Cloud</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Tenants</a>\n        </li>\n    </ul>\n</nav>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-auto-layout-1.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-1.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/5</span>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/3</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-vertical-noborder-compact.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-vertical-noborder-compact.ts",
          "type": "",
          "defaultValue":
            "`\n<table class=\"table table-vertical table-noborder table-compact\">\n    <tbody>\n        <tr>\n            <th>Basic table</th>\n            <td>.table</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Left-aligned table cells</th>\n            <td>.left</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Tables without borders</th>\n            <td>.table-noborder</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Compact tables</th>\n            <td>.table-compact</td>\n            <td>...</td>\n        </tr>\n        <tr>\n            <th>Vertical tables</th>\n            <td>.table-vertical</td>\n            <td>...</td>\n        </tr>\n    </tbody>\n</table>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-noborder.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-noborder.ts",
          "type": "",
          "defaultValue":
            "`\n<table class=\"table table-noborder\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-multiline.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-multiline.ts",
          "type": "",
          "defaultValue":
            "`\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Name</th>\n            <th>A/B</th>\n            <th class=\"left\">Comment</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Beetlejuice</td>\n            <td>B</td>\n            <td class=\"left\">...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mytzlplk</td>\n            <td>A</td>\n            <td class=\"left\">...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Q</td>\n            <td>A</td>\n            <td class=\"left\">...</td>\n        </tr>\n    </tbody>\n</table>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-leftcell.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-leftcell.ts",
          "type": "",
          "defaultValue":
            "`\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th class=\"left\">Wizard</th>\n            <th>Allegiance</th>\n            <th>Triwizard Champion?</th>\n            <th>Can Cast Fireball</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Harry</td>\n            <td>Gryffindor</td>\n            <td>Yes</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Gandalf</td>\n            <td>Hobbits</td>\n            <td>Maybe?</td>\n            <td>I don&apos;t think so...</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Obi-Wan Kenobi</td>\n            <td>Republic/Rebellion</td>\n            <td>No</td>\n            <td>No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Merlin</td>\n            <td>King Arthur</td>\n            <td>Probably invented the tournament</td>\n            <td>Solid maybe</td>\n        </tr>\n    </tbody>\n</table>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-column-offsetting.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-column-offsetting.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-sm-4\">\n        <span>clr-col-sm-4</span>\n    </div>\n    <div class=\"clr-col-sm-6 clr-offset-sm-2\">\n        <span>clr-col-sm-6 clr-offset-sm-2</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-column-ordering.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-column-ordering.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1st, Unordered</span>\n    </div>\n    <div class=\"clr-col clr-order-3\">\n        <span>2nd, Order 3</span>\n    </div>\n    <div class=\"clr-col clr-order-2\">\n        <span>3rd, Order 2</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-column-stacking.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-column-stacking.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-sm-12 clr-col-md-6\">\n        <span>clr-col-sm-12 clr-col-md-6</span>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-6\">\n        <span>clr-col-sm-12 clr-col-md-6</span>\n    </div>\n    <div class=\"clr-col-sm-12 clr-col-md-12\">\n        <span>clr-col-sm-12 clr-col-md-12</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-column-wrapping.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-column-wrapping.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-6\">\n        <span>clr-col-7</span>\n    </div>\n    <div class=\"clr-col-8\">\n        <span>clr-col-8</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-columns.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-columns.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-4\">\n        <span>4</span>\n    </div>\n    <div class=\"clr-col-6\">\n        <span>6</span>\n    </div>\n    <div class=\"clr-col-2\">\n        <span>2</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-compact.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-compact.ts",
          "type": "",
          "defaultValue":
            "`\n<table class=\"table table-compact\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-compact-noborder.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-compact-noborder.ts",
          "type": "",
          "defaultValue":
            "`\n<table class=\"table table-compact table-noborder\">\n    <thead>\n        <tr>\n            <th class=\"left\">Monster</th>\n            <th>Home</th>\n            <th>Likes Cookies</th>\n            <th class=\"left\">Fun to Play With</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"left\">Wolfman</td>\n            <td>Nondisclosed countryside</td>\n            <td>Sometimes</td>\n            <td class=\"left\">Not really</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Mothra</td>\n            <td>Tropical island</td>\n            <td>No</td>\n            <td class=\"left\">Only if you have a flashlight</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Oscar the Grouch</td>\n            <td>Sesame Street</td>\n            <td>No</td>\n            <td class=\"left\">No</td>\n        </tr>\n        <tr>\n            <td class=\"left\">Cookie Monster</td>\n            <td>Sesame Street</td>\n            <td>Definitely yes</td>\n            <td class=\"left\">Only if you have no cookies</td>\n        </tr>\n    </tbody>\n</table>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tables/tables-basic.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tables/tables-basic.ts",
          "type": "",
          "defaultValue":
            "`\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Decimal</th>\n            <th>Hexadecimal</th>\n            <th>Binary</th>\n            <th>Roman Numeral</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1</td>\n            <td>1</td>\n            <td>1</td>\n            <td>I</td>\n        </tr>\n        <tr>\n            <td>5</td>\n            <td>5</td>\n            <td>101</td>\n            <td>V</td>\n        </tr>\n        <tr>\n            <td>10</td>\n            <td>A</td>\n            <td>1010</td>\n            <td>X</td>\n        </tr>\n        <tr>\n            <td>15</td>\n            <td>F</td>\n            <td>1111</td>\n            <td>XV</td>\n        </tr>\n    </tbody>\n</table>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tabs/tabs-static.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tabs/tabs-static.ts",
          "type": "",
          "defaultValue":
            "`\n<ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab1\" class=\"btn btn-link nav-link active\" aria-controls=\"panel1\"\n                aria-selected=\"true\" type=\"button\">Dashboard</button>\n    </li>\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab2\" class=\"btn btn-link nav-link\" aria-controls=\"panel2\"\n                aria-selected=\"false\" type=\"button\">Management</button>\n    </li>\n    <li role=\"presentation\" class=\"nav-item\">\n        <button id=\"tab3\" class=\"btn btn-link nav-link\" aria-controls=\"panel3\"\n                aria-selected=\"false\" type=\"button\">Cloud</button>\n    </li>\n</ul>\n<section id=\"panel1\" role=\"tabpanel\" aria-labelledby=\"tab1\">\n    ...\n</section>\n<section id=\"panel2\" role=\"tabpanel\" aria-labelledby=\"tab2\" aria-hidden=\"true\">\n    ...\n</section>\n<section id=\"panel3\" role=\"tabpanel\" aria-labelledby=\"tab3\" aria-hidden=\"true\">\n    ...\n</section>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"limit-height\">\n    <clr-datagrid>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                User ID\n            </ng-container>\n        </clr-dg-column>\n        <clr-dg-column>\n            <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Name\n            </ng-container>\n        </clr-dg-column>\n        ...\n\n        <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n            <clr-dg-cell>{{user.id}}</clr-dg-cell>\n            <clr-dg-cell>{{user.name}}</clr-dg-cell>\n            ...\n        </clr-dg-row>\n\n        <clr-dg-footer>\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            of {{pagination.totalItems}} users\n            <clr-dg-pagination #pagination [clrDgPageSize]=\"currentPageSize\"></clr-dg-pagination>\n        </clr-dg-footer>\n    </clr-datagrid>\n</div>\n`"
        },
        {
          "name": "STYLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts",
          "type": "",
          "defaultValue": "`\n.limit-height clr-datagrid {\n    height: 286px;\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-items-individual-vertical-alignment.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-individual-vertical-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col clr-align-self-start\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col clr-align-self-center\">\n        <span>1/3</span>\n    </div>\n    <div class=\"clr-col clr-align-self-end\">\n        <span>1/3</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row clr-align-items-start\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`"
        },
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row clr-align-items-center\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row clr-align-items-end\">\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/2</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tabs/tabs-static-vertical.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tabs/tabs-static-vertical.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"tabs-vertical\">\n    <ul id=\"demoTabs\" class=\"nav\" role=\"tablist\">\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab1\" class=\"btn btn-link nav-link active\" aria-controls=\"panel1\"\n                    aria-selected=\"true\" type=\"button\">Dashboard</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab2\" class=\"btn btn-link nav-link\" aria-controls=\"panel2\"\n                    aria-selected=\"false\" type=\"button\">Management</button>\n        </li>\n        <li role=\"presentation\" class=\"nav-item\">\n            <button id=\"tab3\" class=\"btn btn-link nav-link\" aria-controls=\"panel3\"\n                    aria-selected=\"false\" type=\"button\">Cloud</button>\n        </li>\n    </ul>\n    <section id=\"panel1\" role=\"tabpanel\" aria-labelledby=\"tab1\">\n        ...\n    </section>\n    <section id=\"panel2\" role=\"tabpanel\" aria-labelledby=\"tab2\" aria-hidden=\"true\">\n        ...\n    </section>\n    <section id=\"panel3\" role=\"tabpanel\" aria-labelledby=\"tab3\" aria-hidden=\"true\">\n        ...\n    </section>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tabs/tabs-angular.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tabs/tabs-angular.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>Dashboard</button>\n        <ng-template [(clrIfActive)]=\"dashboardActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Management</button>\n        <ng-template [(clrIfActive)]=\"managementActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Cloud</button>\n        <ng-template [(clrIfActive)]=\"cloudActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Infrastructure</button>\n        <ng-template [(clrIfActive)]=\"infrastructureActive\">\n            <clr-tab-content>\n                ...\n            </clr-tab-content>\n        </ng-template>\n    </clr-tab>\n</clr-tabs>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-nesting.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-nesting.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-9\">\n        <span>9</span>\n        <div class=\"clr-row\">\n            <div class=\"clr-col-3\">\n                <span>3</span>\n            </div>\n            <div class=\"clr-col-9\">\n                <span>9</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-3\">\n        <span>3</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/login/login-example.demo.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/login/login-example.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"login-wrapper\">\n    <form class=\"login\">\n        <section class=\"title\">\n            <h3 class=\"welcome\">Welcome to</h3>\n            Company Product Name\n            <h5 class=\"hint\">Use your Company ID to sign in or create one now</h5>\n        </section>\n        <div class=\"login-group\">\n            <clr-select-container>\n                <label class=\"clr-sr-only\">User Role</label>\n                <select clrSelect name=\"type\" [(ngModel)]=\"form.type\">\n                    <option value=\"local\">Local Users</option>\n                    <option value=\"admin\">Administrator</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label class=\"clr-sr-only\">Username</label>\n                <input type=\"text\" name=\"username\" clrInput placeholder=\"Username\" [(ngModel)]=\"form.username\"/>\n            </clr-input-container>\n            <clr-password-container>\n                <label class=\"clr-sr-only\">Password</label>\n                <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" [(ngModel)]=\"form.password\"/>\n            </clr-password-container>\n            <clr-checkbox-wrapper>\n                <label>Remember me</label>\n                <input type=\"checkbox\" name=\"rememberMe\" clrCheckbox [(ngModel)]=\"form.rememberMe\"/>\n            </clr-checkbox-wrapper>\n            <div class=\"error active\">\n                Invalid user name or password\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">NEXT</button>\n            <a href=\"javascript://\" class=\"signup\">Sign up for a Company ID</a>\n        </div>\n    </form>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/labels/labels-clickable.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/labels/labels-clickable.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" class=\"label label-purple clickable\">\n    Austin\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    New York\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Palo Alto\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    San Francisco\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Seattle\n</a>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/labels/labels-color-options.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/labels/labels-color-options.ts",
          "type": "",
          "defaultValue":
            "`\n<span class=\"label\">Seattle</span>\n<span class=\"label label-purple\">Austin</span>\n<span class=\"label label-blue\">New York</span>\n<span class=\"label label-orange\">Palo Alto</span>\n<span class=\"label label-light-blue\">San Francisco</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/labels/labels-default.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/labels/labels-default.ts",
          "type": "",
          "defaultValue":
            "`\n<span class=\"label\">Austin</span>\n<span class=\"label\">New York</span>\n<span class=\"label\">Palo Alto</span>\n<span class=\"label\">San Francisco</span>\n<span class=\"label\">Seattle</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/labels/labels-status.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/labels/labels-status.ts",
          "type": "",
          "defaultValue":
            "`\n<span class=\"label label-info\">Info</span>\n<span class=\"label label-success\">Success</span>\n<span class=\"label label-warning\">Warning</span>\n<span class=\"label label-danger\">Error</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/labels/labels-with-badges.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/labels/labels-with-badges.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" class=\"label label-purple clickable\">\n    Austin\n    <span class=\"badge\">1</span>\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    New York\n    <span class=\"badge\">2</span>\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Palo Alto\n    <span class=\"badge\">3</span>\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    San Francisco\n    <span class=\"badge\">12</span>\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Seattle\n    <span class=\"badge\">15</span>\n</a>\n<a href=\"...\" class=\"label label-purple clickable\">\n    Chicago\n    <span class=\"badge\">55</span>\n</a>\n<a href=\"...\" class=\"label label-blue clickable\">\n    San Jose\n    <span class=\"badge\">66</span>\n</a>\n<a href=\"...\" class=\"label label-orange clickable\">\n    Charlotte\n    <span class=\"badge\">88</span>\n</a>\n<a href=\"...\" class=\"label label-light-blue clickable\">\n    Atlanta\n    <span class=\"badge\">99+</span>\n</a>\n<a href=\"...\" class=\"label clickable\">\n    Philadephia<span class=\"badge\">0</span>\n</a>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/lists/lists-in-cards.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/lists/lists-in-cards.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Ordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ol class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ol class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ol class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                </ol>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unstyled Lists\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </p>\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list-unstyled\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/lists/lists-compact.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/lists/lists-compact.ts",
          "type": "",
          "defaultValue":
            "`\n<ul class=\"list compact\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>Mollit anim id</li>\n</ul>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/stack-view/stack-view-static.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/stack-view/stack-view-static.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 class=\"stack-header\">\n    <span class=\"stack-title\">Static stack view</span>\n    <span class=\"stack-actions\">\n        <button class=\"stack-action btn btn-sm btn-link\" type=\"button\">Edit</button>\n    </span>\n</h4>\n<dl class=\"stack-view\">\n    <div class=\"stack-block\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"1\" aria-setsize=\"3\">Label 1</dt>\n        <dd class=\"stack-block-content\">Content 1</dd>\n    </div>\n    <div class=\"stack-block stack-block-expandable stack-block-expanded\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"2\" aria-setsize=\"3\">Label 2</dt>\n        <dd class=\"stack-block-content\">Content 2</dd>\n        <div class=\"stack-children\">\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"1\" aria-setsize=\"3\">Sub-label 1</dt>\n                <dd class=\"stack-block-content\">Sub-content 1</dd>\n            </div>\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"2\" aria-setsize=\"3\">Sub-label 2</dt>\n                <dd class=\"stack-block-content\">Sub-content 2</dd>\n            </div>\n            <div class=\"stack-block\">\n                <dt class=\"stack-block-label\" aria-level=\"2\" aria-posinset=\"3\" aria-setsize=\"3\">Sub-label 3</dt>\n                <dd class=\"stack-block-content\">Sub-content 3</dd>\n            </div>\n        </div>\n    </div>\n    <div class=\"stack-block stack-block-expandable\">\n        <dt class=\"stack-block-label\" aria-level=\"1\" aria-posinset=\"3\" aria-setsize=\"3\">Label 3</dt>\n        <dd class=\"stack-block-content\">Content 3</dd>\n        <div class=\"stack-children\"></div>\n    </div>\n</dl>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/lists/lists-ol.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/lists/lists-ol.ts",
          "type": "",
          "defaultValue":
            "`\n<ol class=\"list\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>\n        Mollit anim id\n        <ol class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ol>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n</ol>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/lists/lists-ul.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/lists/lists-ul.ts",
          "type": "",
          "defaultValue":
            "`\n<ul class=\"list\">\n    <li>...</li>\n    <li>\n        Ullamco laboris nisi ut aliquip\n        <ul class=\"list\">\n            <li>Consequat</li>\n            <li>Adipisicing</li>\n            <li>Exercitation</li>\n        </ul>\n    </li>\n    <li>Reprehenderit in voluptate</li>\n    <li>Mollit anim id</li>\n</ul>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/lists/lists-unstyled.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/lists/lists-unstyled.ts",
          "type": "",
          "defaultValue":
            "`\n<ul class=\"list-unstyled\">\n    <li>Id est laborum</li>\n    <li>Dolore eu fugiat</li>\n    <li>Occaecat cupidatat</li>\n    <li>Deserunt mollit anim</li>\n</ul>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/modal/modal-animation.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/modal/modal-animation.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"modal\">\n    <div class=\"modal-dialog fadeDown in\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop fade in\" aria-hidden=\"true\"></div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/modal/modal-backdrop.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/modal/modal-backdrop.ts",
          "type": "",
          "defaultValue": "`\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/modal/modal-sizes.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-sm\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
        },
        {
          "name": "EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-lg\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
        },
        {
          "name": "EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"modal\">\n    <div class=\"modal-dialog modal-xl\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            ...\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/stack-view/stack-view-angular-modal-edit.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-modal-edit.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-stack-view>\n    <clr-stack-header>\n        Modal editor\n        <button\n            class=\"stack-action btn btn-sm btn-link\"\n            (click)=\"editModal = true\"\n            type=\"button\">Edit</button>\n    </clr-stack-header>\n\n    <clr-stack-block\n        *ngFor=\"let block of blocks; let i = index\"\n        [clrStackViewLevel]=\"1\"\n        [clrStackViewSetsize]=\"blocks.length\"\n        [clrStackViewPosinset]=\"i\"\n        >\n        <clr-stack-label>{{block.title}}</clr-stack-label>\n        <clr-stack-content>{{block.content}}</clr-stack-content>\n\n        <clr-stack-block\n            *ngFor=\"let child of block.children; let j = index\"\n            [clrStackViewLevel]=\"2\"\n            [clrStackViewSetsize]=\"block.children.length\"\n            [clrStackViewPosinset]=\"j\"\n            >\n            <clr-stack-label>{{child.title}}</clr-stack-label>\n            <clr-stack-content>{{child.content}}</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n</clr-stack-view>\n\n<clr-modal [(clrModalOpen)]=\"editModal\">\n    <h3 class=\"modal-title\">Edit mode</h3>\n    <div class=\"modal-body\">\n        <clr-stack-view>\n            <clr-stack-block\n                *ngFor=\"let block of blocks; let blockIndex = index\"\n                [clrSbNotifyChange]=\"block.content!=='Content '+ (blockIndex)\"\n                [clrStackViewLevel]=\"1\"\n                [clrStackViewSetsize]=\"blocks.length\"\n                [clrStackViewPosinset]=\"blockIndex + 1\"\n                >\n                <clr-stack-label>{{block.title}}</clr-stack-label>\n                <clr-stack-content>\n                    <input type=\"text\" [(ngModel)]=\"block.content\" class=\"clr-input\"/>\n                </clr-stack-content>\n\n                <clr-stack-block\n                    *ngFor=\"let child of block.children; let blockChildIndex = index\"\n                    [clrSbNotifyChange]=\"child.content!=='Sub-content '+ (blockChildIndex)\"\n                    [clrStackViewLevel]=\"2\"\n                    [clrStackViewSetsize]=\"block.children.length\"\n                    [clrStackViewPosinset]=\"blockChildIndex + 1\"\n                    >\n                    <clr-stack-label>{{child.title}}</clr-stack-label>\n                    <clr-stack-content>\n                        <input type=\"text\" [(ngModel)]=\"child.content\" class=\"clr-input\"/>\n                    </clr-stack-content>\n                </clr-stack-block>\n            </clr-stack-block>\n        </clr-stack-view>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"editModal = false\">Done</button>\n    </div>\n</clr-modal>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/stack-view/stack-view-angular-lazyload.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-lazyload.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-stack-view>\n    <clr-stack-header>\n        Lazily loaded children\n        <button class=\"stack-action btn btn-sm btn-link\" (click)=\"resetChildren()\" type=\"button\">Reset</button>\n    </clr-stack-header>\n\n    <clr-stack-block\n      #lazyBlock\n      [clrSbExpandable]=\"true\"\n      (clrSbExpandedChange)=\"fetchChildren()\"\n      [clrStackViewLevel]=\"1\"\n      [clrStackViewSetsize]=\"2\"\n      [clrStackViewPosinset]=\"1\"\n      >\n        <clr-stack-label>Label 1</clr-stack-label>\n        <clr-stack-content>Content 1</clr-stack-content>\n\n        <clr-stack-block *ngIf=\"children.length == 0\" [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"0\" [clrStackViewPosinset]=\"1\">\n            <clr-spinner clrAssertive clrInline>\n              Loading...\n            </clr-spinner>\n        </clr-stack-block>\n\n        <clr-stack-block\n          *ngFor=\"let child of children; let i = index\"\n          [clrStackViewLevel]=\"2\"\n          [clrStackViewSetsize]=\"children.length\"\n          [clrStackViewPosinset]=\"i + 1\"\n          >\n            <clr-stack-label>{{child.title}}</clr-stack-label>\n            <clr-stack-content>{{child.content}}</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n\n    <clr-stack-block [clrStackViewLevel]=\"1\" [clrStackViewSetsize]=\"2\" [clrStackViewPosinset]=\"2\">\n        <clr-stack-label>Label 2</clr-stack-label>\n        <clr-stack-content>Content 2</clr-stack-content>\n    </clr-stack-block>\n</clr-stack-view>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/modal/modal-static.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/modal/modal-static.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"modal\">\n    <div class=\"modal-dialog\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n                <h3 class=\"modal-title\">I have a nice title</h3>\n            </div>\n            <div class=\"modal-body\">\n                <p>But not much to say...</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"modal-backdrop\" aria-hidden=\"true\"></div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
          "type": "",
          "defaultValue": "`<clr-progress-bar clrValue=\"40\" clrMax=\"100\"></clr-progress-bar>`"
        },
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
          "type": "",
          "defaultValue": "`<clr-progress-bar clrValue=\"65\" clrSuccess clrLabeled></clr-progress-bar>`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"progress-block\">\n  <label for=\"demoProgressBar\">Text on the left</label>\n  <clr-progress-bar id=\"demoProgressBar\" clrValue=\"85\"></clr-progress-bar>\n  <span>Text on the right</span>\n</div>\n`"
        },
        {
          "name": "EXAMPLE3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
          "type": "",
          "defaultValue": "`<clr-progress-bar clrValue=\"75\" clrLoop></clr-progress-bar>`"
        },
        {
          "name": "EXAMPLE4",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
          "type": "",
          "defaultValue": "`<clr-progress-bar clrValue=\"65\" clrLabeled clrDisplayval=\"65$\"></clr-progress-bar>`"
        }
      ],
      "src/website/src/app/documentation/demos/typography/typography-text.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/typography/typography-text.ts",
          "type": "",
          "defaultValue":
            "`\n<p class=\"p1\">Body text</p>\n<p class=\"p2\">Section header</p>\n<p class=\"p3\">Table, grid, and form text</p>\n<p class=\"p4\">Form labels and column headers</p>\n<p class=\"p5\">Table footers and chart data</p>\n<p class=\"p6\">Mostly buttons</p>\n<p class=\"p7\">Tags and labels</p>\n<p class=\"p8\">Badges</p>\n<pre class=\"language-html\">Monospaced</pre> or <code class=\"language-html\">Monospaced</code>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/spinners/spinner-types.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
          "type": "",
          "defaultValue": "`\n<span class=\"spinner\">\n    Loading...\n</span>\n`"
        },
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
          "type": "",
          "defaultValue":
            "`\n<span class=\"spinner spinner-inline\">\n    Loading...\n</span>\n<span>\n    Loading...\n</span>\n`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
          "type": "",
          "defaultValue": "`\n<span class=\"spinner spinner-inverse\">\n    Loading...\n</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
          "type": "",
          "defaultValue": "`\n<span class=\"spinner spinner-sm\">\n    Loading...\n</span>\n`"
        },
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
          "type": "",
          "defaultValue": "`\n<span class=\"spinner spinner-md\">\n    Loading...\n</span>\n`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
          "type": "",
          "defaultValue": "`\n<span class=\"spinner spinner-lg\">\n    Loading...\n</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/spinners/spinner-component.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
          "type": "",
          "defaultValue": "`\n<clr-spinner *ngIf=\"fetchingUserInformation\">Loading data</clr-spinner>\n`"
        },
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
          "type": "",
          "defaultValue":
            "`\n<div *ngIf=\"downloadingFile\">\n  <clr-spinner clrInline>\n    Downloading\n  </clr-spinner>\n  <span>\n      Downloading\n  </span>\n</div>\n`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-spinner *ngIf=\"downloadinInvoice\" clrMedium clrAssertive>Downloading</clr-spinner>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tabs/tabs-angular-vertical.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-vertical.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tabs clrLayout=\"vertical\">\n    <clr-tab>\n        <button clrTabLink id=\"link1\">Tab1</button>\n        <clr-tab-content id=\"content1\" *clrIfActive>\n        ...\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>Tab2</button>\n        <clr-tab-content *clrIfActive=\"true\">\n        ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tabs/tabs-angular-simple.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-simple.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink id=\"link1\">Tab1</button>\n        <clr-tab-content id=\"content1\" *clrIfActive>\n        ...\n        </clr-tab-content>\n    </clr-tab>\n    <clr-tab>\n        <button clrTabLink>Tab2</button>\n        <clr-tab-content *clrIfActive=\"true\">\n        ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tabs/tabs-angular-overflow.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tabs/tabs-angular-overflow.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tabs>\n    <clr-tab>\n        <button clrTabLink>Dashboard</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Management</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink>Cloud</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n\n    <clr-tab>\n        <button clrTabLink [clrTabLinkInOverflow]=\"inOverflow\">Settings</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n    \n    <clr-tab>\n        <button clrTabLink [clrTabLinkInOverflow]=\"inOverflow\">Alerts</button>\n        <clr-tab-content *clrIfActive>\n            ...\n        </clr-tab-content>\n    </clr-tab>\n</clr-tabs>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/basic-structure/basic-structure.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/basic-structure/basic-structure.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid>\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column>Name</clr-dg-column>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Favorite color</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.color}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/lists/lists-mixed.ts": [
        {
          "name": "EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/lists/lists-mixed.ts",
          "type": "",
          "defaultValue":
            "`\n<ul class=\"list-unstyled\">\n    <li>Consectetur adipisicing elit</li>\n    <li>\n        Sed do eiusmod tempor\n        <ul class=\"list\">\n            <li>Dolore magna</li>\n            <li>...</li>\n            <li>\n                Incididunt ut labore\n                <ul class=\"list-unstyled\">\n                    <li>Ad minim veniam</li>\n                    <li>...</li>\n                    <li>Exercitation ullamco</li>\n                    <li>\n                        Laboris nisi ut\n                        <ul class=\"list\">\n                            <li>Aliquip ex ea commodo</li>\n                            <li>Consequat duis</li>\n                            <li>..</li>\n                        </ul>\n                    </li>\n                    <li>In reprehenderit</li>\n                </ul>\n            </li>\n        </ul>\n    </li>\n    <li>In voluptate velit esse cillum dolore</li>\n    <li>Eu fugiat nulla pariatur</li>\n</ul>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts": [
        {
          "name": "EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row clr-justify-content-start\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
        },
        {
          "name": "EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row clr-justify-content-center\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
        },
        {
          "name": "EXAMPLE_3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row clr-justify-content-end\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
        },
        {
          "name": "EXAMPLE_4",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row clr-justify-content-around\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
        },
        {
          "name": "EXAMPLE_5",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row clr-justify-content-between\">\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n    <div class=\"clr-col-4\">\n        <span>\n            1/3\n        </span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree>\n  <clr-tree-node *ngFor=\"let directory of rootDirectory\" [(clrExpanded)]=\"directory.expanded\">\n      <clr-icon [attr.shape]=\"directory.icon\"></clr-icon>\n      {{directory.name}}\n      <clr-tree-node *ngFor=\"let file of directory.files\">\n          <button\n                  (click)=\"openFile(directory.name, file.name)\"\n                  class=\"clr-treenode-link\"\n                  [class.active]=\"file.active\">\n              <clr-icon [attr.shape]=\"file.icon\"></clr-icon>\n              {{file.name}}\n          </button>\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`"
        },
        {
          "name": "EXAMPLE_TS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts",
          "type": "",
          "defaultValue":
            "`\n    rootDirectory: any[] = [\n        {\n            name: \"Applications\",\n            icon: \"folder\",\n            expanded: true,\n            files: [\n                {\n                    icon: \"calendar\",\n                    name: \"Calendar\",\n                    active: true\n                },\n                {\n                    icon: \"line-chart\",\n                    name: \"Charts\",\n                    active: false\n                },\n                {\n                    icon: \"dashboard\",\n                    name: \"Dashboard\",\n                    active: false\n                },\n                {\n                    icon: \"map\",\n                    name: \"Maps\",\n                    active: false\n                },\n                ...\n            ]\n        },\n        {\n            name: \"Files\",\n            icon: \"folder\",\n            expanded: false,\n            files: [\n                {\n                    icon: \"file\",\n                    name: \"Cover Letter.doc\",\n                    active: false\n                },\n                ...\n            ]\n        },\n        {\n            name: \"Images\",\n            icon: \"folder\",\n            expanded: false,\n            files: [\n                {\n                    icon: \"image\",\n                    name: \"Screenshot.png\",\n                    active: false\n                },\n                ...\n            ]\n        }\n    ];\n    \n    openFile(directoryName: string, fileName: string) {\n        ...\n        ...\n    }\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree>\n    <clr-tree-node *clrRecursiveFor=\"let file of root; getChildren: getChildren\"\n                   [(clrSelected)]=\"file.selected\">\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n`"
        },
        {
          "name": "EXAMPLE_TS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts",
          "type": "",
          "defaultValue":
            "`\nexport class RecursiveSelection {\n    root = [\n        {\n            name: \"src\",\n            selected: ClrSelectedState.INDETERMINATE,\n            files: [\n                {\n                    name: \"app\",\n                    selected: ClrSelectedState.INDETERMINATE,\n                    files: [\n                        {\n                            name: \"app.component.html\",\n                            selected: ClrSelectedState.UNSELECTED\n                        },\n                        {\n                            name: \"app.component.ts\",\n                            selected: ClrSelectedState.UNSELECTED\n                        },\n                        {\n                            name: \"app.module.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        },\n                        {\n                            name: \"app.routing.ts\",\n                            selected: ClrSelectedState.UNSELECTED\n                        }\n                    ]\n                },\n                {\n                    name: \"environments\",\n                    selected: ClrSelectedState.SELECTED,\n                    files: [\n                        {\n                            name: \"environments.prod.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        },\n                        {\n                            name: \"environment.ts\",\n                            selected: ClrSelectedState.SELECTED\n                        }\n                    ]\n                },\n                {\n                    name: \"index.html\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"main.ts\",\n                    selected: ClrSelectedState.UNSELECTED,\n                }\n            ]\n        },\n        {\n            name: \"package.json\",\n            selected: ClrSelectedState.UNSELECTED\n        },\n        {\n            name: \"tsconfig.json\",\n            selected: ClrSelectedState.UNSELECTED\n        }\n    ];\n\n    getChildren = (folder) => folder.files;\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree>\n    <clr-tree-node *ngFor=\"let group of groceries\"\n                   [(clrSelected)]=\"group.selected\"\n                   [clrExpanded]=\"true\">\n        {{group.name}}\n        <clr-tree-node *ngFor=\"let item of group.items\" [(clrSelected)]=\"item.selected\">\n            {{item.name}}\n        </clr-tree-node>\n    </clr-tree-node>\n</clr-tree>\n\n<button class=\"btn btn-sm\" type=\"button\" (click)=\"selectVegetables()\">Select all vegetables</button>\n`"
        },
        {
          "name": "EXAMPLE_TS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts",
          "type": "",
          "defaultValue":
            "`\nexport class GroceryList {\n    groceries = [\n        {\n            name: \"Dairy\",\n            selected: ClrSelectedState.INDETERMINATE,\n            items: [\n                {\n                    name: \"Milk\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Cheese\",\n                    selected: ClrSelectedState.SELECTED,\n                }\n            ]\n        },\n        {\n            name: \"Vegetables\",\n            selected: ClrSelectedState.UNSELECTED,\n            items: [\n                {\n                    name: \"Carrots\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Potatoes\",\n                    selected: ClrSelectedState.UNSELECTED,\n                },\n                {\n                    name: \"Beans\",\n                    selected: ClrSelectedState.UNSELECTED,\n                }\n            ]\n        }\n    ];\n\n    selectVegetables() {\n        this.groceries[1].selected = ClrSelectedState.SELECTED;\n    }\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node [clrLoading]=\"loading\">\n        <clr-icon shape=\"building\"></clr-icon>\n        Office Locations\n        <ng-template clrIfExpanded (clrIfExpandedChange)=\"$event ? fetchLocations() : null\">\n            <clr-tree-node *ngFor=\"let location of locations$ | async\">\n                {{location}}\n            </clr-tree-node>\n        </ng-template>\n    </clr-tree-node>\n</clr-tree>\n`"
        },
        {
          "name": "EXAMPLE_TS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({...})\nexport class OfficeLocations {\n    constructor(private locationService: LocationService) {}\n\n    locations$: Observable<string[]>;\n    loading = false;\n\n    fetchLocations() {\n        this.loading = true;\n        this.locations$ = this.locationService.getLocations().pipe(tap(() => this.loading = false));\n    }\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree>\n  <clr-tree-node [clrExpanded]=\"true\">\n      Permissions\n      <clr-tree-node *ngFor=\"let permission of permissions\" [clrExpanded]=\"true\">\n          {{permission.type}}\n          <clr-tree-node *ngFor=\"let right of permission.rights\" \n                        [clrSelected]=\"right.enable\" (clrSelectedChange)=\"right.enable = !!$event\">\n              {{right.name}}\n          </clr-tree-node>\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`"
        },
        {
          "name": "EXAMPLE_TS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({\n    selector: \"...\",\n    templateUrl: \"...\"\n})\nexport class Permissions {\n    permissions: any = [\n        {\n            type: \"Authenticated Users\",\n            rights: [\n                {\n                    name: \"Read\",\n                    enable: true\n                },\n                {\n                    name: \"Modify\",\n                    enable: true\n                },\n                {\n                    name: \"Create\",\n                    enable: false\n                },\n                {\n                    name: \"Delete\",\n                    enable: false\n                }\n            ]\n        },\n        {\n            type: \"Owners\",\n            rights: [\n                {\n                    name: \"Read\",\n                    enable: true\n                },\n                {\n                    name: \"Modify\",\n                    enable: true\n                },\n                {\n                    name: \"Create\",\n                    enable: true\n                },\n                {\n                    name: \"Delete\",\n                    enable: true\n                }\n            ]\n        }\n    ];\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/tree-node-routing/tree-node-routing.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/tree-node-routing/tree-node-routing.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree>\n  <clr-tree-node [clrExpanded]=\"true\">\n    The Beatles\n    <clr-tree-node>\n        <a [routerLink]=\"['./album1']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Abbey Road</a>\n    </clr-tree-node>\n    <clr-tree-node>\n        <a [routerLink]=\"['./album2']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Revolver</a>\n    </clr-tree-node>\n    <clr-tree-node>\n        <a [routerLink]=\"['./album3']\"\n          class=\"clr-treenode-link\"\n          routerLinkActive=\"active\">Rubber Soul</a>\n    </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n<router-outlet></router-outlet>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *clrRecursiveFor=\"let file of root$ | async; getChildren: getChildren\"\n                   [clrExpandable]=\"file.isFolder\">\n        <clr-icon [attr.shape]=\"file.isFolder ? 'folder' : 'file'\"></clr-icon>\n        {{file.name}}\n    </clr-tree-node>\n</clr-tree>\n`"
        },
        {
          "name": "EXAMPLE_TS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({...})\nexport class FileBrowser implements OnInit {\n    constructor(private folderService: FolderService) {}\n\n    root$: Observable<File[]>;\n\n    getChildren = (folder: File) => {\n        if (folder.isFolder) {\n            return this.folderService.getFiles(folder);\n        } else {\n            return null;\n        }\n    };\n\n    ngOnInit(): void {\n        this.root$ = this.folderService.getFiles('/');\n    }\n}\n`"
        },
        {
          "name": "ROOT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
          "type": "[]",
          "defaultValue":
            "[\n  {\n    name: 'src',\n    isFolder: true,\n    files: [\n      {\n        name: 'app',\n        isFolder: true,\n        files: [\n          {\n            name: 'app.component.html',\n            isFolder: false,\n          },\n          {\n            name: 'app.component.ts',\n            isFolder: false,\n          },\n          {\n            name: 'app.module.ts',\n            isFolder: false,\n          },\n          {\n            name: 'app.routing.ts',\n            isFolder: false,\n          },\n        ],\n      },\n      {\n        name: 'environments',\n        isFolder: true,\n        files: [\n          {\n            name: 'environments.prod.ts',\n            isFolder: false,\n          },\n          {\n            name: 'environment.ts',\n            isFolder: false,\n          },\n        ],\n      },\n      {\n        name: 'index.html',\n        isFolder: false,\n      },\n      {\n        name: 'main.ts',\n        isFolder: false,\n      },\n    ],\n  },\n  {\n    name: 'package.json',\n    isFolder: false,\n  },\n  {\n    name: 'tsconfig.json',\n    isFolder: false,\n  },\n]"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree>\n  <clr-tree-node [(clrExpanded)]=\"expanded\">\n      {{expanded ? \"I am expanded\" : \"I am collapsed\"}}\n      <clr-tree-node>\n          Child Tree Node\n      </clr-tree-node>\n  </clr-tree-node>\n</clr-tree>\n`"
        },
        {
          "name": "EXAMPLE_TS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts",
          "type": "",
          "defaultValue": "`\nexport class TreeNodeLabelChangeOnExpandDemo {\n    expanded: boolean = true;\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts": [
        {
          "name": "EXAMPLE_HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tree [clrLazy]=\"true\">\n    <clr-tree-node *ngFor=\"let group of groceries$ | async\" [(clrSelected)]=\"group.selected\">\n        {{group.name}}\n        <ng-template clrIfExpanded>\n            <my-grocery-items [group]=\"group\"></my-grocery-items>\n        </ng-template>\n    </clr-tree-node>\n</clr-tree>\n`"
        },
        {
          "name": "EXAMPLE_TS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({\n    selector: \"my-grocery-items\",\n    template: \\`\n        <ng-container [clrLoading]=\"loading\">\n            <clr-tree-node *ngFor=\"let item of items$ | async\" [(clrSelected)]=\"item.selected\">\n                {{item.name}}\n            </clr-tree-node>\n        </ng-container>\n    \\`\n})\nexport class GroceryItemsComponent implements OnInit {\n    constructor(private itemsService: ItemsService) {}\n    \n    @Input() group: Group;\n    items$: Observable<Item[]>;\n    loading = false;\n\n    ngOnInit() {\n        this.loading = true;\n        this.items$ = this.itemsService.getItems(this.group).pipe(tap(() => this.loading = false));\n    }\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts": [
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 1\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"top-right\" clrSize=\"xs\" *clrIfOpen>\n        <span>Lorem</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 2\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"top-left\" clrSize=\"sm\" *clrIfOpen>\n        <span>Lorem ipsum</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
        },
        {
          "name": "EXAMPLE3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 3\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"bottom-right\" clrSize=\"md\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
        },
        {
          "name": "EXAMPLE4",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 4\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"bottom-left\" clrSize=\"lg\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
        },
        {
          "name": "EXAMPLE5",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 5\"></clr-icon>\n    <clr-tooltip-content *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
        },
        {
          "name": "EXAMPLE6",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-tooltip>\n    <clr-icon clrTooltipTrigger shape=\"info-circle\" size=\"24\" aria-label=\"Uniq tooltip 6\"></clr-icon>\n    <clr-tooltip-content clrPosition=\"left\" clrSize=\"sm\" *clrIfOpen>\n        <span>Lorem ipsum sit</span>\n    </clr-tooltip-content>\n</clr-tooltip>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts": [
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-xs\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`"
        },
        {
          "name": "EXAMPLE3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`"
        },
        {
          "name": "EXAMPLE4",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-lg\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem</span>\n</a>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-auto-layout-3.ts": [
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-3.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>1 of 3</span>\n    </div>\n    <div class=\"clr-col-lg-auto\">\n        <span>Variable width content</span>\n    </div>\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>3 of 3</span>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1 of 3</span>\n    </div>\n    <div class=\"clr-col-md-auto\">\n        <span>Variable Width Content</span>\n    </div>\n    <div class=\"clr-col clr-col-lg-2\">\n        <span>3 of 3</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts": [
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-top-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-top-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`"
        },
        {
          "name": "EXAMPLE3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-md tooltip-bottom-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, ipsum</span>\n</a>\n`"
        },
        {
          "name": "EXAMPLE4",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-lg tooltip-bottom-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit</span>\n</a>\n`"
        },
        {
          "name": "EXAMPLE5",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-right\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum dolor sit amet, ipsum</span>\n</a>\n`"
        },
        {
          "name": "EXAMPLE6",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
          "type": "",
          "defaultValue":
            "`\n<a href=\"...\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip tooltip-sm tooltip-left\">\n    <clr-icon shape=\"info-circle\" size=\"24\"></clr-icon>\n    <span class=\"tooltip-content\">Lorem ipsum sit</span>\n</a>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-auto-layout-4.ts": [
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-4.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-break-row\">\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>clr-col</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts": [
        {
          "name": "EXAMPLE1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-4\">\n        <span>1/3 (auto)</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>Remaining</span>\n    </div>\n</div>\n`"
        },
        {
          "name": "EXAMPLE2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col\">\n        <span>1/4 (auto)</span>\n    </div>\n    <div class=\"clr-col-6\">\n        <span>1/2 (fixed)</span>\n    </div>\n    <div class=\"clr-col\">\n        <span>1/4 (auto)</span>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/expandable-rows/examples.ts": [
        {
          "name": "EXAMPLES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/expandable-rows/examples.ts",
          "type": "object",
          "defaultValue":
            "{\n  basic: `\n<clr-dg-row *ngFor=\"let user of users\">\n    <-- Cells declarations -->\n    <clr-dg-cell>...</clr-dg-cell>\n\n    <clr-dg-row-detail *clrIfExpanded>\n        Lorem ipsum...\n    </clr-dg-row-detail>\n</clr-dg-row>\n`,\n\n  replace: `\n<clr-dg-row-detail *clrIfExpanded [clrDgReplace]=\"true\">\n    Lorem ipsum...\n</clr-dg-row-detail>\n`,\n\n  lazyLoadingRow: `\n<clr-dg-row *ngFor=\"let user of users\">\n    <-- Cells declarations -->\n    <clr-dg-cell>...</clr-dg-cell>\n\n    <my-detail *clrIfExpanded [user]=\"user\" ngProjectAs=\"clr-dg-row-detail\"></my-detail>\n</clr-dg-row>\n`,\n\n  lazyLoadingDetail: `\n@Component({\n    selector: \"my-detail\",\n    template: \\`\n        <div [clrLoading]=\"loading\">...</div>\n    \\`\n})\nclass MyDetailComponent implements OnInit {\n    @Input() user: User;\n\n    loading: boolean;\n\n    ngOnInit() {\n        this.loading = true;\n        // Make the server call\n        fetchRemoteDetail(user).then(() => this.loading = false));\n    }\n}\n`,\n\n  conditional: `\n<ng-container ngProjectAs=\"clr-dg-row-detail\" *ngIf=\"true\">\n  <clr-dg-row-detail *clrIfExpanded>\n    Lorem ipsum...\n  </clr-dg-row-detail>\n</ng-container>\n`,\n}"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/built-in-filters/examples.ts": [
        {
          "name": "EXAMPLES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/built-in-filters/examples.ts",
          "type": "object",
          "defaultValue":
            "{\n  stringFilterInterface: `\ninterface ClrDatagridStringFilterInterface<T> {\n    accepts(item: T, search: string): boolean;\n}\n`,\n\n  stringFilterInput: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    My column\n    <clr-dg-string-filter [clrDgStringFilter]=\"myFilter\"></clr-dg-string-filter>\n</clr-dg-column>\n`,\n\n  stringFilterTS: `\nimport {ClrDatagridStringFilterInterface} from \"@clr/angular\";\n\nclass PokemonFilter implements ClrDatagridStringFilterInterface<User> {\n    accepts(user: User, search: string):boolean {\n        return \"\" + user.pokemon.number == search\n            || user.pokemon.name.toLowerCase().indexOf(search) >= 0;\n    }\n}\n\n@Component({ /* ... */ })\nclass MyComponent {\n    private pokemonFilter = new PokemonFilter();\n}\n`,\n  stringFilterHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    Pokemon\n    <clr-dg-string-filter [clrDgStringFilter]=\"pokemonFilter\"></clr-dg-string-filter>\n</clr-dg-column>\n`,\n  filterPresetHTML: `\n<-- Using clrFilterValue declaration -->\n<clr-dg-string-filter [clrDgStringFilter]=\"pokemonFilter\"\n                      [(clrFilterValue)]=\"myFilterValue\">\n</clr-dg-string-filter>\n<clr-dg-numeric-filter [clrDgNumericFilter]=\"winsFilter\"\n                       [clrFilterValue]=\"[10, null]\">\n</clr-dg-numeric-filter>\n`,\n  numericFilterInterface: `\ninterface ClrDatagridNumericFilterInterface<T> {\n  accepts(item: T, low: number, high: number): boolean;\n}\n`,\n  numericFilterInput: `\n<clr-dg-column>\n  Wins\n  <clr-dg-numeric-filter [clrDgNumericFilter]=\"winsFilter\"></clr-dg-numeric-filter>\n</clr-dg-column>\n`,\n}"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/sorting/examples.ts": [
        {
          "name": "EXAMPLES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/sorting/examples.ts",
          "type": "object",
          "defaultValue":
            "{\n  sortingTS: `\nimport {ClrDatagridComparatorInterface} from \"@clr/angular\";\n\nclass PokemonComparator implements ClrDatagridComparatorInterface<User> {\n    compare(a: User, b: User) {\n        return a.pokemon.number - b.pokemon.number;\n    }\n}\n\n@Component({ /* ... */ })\nclass MyComponent {\n    public pokemonComparator = new PokemonComparator();\n}\n`,\n  sortingHTML: `\n<-- In the columns declaration -->\n<clr-dg-column [clrDgField]=\"'pokemon.name'\"\n               [clrDgSortBy]=\"pokemonComparator\">Pokemon</clr-dg-column>\n`,\n  preSortTS: `\nimport {ClrDatagridSortOrder} from '@clr/angular';\n...\n@Component({ /* ... */ })\nclass MyComponent {\n    this.descSort = ClrDatagridSortOrder.DESC;\n}\n`,\n  preSortHTML: `\n    <clr-dg-column [clrDgField]=\"'name'\" [clrDgSortOrder]=\"descSort\">Name</clr-dg-column>\n`,\n}"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/server-driven/examples.ts": [
        {
          "name": "EXAMPLES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/server-driven/examples.ts",
          "type": "object",
          "defaultValue":
            "{\n  stateInterface: `\ninterface ClrDatagridStateInterface<T = any> {\n    page?: {\n        from?: number;\n        to?: number;\n        size?: number;\n        current?: number;\n    }\n    sort?: {\n        by: string | ClrDatagridComparatorInterface<T>;\n        reverse: boolean;\n    };\n    filters?: any[];\n}\n`,\n\n  serverDrivenTS: `\nimport {ClrDatagridStateInterface} from \"@clr/angular\";\n\nclass MyComponent {\n    users: User[];\n    total: number;\n    loading: boolean = true;\n\n    refresh(state: ClrDatagridStateInterface) {\n        this.loading = true;\n        // We convert the filters from an array to a map,\n        // because that's what our backend-calling service is expecting\n        let filters:{[prop:string]: any[]} = {};\n        if (state.filters) {\n            for (let filter of state.filters) {\n                let {property, value} = <{property: string, value: string}>filter;\n                filters[property] = [value];\n            }\n        }\n        this.inventory.filter(filters)\n            .sort(<{by: string, reverse: boolean}>state.sort)\n            .fetch(state.page.from, state.page.size)\n            .then((result: FetchResult) => {\n                this.users = result.users;\n                this.total = result.length;\n                this.loading = false;\n            });\n    }\n}\n`,\n\n  serverDrivenHTML: `\n<clr-datagrid (clrDgRefresh)=\"refresh($event)\" [clrDgLoading]=\"loading\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation date</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'pokemon'\">Pokemon</clr-dg-column>\n    <clr-dg-column [clrDgField]=\"'color'\">Favorite color</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <clr-dg-cell>{{user.name}}</clr-dg-cell>\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{user.pokemon.name}}</clr-dg-cell>\n        <clr-dg-cell>\n            <span class=\"color-square\" [style.backgroundColor]=\"user.color\"></span>\n        </clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n        of {{total}} users\n        <clr-dg-pagination #pagination [clrDgTotalItems]=\"total\"></clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n`,\n}"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/filtering/examples.ts": [
        {
          "name": "EXAMPLES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/filtering/examples.ts",
          "type": "object",
          "defaultValue":
            "{\n  filterInterface: `\ninterface ClrDatagridFilterInterface<T, S=any> {\n    isActive(): boolean;\n    accepts(item: T): boolean;\n    changes: Observable<any>;\n    readonly state?: S;\n    equals?(other: ClrDatagridFilterInterface<T, any>): boolean;\n}\n`,\n\n  inlineFilterTS: `\nimport {ClrDatagridFilterInterface} from \"@clr/angular\";\n\nclass MyFilter implements ClrDatagridFilterInterface<User> {\n    changes = new Subject<any>();\n    isActive(): boolean { /* ... */ }\n    accepts(user: User) { /* ... */ }\n}\n\n@Component({ /* ... */ })\nclass MyComponent {\n    public myFilter = new MyFilter();\n}\n`,\n\n  inlineFilterHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    My column\n    <clr-dg-filter [clrDgFilter]=\"myFilter\">\n        <-- The HTML from your custom filter: inputs, checkboxes, ... -->\n    </clr-dg-filter>\n</clr-dg-column>\n`,\n\n  customFilterComponentTS: `\nimport {ClrDatagridFilterInterface, ClrDatagridFilter} from \"@clr/angular\";\n\n@Component({\n    selector: \"my-filter\",\n    /* ... */\n})\nclass MyFilter implements ClrDatagridFilterInterface<User> {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n    changes = new Subject<any>();\n    isActive(): boolean { /* ... */ }\n    accepts(user: User) { /* ... */ }\n}\n`,\n\n  customFilterComponentHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    My column\n    <clr-dg-filter>\n        <my-filter></my-filter>\n    </clr-dg-filter>\n</clr-dg-column>\n`,\n\n  templateVariableTS: `\n@Component({\n    selector: \"my-reusable-filter\",\n    /* ... */\n})\nclass MyReusableFilter {\n    changes = new Subject<any>();\n    isActive(): boolean { /* ... */ }\n    accepts(user: User) { /* ... */ }\n}\n`,\n\n  templateVariableHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    My column\n    <clr-dg-filter [clrDgFilter]=\"myFilter\">\n        <my-reusable-filter #myFilter></my-reusable-filter>\n    </clr-dg-filter>\n</clr-dg-column>\n`,\n\n  colorFilterTS: `\nimport {ClrDatagridFilterInterface} from \"@clr/angular\";\n\n@Component({\n    selector: \"color-filter\",\n    /* The rest of the filter component's declaration */\n})\nclass ColorFilter implements ClrDatagridFilterInterface<User> {\n    changes = new Subject<any>();\n    isActive(): boolean { /* ... */ }\n    accepts(user: User) { /* ... */ }\n}\n`,\n\n  colorFilterHTML: `\n<-- In the columns declaration -->\n<clr-dg-column>\n    Favorite color\n    <clr-dg-filter [clrDgFilter]=\"colorFilter\">\n        <color-filter #colorFilter></color-filter>\n    </clr-dg-filter>\n</clr-dg-column>\n`,\n  stringFilterColumnPresetHTML: `\n<-- Using clrFilterValue declaration -->\n<clr-dg-column [clrDgField]=\"'name'\" [(clrFilterValue)]=\"myFilterValue\">\n    Name\n</clr-dg-column>\n`,\n  filterSearchResults: `\n<clr-datagrid>\n    <-- \n      This will search into user.creation (a Date object) and not the result\n      of the pipe (the string 'Jan 6, 2018').\n    -->\n    <clr-dg-column [clrDgField]=\"'creation'\">Creation Date</clr-dg-column>\n\n    <-- \n      This will search into user.name and will not include user.id -- \n      searching for user.id will not return any results.\n    -->\n    <clr-dg-column [clrDgField]=\"'name'\">Name</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let user of users\">\n        <clr-dg-cell>{{user.creation | date}}</clr-dg-cell>\n        <clr-dg-cell>{{ user.id }} : {{ user.name }}</clr-dg-cell>\n    </clr-dg-row>\n</clr-datagrid>\n  `,\n}"
        }
      ],
      "src/website/src/app/app.component.ts": [
        {
          "name": "ga",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/app.component.ts",
          "type": "Function"
        },
        {
          "name": "PLATFORM_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/app.component.ts",
          "type": "",
          "defaultValue": "new InjectionToken<string>('clarity')"
        }
      ],
      "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts": [
        {
          "name": "horizontal",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts",
          "type": "",
          "defaultValue": "`\n<ul class=\"clr-timeline clr-timeline-horizontal\">\n  ...\n</ul>\n`"
        },
        {
          "name": "vertical",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts",
          "type": "",
          "defaultValue": "`\n<ul class=\"clr-timeline clr-timeline-vertical\">\n  ...\n</ul>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/wizard/wizard-static.demo.ts": [
        {
          "name": "HTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/wizard/wizard-static.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-wizard\">\n  <div class=\"modal static\">\n    <div class=\"modal-dialog modal-xl\" role=\"dialog\">\n      <div class=\"modal-outer-wrapper\">\n        <div class=\"modal-content-wrapper\">\n          <nav class=\"modal-nav clr-wizard-stepnav-wrapper\">\n            <h3 class=\"clr-wizard-title\">Wizard Title</h3>\n            <div class=\"clr-wizard-stepnav\">\n              <div class=\"clr-wizard-stepnav-list\" role=\"tablist\">\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item active\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-0\"\n                  aria-selected=\"true\"\n                  aria-controls=\"clr-wizard-step-0\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 1\n                  </button>\n                </div>\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-1\"\n                  aria-selected=\"false\"\n                  aria-controls=\"clr-wizard-step-1\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 2\n                  </button>\n                </div>\n                <div\n                  class=\"clr-wizard-stepnav-item clr-nav-link nav-item\"\n                  role=\"presentation\"\n                  id=\"clr-wizard-step-2\"\n                  aria-selected=\"false\"\n                  aria-controls=\"clr-wizard-step-2\"\n                >\n                  <button class=\"btn btn-link clr-wizard-stepnav-link\" type=\"button\">\n                    Step 3\n                  </button>\n                </div>\n              </div>\n            </div>\n          </nav>\n\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n              </button>\n              <h3 class=\"modal-title\">\n                <span class=\"modal-title-text\">Title for page 1</span>\n              </h3>\n            </div>\n            <div class=\"modal-body\">\n              <main class=\"clr-wizard-content\">\n                <div\n                  id=\"clr-wizard-page-0\"\n                  aria-hidden=\"false\"\n                  aria-labelledby=\"clr-wizard-step-0\"\n                  class=\"active clr-wizard-page\"\n                >\n                  <p>Content for step 1</p>\n                </div>\n\n                <div\n                  id=\"clr-wizard-page-1\"\n                  aria-hidden=\"true\"\n                  aria-labelledby=\"clr-wizard-step-1\"\n                  class=\"clr-wizard-page\"\n                >\n                  <p>Content for step 2</p>\n                </div>\n\n                <div\n                  id=\"clr-wizard-page-2\"\n                  aria-hidden=\"true\"\n                  aria-labelledby=\"clr-wizard-step-2\"\n                  class=\"clr-wizard-page\"\n                >\n                  <p>Content for step 3</p>\n                </div>\n              </main>\n            </div>\n\n            <div class=\"modal-footer clr-wizard-footer\">\n              <div class=\"clr-wizard-footer-buttons\">\n                <div class=\"clr-wizard-footer-buttons-wrapper\">\n                  <div class=\"clr-wizard-btn-wrapper\">\n                    <button class=\"btn clr-wizard-btn btn-link clr-wizard-btn--tertiary\">\n                      Cancel\n                    </button>\n                  </div>\n                  <div class=\"clr-wizard-btn-wrapper\">\n                    <button class=\"btn clr-wizard-btn btn-primary clr-wizard-btn--primary\">\n                      Next\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div aria-hidden=\"true\" class=\"modal-backdrop\"></div>\n  </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/progress-bar-inline-cards.ts": [
        {
          "name": "HTML_EXAMLPE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/progress-bar-inline-cards.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-sm-6\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">Here is a progress bar at the very top of a card.</p>\n                <div class=\"progress-block\">\n                    <label>Label</label>\n                    <div class=\"progress-static\">\n                        <div class=\"progress-meter\" data-value=\"...\"></div>\n                    </div>\n                </div>\n                <div class=\"progress-block\">\n                    <label>Longer Label</label>\n                    <div class=\"progress-static\">\n                        <div class=\"progress-meter\" data-value=\"...\"></div>\n                    </div>\n                </div>\n                <div class=\"progress-block\">\n                    <label>Really, Really, Really Long Label</label>\n                    <div class=\"progress success\">\n                        <progress value=\"...\" max=\"100\" data-displayval=\"...%\"></progress>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"progress-static top\">\n                    <div class=\"progress-meter\" data-value=\"...\"></div>\n                </div>\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/snorlax.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/snorlax.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Snorlax</h4>\n<p>\n    Snorlax's typical day consists of nothing more than eating and sleeping.\n    It is such a docile Pokémon that there are children who use its expansive belly as a place to play.\n</p>`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/basic-structure/basic-structure.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/basic-structure/basic-structure.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"main-container\">\n    <header class=\"header\">\n        ...\n    </header>\n    <div class=\"content-container\">\n        <clr-vertical-nav>\n            <a clrVerticalNavLink routerLink=\"./charmander\" routerLinkActive=\"active\">Charmander</a>\n            <a clrVerticalNavLink routerLink=\"./jigglypuff\" routerLinkActive=\"active\">Jigglypuff</a>\n            <a clrVerticalNavLink routerLink=\"./pikachu\" routerLinkActive=\"active\">Pikachu</a>\n            <a clrVerticalNavLink routerLink=\"./raichu\" routerLinkActive=\"active\">Raichu</a>\n            <a clrVerticalNavLink routerLink=\"./snorlax\" routerLinkActive=\"active\">Snorlax</a>\n            <div class=\"nav-divider\"></div>\n            <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">Credit</a>\n        </clr-vertical-nav>\n        <div class=\"content-area\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/raichu.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/raichu.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Raichu</h4>\n<p>\n    If the electrical sacs become excessively charged,\n    Raichu plants its tail in the ground and discharges.\n    Scorched patches of ground will be found near this Pokémon's nest.\n</p>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pikachu.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pikachu.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Pikachu</h4>\n<p>\n    Whenever Pikachu comes across something new, it blasts it with a jolt of electricity.\n    If you come across a blackened berry, it's evidence that\n    this Pokémon mistook the intensity of its charge.\n</p>`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" [(clrVerticalNavCollapsed)]=\"collapsed\">\n    <a clrVerticalNavLink routerLink=\"./normal\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"./electric\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n    <a clrVerticalNavLink routerLink=\"./poison\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"sad-face\"></clr-icon>\n        Poison\n    </a>\n    <a clrVerticalNavLink routerLink=\"./grass\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bug\"></clr-icon>\n        Grass\n    </a>\n    <a clrVerticalNavLink routerLink=\"./fighting\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"shield\"></clr-icon>\n        Fighting\n    </a>\n    <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"certificate\"></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
        },
        {
          "name": "HTML_EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" class=\"nav-trigger--bottom\">\n    <a clrVerticalNavLink routerLink=\"...\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"...\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n</clr-vertical-nav>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pidgey.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pidgey.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Pidgey</h4>\n<p>\n    Pidgey has an extremely sharp sense of direction. \n    It is capable of unerringly returning home to its nest, \n    however far it may be removed from its familiar surroundings.\n</p>`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/jigglypuff.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/jigglypuff.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Jiggpuff</h4>\n<p>\n    Jigglypuff's vocal cords can freely adjust the wavelength of its voice.\n    This Pokémon uses this ability to sing at precisely the right wavelength to\n    make its foes most drowsy.\n</p>`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charmander.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charmander.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Charmander</h4>\n<p>\n  The flame that burns at the tip of its tail is an indication of its emotions.\n  The flame wavers when Charmander is enjoying itself.\n  If the Pokémon becomes enraged, the flame burns fiercely.\n</p>`"
        }
      ],
      "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm #simpleForm=\"ngForm\">\n    <h4>Template Driven Form Demo</h4>\n    <clr-date-container>\n        <label>Enter Date</label>\n        <input type=\"date\" name=\"date\" [(ngModel)]=\"date\" clrDate>\n    </clr-date-container>\n</form>\n<pre class=\"datepicker-output\">\n{{simpleForm.value | json}}\n</pre>\n`"
        },
        {
          "name": "TS_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({\n    selector: \"clr-form-demo\",\n    templateUrl: \"./form-demo.html\"\n})\nexport class DatepickerTemplateDrivenFormsDemo {\n    date: string = \"01/02/2015\";\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm [formGroup]=\"dateForm\" novalidate>\n    <h4>Reactive Form Demo</h4>\n    <clr-date-container>\n        <label>Date</label>\n        <input type=\"date\" clrDate formControlName=\"date\"/>\n    </clr-date-container>\n</form>\n<pre class=\"datepicker-output\">\n    {{dateForm.value | json}}\n</pre>\n`"
        },
        {
          "name": "TS_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({\n    selector: \"clr-form-demo\",\n    templateUrl: \"./form-demo.html\"\n})\nexport class DatepickerReactiveFormsDemo {\n    dateForm = new FormGroup({date: new FormControl()});\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/button-states.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/button-states.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-info-outline\">Info</button>\n<button class=\"btn btn-success-outline\">Success</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-danger\">Danger</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/buttons-icons-sm.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/buttons-icons-sm.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"home\"></clr-icon>\n    Home\n</button>\n\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"directory\"></clr-icon>\n    Directory\n</button>\n\n<button class=\"btn btn-sm btn-primary\">\n    <clr-icon shape=\"cog\"></clr-icon>\n    Settings\n</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/buttons-icons.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/buttons-icons.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"home\"></clr-icon>\n    Home\n</button>\n\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"directory\"></clr-icon>\n    Directory\n</button>\n\n<button class=\"btn btn-primary\">\n    <clr-icon shape=\"cog\"></clr-icon>\n    Settings\n</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/icon-buttons.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/icon-buttons.ts",
          "type": "",
          "defaultValue":
            "`\n<button type=\"button\" class=\"btn btn-icon\" aria-label=\"home\">\n    <clr-icon shape=\"home\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-primary\" aria-label=\"settings\">\n    <clr-icon shape=\"cog\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-warning\" aria-label=\"warning\">\n    <clr-icon shape=\"warning-standard\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-danger\" aria-label=\"error\">\n    <clr-icon shape=\"error-standard\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon btn-success\" aria-label=\"done\">\n    <clr-icon shape=\"check\"></clr-icon>\n</button>\n<button type=\"button\" class=\"btn btn-icon\" disabled aria-label=\"home\">\n    <clr-icon shape=\"home\"></clr-icon>\n</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/inverse-button.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/inverse-button.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-inverse\">Inverse</button>\n<button class=\"btn btn-inverse\" disabled>Disabled Inverse</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/primary-button.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/primary-button.ts",
          "type": "",
          "defaultValue": "`\n<button class=\"btn btn-primary\">Primary</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datepicker/demos/datepicker-date-io.demo.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-date-io.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm clrLayout=\"vertical\">\n  <clr-date-container>\n    <label>Date Object</label>\n    <input type=\"date\" [(clrDate)]=\"date\">\n  </clr-date-container>\n</form>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n    <clr-date-container>\n        <label>Basic Demo</label>\n        <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\">\n    </clr-date-container>\n</form>\n`"
        },
        {
          "name": "MAX_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n  <clr-date-container>\n    <label>Max date: 2019-11-19</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" max=\"2019-11-19\">\n  </clr-date-container>\n</form>\n`"
        },
        {
          "name": "MIN_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n  <clr-date-container>\n    <label>Min date: 2019-11-17</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" min=\"2019-11-17\">\n  </clr-date-container>\n</form>\n`"
        },
        {
          "name": "MIN_MAX_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n  <clr-date-container>\n    <label>Min date: 2019-11-17 AND Max date: 2019-11-19</label>\n    <input type=\"date\" clrDate name=\"demo\" [(ngModel)]=\"demo\" min=\"2019-11-17\" max=\"2019-11-19\">\n  </clr-date-container>\n</form>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charizard.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charizard.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Charizard</h4>\n<p>\n  Charizard flies around the sky in search of powerful opponents. \n  It breathes fire of such great heat that it melts anything. \n  However, it never turns its fiery breath on any opponent weaker than itself.\n</p>`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/secondary-button.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/secondary-button.ts",
          "type": "",
          "defaultValue": "`\n<button class=\"btn\">Secondary</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/tertiary-button.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/tertiary-button.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-link\">Tertiary</button>\n<button class=\"btn btn-link\" disabled>Disabled</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-alert.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-alert.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"card\">\n    <div class=\"card-block\">\n        <div class=\"alert alert-warning alert-sm\">\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n            <div class=\"alert-item static\">\n                <span class=\"alert-text\">\n                    Use small alerts in a card.\n                </span>\n            </div>\n        </div>\n        <div class=\"card-media-block wrap\">\n            <img class=\"card-media-image\" src=\"//placehold.it/60x60\" />\n            <div class=\"card-media-description\">\n                <span class=\"card-media-title\">Project B</span>\n                <span class=\"card-media-text\">Owner: Jane Doe</span>\n            </div>\n        </div>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card-footer\">\n        <a class=\"card-link\">Button One</a>\n        <a class=\"card-link\">Button Two</a>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-clickable.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-clickable.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\">\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-dropdown.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-dropdown.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-title\">\n                    Block\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">\n                    Action 1\n                </button>\n                <button class=\"btn btn-sm btn-link\">\n                    Action 2\n                </button>\n                <div class=\"dropdown top-left open\">\n                    <button class=\"dropdown-toggle btn btn-sm btn-link\">\n                        Dropdown 1\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a href=\"...\" class=\"dropdown-item\">Item 1</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 2</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 3</a>\n                        <a href=\"...\" class=\"dropdown-item\">Item 4</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-grid.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-grid.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 1</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 1</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 2</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 2</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h3 class=\"card-title\">Card 3</h3>\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"btn btn-sm btn-link\">Action 3</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-images.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-images.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n        </a>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    ...\n                </p>\n            </div>\n        </a>\n    </div>\n</div>\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable card-img\">\n            <img src=\"...\" alt=\"...\" />\n        </a>\n    </div>\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <a href=\"...\" class=\"card clickable\">\n            <div class=\"card-img\">\n                <img src=\"...\" alt=\"...\" />\n            </div>\n        </a>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-layout.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-layout.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-5 clr-col-md-8 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-title\">\n                    Block\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Footer Action 1</button>\n                <button class=\"btn btn-sm btn-link\">Footer Action 2</button>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-list-group.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-list-group.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"card\">\n    <div class=\"card-img\">\n        <img src=\"...\">\n    </div>\n    <div class=\"card-block\">\n        <h4 class=\"card-title\">Title</h4>\n        <p class=\"card-text\">\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ea, aut.\n        Nihil nemo, necessitatibus earum.\n        </p>\n    </div>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Lorem ipsum dolor.</li>\n        <li class=\"list-group-item\">Lorem ipsum dolor sit.</li>\n        <li class=\"list-group-item\">Lorem ipsum.</li>\n    </ul>\n    <div class=\"card-footer\">\n        <a href=\"...\" class=\"btn btn-sm btn-link\">Action 1</a>\n        <a href=\"...\" class=\"btn btn-sm btn-link\">Action 2</a>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-masonry.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-masonry.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"card-columns\">\n    <div class=\"card\">\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div href=\"...\" class=\"card\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n    </div>\n    <div class=\"card card-block\">\n        <h3 class=\"card-title\">Title</h3>\n        <p class=\"card-text\">\n            ...\n        </p>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <h3 class=\"card-title\">Title</h3>\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-footer\">\n            <a href=\"...\" class=\"btn btn-primary\">Action</a>\n        </div>\n    </div>\n    <a href=\"...\" class=\"card clickable\">\n        <div class=\"card-block\">\n            <p class=\"card-text\">\n                ...\n            </p>\n        </div>\n        <div class=\"card-img\">\n            <img src=\"...\">\n        </div>\n    </a>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/card-media-block.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/card-media-block.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-media-block\">\n                    <img src=\"...\" class=\"card-media-image\">\n                    <div class=\"card-media-description\">\n                        <span class=\"card-media-title\">\n                            Project A\n                        </span>\n                        <span class=\"card-media-text\">\n                            Owner: John Doe\n                        </span>\n                    </div>\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Action</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Header\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-media-block wrap\">\n                    <img src=\"...\" class=\"card-media-image\">\n                    <div class=\"card-media-description\">\n                        <span class=\"card-media-title\">\n                            Project B\n                        </span>\n                        <span class=\"card-media-text\">\n                            Owner: Jane Doe\n                        </span>\n                    </div>\n                </div>\n                <div class=\"card-text\">\n                    ...\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-sm btn-link\">Action</button>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/lists-in-cards.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/lists-in-cards.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Ordered Lists\n            </div>\n            <div class=\"card-block\">\n                ...\n            </div>\n            <div class=\"card-block\">\n                <ol class=\"list\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ol class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ol class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ol>\n                    </li>\n                </ol>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-lg-4 clr-col-sm-6 clr-col-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Unstyled Lists\n            </div>\n            <div class=\"card-block\">\n                <p class=\"card-text\">\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\n                </p>\n            </div>\n            <div class=\"card-block\">\n                <ul class=\"list-unstyled\">\n                    <li>Ullamco Laboris</li>\n                    <li>\n                        Nisi Ut Aliquip\n                        <ul class=\"list\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                    <li>Consequat</li>\n                    <li>Excepteur sint occaecat cupidatat non proident</li>\n                    <li>Enim ad Minim</li>\n                    <li>\n                        Occeaecat\n                        <ul class=\"list-unstyled\">\n                            <li>Exercitation</li>\n                            <li>Laboris</li>\n                            <li>Commodo</li>\n                        </ul>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"card-footer\">\n                <a class=\"btn btn-primary\">Action</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/card/progress-bar-cards.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/card/progress-bar-cards.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"clr-row\">\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"progress top\">\n                    <progress value=\"...\" max=\"100\"></progress>\n                </div>\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">...</p>\n            </div>\n            <div class=\"card-footer\">\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"clr-col-12 clr-col-sm-4\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <h4 class=\"card-title\">Card title</h4>\n                <p class=\"card-text\">...</p>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"progress\">\n                    <progress value=\"...\" max=\"100\"></progress>\n                </div>\n                <a href=\"...\" class=\"card-link\">Click</a>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/normal.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/normal.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Normal</h4>\n<p>\n    The Normal type is the most basic type of Pokémon. \n    They are very common and appear from the very first route you visit. \n    Most Normal Pokémon are single type, but there is a large contingent having a second type of Flying.\n</p>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/poison.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/poison.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Poison</h4>\n<p>\n    The Poison type is regarded as one of the weakest offensively. \n    Prior to Pokémon X/Y it was super-effective only against Grass \n    (many of which are dual Poison so neutralizes the effect). It now has an \n    extra advantage against the new Fairy type. In the first generation it was \n    also super-effective against Bug but this was changed. It fares a little better \n    defensively but its best advantage is through status moves like Toxic.\n</p>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/grass.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/grass.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Grass</h4>\n<p>\n  Grass is one of the three basic elemental types along with Fire and Water, \n  which constitute the three starter Pokémon. This creates a simple triangle \n  to explain the type concept easily to new players.\n</p>            \n<p>\n  Grass is one of the weakest types statistically, with 5 defensive weaknesses \n  and 7 types that are resistant to Grass moves. Furthermore, many Grass Pokémon \n  have Poison as their secondary type, adding a Psychic vulnerability. \n  The type combination with the most weaknesses is Grass/Psychic.\n</p>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/electric.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/electric.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Electric</h4>\n<p>\n    There are relatively few Electric Pokémon; in fact only four were added in the third generation. \n    Most are based on rodents or inanimate objects.\n</p>\n<p>\n    Electric Pokémon are very good defensively, being weak only to Ground moves.\n</p>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/app-layout/app-layout.demo.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/app-layout/app-layout.demo.ts",
          "type": "",
          "defaultValue":
            "`\nhtml {\n    /* the following line of CSS would change Clarity to a 20px vertical rhythm with a 5px grid */\n    font-size: 20px;\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/app-layout/layout-all.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/app-layout/layout-all.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level\">\n        ...\n    </div>\n    <header class=\"header header-6\">\n        ...\n    </header>\n    <nav class=\"subnav\">\n        ...\n    </nav>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            ...\n        </div>\n        <nav class=\"sidenav\">\n            ...\n        </nav>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/badges/badge-colors.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/badges/badge-colors.ts",
          "type": "",
          "defaultValue":
            "`\n<span class=\"badge\">1</span>\n<span class=\"badge badge-purple\">15</span>\n<span class=\"badge badge-blue\">2</span>\n<span class=\"badge badge-orange\">3</span>\n<span class=\"badge badge-light-blue\">12</span>\n<span class=\"badge badge-1\">90</span>\n<span class=\"badge badge-2\">51</span>\n<span class=\"badge badge-3\">25</span>\n<span class=\"badge badge-4\">32</span>\n<span class=\"badge badge-5\">57</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/badges/badge-statuses.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/badges/badge-statuses.ts",
          "type": "",
          "defaultValue":
            "`\n<span class=\"badge badge-info\">2</span>\n<span class=\"badge badge-success\">3</span>\n<span class=\"badge badge-warning\">12</span>\n<span class=\"badge badge-danger\">15</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/dropdown/dropdown-angular-close-item-false.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-close-item-false.ts",
          "type": "",
          "defaultValue":
            "`\n    <clr-dropdown [clrCloseMenuOnItemClick]=\"false\">\n        <button clrDropdownTrigger aria-label=\"Dropdown demo button\">\n            <clr-icon shape=\"error\" class=\"is-error\" size=\"24\"></clr-icon>\n            <clr-icon shape=\"caret down\"></clr-icon>\n        </button>\n        <clr-dropdown-menu *clrIfOpen>\n            <label class=\"dropdown-header\" aria-hidden=\"true\">Dropdown header</label>\n            <div aria-label=\"Dropdown header Action 1\" clrDropdownItem>Action 1</div>\n            <div aria-label=\"Dropdown header Action 2\"  clrDropdownItem>Action 2</div>\n            <div class=\"dropdown-divider\" role=\"separator\" aria-hidden=\"true\"></div>\n            <div clrDropdownItem>Link 1</div>\n            <div clrDropdownItem>Link 2</div>\n        </clr-dropdown-menu>\n    </clr-dropdown>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/angular-basic-structure.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/angular-basic-structure.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-button-group class=\"btn-primary\">\n    <clr-button>Create</clr-button>\n    <clr-button>Favorite</clr-button>\n    <clr-button [clrInMenu]=\"true\">Assign</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/angular-directions.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/angular-directions.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-button-group [clrMenuPosition]=\"'bottom-right'\">\n    <clr-button class=\"btn\">Add</clr-button>\n    <clr-button class=\"btn\">Edit</clr-button>\n    <clr-button class=\"btn\">Download</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Assign</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button class=\"btn\" [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/dropdown/dropdown-static-default.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/dropdown/dropdown-static-default.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"dropdown open\">\n    <button class=\"dropdown-toggle btn btn-primary\" type=\"button\">\n        Dropdown\n        <clr-icon shape=\"caret down\"></clr-icon>\n    </button>\n    <div class=\"dropdown-menu\">\n        <h4 class=\"dropdown-header\">Dropdown header</h4>\n        <div class=\"dropdown-item active\">Action</div>\n        <div class=\"dropdown-item disabled\">Disabled Link</div>\n        <div class=\"dropdown-divider\" role=\"separator\"></div>\n        <button class=\"dropdown-item\">Lorem.</button>\n        <div class=\"dropdown open right-bottom\">\n            <button class=\"dropdown-item active expandable\">Lorem ipsum.</button>\n            <div class=\"dropdown-menu\">\n                <div class=\"dropdown-item\">Foo.</div>\n                <div class=\"dropdown open right-top\">\n                    <button class=\"dropdown-item active expandable\">Bar.</button>\n                    <div class=\"dropdown-menu\">\n                        <div class=\"dropdown-item\">Baz.</div>\n                    </div>\n                </div>\n                <div class=\"dropdown-item\">Foo 2.</div>\n            </div>\n        </div>\n        <button class=\"dropdown-item\">Ipsum.</button>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fire.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fire.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Fire</h4>\n<p>\n    Fire is one of the three basic elemental types along with Water and Grass, \n    which constitute the three starter Pokémon. This creates a \n    simple triangle to explain the type concept easily to new players. \n    Fire types are notoriously rare in the early stages of the games \n    so choosing the Fire variation starter is often a plus.\n</p>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fighting.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fighting.ts",
          "type": "",
          "defaultValue":
            "`\n<h4 clrFocusOnViewInit>Fighting</h4>\n<p>\n    Fighting Pokémon are strong and muscle-bound, often based on martial artists. \n    Fighting moves are super-effective against five other types (as is Ground), \n    making them very good offensively. Most Fighting type moves are in the Physical category, \n    for obvious reasons.\n</p>  \n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"collapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./normal\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n            Normal\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./fire\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n            Fire\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./electric\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n            Electric\n        </a>\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
        },
        {
          "name": "ROUTES_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts",
          "type": "",
          "defaultValue":
            "`\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal\"\n        },\n        {\n            path: \"normal\",\n            component: NormalPokemon\n        },\n        {\n            path: \"snorlax\",\n            component: Snorlax\n        },\n        {\n            path: \"pidgey\",\n            component: Pidgey\n        },\n        {\n            path: \"electric\",\n            component: ElectricPokemon\n        },\n        {\n            path: \"pikachu\",\n            component: Pikachu\n        },\n        {\n            path: \"raichu\",\n            component: Raichu\n        },\n        {\n            path: \"fire\",\n            component: FirePokemon\n        },\n        {\n            path: \"charmander\",\n            component: Charmander\n        },\n        {\n            path: \"charizard\",\n            component: Charizard\n        },\n        {\n            path: \"credit\",\n            component: Pokedex\n        }\n    ],\n}\n...\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n        Normal\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n        Fire\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n        Electric\n        <clr-vertical-nav-group-children>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
        },
        {
          "name": "ROUTES_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts",
          "type": "",
          "defaultValue":
            "`\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal/pidgey\"\n        },\n        {\n            path: \"normal/snorlax\",\n            component: SnorlaxDemo\n        },\n        {\n            path: \"normal/pidgey\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"electric/pikachu\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/raichu\",\n            component: RaichuDemo\n        },\n        {\n            path: \"fire/charmander\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charizard\",\n            component: CharizardDemo\n        },\n        {\n            path: \"credit\",\n            component: PokedexDemo\n        }\n    ],\n    ...\n}\n...\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"collapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./normal\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n            Normal\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./fire\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n            Fire\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a clrVerticalNavLink\n           routerLink=\"./electric\"\n           routerLinkActive=\"active\"\n           [routerLinkActiveOptions]=\"{exact:true}\">\n            <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n            Electric\n        </a>\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
        },
        {
          "name": "ROUTES_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts",
          "type": "",
          "defaultValue":
            "`\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal\"\n        },\n        {\n            path: \"normal\",\n            component: NormalPokemon\n        },\n        {\n            path: \"normal/snorlax\",\n            component: Snorlax\n        },\n        {\n            path: \"normal/pidgey\",\n            component: Pidgey\n        },\n        {\n            path: \"electric\",\n            component: ElectricPokemon\n        },\n        {\n            path: \"electric/pikachu\",\n            component: Pikachu\n        },\n        {\n            path: \"electric/raichu\",\n            component: Raichu\n        },\n        {\n            path: \"fire\",\n            component: FirePokemon\n        },\n        {\n            path: \"fire/charmander\",\n            component: Charmander\n        },\n        {\n            path: \"fire/charizard\",\n            component: Charizard\n        },\n        {\n            path: \"credit\",\n            component: Pokedex\n        }\n    ],\n}\n...\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/icons/icons.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/icons/icons.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-vertical-nav>\n    <a clrVerticalNavLink routerLink=\"./normal\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n        Normal\n    </a>\n    <a clrVerticalNavLink routerLink=\"./electric\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bolt\"></clr-icon>\n        Electric\n    </a>\n    <a clrVerticalNavLink routerLink=\"./poison\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"sad-face\"></clr-icon>\n        Poison\n    </a>\n    <a clrVerticalNavLink routerLink=\"./grass\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"bug\"></clr-icon>\n        Grass\n    </a>\n    <a clrVerticalNavLink routerLink=\"./fighting\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"shield\"></clr-icon>\n        Fighting\n    </a>\n    <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">\n        <clr-icon clrVerticalNavIcon shape=\"certificate\"></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-vertical-nav [clrVerticalNavCollapsible]=\"demoCollapsible\">\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./normal\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n        Normal\n        <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n            <a clrVerticalNavLink\n               routerLink=\"./normal/pidgey\"\n               routerLinkActive=\"active\">\n                Pidgey\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./normal/snorlax\"\n               routerLinkActive=\"active\">\n                Snorlax\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./fire\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"flame\" clrVerticalNavIcon></clr-icon>\n        Fire\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charmander\"\n               routerLinkActive=\"active\">\n                Charmander\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./fire/charizard\"\n               routerLinkActive=\"active\">\n                Charizard\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <clr-vertical-nav-group\n            routerLinkActive=\"active\">\n        <a routerLink=\"./electric\" hidden aria-hidden=\"true\">\n        </a>\n        <clr-icon shape=\"bolt\" clrVerticalNavIcon></clr-icon>\n        Electric\n        <clr-vertical-nav-group-children *clrIfExpanded>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/pikachu\"\n               routerLinkActive=\"active\">\n                Pikachu\n            </a>\n            <a clrVerticalNavLink\n               routerLink=\"./electric/raichu\"\n               routerLinkActive=\"active\">\n                Raichu\n            </a>\n        </clr-vertical-nav-group-children>\n    </clr-vertical-nav-group>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"./credit\">\n        <clr-icon shape=\"certificate\" clrVerticalNavIcon></clr-icon>\n        Credit\n    </a>\n</clr-vertical-nav>\n`"
        },
        {
          "name": "ROUTES_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file":
            "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts",
          "type": "",
          "defaultValue":
            "`\n...\n{\n    path: \"pokemon\",\n    component: ProjectPokemon,\n    children: [\n        {\n            path: \"\",\n            redirectTo: \"normal/pidgey\"\n        },\n        {\n            path: \"normal\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"normal/snorlax\",\n            component: SnorlaxDemo\n        },\n        {\n            path: \"normal/pidgey\",\n            component: PidgeyDemo\n        },\n        {\n            path: \"electric\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/pikachu\",\n            component: PikachuDemo\n        },\n        {\n            path: \"electric/raichu\",\n            component: RaichuDemo\n        },\n        {\n            path: \"fire\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charmander\",\n            component: CharmanderDemo\n        },\n        {\n            path: \"fire/charizard\",\n            component: CharizardDemo\n        },\n        {\n            path: \"credit\",\n            component: PokedexDemo\n        }\n    ],\n    ...\n}\n...\n`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/icons.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/icons.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-primary btn-icon\">\n    <button class=\"btn\">\n        <clr-icon shape=\"home\"></clr-icon>\n        <span class=\"clr-icon-title\">Home</span>\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"cog\"></clr-icon>\n        <span class=\"clr-icon-title\">Settings</span>\n    </button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">\n                <clr-icon shape=\"user\"></clr-icon>\n                <span class=\"clr-icon-title\">User</span>\n            </button>\n            <button class=\"btn\">\n                <clr-icon shape=\"cloud\"></clr-icon>\n                <span class=\"clr-icon-title\">Cloud</span>\n            </button>\n        </div>\n    </div>\n</div>\n`"
        },
        {
          "name": "HTML_EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/icons.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">\n        <clr-icon shape=\"home\"></clr-icon>\n        Home\n    </button>\n    <button class=\"btn\">\n        <clr-icon shape=\"cog\"></clr-icon>\n        Settings\n    </button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">\n                <clr-icon shape=\"user\"></clr-icon>\n                User\n            </button>\n            <button class=\"btn\">\n                <clr-icon shape=\"cloud\"></clr-icon>\n                Cloud\n            </button>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokemon.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokemon.ts",
          "type": "",
          "defaultValue":
            "`\n<b clrFocusOnViewInit>Credit: </b>\n<a target=\"_blank\" href=\"https://www.pokemon.com/us/\">Pokémon</a>`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/mixed.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/mixed.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Favorite</button>\n    <button class=\"btn btn-success\">Add</button>\n    <button class=\"btn btn-danger\">Delete</button>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/angular/alert-angular-app-level.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-app-level.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-alert [clrAlertType]=\"'danger'\" [clrAlertAppLevel]=\"true\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is an app level alert.\n        </span>\n        <div class=\"alert-actions\">\n            <button class=\"btn alert-action\">Fix</button>\n        </div>\n    </clr-alert-item>\n</clr-alert>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-alert [clrAlertType]=\"'success'\" (clrAlertClosedChange)=\"onClose()\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert indicates a success!\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<div>{{closeMessage}}</div>\n`"
        },
        {
          "name": "TS_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts",
          "type": "",
          "defaultValue":
            "`\nexport class AlertAngularDemo  {\n    closeMessage: string = \"\";\n\n    onClose() {\n        this.closeMessage = \"The alert has been closed\";\n    }\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/radio.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/radio.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group\">\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-1\">\n        <label for=\"btn-demo-radio-1\">Apples</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-2\">\n        <label for=\"btn-demo-radio-2\">Oranges</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-3\">\n        <label for=\"btn-demo-radio-3\">Kiwis</label>\n    </div>\n    <div class=\"radio btn\">\n        <input type=\"radio\" name=\"btn-group-demo-radios\" id=\"btn-demo-radio-4\" checked>\n        <label for=\"btn-demo-radio-4\">Pears</label>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/angular/alert-angular-not-closable.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-not-closable.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-alert [clrAlertClosable]=\"false\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert cannot be dismissed.\n        </span>\n        <div class=\"alert-actions\">\n            <clr-dropdown>\n                <button class=\"dropdown-toggle\" clrDropdownTrigger>\n                    Actions\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-right\">\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Shutdown</a>\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Delete</a>\n                    <a href=\"...\" class=\"dropdown-item\" clrDropdownItem>Reboot</a>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n        </div>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert [clrAlertType]=\"'warning'\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            Try closing this alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/angular/alert-angular-small.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-small.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-alert [clrAlertSizeSmall]=\"true\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a small alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert>\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a regular alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/angular/alert-angular-success.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/angular/alert-angular-success.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-alert [clrAlertType]=\"'success'\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This alert indicates success.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n<clr-alert>\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            This is a default info alert.\n        </span>\n    </clr-alert-item>\n</clr-alert>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokedex.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokedex.ts",
          "type": "",
          "defaultValue":
            "`\n<b clrFocusOnViewInit>Credit: </b>\n<a target=\"_blank\" href=\"https://www.pokemon.com/us/pokedex/\">Pokédex</a> and \n<a target=\"_blank\" href=\"https://pokemondb.net\">PokémonDB</a>`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/static/alert-styles.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/static/alert-styles.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"alert alert-danger\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"alert alert-warning\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <div class=\"alert-action dropdown bottom-right open\">\n                    <button class=\"dropdown-toggle\">\n                        Actions\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                    </button>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" href=\"...\">Shutdown</a>\n                        <a class=\"dropdown-item\" href=\"...\">Suspend</a>\n                        <a class=\"dropdown-item\" href=\"...\">Reboot</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-info\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n            <div class=\"alert-actions\">\n                <a href=\"...\" class=\"alert-action\">Acknowledge</a>\n                <a href=\"...\" class=\"alert-action\">Reset to green</a>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-success\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">...</span>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/static/alert-sizes.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/static/alert-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"alert alert-danger\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\" role=\"alert\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                This is an alert with 36px height.\n            </span>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-success alert-sm\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                This is an alert with 24px height.\n            </span>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/static/alert-cards.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/static/alert-cards.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"card\">\n    <div class=\"card-block\">\n        <div class=\"alert alert-warning alert-sm\" role=\"alert\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n                    </div>\n                    <div class=\"alert-text\">\n                        Use small alerts in a card.\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"close\" aria-label=\"Close\">\n                <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n            </button>\n        </div>\n        <div class=\"card-media-block wrap\">\n            <img class=\"card-media-image\" src=\"//placehold.it/60x60\" />\n            <div class=\"card-media-description\">\n                <span class=\"card-media-title\">Project B</span>\n                <span class=\"card-media-text\">Owner: Jane Doe</span>\n            </div>\n        </div>\n        <p class=\"card-text\">...</p>\n    </div>\n    <div class=\"card-footer\">\n        <a class=\"card-link\">Button One</a>\n        <a class=\"card-link\">Button Two</a>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/static/alert-content-area.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/static/alert-content-area.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"content-area\">\n    <div class=\"alert alert-danger\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">\n                    This alert is at the top of the page.\n                </span>\n            </div>\n        </div>\n    </div>\n    <p>...</p>\n    <div class=\"alert alert-success\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n                </div>\n                <span class=\"alert-text\">\n                    This alert is in the middle of the page.\n                </span>\n            </div>\n        </div>\n    </div>\n    <p>...</p>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/static/alert-modals.ts": [
        {
          "name": "HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/static/alert-modals.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"modal static bump-down\">\n    <div class=\"modal-dialog\" role=\"dialog\" aria-hidden=\"true\">\n        <div class=\"modal-content\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                            Alert in a modal.\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-header\">\n                <button aria-label=\"Close\" class=\"close\" type=\"button\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n                <h3 class=\"modal-title\">I have a nice title</h3>\n            </div>\n            <div class=\"modal-body\">\n                <p>But not much to say...</p>\n            </div>\n            <div class=\"modal-footer\">\n                <button class=\"btn btn-outline\" type=\"button\">Cancel</button>\n                <button class=\"btn btn-primary\" type=\"button\">Ok</button>\n            </div>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/angular-types.ts": [
        {
          "name": "HTML_EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-button-group class=\"btn-primary\">\n    <clr-button>Add</clr-button>\n    <clr-button>Edit</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`"
        },
        {
          "name": "HTML_EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-button-group>\n    <clr-button>Add</clr-button>\n    <clr-button>Edit</clr-button>\n    <clr-button [clrInMenu]=\"true\">Download</clr-button>\n    <clr-button [clrInMenu]=\"true\">Move</clr-button>\n    <clr-button [clrInMenu]=\"true\">Delete</clr-button>\n</clr-button-group>\n`"
        },
        {
          "name": "HTML_EXAMPLE_3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
          "type": "",
          "defaultValue":
            "`\n&lt;clr-button-group class=&quot;btn-link&quot;&gt;\n    &lt;clr-button&gt;Add&lt;/clr-button&gt;\n    &lt;clr-button&gt;Edit&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Download&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Move&lt;/clr-button&gt;\n    &lt;clr-button [clrInMenu]=&quot;true&quot;&gt;Delete&lt;/clr-button&gt;\n&lt;/clr-button-group&gt;\n`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/basic-structure.ts": [
        {
          "name": "HTML_EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/basic-structure.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
        },
        {
          "name": "HTML_EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/basic-structure.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <div class=\"btn-group-overflow open\">\n        <button class=\"btn dropdown-toggle\">\n            <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n        </button>\n        <div class=\"dropdown-menu\">\n            <button class=\"btn\">Download</button>\n            <button class=\"btn\">Delete</button>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/checkbox.ts": [
        {
          "name": "HTML_EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/checkbox.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group\">\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-1\">\n        <label for=\"btn-demo-check-1\">Apples</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-2\" checked>\n        <label for=\"btn-demo-check-2\">Oranges</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-3\">\n        <label for=\"btn-demo-check-3\">Kiwis</label>\n    </div>\n    <div class=\"checkbox btn\">\n        <input type=\"checkbox\" id=\"btn-demo-check-4 checked\">\n        <label for=\"btn-demo-check-4\">Pears</label>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/button-group/types.ts": [
        {
          "name": "HTML_EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/types.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-primary\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
        },
        {
          "name": "HTML_EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/types.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
        },
        {
          "name": "HTML_EXAMPLE_3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/types.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-link\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
        },
        {
          "name": "HTML_EXAMPLE_4",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/button-group/types.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"btn-group btn-outline-primary btn-sm\">\n    <button class=\"btn\">Add</button>\n    <button class=\"btn\">Edit</button>\n    <button class=\"btn\">Download</button>\n    <button class=\"btn\">Delete</button>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts": [
        {
          "name": "HTML_EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"alert alert-app-level alert-danger\" style=\"margin-bottom:24px\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Danger\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-app-level alert-warning\" style=\"margin-bottom:24px\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-triangle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Warning\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n<div class=\"alert alert-app-level alert-info\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n            </div>\n            <div class=\"alert-text\">\n                Alert Type: Info\n            </div>\n            <div class=\"alert-actions\">\n                <button class=\"btn alert-action\">Action</button>\n            </div>\n        </div>\n    </div>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\">\n        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n    </button>\n</div>\n`"
        },
        {
          "name": "HTML_EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level alert-info\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"info-circle\"></clr-icon>\n                </div>\n                <div class=\"alert-text\">\n                    A new update is now available. Upgrade to v.1234.\n                </div>\n                <div class=\"alert-actions\">\n                    <button class=\"btn alert-action\">Install Update</button>\n                </div>\n            </div>\n        </div>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\">\n            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n        </button>\n    </div>\n    <header class=\"header header-6\">\n        <div class=\"branding\">\n            <span class=\"title\">Header</span>\n        </div>\n    </header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <p>...</p>\n        </div>\n    </div>\n</div>\n`"
        },
        {
          "name": "HTML_EXAMPLE_3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
          "type": "",
          "defaultValue":
            "`\n<div class=\"main-container\">\n    <div class=\"alert alert-app-level alert-warning\" role=\"alert\">\n        <div class=\"alert-items\">\n            <div class=\"alert-item static\">\n                <div class=\"alert-icon-wrapper\">\n                    <clr-icon class=\"alert-icon\" shape=\"download\"></clr-icon>\n                </div>\n                <div class=\"alert-text\">\n                    A new update is now available. Upgrade to v.1234.\n                </div>\n                <div class=\"alert-actions\">\n                    <button class=\"btn alert-action\">Install Update</button>\n                </div>\n            </div>\n        </div>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\">\n            <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n        </button>\n    </div>\n    <header class=\"header header-6\">\n        <div class=\"branding\">\n            <span class=\"title\">Header</span>\n        </div>\n    </header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <p>...</p>\n        </div>\n    </div>\n</div>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/button-sizes.ts": [
        {
          "name": "HTML_EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn\">Regular</button>\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-info\">Info</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn\" disabled>Disabled</button>\n`"
        },
        {
          "name": "HTML_EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-sm\">Regular</button>\n<button class=\"btn btn-primary btn-sm\">Primary</button>\n<button class=\"btn btn-success btn-sm\">Success</button>\n<button class=\"btn btn-info btn-sm\">Info</button>\n<button class=\"btn btn-warning btn-sm\">Warning</button>\n<button class=\"btn btn-danger btn-sm\">Danger</button>\n<button class=\"btn btn-sm\" disabled>Disabled</button>\n`"
        },
        {
          "name": "HTML_EXAMPLE_3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-primary btn-block\">Primary</button>\n<button class=\"btn btn-success btn-block\">Success</button>\n`"
        },
        {
          "name": "HTML_EXAMPLE_4",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-link\">Flat Regular</button>\n<button class=\"btn btn-link\" disabled>Flat Disabled</button>\n`"
        },
        {
          "name": "HTML_EXAMPLE_5",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-link btn-sm\">Flat Regular</button>\n<button class=\"btn btn-link btn-sm\" disabled>Flat Disabled</button>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/real-button.ts": [
        {
          "name": "HTML_EXAMPLE_1",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/real-button.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-primary\">Primary</button>\n<button class=\"btn btn-success\">Success</button>\n<button class=\"btn btn-warning\">Warning</button>\n<button class=\"btn btn-danger\">Danger</button>\n<button class=\"btn btn-danger\" disabled>Disabled</button>\n`"
        },
        {
          "name": "HTML_EXAMPLE_2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/real-button.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-outline\">Regular</button>\n<button class=\"btn btn-success-outline\">Success-Outline</button>\n<button class=\"btn btn-info-outline\">Info</button>\n<button class=\"btn btn-warning-outline\">Warning</button>\n<button class=\"btn btn-danger-outline\">Danger</button>\n<button class=\"btn btn-outline\" disabled>Disabled</button>\n`"
        },
        {
          "name": "HTML_EXAMPLE_3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/real-button.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-link\">Regular</button>\n<button class=\"btn btn-link\" disabled>Disabled</button>\n<button class=\"btn btn-sm btn-link\">Regular</button>\n<button class=\"btn btn-sm btn-link\" disabled>Disabled</button>\n`"
        }
      ],
      "src/website/src/app/documentation/get-started/get-started.component.ts": [
        {
          "name": "HTML_IMPORTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
          "type": "",
          "defaultValue":
            "`\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/ui/clr-ui.min.css\">\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n<script src=\"path/to/node_modules/@clr/icons/clr-icons.min.js\"></script>\n`"
        },
        {
          "name": "NG_MODULE_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
          "type": "",
          "defaultValue":
            "`\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ClarityModule } from \"@clr/angular\";\nimport { AppComponent } from \"./app.component\";\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        ClarityModule,\n        ...\n     ],\n     declarations: [ AppComponent ],\n     bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n`"
        },
        {
          "name": "NODE_IMPORTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
          "type": "",
          "defaultValue":
            "`\n\"styles\": [\n      \"node_modules/@clr/icons/clr-icons.min.css\",\n      \"node_modules/@clr/ui/clr-ui.min.css\",\n      ... any other styles\n],\n\"scripts\": [\n  ... any existing scripts\n  \"node_modules/@webcomponents/custom-elements/custom-elements.min.js\",\n  \"node_modules/@clr/icons/clr-icons.min.js\"\n]\n`"
        },
        {
          "name": "UI_CDN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/get-started/get-started.component.ts",
          "type": "",
          "defaultValue":
            "`\n<!-- Load the latest version -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@clr/ui/clr-ui.min.css\" />\n<!-- Or load a specific version -->\n<link rel=\"stylesheet\" href=\"https://unpkg.com/@clr/ui@0.12.5/clr-ui.min.css\" />\n`"
        }
      ],
      "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts": [
        {
          "name": "ICONS_IMPORTS_ALL",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
          "type": "",
          "defaultValue":
            "`\n<!--CLARITY ICONS STYLE-->\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n\n<!--CLARITY ICONS DEPENDENCY: CUSTOM ELEMENTS POLYFILL-->\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n\n<!--CLARITY ICONS API & ALL ICON SETS-->\n<script src=\"path/to/node_modules/@clr/icons/clr-icons.min.js\"></script>\n`"
        },
        {
          "name": "ICONS_IMPORTS_SOME",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
          "type": "",
          "defaultValue":
            "`\n<!--CLARITY ICONS STYLE-->\n<link rel=\"stylesheet\" href=\"path/to/node_modules/@clr/icons/clr-icons.min.css\">\n\n<!--CLARITY ICONS DEPENDENCY: CUSTOM ELEMENTS POLYFILL-->\n<script src=\"path/to/node_modules/@webcomponents/custom-elements/custom-elements.min.js\"></script>\n\n<!--CLARITY ICONS API & CORE SHAPES SET-->\n<script src=\"path/to/node_modules/@clr/icons/clr-icons-lite.min.js\"></script>\n\n<!--ICON SETS-->\n<script src=\"path/to/node_modules/@clr/icons/shapes/social-shapes.min.js\"></script>\n<script src=\"path/to/node_modules/@clr/icons/shapes/travel-shapes.min.js\"></script>\n`"
        },
        {
          "name": "ICONS_IMPORTS_TS_ALL",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
          "type": "",
          "defaultValue": "`\nimport '@clr/icons';\nimport '@clr/icons/shapes/all-shapes';\n`"
        },
        {
          "name": "ICONS_IMPORTS_TS_CORE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
          "type": "",
          "defaultValue": "`\nimport '@clr/icons';\n`"
        },
        {
          "name": "ICONS_IMPORTS_TS_SOME",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
          "type": "",
          "defaultValue":
            "`\nimport '@clr/icons';\nimport '@clr/icons/shapes/essential-shapes';\nimport '@clr/icons/shapes/technology-shapes';\n`"
        }
      ],
      "src/website/src/app/icons/icons-sets/icons-tags.ts": [
        {
          "name": "ICONS_TAGS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-sets/icons-tags.ts",
          "type": "object",
          "defaultValue":
            "{\n  cog: ['gear'],\n  check: ['status', 'ok', 'normal', 'enable'],\n  'check-circle': ['status', 'ok', 'normal', 'success'],\n  'success-standard': ['check', 'status', 'normal', 'ok'],\n  'unknown-status': ['help', 'question'],\n  'plus-circle': ['add'],\n  help: ['question'],\n  floppy: ['disk', 'save'],\n  image: ['graphic'],\n  envelope: ['letter'],\n  times: ['multiply', 'x', 'delete'],\n  'times-circle': ['delete'],\n  power: ['on'],\n  heart: ['love'],\n  'thumbs-up': ['like'],\n  'thumbs-down': ['dislike'],\n  'happy-face': ['emoji'],\n  'neutral-face': ['emoji'],\n  'sad-face': ['emoji'],\n  angle: ['arrow', 'collapse', 'expand', 'chevron'],\n  'angle-double': ['arrow'],\n  flame: ['fire'],\n  'talk-bubbles': ['chat'],\n  truck: ['shipping'],\n  trash: ['delete', 'remove'],\n  'step-forward-2': ['first', 'last', 'start', 'end'],\n  sync: ['update'],\n}"
        }
      ],
      "src/website/src/app/documentation/demos/forms/forms-example-block.ts": [
        {
          "name": "id",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/forms/forms-example-block.ts",
          "type": "",
          "defaultValue": "-2"
        }
      ],
      "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts": [
        {
          "name": "indicator",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
          "type": "",
          "defaultValue":
            "`\n<p>\n  <clr-icon shape=\"exclamation-triangle\" title=\"Usage Warning\"></clr-icon>\n  CPU usage is at 99% use.\n</p>\n`"
        },
        {
          "name": "interactive",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
          "type": "",
          "defaultValue": "`\n<button class=\"btn\">\n  <clr-icon shape=\"bars\"></clr-icon> Menu\n</button>`"
        },
        {
          "name": "interactiveNoLabel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
          "type": "",
          "defaultValue":
            "`\n<button class=\"btn btn-icon\" aria-label=\"main menu\">\n  <clr-icon shape=\"bars\"></clr-icon>\n</button>\n`"
        },
        {
          "name": "presentational",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
          "type": "",
          "defaultValue": "`<clr-icon shape=\"info-circle\"></clr-icon>`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/expandable-rows/fake-loader.ts": [
        {
          "name": "LATENCY",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/expandable-rows/fake-loader.ts",
          "type": "number",
          "defaultValue": "2000"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/batch-action/batch-action.ts": [
        {
          "name": "MAIN_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/batch-action/batch-action.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onAdd()\"><clr-icon shape=\"plus\"></clr-icon> Add\n                to group</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" ><clr-icon shape=\"close\"></clr-icon> Delete</button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onEdit()\" *ngIf=\"selected.length == 1\"><clr-icon shape=\"pencil\"></clr-icon> Edit</button>\n        </div>\n        <div class=\"btn-group\">\n            <clr-dropdown>\n                <button type=\"button\" class=\"btn btn-sm btn-secondary\" clrDropdownTrigger>\n                    Export\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\n                    <button type=\"button\" (click)=\"onExportAll()\" clrDropdownItem>Export All</button>\n                    <button type=\"button\" (click)=\"onExportSelected()\" [disabled]=\"selected.length === 0\" clrDropdownItem>Export Selected Items</button>\n                </clr-dropdown-menu>\n            </clr-dropdown>\n        </div>\n    </clr-dg-action-bar>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/selection/selection.ts": [
        {
          "name": "MAIN_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid [(clrDgSelected)]=\"selected\">\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`"
        },
        {
          "name": "ROW_SELECTION_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid [(clrDgSelected)]=\"rowSelected\" [clrDgRowSelection]=\"true\">\n    <clr-dg-column>User ID</clr-dg-column>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-cell>{{user.id}}</clr-dg-cell>\n        <-- ... -->\n    </clr-dg-row>\n    <clr-dg-footer>{{users.length}} users</clr-dg-footer>\n</clr-datagrid>\n`"
        },
        {
          "name": "SELECTION_CHANGE_EVENT_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid [clrDgSelected]=\"selected\"\n              (clrDgSelectedChange)=\"selectionChanged($event)\">\n    <-- ... -->\n</clr-datagrid>\n`"
        },
        {
          "name": "SINGLE_ROW_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\" [(clrDgSelected)]=\"item.selected\">\n    <-- ... -->\n</clr-dg-row>\n`"
        },
        {
          "name": "UNSELECTABLE_ROW",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-dg-row [clrDgSelectable]=\"!user.locked\" *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n  <clr-dg-cell>{{user.id}}</clr-dg-cell>\n    <-- ... -->\n  </clr-dg-row>\n</clr-dg-row>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/single-action/single-action.ts": [
        {
          "name": "MAIN_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datagrid/single-action/single-action.ts",
          "type": "",
          "defaultValue":
            "`\n<clr-datagrid>\n    <-- ... -->\n    <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\">\n        <clr-dg-action-overflow>\n            <button class=\"action-item\" (click)=\"onEdit(user)\">Edit</button>\n            <button class=\"action-item\" (click)=\"onDelete(user)\">Delete</button>\n        </clr-dg-action-overflow>\n        <-- ... -->\n    </clr-dg-row>\n   <-- ... -->\n</clr-datagrid>\n\nSelected users: <span *ngFor=\"let user of selected\">{{user.name}}</span>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/buttons/button-loading.ts": [
        {
          "name": "MAIN_HTML_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/button-loading.ts",
          "type": "",
          "defaultValue":
            "`\n<button [clrLoading]=\"validateBtnState\" class=\"btn btn-info-outline\" (click)=\"validateDemo()\">Validate</button>\n<button [clrLoading]=\"submitBtnState\" type=\"submit\" class=\"btn btn-success-outline\" (click)=\"submitDemo()\">Submit</button>\n`"
        },
        {
          "name": "MAIN_TS_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/buttons/button-loading.ts",
          "type": "",
          "defaultValue":
            "`\nimport { ClrLoadingState } from '@clr/angular';\n\nexport class ButtonLoadingDemo {\n  validateBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n  submitBtnState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  validateDemo() {\n    this.validateBtnState = ClrLoadingState.LOADING;\n    //Validating Logic\n    this.validateBtnState = ClrLoadingState.SUCCESS;\n  }\n\n  submitDemo() {\n    this.submitBtnState = ClrLoadingState.LOADING;\n    //Submit Logic\n    this.submitBtnState = ClrLoadingState.DEFAULT;\n  }\n}\n    \n`"
        }
      ],
      "src/website/src/app/documentation/demos/color/color-scheme/color-schemes.ts": [
        {
          "name": "MONOCHROME_NEUTRAL_SCHEMES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/color/color-scheme/color-schemes.ts",
          "type": "[]",
          "defaultValue":
            "[\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 19%)' },\n      { hex: 'hsl(198, 57%, 85%)' },\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(198, 66%, 56%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(198, 100%, 34%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(198, 0%, 34%)' },\n      { hex: 'hsl(14, 83%, 84%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(14, 91%, 55%)' },\n      { hex: 'hsl(14, 100%, 44%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 45%)' },\n      { hex: 'hsl(93, 52%, 88%)' },\n      { hex: 'hsl(93, 100%, 21%)' },\n      { hex: 'hsl(93, 100%, 16%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(93, 76%, 49%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(48, 100%, 69%)' },\n      { hex: 'hsl(282, 44%, 62%)' },\n      { hex: 'hsl(198, 0%, 45%)' },\n      { hex: 'hsl(282, 59%, 87%)' },\n      { hex: 'hsl(282, 43%, 54%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(93, 76%, 49%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(93, 85%, 32%)' },\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(198, 0%, 45%)' },\n      { hex: 'hsl(93, 79%, 40%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(282, 43%, 54%)' },\n      { hex: 'hsl(282, 44%, 62%)' },\n      { hex: 'hsl(198, 0%, 34%)' },\n      { hex: 'hsl(282, 51%, 78%)' },\n      { hex: 'hsl(282, 100%, 24%)' },\n    ],\n  },\n]"
        },
        {
          "name": "MULTI_COLOR_SCHEMES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/color/color-scheme/color-schemes.ts",
          "type": "[]",
          "defaultValue":
            "[\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 27%)' },\n      { hex: 'hsl(282, 43%, 54%)' },\n      { hex: 'hsl(198, 54%, 92%)' },\n      { hex: 'hsl(198, 58%, 78%)' },\n      { hex: 'hsl(198, 0%, 45%)' },\n      { hex: 'hsl(198, 100%, 36%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(14, 91%, 55%)' },\n      { hex: 'hsl(198, 100%, 41%)' },\n      { hex: 'hsl(198, 100%, 34%)' },\n      { hex: 'hsl(14, 83%, 84%)' },\n      { hex: 'hsl(198, 100%, 24%)' },\n      { hex: 'hsl(198, 57%, 85%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(93, 76%, 49%)' },\n      { hex: 'hsl(198, 100%, 41%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(93, 85%, 32%)' },\n      { hex: 'hsl(198, 100%, 24%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(14, 91%, 55%)' },\n      { hex: 'hsl(198, 0%, 27%)' },\n      { hex: 'hsl(93, 85%, 32%)' },\n      { hex: '#FFB38F' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(93, 77%, 44%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(93, 85%, 32%)' },\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(93, 77%, 44%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(282, 100%, 24%)' },\n      { hex: 'hsl(282, 50%, 45%)' },\n    ],\n  },\n  {\n    schemeColors: [\n      { hex: 'hsl(14, 91%, 55%)' },\n      { hex: 'hsl(198, 0%, 60%)' },\n      { hex: 'hsl(14, 87%, 78%)' },\n      { hex: 'hsl(198, 0%, 87%)' },\n      { hex: 'hsl(282, 100%, 24%)' },\n      { hex: 'hsl(282, 50%, 45%)' },\n    ],\n  },\n]"
        }
      ],
      "src/website/src/app/documentation/demos/progress-bars/progress-bars.demo.ts": [
        {
          "name": "OPTIONAL_PERCENTAGE_LABEL",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/progress-bars/progress-bars.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<!-- Visual Presentation -->\n<div aria-hidden=\"true\"\n  <div>Container 1 loading Progress </div>\n  <progress  max=\"100\" value=\"65\" data-displayval=\"65%\"></progress>\n</div>\n\n<!-- Screen Reader Presentation -->\n<!-- Screen reader users will be interrupted and hear \"Container 1 Loading Progress is 65%\" when the progress bar appears -->\n<!-- Screen reader users will also be able to read this text with the screen reader's cursor --> \n<span  aria-live=\"polite\">\n  <span class=\"clr-sr-only\">\n    Container 1 Loading Progress is\n  </span>\n  65%\n</span>\n`"
        }
      ],
      "src/website/src/app/icons/icons-view.service.ts": [
        {
          "name": "previewClasses",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-view.service.ts",
          "type": "any",
          "defaultValue": "{\n  'is-solid': false,\n  'has-alert': false,\n  'has-badge': false,\n}"
        }
      ],
      "src/website/src/app/utils/code-highlight.ts": [
        {
          "name": "Prism",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/utils/code-highlight.ts",
          "type": "any"
        }
      ],
      "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts": [
        {
          "name": "PROVIDE_LOCALE_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts",
          "type": "",
          "defaultValue": "`\nproviders: [\n    {provide: LOCALE_ID, useValue: 'fr'}\n]\n`"
        },
        {
          "name": "REGISTER_LOCALE_EXAMPLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts",
          "type": "",
          "defaultValue":
            "`\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\n\nregisterLocaleData(localeFr);\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts": [
        {
          "name": "reactiveHTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm [formGroup]=\"model\">\n    <clr-datalist-container>\n        <label>Reactive Datalist</label>\n        <input clrDatalistInput placeholder=\"Option\" name=\"Option\" formControlName=\"item\" />\n        <datalist id=\"clr-custom-datalistid-1\">\n            <option *ngFor=\"let item of items\" [value]=\"item + ' dl 1'\"></option>\n        </datalist>\n    </clr-datalist-container>\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"model.invalid\" (click)=\"submit()\">\n        Submit\n    </button>\n</form>\n`"
        },
        {
          "name": "reactiveTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({\n  selector: 'reactive-form',\n  templateUrl: './reactive.html',\n})\nexport class ReactiveForm {\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  model = new FormGroup({\n    item: new FormControl('', [ Validators.required, Validators.minLength(4)]),\n  });\n  submit() {\n    console.log('Form submit', this.model);\n  }\n}\n`"
        }
      ],
      "src/website/src/app/icons/icons-routing.module.ts": [
        {
          "name": "ROUTING",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/icons/icons-routing.module.ts",
          "type": "ModuleWithProviders",
          "defaultValue": "RouterModule.forChild(routes)"
        }
      ],
      "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts": [
        {
          "name": "spinner",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts",
          "type": "",
          "defaultValue": "`\n<clr-spinner clrMedium aria-label=\"In progress\">Fetching data</clr-spinner>\n`"
        },
        {
          "name": "timelineStep",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts",
          "type": "",
          "defaultValue":
            "`\n<li class=\"clr-timeline-step\">\n  <div class=\"clr-timeline-step-header\">11:59 am</div>\n  <clr-icon shape=\"circle\" aria-label=\"Not started\"></clr-icon>\n  <div class=\"clr-timeline-step-body\">\n    ...\n  </div>\n</li>\n`"
        }
      ],
      "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts": [
        {
          "name": "templateHTML",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts",
          "type": "",
          "defaultValue":
            "`\n<form clrForm>\n    <clr-datalist-container>\n        <label>Template Datalist</label>\n        <input minlength=\"4\" name=\"Option\" required \n               clrDatalistInput [disabled]=\"disabled\" [(ngModel)]=\"vertical\"/>\n        <datalist>\n            <option *ngFor=\"let item of items\" [value]=\"item\"></option>\n        </datalist>\n        <clr-control-helper>Helper text</clr-control-helper>\n        <clr-control-error>There was an error</clr-control-error>\n    </clr-datalist-container>\n</form>\n`"
        },
        {
          "name": "templateTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts",
          "type": "",
          "defaultValue":
            "`\n@Component({\n  selector: 'template-form',\n  templateUrl: './template.html',\n})\nexport class TemplateForm {\n  disabled = false;\n  items: string[] = ['Item1', 'Item2', 'Item3'];\n  vertical = '';\n}\n`"
        }
      ],
      "src/website/src/app/documentation/demos/themes/themes.demo.ts": [
        {
          "name": "UI_CUSTOM_CLARITY_DARK_SCSS_FILE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
          "type": "",
          "defaultValue":
            "`\n@import \"../node_modules/@clr/ui/src/utils/theme.dark.clarity\"; // Overwrites with dark theme\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`"
        },
        {
          "name": "UI_CUSTOM_CLARITY_DARK_THEME_SCSS_FILE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
          "type": "",
          "defaultValue":
            "`\n@import \"../node_modules/@clr/ui/src/utils/theme.dark.clarity\"; // Dark theme variables\n\n// Your Application Theme File\n@import \"./theme.scss\";\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`"
        },
        {
          "name": "UI_CUSTOM_CLARITY_LIGHT_SCSS_FILE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
          "type": "",
          "defaultValue":
            "`\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`"
        },
        {
          "name": "UI_CUSTOM_CLARITY_LIGHT_THEME_SCSS_FILE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
          "type": "",
          "defaultValue":
            "`\n// Your Application Theme File\n@import \"./theme.scss\";\n\n// Clarity Component SCSS\n@import \"../node_modules/@clr/ui/src/utils/components.clarity\";\n`"
        },
        {
          "name": "UI_NO_NODE_IMPORTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
          "type": "",
          "defaultValue":
            "`\n\"styles\": [\n      ...\n      \"./node_modules/@clr/icons/clr-icons.min.css\",\n      ...\n  ]\n`"
        },
        {
          "name": "UI_NODE_IMPORTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
          "type": "",
          "defaultValue":
            "`\n\"styles\": [\n      ...\n      \"../node_modules/@clr/icons/clr-icons.min.css\",\n      \"../node_modules/@clr/ui/clr-ui-dark.min.css\",\n      ...\n  ]\n`"
        },
        {
          "name": "UI_WEBPACK_IMPORTS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
          "type": "",
          "defaultValue":
            "`\n  \"entry\": {\n    \"main\": [\n      \"./src/main.ts\"\n    ],\n    \"styles\": [\n      \"./node_modules/@clr/icons/clr-icons.min.css\",\n      \"./node_modules/@clr/ui/clr-ui-dark.min.css\",\n      \"./src/styles.css\"\n    ]\n  },\n`"
        }
      ],
      "src/website/src/app/news/release-page/release-organizer.ts": [
        {
          "name": "VERSIONS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/website/src/app/news/release-page/release-organizer.ts",
          "type": "object",
          "defaultValue": "{}"
        }
      ]
    },
    "groupedFunctions": {
      "src/website/src/app/news/release-page/release-organizer.ts": [
        {
          "name": "compareReleases",
          "file": "src/website/src/app/news/release-page/release-organizer.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "rA",
              "type": ""
            },
            {
              "name": "rB",
              "type": ""
            }
          ],
          "jsdoctags": [
            {
              "name": "rA",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "rB",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "organize",
          "file": "src/website/src/app/news/release-page/release-organizer.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": []
        }
      ],
      "src/website/src/app/utils/component-list.ts": [
        {
          "name": "componentList",
          "file": "src/website/src/app/utils/component-list.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "type": ""
            }
          ],
          "jsdoctags": [
            {
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "src/website/src/app/icons/icons-sets/icons-inventory.ts": [
        {
          "name": "makeSetSearchable",
          "file": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "set",
              "type": "any"
            },
            {
              "name": "defaultTags"
            },
            {
              "name": "hideIcons"
            }
          ],
          "returnType": "any[]",
          "jsdoctags": [
            {
              "name": "set",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "defaultTags",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "hideIcons",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "reverseAliases",
          "file": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "originalKeyValue",
              "type": "any"
            }
          ],
          "jsdoctags": [
            {
              "name": "originalKeyValue",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "src/website/src/app/documentation/demos/datagrid/inventory/inventory.ts": [
        {
          "name": "randomInt",
          "file": "src/website/src/app/documentation/demos/datagrid/inventory/inventory.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "max"
            }
          ],
          "returnType": "number",
          "jsdoctags": [
            {
              "name": "max",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {},
    "groupedTypeAliases": {}
  },
  "routes": {
    "name": "<root>",
    "kind": "module",
    "className": "AppModule",
    "children": [
      {
        "name": "appRoutes",
        "filename": "src/website/src/app/app-routing.module.ts",
        "module": "AppRoutingModule",
        "kind": "module"
      },
      {
        "name": "documentationRoutes",
        "filename": "src/website/src/app/documentation/documentation-routing.module.ts",
        "module": "DocumentationRoutingModule",
        "kind": "module"
      }
    ]
  },
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "src/website/src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/app.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ga",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/app.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PLATFORM_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/community/community.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CommunityComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/component-status/component-status.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ComponentStatusComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/component-status/status-dot.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "StatusDotComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/_doc-wrapper/doc-wrapper.ts",
        "type": "component",
        "linktype": "component",
        "name": "DocWrapper",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/accordion/accordion.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "AccordionDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/accordion/angular-accordion.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "AngularAccordionDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/accordion/angular-accordion.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "example",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/accordion/api-accordion.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ApiAccordionDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/alerts.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-app-level-alerts.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertAngularAppLevelAlertsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-app-level.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertAngularAppLevelDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-app-level.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertAngularCloseEventDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-close-event.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TS_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-not-closable.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertAngularNotClosableDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-not-closable.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-small.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertAngularSmallDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-small.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-success.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertAngularSuccessDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/angular/alert-angular-success.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertAppLevelDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-app-level.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-cards.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-content-area.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertContentAreaDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-content-area.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-modals.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertModalsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-modals.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-sizes.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertSizesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-styles.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertStylesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/alert/static/alert-styles.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/app-layout/app-layout.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppLayoutDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/app-layout/app-layout.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/app-layout/layout-all.ts",
        "type": "component",
        "linktype": "component",
        "name": "LayoutAllDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/app-layout/layout-all.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/badges/badge-colors.ts",
        "type": "component",
        "linktype": "component",
        "name": "BadgeColorsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/badges/badge-colors.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/badges/badge-statuses.ts",
        "type": "component",
        "linktype": "component",
        "name": "BadgeStatusesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/badges/badge-statuses.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/badges/badges.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "BadgesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/angular-basic-structure.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupAngularBasicStructureDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/angular-basic-structure.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/angular-directions.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupAngularDirectionsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/angular-directions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupAngularTypes",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/angular-types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/basic-structure.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupBasicStructureDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/basic-structure.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/basic-structure.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/button-group.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/button-group.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ACCESSIBILITY_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/checkbox.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupCheckboxDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/checkbox.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/icons.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupIconsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/icons.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/icons.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/mixed.ts",
        "type": "component",
        "linktype": "component",
        "name": "MixedButtonGroupDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/mixed.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/radio.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupRadioDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/radio.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupTypes",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/button-group/types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_4",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-loading.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonLoadingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-loading.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MAIN_HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-loading.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MAIN_TS_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonSizesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_4",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_5",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-states.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonStatesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/button-states.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/buttons-icons-sm.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonsIconsSmallDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/buttons-icons-sm.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/buttons-icons.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonsIconsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/buttons-icons.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/buttons-test.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonsTestDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/buttons.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/icon-buttons.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconButtonsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/icon-buttons.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/inverse-button.ts",
        "type": "component",
        "linktype": "component",
        "name": "InverseButtonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/inverse-button.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/primary-button.ts",
        "type": "component",
        "linktype": "component",
        "name": "PrimaryButtonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/primary-button.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/real-button.ts",
        "type": "component",
        "linktype": "component",
        "name": "RealButtonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/real-button.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/real-button.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/real-button.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/secondary-button.ts",
        "type": "component",
        "linktype": "component",
        "name": "SecondaryButtonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/secondary-button.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/tertiary-button.ts",
        "type": "component",
        "linktype": "component",
        "name": "TertiaryButtonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/buttons/tertiary-button.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-alert.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardAlertDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-alert.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-clickable.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardClickableDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-clickable.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-dropdown.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardDropdownDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-dropdown.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-grid.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardGridDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-grid.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-images.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardImagesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-images.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-layout.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardLayoutDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-layout.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-list-group.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardListGroupDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-list-group.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-masonry.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardMasonryDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-masonry.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-media-block.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardMediaBlockDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/card-media-block.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/cards.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/lists-in-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListsInCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/lists-in-cards.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/progress-bar-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/progress-bar-cards.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/progress-bar-inline-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarInlineCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/card/progress-bar-inline-cards.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMLPE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/checkboxes/checkboxes.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckboxesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/23",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/clarity-doc.ts",
        "type": "class",
        "linktype": "classe",
        "name": "ClarityDocComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/clipboard-copy.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ClipboardCopyService",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/color/color-palette-functional/color-palette-functional.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ColorFunctionalDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/color/color-palette-functional/functional-color-palettes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DARK_THEME_COLOR_PALETTES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/color/color-palette-functional/functional-color-palettes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LIGHT_THEME_COLOR_PALETTES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/color-palette/color-palette.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ColorPaletteDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/color-palette/color-palettes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CLARITY_PALETTES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/color-palette/color-palettes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DEPRECATED_COLOR_PALETTES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/color-scheme/color-scheme-donut.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ColorSchemeDonut",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/color-scheme/color-scheme.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ColorSchemeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/color-scheme/color-schemes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MONOCHROME_NEUTRAL_SCHEMES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/color-scheme/color-schemes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MULTI_COLOR_SCHEMES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/color/color.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ColorDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/basic-structure/basic-structure.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridBasicStructureDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/basic-structure/basic-structure.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/batch-action/batch-action.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridBatchActionDemo",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/batch-action/batch-action.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MAIN_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/binding-properties/binding-properties.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridBindingPropertiesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/binding-properties/binding-properties.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/built-in-filters/built-in-filters.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridBuiltInFiltersDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/built-in-filters/examples.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/compact/compact.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridCompactDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/compact/compact.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "COMPACT_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/custom-rendering/custom-rendering.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridCustomRenderingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/custom-rendering/custom-rendering.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/datagrid.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridDemo",
        "coveragePercent": 0,
        "coverageCount": "0/21",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridDetailPaneDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHANGE_EVENT_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DETAIL_PANE_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MAIN_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/detail/detail.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TWO_WAY_BINDING_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/expandable-rows/examples.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/expandable-rows/expandable-rows.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridExpandableRowsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/expandable-rows/expandable-rows.ts",
        "type": "class",
        "linktype": "classe",
        "name": "DateFilter",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/expandable-rows/fake-loader.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "FakeLoader",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/expandable-rows/fake-loader.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LATENCY",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/filtering/examples.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/filtering/filtering.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridFilteringDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridFixedHeightDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/fixed-height/fixed-height.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "STYLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/full/full.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridFullDemo",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridHideShowColumnsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CUSTOM_TOGGLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/hide-show-columns/hide-show-columns.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/inventory.ts",
        "type": "class",
        "linktype": "classe",
        "name": "Inventory",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/inventory.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FetchResult",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/inventory.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "randomInt",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/pokemon.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Pokemon",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/user.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "User",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BEGINNING",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "COLORS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NAMES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NOW",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/inventory/values.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "POKEMON",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/pagination/pagination.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridPaginationDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/pagination/pagination.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/placeholder/placeholder.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridPlaceholderDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/placeholder/placeholder.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridSelectionDemo",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MAIN_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROW_SELECTION_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SELECTION_CHANGE_EVENT_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SINGLE_ROW_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/selection/selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UNSELECTABLE_ROW",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/server-driven/examples.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/server-driven/server-driven.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridServerDrivenDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/single-action/single-action.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridSingleActionDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/single-action/single-action.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MAIN_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridSelectionSingleDemo",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROW_SELECTION_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SELECTION_CHANGE_EVENT_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/single-selection/single-selection.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UNSELECTABLE_ROW",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/smart-iterator/smart-iterator.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridSmartIteratorDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/smart-iterator/smart-iterator.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/sorting/examples.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/sorting/sorting.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridSortingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/usage/usage.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridUsageDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/utils/color-filter.ts",
        "type": "component",
        "linktype": "component",
        "name": "ColorFilter",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/utils/pokemon-comparator.ts",
        "type": "class",
        "linktype": "classe",
        "name": "PokemonComparator",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/utils/pokemon-filter.ts",
        "type": "class",
        "linktype": "classe",
        "name": "PokemonFilter",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datagrid/utils/wins-filter.ts",
        "type": "class",
        "linktype": "classe",
        "name": "WinsFilter",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatalistBasicDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "basicHTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-basic.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "basicTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatalistReactiveValidationDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "reactiveHTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-reactive-validation.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "reactiveTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatalistTemplateValidationDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "templateHTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist-template-validation.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "templateTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datalist/datalist.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatalistDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/datepicker.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerAPIDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MAX_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MIN_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-api.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MIN_MAX_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-date-io.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerDateIODemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-date-io.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-enUS.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerENUSDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-fr.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerFRDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerInternationalizationDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PROVIDE_LOCALE_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-internationalization.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "REGISTER_LOCALE_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-io.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerIODemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerReactiveFormsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-reactive-forms.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TS_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatepickerTemplateDrivenFormsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/datepicker/demos/datepicker-template-driven-forms.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TS_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-close-item-false.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownAngularCloseItemFalseDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-close-item-false.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-positioning.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownAngularPositioningDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-angular-positioning.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-buttonlink-toggle.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownStaticButtonLinkToggleDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-buttonlink-toggle.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-default.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownStaticDefaultDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-default.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-fontawesome-toggle.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownStaticFontAwesomeToggleDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-fontawesome-toggle.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-icon-toggle.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownStaticIconToggleDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-icon-toggle.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-positioning.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownStaticPositioningDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown-static-positioning.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/dropdown/dropdown.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/forms/forms-example-block.ts",
        "type": "component",
        "linktype": "component",
        "name": "FormsExampleBlockComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/forms/forms-example-block.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "id",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/forms/forms.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "FormsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/25",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-1.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridAutoLayout1Demo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-1.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridAutoLayout2Demo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-2.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-3.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridAutoLayout3Demo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-3.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-4.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridAutoLayout4Demo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-auto-layout-4.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-column-offsetting.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridColumnOffsettingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-column-offsetting.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-column-ordering.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridColumnOrderingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-column-ordering.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-column-stacking.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridColumnStackingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-column-stacking.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-column-wrapping.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridColumnWrappingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-column-wrapping.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-columns.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridColumnsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-columns.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridItemsHorizontalAlignmentDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_4",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-horizontal-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_5",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-individual-vertical-alignment.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridItemsIndividualVerticalAlignmentDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-individual-vertical-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridItemsVerticalAlignmentDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-items-vertical-alignment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-nesting.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridNestingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid-nesting.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/grid/grid.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "GridDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/header-colors.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderColorsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/header-colors.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/header-links.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderLinksDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/header-links.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/header-types.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderTypesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/header-types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/header.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/sub-nav.ts",
        "type": "component",
        "linktype": "component",
        "name": "SubNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/header/sub-nav.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/i18n/i18n.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "I18nDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/input/input.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputDemo",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-clickable.ts",
        "type": "component",
        "linktype": "component",
        "name": "LabelsClickableDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-clickable.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-color-options.ts",
        "type": "component",
        "linktype": "component",
        "name": "LabelsColorOptionsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-color-options.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-default.ts",
        "type": "component",
        "linktype": "component",
        "name": "LabelsDefaultDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-default.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-status.ts",
        "type": "component",
        "linktype": "component",
        "name": "LabelsStatusDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-status.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-with-badges.ts",
        "type": "component",
        "linktype": "component",
        "name": "LabelsWithBadgesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels-with-badges.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/labels/labels.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "LabelsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-compact.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListsCompactDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-compact.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-in-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListsInCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-in-cards.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-mixed.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListsMixedDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-mixed.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-ol.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListsOlDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-ol.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-ul.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListsUlDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-ul.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-unstyled.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListsUnstyledDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists-unstyled.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/lists.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/lists/old-lists-in-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "OldListsInCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/login/login-example.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "LoginExampleDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/login/login-example.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/login/login.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "LoginDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-angular-not-closable.example.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalAngularNotClosableExampleComponent",
        "coveragePercent": 50,
        "coverageCount": "1/2",
        "status": "medium"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-angular-show.example.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalAngularShowExampleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-angular-size.example.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalAngularSizeExampleComponent",
        "coveragePercent": 25,
        "coverageCount": "1/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-angular-static-backdrop.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalAngularStaticBackdropDemo",
        "coveragePercent": 50,
        "coverageCount": "1/2",
        "status": "medium"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-animation-design.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalAnimationDesignDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-animation.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalAnimationDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-animation.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-backdrop.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalBackdropDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-backdrop.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-size-design.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalSizeDesignDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalSizesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-static.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalStaticDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-static.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal-style-design.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalStyleDesignDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/modal/modal.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ModalDemo",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/header-colors.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderColorsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/header-links.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderLinksDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/header-types-old.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderTypesOldDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/header-types.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderTypesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/layout-no-sidenav.ts",
        "type": "component",
        "linktype": "component",
        "name": "LayoutNoSidenavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/layout-no-subnav.ts",
        "type": "component",
        "linktype": "component",
        "name": "LayoutNoSubnavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/layout-only-header.ts",
        "type": "component",
        "linktype": "component",
        "name": "LayoutOnlyHeaderDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/layout-sidenav-primary.ts",
        "type": "component",
        "linktype": "component",
        "name": "LayoutSidenavPrimaryDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/layout-subnav-primary.ts",
        "type": "component",
        "linktype": "component",
        "name": "LayoutSubnavPrimaryDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/nav-code-info-alert.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavCodeInfoAlert",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/navigation.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavigationDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/navs.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/responsive-nav1.ts",
        "type": "component",
        "linktype": "component",
        "name": "ResponsiveNav1Demo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/responsive-nav2.ts",
        "type": "component",
        "linktype": "component",
        "name": "ResponsiveNav2Demo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/sidenav.ts",
        "type": "component",
        "linktype": "component",
        "name": "SidenavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/nav/sub-nav.ts",
        "type": "component",
        "linktype": "component",
        "name": "SubNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/password/password.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "PasswordDemo",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/old-progress-bar-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "OldProgressBarCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progbar-example.ts",
        "type": "class",
        "linktype": "classe",
        "name": "ProgBarExample",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-animations.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarAnimationsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-colors.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarColorsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarComponentDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-component.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE4",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-examples.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarExamplesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-inline-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarInlineCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-inline.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarInlineDemo",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-loop.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarLoopDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-sidenav.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarSidenavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-static-cards.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarStaticCardsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-static.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarStaticDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bar-story.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarStoryDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bars.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/progress-bars/progress-bars.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OPTIONAL_PERCENTAGE_LABEL",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/radio/radio.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "RadioDemo",
        "coveragePercent": 0,
        "coverageCount": "0/20",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "RangeBasicDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "basicExample",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "disabledExample",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "fullExample",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "rangeChangeHTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/range/range-basic.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "rangeChangeTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/range/range.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "RangeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/select/select.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "SelectDemo",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/sidenav/sidenav.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "SidenavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/sidenav/sidenav.ts",
        "type": "component",
        "linktype": "component",
        "name": "SidenavExample",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/sidenav/sidenav.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/signposts/signpost-paragraph.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "SignpostParagraphDemo",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/signposts/signpost-positions.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "SignpostPositionsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/signposts/signpost-triggers.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "SignpostTriggersDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/signposts/signpost.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "SignpostDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerComponentDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerSizesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerTypesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner-types.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/spinners/spinner.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-basic.ts",
        "type": "component",
        "linktype": "component",
        "name": "StackViewAngularBasicDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-basic.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-lazyload.ts",
        "type": "component",
        "linktype": "component",
        "name": "StackViewAngularLazyloadDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-lazyload.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-modal-edit.ts",
        "type": "component",
        "linktype": "component",
        "name": "StackViewAngularModalEditDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-angular-modal-edit.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-ng-demo.ts",
        "type": "class",
        "linktype": "classe",
        "name": "StackViewNgDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-static.ts",
        "type": "component",
        "linktype": "component",
        "name": "StackViewStaticDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view-static.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stack-view/stack-view.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "StackViewDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/angular-stepper-api.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "AngularStepperApiDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "AngularStepperReactiveDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "componentExample",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/angular-stepper-reactive.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "templateExample",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "AngularStepperTemplateDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "componentExample",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/angular-stepper-template.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "templateExample",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/design-stepper.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "DesignStepperDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/stepper/stepper.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "StepperDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-basic.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesBasicDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-basic.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-compact-noborder.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesCompactNoborderDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-compact-noborder.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-compact.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesCompactDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-compact.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-leftcell.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesLeftcellDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-leftcell.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-multiline.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesMultilineDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-multiline.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-noborder.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesNoborderDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-noborder.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-vertical-noborder-compact.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesVerticalNoborderCompactDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-vertical-noborder-compact.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-vertical.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesVerticalDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-vertical.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-width.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesWidthDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables-width.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tables/tables.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TablesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-angular-overflow.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsAngularOverflowDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-angular-overflow.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-angular-simple.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsAngularSimpleDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-angular-simple.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-angular-vertical.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsAngularVerticalDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-angular-vertical.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-angular.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsAngularDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-angular.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-static-vertical.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsStaticVerticalDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-static-vertical.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-static.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsStaticDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs-static.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tabs/tabs.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/textarea/textarea.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TextareaDemo",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "ThemesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UI_CUSTOM_CLARITY_DARK_SCSS_FILE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UI_CUSTOM_CLARITY_DARK_THEME_SCSS_FILE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UI_CUSTOM_CLARITY_LIGHT_SCSS_FILE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UI_CUSTOM_CLARITY_LIGHT_THEME_SCSS_FILE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UI_NO_NODE_IMPORTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UI_NODE_IMPORTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/themes/themes.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UI_WEBPACK_IMPORTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-body-demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimelineBodyDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-body-demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "body",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimelineContainerDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "horizontal",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-container-demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "vertical",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-full-demo.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimelineFullDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-full-demo.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "code",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimelineStepDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "spinner",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline-step-demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "timelineStep",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/timeline/timeline.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TimelineDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/toggles/toggles.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TogglesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/20",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipsAngularDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE4",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE5",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-angular.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE6",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-buttons.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipsButtonsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipsDirectionsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE4",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE5",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-directions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE6",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-icons.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipsIconDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipsSizesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-sizes.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE4",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips-text.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipsTextDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tooltips/tooltips.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/basic-tree-DM/tree-basic-DM.ts",
        "type": "component",
        "linktype": "component",
        "name": "TreeBasicDMDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/basic-tree-DM/tree-basic-DM.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/basic-tree/tree-basic.ts",
        "type": "component",
        "linktype": "component",
        "name": "TreeBasicDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts",
        "type": "component",
        "linktype": "component",
        "name": "BooleanSelectionTreeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/boolean-selection-tree/boolean-selection-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_TS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts",
        "type": "component",
        "linktype": "component",
        "name": "TreeNodeLabelChangeOnExpandDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/label-change-on-expand/label-change-on-expand.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_TS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
        "type": "component",
        "linktype": "component",
        "name": "LazyLoadingRecursiveTreeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "File",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_TS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-recursive-tree/lazy-loading-recursive-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROOT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-items.ts",
        "type": "component",
        "linktype": "component",
        "name": "GroceryItemsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "class",
        "linktype": "classe",
        "name": "GroupImpl",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Group",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Item",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ALL_GROCERIES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "GROCERY_SERVICE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/grocery-models.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ITEMS_SERVICE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts",
        "type": "component",
        "linktype": "component",
        "name": "LazyLoadingSelectionTreeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/tree-view/lazy-loading-selection-tree/lazy-loading-selection-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_TS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts",
        "type": "component",
        "linktype": "component",
        "name": "LazyLoadingTreeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/lazy-loading-tree/lazy-loading-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_TS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts",
        "type": "component",
        "linktype": "component",
        "name": "RecursiveTreeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/recursive-tree/recursive-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_TS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts",
        "type": "component",
        "linktype": "component",
        "name": "SelectionTreeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/selection-tree/selection-tree.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_TS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/small-selection-tree/small-selection-tree.ts",
        "type": "component",
        "linktype": "component",
        "name": "SmallSelectionTreeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/tree-node-routing/tree-node-routing.ts",
        "type": "component",
        "linktype": "component",
        "name": "TreeNodeRoutingDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/tree-node-routing/tree-node-routing.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts",
        "type": "component",
        "linktype": "component",
        "name": "TreeViewDynamicDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/tree-view-dynamic/tree-view-dynamic.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE_TS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/tree-view/tree-view.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TreeViewDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/typography/typography-font-char-test.ts",
        "type": "component",
        "linktype": "component",
        "name": "TypographyFontCharTestDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/typography/typography-font-weight.ts",
        "type": "component",
        "linktype": "component",
        "name": "TypographyFontWeightDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/typography/typography-headers.ts",
        "type": "component",
        "linktype": "component",
        "name": "TypographyHeadersDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/typography/typography-headers.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/typography/typography-links.ts",
        "type": "component",
        "linktype": "component",
        "name": "TypographyLinksDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/typography/typography-text.ts",
        "type": "component",
        "linktype": "component",
        "name": "TypographyTextDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/typography/typography-text.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/typography/typography.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "TypographyDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/basic-nav-usage/basic-nav-usage.ts",
        "type": "component",
        "linktype": "component",
        "name": "BasicNavUsage",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/basic-nav/basic-nav.ts",
        "type": "component",
        "linktype": "component",
        "name": "BasicNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/collapsible-nav/collapsible-nav.ts",
        "type": "component",
        "linktype": "component",
        "name": "CollapsibleVerticalNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/icons/icons.ts",
        "type": "component",
        "linktype": "component",
        "name": "VerticalNavIconsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/just-navs/just-navs.ts",
        "type": "component",
        "linktype": "component",
        "name": "JustNavsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/nav-groups/nav-groups.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavGroupsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/basic-structure/basic-structure.ts",
        "type": "component",
        "linktype": "component",
        "name": "BasicNavStructureDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/basic-structure/basic-structure.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts",
        "type": "component",
        "linktype": "component",
        "name": "CollapsibleNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/collapsible-nav/collapsible-nav.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE_1",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokedex.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokedexDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokedex.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokemon.ts",
        "type": "component",
        "linktype": "component",
        "name": "PokemonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/credits/pokemon.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/icons/icons.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconLinksDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/icons/icons.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts",
        "type": "component",
        "linktype": "component",
        "name": "LazyLoadingNavGroupsVerticalNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/lazy-loading-nav-groups/lazy-loading-nav-groups.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROUTES_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavGroupsParentLinksVerticalNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups-with-parent-links/nav-groups.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROUTES_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts",
        "type": "component",
        "linktype": "component",
        "name": "VerticalNavGroupsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/nav-groups/nav-groups.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROUTES_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts",
        "type": "component",
        "linktype": "component",
        "name": "NoLazyLoadingVerticalNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath":
          "src/website/src/app/documentation/demos/vertical-nav/routes/no-lazy-loading-with-parent-links/no-lazy-loading.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROUTES_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/electric.ts",
        "type": "component",
        "linktype": "component",
        "name": "ElectricPokemonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/electric.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fighting.ts",
        "type": "component",
        "linktype": "component",
        "name": "FightingPokemonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fighting.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fire.ts",
        "type": "component",
        "linktype": "component",
        "name": "FirePokemonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/fire.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/grass.ts",
        "type": "component",
        "linktype": "component",
        "name": "GrassPokemonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/grass.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/normal.ts",
        "type": "component",
        "linktype": "component",
        "name": "NormalPokemonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/normal.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/poison.ts",
        "type": "component",
        "linktype": "component",
        "name": "PoisonPokemonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon-types/poison.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charizard.ts",
        "type": "component",
        "linktype": "component",
        "name": "CharizardDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charizard.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charmander.ts",
        "type": "component",
        "linktype": "component",
        "name": "CharmanderDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/charmander.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/jigglypuff.ts",
        "type": "component",
        "linktype": "component",
        "name": "JigglypuffDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/jigglypuff.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pidgey.ts",
        "type": "component",
        "linktype": "component",
        "name": "PidgeyDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pidgey.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pikachu.ts",
        "type": "component",
        "linktype": "component",
        "name": "PikachuDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/pikachu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/raichu.ts",
        "type": "component",
        "linktype": "component",
        "name": "RaichuDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/raichu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/snorlax.ts",
        "type": "component",
        "linktype": "component",
        "name": "SnorlaxDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/pokemon/snorlax.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/routes/project-pokemon/project-pokemon.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProjectPokemonDemo",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/vertical-nav/vertical-nav.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "VerticalNavDemo",
        "coveragePercent": 0,
        "coverageCount": "0/21",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-alt-cancel.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardAltCancelDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-alt-next.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardAltNextDemo",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-async-completion.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardAsyncCompletion",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-async-validation.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardAsyncValidation",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-basic.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardBasic",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-buttons.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardDefaultButtonsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-custom-buttons.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardCustomButtonsDemo",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-design-size.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardDesignSizeDemo",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-design.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardDesignDemo",
        "coveragePercent": 0,
        "coverageCount": "0/20",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-force-forward.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardForceForwardDemo",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-form-validation.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardFormValidation",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-jump-to.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardJumpToDemo",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-nested-directives.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardNestedDirectiveDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-no-cancel.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardNoCancel",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-not-closable.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardNotClosable",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-reset.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardResetDemo",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-simple.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardSimple",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-static.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardStaticDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-static.demo.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-stop-navigation.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardStopNavigation",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard-titles.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardTitlesDemo",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/demos/wizard/wizard.demo.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardDemo",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/documentation.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DocumentationComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "GetStartedComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HTML_IMPORTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NG_MODULE_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NODE_IMPORTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/get-started/get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UI_CDN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/utils/disable-focus-trap.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "DisableFocusTrap",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/utils/new-layout-alert.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NewLayoutAlertComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/version-switcher/version-switcher.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "VersionSwitcherComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/documentation/version-switcher/version-switcher.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Version",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/home/home.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HomeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconsA11yComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "indicator",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "interactive",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "interactiveNoLabel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-a11y/icons-a11y.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "presentational",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconsApiComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ADD_CUSTOM_ICON",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ADD_CUSTOM_ICON_RESULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ALIAS_ICON",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ALIAS_ICON_RESULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "API_IMPORTS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-api/icons-api.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECK_ICON_TEMPLATE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconsGetStartedComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ICONS_IMPORTS_ALL",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ICONS_IMPORTS_SOME",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ICONS_IMPORTS_TS_ALL",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ICONS_IMPORTS_TS_CORE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-get-started/icons-get-started.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ICONS_IMPORTS_TS_SOME",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconsHowToUseComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "COLOR_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DIRECTION_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DIRECTION_EXAMPLE_DIR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DIRECTION_EXAMPLE_FLIP",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FLIP_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "INTRO_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "INVERSE_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SIZE_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TITLE_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-how-to-use/icons-how-to-use.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "VARIANTS_EXAMPLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-routing.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROUTING",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-sets/icon-detail-card/icon-detail-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconDetailCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-sets/icon-detail-card/icon-detail-card.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ClarityIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "makeSetSearchable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "reverseAliases",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ALL_ALIASES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-sets/icons-inventory.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ICONS_INVENTORY",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-sets/icons-sets.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconsSetsComponent",
        "coveragePercent": 11,
        "coverageCount": "3/26",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-sets/icons-tags.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ICONS_TAGS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons-view.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "IconsViewService",
        "coveragePercent": 33,
        "coverageCount": "1/3",
        "status": "medium"
      },
      {
        "filePath": "src/website/src/app/icons/icons-view.service.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "previewClasses",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/21",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "blinkEssentialShapes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "COMMON_PATH",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/icons.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "essentialShapesNames",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/utils/active-fragment.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ActiveFragmentService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/utils/fragment-content.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FragmentContentComponent",
        "coveragePercent": 0,
        "coverageCount": "0/23",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/icons/utils/fragment-link.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "FragmentLinkDirective",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/news/counters/breaking-change.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "BreakingChange",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/news/counters/bug-fix.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "BugFix",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/news/counters/new-component.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "NewComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/news/news.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NewsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/28",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/news/release-page/release-organizer.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "compareReleases",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/news/release-page/release-organizer.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "organize",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/news/release-page/release-organizer.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "VERSIONS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/news/release/release.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "Release",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/page-not-found/page-not-found.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PageNotFoundComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/code-highlight.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "CodeHighlight",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/code-highlight.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Prism",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/code-snippet.ts",
        "type": "component",
        "linktype": "component",
        "name": "CodeSnippet",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/component-list.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "componentList",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/component-list.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "COMPONENT_MAP",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/hash-listener.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "HashListener",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/scrollspy.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ScrollSpy",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/sketch-template-link.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "SketchTemplateLinkDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/app/utils/skip-link.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SkipLinkComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/website/src/environments/environment.prod.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/website/src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
